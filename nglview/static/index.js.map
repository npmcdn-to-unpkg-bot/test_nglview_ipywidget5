{"version":3,"sources":["webpack:///webpack/bootstrap fa784c32a7073e7e3a9b","webpack:///./src/index.js","webpack:///./src/widget_ngl.js","webpack:///external \"jupyter-js-widgets\"","webpack:///./src/three.custom.min.js","webpack:///./src/promise.min.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/process/browser.js","webpack:///./src/sprintf.min.js","webpack:///./src/pako_inflate.min.js","webpack:///./src/chroma.min.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/svd.min.js","webpack:///./src/signals.min.js","webpack:///./src/msgpack-decode.js","webpack:///./src/mmtf-decode.js","webpack:///./src/TypedFastBitSet.js","webpack:///./src/ngl.js","webpack:///./package.json"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0B;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA,oBAAmB,yCAAyC;AAC5D,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,oBAAmB,uCAAuC;AAC1D,MAAK;;AAEL;AACA;AACA;;AAEA,sBAAqB,kBAAkB;AACvC;AACA;AACA;AACA,0BAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sCAAsC;AACzD,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,gDAA+C;AAC/C;AACA,MAAK;;AAEL;AACA;AACA,qCAAoC,gBAAgB;AACpD,4CAA2C;AAC3C,MAAK;;AAEL;AACA;;AAEA,wBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA,6BAA4B,uCAAuC;AACnE;AACA;AACA,+DAA8D,qBAAqB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,mBAAmB;AACjE;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,mDAAmD;AACtE,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;AACA;AACA,eAAc;AACd;AACA,UAAS;AACT,MAAK;;AAEL;;AAEA;;AAEA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,yCAAwC,yBAAyB;AACjE;AACA;AACA,0C;AACA;AACA;AACA,yEAAwE,mCAAmC;AAC3G,kCAAiC;AACjC,uEAAsE,qBAAqB;AAC3F;AACA;AACA,8BAA6B;AAC7B;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA,6BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA,6BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA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kDAAkD,aAAa,yDAAyD,OAAO,IAAI,qBAAqB,SAAS,MAAM,6BAA6B,uBAAuB,WAAW,cAAc,EAAE,uBAAuB,oEAAoE,KAAK,EAAE,sBAAsB,2BAA2B,KAAK,EAAE,oBAAoB,2BAA2B,uBAAuB,IAAI,mBAAmB,EAAE,+BAA+B,IAAI,sFAAsF,O;;;;;;;ACDv2E;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,iBAAiB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA,G;;;;;;;AC3EA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACtHtC;;AAEA,cAAa,aAAa,6BAA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CpB,8BAA6B;AAC7B,eAAc;AACd,oCAAmC;AACnC,sBAAqB;AACrB,kBAAiB;AACjB,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ,eAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,WAAW;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,aAAa;AACrB;AACA;AACA;AACA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA,IAAG;AACH,iDAAgD,OAAO;AACvD;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,mCAAkC;AAClC;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,cAAc;AACtB;AACA;AACA;AACA,yBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA,6BAA4B,OAAO;AACnC;AACA;AACA,IAAG;AACH;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,cAAc;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ,cAAc;AACtB;AACA;AACA;AACA,SAAQ,OAAO;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,+BAA+B;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA,yBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA,uBAAsB,OAAO;AAC7B;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA,8BAA6B,OAAO;AACpC;AACA;AACA,IAAG;AACH;AACA,qCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrgBA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B,WAAW;;AAEzC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,0CAAyC,8BAA8B;;AAEvE;;AAEA,MAAK;;AAEL;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,4BAA2B,sBAAsB;;AAEjD;AACA;AACA;;AAEA;AACA,gEAA+D,iBAAiB;;AAEhF;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;;AAGA;;AAEA;;AAEA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,wBAAuB,qDAAqD;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,kBAAiB;;AAEjB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAkD,oBAAoB,wBAAwB,aAAa,2BAA2B,mBAAmB;;AAEzJ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;;AAGA;;AAEA;;AAEA,aAAY;;AAEZ;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,gCAA+B,yBAAyB;AACxD;;AAEA;;;AAGA;;AAEA,aAAY;;AAEZ;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA,iBAAgB;;AAEhB;;AAEA;;AAEA,MAAK;;AAEL;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA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;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,iCAAgC;AAChC;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAmC,YAAY,EAAE;AACjD,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,SAAQ;AACR;AACA;AACA,SAAQ;;AAER;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAsC;AACtC,uCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAgC,SAAS;AACzC;AACA;AACA;AACA,UAAS;AACT,iCAAgC,SAAS;AACzC;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,0CAA0C;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;AAEA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA,wBAAuB,OAAO;AAC9B,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA,wBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA,UAAS;AACT,iCAAgC,SAAS;AACzC;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA,iCAAgC,SAAS;AACzC,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,iCAAgC,SAAS;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA,wBAAuB,OAAO;;AAE9B;AACA;;AAEA;;AAEA;;AAEA;;AAEA,+BAA8B,OAAO;;AAErC;AACA;;AAEA;;AAEA;;AAEA,UAAS;;AAET,wBAAuB,OAAO;;AAE9B;AACA;;AAEA;;AAEA,+BAA8B,OAAO;;AAErC;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;AACA;AACA,cAAa;;AAEb;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA,UAAS;AACT,iCAAgC,SAAS;AACzC;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mDAAkD,QAAQ;;AAE1D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA,mDAAkD,QAAQ;;AAE1D;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA,mDAAkD,QAAQ;;AAE1D;AACA;AACA;AACA;;AAEA,4BAA2B,YAAY;AACvC;AACA;AACA,gCAA+B,cAAc;AAC7C;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA,mDAAkD,QAAQ;;AAE1D;AACA;AACA;;AAEA,4BAA2B,YAAY;AACvC;AACA;AACA,gCAA+B,cAA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,aAAa;;AAEpC;AACA;AACA;;AAEA,4BAA2B,aAAa;;AAExC;AACA;AACA;;AAEA;;AAEA;;AAEA,wBAAuB,aAAa;;AAEpC;AACA;;AAEA;;AAEA,wBAAuB,aAAa;;AAEpC;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,kBAAiB;;AAEjB;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,oBAAmB,QAAQ;;AAE3B;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,QAAQ;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA,oCAAmC;AACnC,sCAAqC;AACrC;AACA,yBAAwB,OAAO;AAC/B;AACA,oCAAmC;AACnC,sCAAqC;AACrC;AACA;;AAEA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wBAAuB,OAAO;;AAE9B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wBAAuB,OAAO;;AAE9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,QAAQ;;AAE/B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,OAAO;;AAElC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,WAAW;;AAElC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,wBAAuB,WAAW;;AAElC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,wBAAuB,OAAO;;AAE9B;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAgD,OAAO;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iDAAgD,OAAO;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,0CAAyC,QAAQ;;AAEjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAAyC,QAAQ;;AAEjD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA,+BAA8B;AAC9B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,oBAAmB,mBAAmB;;AAEtC;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,kBAAiB;;AAEjB;;AAEA,kBAAiB;;AAEjB;AACA;;AAEA,kBAAiB;;AAEjB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB,iBAAiB;AAC1C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,qBAAqB;AACtD,kCAAiC;AACjC;AACA,0BAAyB;AACzB;AACA;AACA;AACA,kCAAiC,uBAAuB;AACxD,kCAAiC,cAAc;AAC/C,kCAAiC,cAAc;AAC/C,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA,kCAAiC,uBAAuB;AACxD;AACA;AACA;AACA;AACA,0CAAyC,iBAAiB;AAC1D,0CAAyC;AACzC;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,kCAAiC,iBAAiB;AAClD,kCAAiC;AACjC;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,kCAAiC,uBAAuB;AACxD;AACA;AACA;AACA;AACA,0CAAyC,gBAAgB;AACzD,0CAAyC,kBAAkB;AAC3D,0CAAyC,kBAAkB;AAC3D,0CAAyC,kBAAkB;AAC3D,0CAAyC,kBAAkB;AAC3D,0CAAyC,kBAAkB;AAC3D,0CAAyC,kBAAkB;AAC3D,0CAAyC,kBAAkB;AAC3D,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uDAAsD,QAAQ;AAC9D;AACA;AACA,kDAAiD,cAAc,EAAE;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,4BAA2B,OAAO;;AAElC;;AAEA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,mCAAkC,UAAU,EAAE,KAAK,UAAU;AAC7D,sBAAqB;AACrB,mCAAkC,UAAU,EAAE,KAAK,UAAU;AAC7D;;AAEA,kBAAiB;;AAEjB;AACA,mCAAkC,UAAU,EAAE,KAAK,UAAU;AAC7D;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,mCAAkC,UAAU,EAAE,KAAK,UAAU;AAC7D,sBAAqB;AACrB,mCAAkC,UAAU,EAAE,KAAK,UAAU;AAC7D;;AAEA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb,2BAA0B,UAAU,EAAE,KAAK,UAAU;AACrD;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,OAAO;;AAE9B;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAE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CA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;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B;AACA;AACA;;AAEA,wBAAuB,QAAQ;AAC/B,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;AACA;AACA,cAAa;;AAEb;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA,UAAS;AACT,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,kCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA,kCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA,2BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA2B;AAC3B,6BAA4B;;AAE5B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC,cAAa;AACb;AACA,iCAAgC;AAChC;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,UAAS;AAC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+BAA8B,0BAA0B;;AAExD;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yBAAwB;;AAExB;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAwB,WAAW;AACnC;AACA,6BAA4B,WAAW;AACvC;AACA,iCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA0B,mBAAmB;AAC7C,2BAA0B,mBAAmB;;AAE7C;AACA,wBAAuB,UAAU;AACjC,4BAA2B,UAAU;AACrC,gCAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,UAAU;AACjC,8BAA6B,UAAU;AACvC,gCAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,UAAU;AACjC,8BAA6B,UAAU;AACvC,kCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,WAAW;AAClC,4BAA2B,WAAW;AACtC,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,WAAW;AAClC,8BAA6B,WAAW;AACxC,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,WAAW;AAClC,8BAA6B,WAAW;AACxC,kCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,wBAAuB,UAAU;AACjC;AACA,4BAA2B,UAAU;AACrC;AACA,gCAA+B,UAAU;AACzoBAAmB,UAAU;AAC7B;AACA;;AAEA,o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;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,qCAAoC,SAAS;;AAE7C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,qCAAoC,SAAS;;AAE7C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA0C,QAAQ;;AAElD,4BAA2B,QAAQ;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,6CAA4C,QAAQ;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,6BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL,6BAA4B,UAAU;AACtC;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA,sDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,MAAK;;AAEL,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,kBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAiB;;AAEjB;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA,MAAK;;AAEL,+BAA8B;;AAE9B;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL,+BAA8B;;AAE9B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,6BAA4B,QAAQ;;AAEpC;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;;AAEA,0BAAyB;;AAEzB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;;AAEA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,kBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAmC,OAAO;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,0BAAyB;;AAEzB;AACA;;AAEA;;AAEA;;AAEA;;AAEA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;;AAEjB;;AAEA;AACA;;AAEA;AACA;;AAEA,sBAAqB;;AAErB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB;;AAEzB;;AAEA,kBAAiB;;AAEjB;;AAEA,kBAAiB;;AAE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AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA8C,QAAQ;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,gCAA+B,OAAO;;AAEtC;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;A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A;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAiD,QAAQ;AACzD;AACA;AACA,gEAA+D,QAAQ;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAuC,QAAQ;AAC/C;AACA;;AAEA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,OAAO;AAC9C;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAmD;AACnD;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,yCAAwC,OAAO;;AAE/C;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;;AAEA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;AACA;AACA,0CAAyC;AACzC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;;AAEA,kCAAiC;AACjC,kCAAiC;AACjC,kCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAsC;AACtC,uCAAsC;AACtC,uCAAsC;;AAEtC;AACA,kCAAiC;AACjC,kCAAiC;AACjC,kCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC,qCAAoC;AACpC,qCAAoC;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6DAA4D;AAC5D,sEAAqE;AACrE;AACA;AACA,2CAA0C;AAC1C;AACA;AACA,kEAAiE;AACjE;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,6BAA4B,QAAQ;;AAEpC;;AAEA;;AAEA;AACA,sDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6BAA4B,QAAQ;;AAEpC;;AAEA;;AAEA;;AAEA;;AAEA,wDAAuD,QAAQ;AAC/D;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,OAAO;;AAE9B;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA,cAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,UAAU;AACjC;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,4BAA2B,OAAO;;AAElC;AACA;;AAEA;;AAEA;;AAEA,kBAAiB;;AAEjB;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA,8BAA6B;;AAE7B;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa;;AAEb;AACA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA,mBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA,8BAA6B;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA,cAAa;;AAEb;;AAEA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;;AAEA,cAAa;;AAEb,UAAS;;AAET;;AAEA,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,SAAQ;AACR;AACA,iBAAgB,cAAc;AAC9B,iBAAgB,cAAc;AAC9B,iBAAgB,cAAc;AAC9B,iBAAgB,cAAc;AAC9B,iBAAgB;AAChB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,uBAAsB;;AAEtB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;A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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS,KAAK;AACd;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B,yBAAyB;AACrD,uBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAuD,iCAAiC;;AAExF;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA4B,qBAAqB;AACjD,6BAA4B,qBAAqB;AACjD,6BAA4B,qBAAqB;AACjD,6BAA4B,qBAAqB;AACjD,6BAA4B,qBAAqB;AACjD,6BAA4B,qBAAqB;AACjD,6BAA4B,qBAAqB;AACjD,6BAA4B,qBAAqB;;AAEjD;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,cAAa;;AAEb,UAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,KAAK;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,UAAS;;AAET;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C;;AAE9C;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,uBAAuB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA,UAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,gCAA+B,OAAO;;AAEtC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAmC,OAAO;;AAE1C;;AAEA,wCAAuC,cAAc;AACrD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,wBAAuB,QAAQ;AAC/B;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA,8BAA6B,kBAAkB;;AAE/C;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,iCAAgC;;AAEhC;;AAEA,gDAA+C,kBAAkB,EAAE;AACnE,+CAA8C,mBAAmB,EAAE;;AAEnE,UAAS;;AAET,gDAA+C,mBAAmB,EAAE;AACpE,+CAA8C,kBAAkB,EAAE;;AAElE,UAAS;;AAET,gDAA+C,kBAAkB,EAAE;AACnE,+CAA8C,kBAAkB,EAAE;;AAElE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;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,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,kCAAiC,qBAAqB;AACtD;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,sCAAqC,gCAAgC;AACrE;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AAC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L;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAmB,OAAO;;AAE1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,QAAQ;;AAE3B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,wCAAuC,6BAA6B;AACpE,SAAQ;;AAER;AACA,uBAAsB,yBAAyB;AAC/C,SAAQ;;AAER;AACA;AACA;AACA;AACA,SAAQ;;AAER;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAE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;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA,8BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA6D,QAAQ,SAAS,cAAc,uBAAuB,iCAAiC;;AAEpJ;AACA;AACA,wBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oEAAmE,WAAW,UAAU,cAAc,yBAAyB,iCAAiC;;AAEhK,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uBAAsB;AACtB,kDAAiD,QAAQ;AACzD;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,2BAA0B,cAAc;AACxC,qBAAoB,sBAAsB;AAC1C,qBAAoB,sBAAsB;AAC1C,qBAAoB;AACpB,MAAK;;AAEL;AACA,2BAA0B,0BAA0B;AACpD,uBAAsB,yBAAyB;AAC/C,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,kBAAiB,gBAAgB;AACjC,iBAAgB,gBAAgB;AAChC,kBAAiB,gBAAgB;AACjC,gBAAe,gBAAgB;AAC/B,WAAU,oCAAoC;AAC9C,eAAc,gBAAgB;AAC9B,eAAc,gBAAgB;AAC9B,eAAc;;AAEd,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,oBAAmB,OAAO;;AAE1B;AACA;AACA;;AAEA,wBAAuB,eAAe;;AAEtC;;AAEA,4BAA2B,OAAO;;AAElC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,oBAAmB,SAAS;AAC5B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,OAAO;;AAE1B;AACA;AACA;AACA;;AAEA,wBAAuB,eAAe;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,wBAAuB,OAAO;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,UAAS;;AAET;;AAEA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AA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,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4EAA2E;AAC3E;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA,qBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA,4BAA2B;AAC3B,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AA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EA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA,UAAS;;AAET;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,4EAA2E;AAC3E;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,MAAK;AACL;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,wBAAwB;AACzD,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA,UAAS;AACT;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA,MAAK;;AAEL,EAAC;;AAED;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,6BAA4B;;AAE5B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA,uCAAsC;AACtC,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,uCAAsC;AACtC,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET,MAAK;;AAEL;;AAEA,kCAAiC;AACjC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB,cAAa;;AAEb;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB,cAAa;;AAEb;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;;AAEA;;AAEA;AACA;;AAEA,UAAS;;AAET;AACA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA,kCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,UAAS;;AAET;;AAEA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;A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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fa784c32a7073e7e3a9b\n **/","// Entry point for the notebook bundle containing custom model definitions.\n//\n// Setup notebook base URL\n//\n// Some static assets may be required by the custom widget javascript. The base\n// url for the notebook is not known at build time and is therefore computed\n// dynamically.\n__webpack_public_path__ = document.querySelector('body').getAttribute('data-base-url') + 'nbextensions/nglview/';\n\n// Export widget models and views, and the npm package version number.\n\nmodule.exports = {};\n\nvar loadedModules = [\n    require(\"./widget_ngl\"),\n    require(\"./ngl\"),\n    require(\"./chroma.min\"),\n    require(\"./mmtf-decode\"),\n    require(\"./msgpack-decode\"),\n    require(\"./pako_inflate.min\"),\n    require(\"./promise.min\"),\n    require(\"./signals.min\"),\n    require(\"./sprintf.min\"),\n    require(\"./svd.min\"),\n    require(\"./three.custom.min\"),\n    require(\"./TypedFastBitSet\"),\n]\n\nfor (var i in loadedModules) {\n    if (loadedModules.hasOwnProperty(i)) {\n        var loadedModule = loadedModules[i];\n        for (var target_name in loadedModule) {\n            if (loadedModule.hasOwnProperty(target_name)) {\n                module.exports[target_name] = loadedModule[target_name];\n            }\n        }\n    }\n}\n\nmodule.exports['version'] = require('../package.json').version;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var widgets = require('jupyter-js-widgets');\nvar THREE = require('./three.custom.min');\nvar Promise = require('./promise.min');\nvar sprintf = require('./sprintf.min');\nvar pako = require('./pako_inflate.min');\nvar chroma = require('./chroma.min');\nvar jsfeat = require('./svd.min');\nvar signals = require('./signals.min');\nvar msgpackDecode = require('./msgpack-decode');\nvar mmtfDecode = require('./mmtf-decode');\nvar TypedFastBitSet = require('./TypedFastBitSet');\nvar NGL = require('./ngl');\n\n\nwindow.THREE = THREE\n\nvar NGLView = widgets.WidgetView.extend({\n\n    render: function(){\n\n        // init representations handling\n        this.model.on( \"change:_init_representations\", this.representationsChanged, this );\n\n        // init structure loading\n        this.model.on( \"change:_init_structure_list\", this.structureChanged, this );\n\n        // init setting of frame\n        this.model.on( \"change:frame\", this.frameChanged, this );\n\n        // init setting of frame\n        this.model.on( \"change:count\", this.countChanged, this );\n\n        // init _parameters handling\n        this.model.on( \"change:_parameters\", this.parametersChanged, this );\n\n        // init orientation handling\n        this.model.on( \"change:orientation\", this.orientationChanged, this );\n\n        // for player\n        this.delay = 100; \n        this.sync_frame = true;\n        this.sync_camera = true;\n\n        // get message from Python\n        this.model.on( \"msg:custom\", function (msg) {\n            this.on_msg( msg );\n        }, this);\n\n        this.model.comm.on_msg( function( msg ){\n            var buffers = msg.buffers;\n            var content = msg.content.data.content;\n            // console.log(\"buffers\", buffers);\n            // console.log(\"content\", content);\n            if( buffers.length && content ){\n                content.buffers = buffers;\n            }\n            this.model._handle_comm_msg.call( this.model, msg );\n        }.bind( this ) );\n\n        // init NGL stage\n        NGL.useWorker = false;\n        this.stage = new NGL.Stage( undefined, {\n            backgroundColor: \"white\"\n        } );\n        this.structureComponent = undefined;\n        this.$container = $( this.stage.viewer.container );\n        this.$el.append( this.$container );\n        this.$container.resizable( {\n            resize: function( event, ui ){\n                this.setSize( ui.size.width + \"px\", ui.size.height + \"px\" );\n            }.bind( this )\n        } );\n        this.displayed.then( function(){\n            var width = this.$el.parent().width() + \"px\";\n            var height = \"300px\";\n            var state_params = this.stage.getParameters();\n\n            this.setSize( width, height );\n            this.$container.resizable(\n                \"option\", \"maxWidth\", this.$el.parent().width()\n            );\n            this.model.set('loaded', true);\n            this.model.set('camera_str', JSON.stringify( this.stage.viewer.camera ) );\n            this.model.set('orientation', this.stage.viewer.getOrientation() );\n            this.requestUpdateStageParameters();\n            this.model.set('_original_stage_parameters', state_params);\n            this.touch();\n        }.bind( this ) );\n\n        this.stage.viewer.controls.addEventListener( \"change\", function() {\n            if( this.sync_camera ){\n                this.model.set('camera_str', JSON.stringify( this.stage.viewer.camera ) );\n                this.model.set('orientation', this.stage.viewer.getOrientation() );\n                this.touch();\n            }\n        }.bind( this) );\n\n        // init toggle fullscreen\n        $( this.stage.viewer.container ).dblclick( function(){\n            this.stage.toggleFullscreen();\n        }.bind( this ) );\n\n        // init model data\n        this.structureChanged();\n\n        // init picking handling\n        this.$pickingInfo = $( \"<div></div>\" )\n            .css( \"position\", \"absolute\" )\n            .css( \"top\", \"5%\" )\n            .css( \"left\", \"3%\" )\n            .css( \"background-color\", \"white\" )\n            .css( \"padding\", \"2px 5px 2px 5px\" )\n            .css( \"opacity\", \"0.7\" )\n            .appendTo( this.$container );\n        this.stage.signals.onPicking.add( function( pd ){\n            var pd2 = {};\n            if( pd.atom ) pd2.atom = pd.atom.toObject();\n            if( pd.bond ) pd2.bond = pd.bond.toObject();\n            if( pd.instance ) pd2.instance = pd.instance;\n            this.model.set( \"picked\", pd2 );\n            this.model.save();\n            var pickingText = \"\";\n            if( pd.atom ){\n                pickingText = \"Atom: \" + pd.atom.qualifiedName();\n            }else if( pd.bond ){\n                pickingText = \"Bond: \" + pd.bond.atom1.qualifiedName() + \" - \" + pd.bond.atom2.qualifiedName();\n            }\n            this.$pickingInfo.text( pickingText );\n        }, this );\n\n        this.initPlayer();\n\n        var container = this.stage.viewer.container;\n        var that = this;\n        container.addEventListener( 'dragover', function( e ){\n            e.stopPropagation();\n            e.preventDefault();\n            e.dataTransfer.dropEffect = 'copy';\n        }, false );\n        \n        container.addEventListener( 'drop', function( e ){\n            e.stopPropagation();\n            e.preventDefault();\n            var file = e.dataTransfer.files[0];\n\n            that.stage.loadFile( file ).then( that.makeDefaultRepr );\n\n            var numDroppedFiles = that.model.get( \"_n_dragged_files\" );\n            that.model.set(\"_n_dragged_files\", numDroppedFiles + 1 );\n            that.touch();\n        }, false );\n    },\n\n    requestFrame: function(){\n        this.send({'type': 'request_frame', 'data': 'frame'});\n    },\n\n    requestUpdateStageParameters: function(){\n        var updated_params = this.stage.getParameters();\n        this.model.set('_full_stage_parameters', updated_params);\n        this.touch();\n    },\n\n    requestReprParameters: function( component_index, repr_index ){\n        var comp = this.stage.compList[ component_index ];\n        var repr = comp.reprList[ repr_index ];\n        var msg = repr.repr.getParameters();\n        msg['name'] = repr.name;\n        this.send({'type': 'repr_parameters', 'data': msg});\n    },\n\n    requestReprsInfo: function(){\n        var n_components = this.stage.compList.length;\n        var msg = {};\n\n        for (var i=0; i < n_components; i++) {\n            var comp = this.stage.compList[i];\n            msg['c' + i] = {};\n            var msgi = msg['c' + i];\n            for (var j=0; j < comp.reprList.length; j++){\n                var repr = comp.reprList[j];\n                msgi[j] = {};\n                msgi[j]['name'] = repr.name;\n                msgi[j]['parameters'] = repr.repr.getParameters();\n            }\n        }\n        this.send({'type': 'all_reprs_info', 'data': msg});\n    },\n\n    setDraggable: function( params ){\n        if (params){\n            this.$container.draggable(params);\n        }else{\n            this.$container.draggable();\n        }\n    },\n    setDelay: function( delay ){\n        this.delay = delay;\n    },\n\n    setSyncFrame: function(){\n        this.sync_frame = true;\n    },\n\n    setUnSyncFrame: function(){\n        this.sync_frame = false;\n    },\n\n    setSyncCamera: function(){\n        this.sync_camera = true;\n    },\n\n    setUnSyncCamera: function(){\n        this.sync_camera = false;\n    },\n\n    makeDefaultRepr: function( o ){\n        var reprDefList = this.model.get( \"_init_representations\" );\n        reprDefList.forEach( function( reprDef ){\n            o.addRepresentation( reprDef.type, reprDef.params );\n        });\n         \n        if( this.stage.compList.length < 2 ){\n            o.centerView();\n        }\n    },\n\n\n    initPlayer: function() {\n        // init player\n        if( this.model.get( \"count\" ) ){\n            var play = function(){\n                this.$playerButton.text( \"pause\" );\n                this.playerInterval = setInterval( function(){\n                    var frame = this.model.get( \"frame\" ) + 1;\n                    var count = this.model.get( \"count\" );\n                    if( frame >= count ) frame = 0;\n\n                    if ( this.sync_frame ) {\n                        this.model.set( \"frame\", frame );\n                        this.model.save();\n                    }else{\n                        this.requestFrame();\n                    }\n                }.bind( this ), this.delay);\n            }.bind( this );\n            var pause = function(){\n                this.$playerButton.text( \"play\" );\n                if( this.playerInterval !== undefined ){\n                    clearInterval( this.playerInterval );\n                }\n            }.bind( this );\n            this.$playerButton = $( \"<button>play</button>\" )\n                .css( \"float\", \"left\" )\n                .css( \"width\", \"55px\" )\n                .css( \"opacity\", \"0.7\" )\n                .click( function( event ){\n                    if( this.$playerButton.text() === \"play\" ){\n                        play();\n                    }else if( this.$playerButton.text() === \"pause\" ){\n                        pause();\n                    }\n                }.bind( this ) );\n            this.$playerSlider = $( \"<div></div>\" )\n                .css( \"margin-left\", \"70px\" )\n                .css( \"position\", \"relative\" )\n                .css( \"bottom\", \"-7px\" )\n                .slider( {\n                    min: 0,\n                    max: this.model.get( \"count\" ) - 1,\n                    slide: function( event, ui ){\n                        pause();\n                        this.model.set( \"frame\", ui.value );\n                        this.model.save();\n                    }.bind( this )\n                } );\n            this.$player = $( \"<div></div>\" )\n                .css( \"position\", \"absolute\" )\n                .css( \"bottom\", \"5%\" )\n                .css( \"width\", \"94%\" )\n                .css( \"margin-left\", \"3%\" )\n                .css( \"opacity\", \"0.7\" )\n                .append( this.$playerButton )\n                .append( this.$playerSlider )\n                .appendTo( this.$container );\n            this.model.on( \"change:frame\", function(){\n                this.$playerSlider.slider( \"value\", this.model.get( \"frame\" ) );\n            }, this );\n            \n            if( this.model.get(\"count\") < 2 ) { this.$player.hide() };\n        }\n    },\n\n    countChanged: function() {\n        var count = this.model.get( \"count\" );\n        this.$playerSlider.slider( { max: count - 1} );\n        if( this.model.get(\"count\") > 1 ) { this.$player.show() };\n    },\n\n    representationsChanged: function(){\n        var representations = this.model.get( \"_init_representations\" );\n\n        for (var i = 0; i < this.stage.compList.length; i++ ){\n            component = this.stage.compList[ i ];\n            if( representations && component ){\n                component.clearRepresentations();\n                representations.forEach( function( repr ){\n                    component.addRepresentation( repr.type, repr.params );\n                } );\n            }\n        }\n    },\n\n    removeRepresentationsByName: function( repr_name, component_index ){\n       var component = this.stage.compList[ component_index ];\n\n       component.reprList.forEach( function(repr) {\n           if( repr.name == repr_name ){\n               component.removeRepresentation( repr );\n               repr.dispose();\n           }\n       })\n    },\n\n    updateRepresentationForComponent: function( repr_index, component_index, params ){\n       var component = this.stage.compList[ component_index ];\n       var repr = component.reprList[ repr_index ];\n       repr.setParameters( params );\n    },\n\n    structureChanged: function(){\n        this.structureComponent = undefined;\n        var structureList = this.model.get( \"_init_structure_list\" );\n\n        if ( ! this.model.get( \"loaded\" ) ) {\n            for ( var i = 0; i < Object.keys(structureList).length; i++ ){\n                var structure = structureList[ i ];\n                if( structure.data && structure.ext ){\n                    var blob = new Blob( [ structure.data ], { type: \"text/plain\" } );\n                    var params = structure.params || {};\n                    params.ext = structure.ext;\n                    params.defaultRepresentation = false;\n                    this.stage.loadFile( blob, params ).then( function( component ){\n                        component.centerView();\n                        // this.structureComponent = component;\n                        this.representationsChanged();\n                    }.bind( this ) );\n                }\n            }\n        // only use _init_structure_list before Widget is loaded.\n        }\n    },\n\n    decode_base64: function(base64) {\n        // lightly adapted from Niklas\n\n        /*\n         * base64-arraybuffer\n         * https://github.com/niklasvh/base64-arraybuffer\n         *\n         * Copyright (c) 2012 Niklas von Hertzen\n         * Licensed under the MIT license.\n         */\n        var chars =\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        var bufferLength = base64.length * 0.75,\n            len = base64.length,\n            i, p = 0,\n            encoded1, encoded2, encoded3, encoded4;\n\n        if (base64[base64.length - 1] === \"=\") {\n            bufferLength--;\n            if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n            }\n        }\n\n        var arraybuffer = new ArrayBuffer(bufferLength),\n            bytes = new Uint8Array(arraybuffer);\n\n        for (i = 0; i < len; i += 4) {\n            encoded1 = chars.indexOf(base64[i]);\n            encoded2 = chars.indexOf(base64[i + 1]);\n            encoded3 = chars.indexOf(base64[i + 2]);\n            encoded4 = chars.indexOf(base64[i + 3]);\n\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n        }\n\n        return arraybuffer;\n    },\n\n    updateCoordinates: function( coordinates, model ) {\n        // coordinates must be ArrayBuffer (use this.decode_base64)\n        var component = this.stage.compList[ model ];\n        if( coordinates && component ){\n            var coords = new Float32Array( coordinates );\n            component.structure.updatePosition( coords );\n            component.updateRepresentations( { \"position\": true } );\n        }\n    },\n\n    setSize: function( width, height ){\n        this.stage.viewer.container.style.width = width;\n        this.stage.viewer.container.style.height = height;\n        this.stage.handleResize();\n    },\n\n    parametersChanged: function(){\n        var _parameters = this.model.get( \"_parameters\" );\n        this.stage.setParameters( _parameters );\n\n        // do not set _full_stage_parameters here\n        // or parameters will be never updated (not sure why) \n        // use observe in python side\n        var updated_params = this.stage.getParameters();\n        this.send({'type': 'stage_parameters', 'data': updated_params})\n    },\n\n    orientationChanged: function(){\n        var orientation = this.model.get( \"orientation\" );\n        this.stage.viewer.setOrientation( orientation );\n    },\n\n    _downloadImage: function( filename, params ) {\n        this.stage.makeImage( params ).then( function( blob ) {\n             NGL.download( blob, filename );\n        })\n    },\n\n    _exportImage: function( params ) {\n        this.stage.makeImage( params ).then( function( blob ) {\n             var reader = new FileReader();\n             var arr_str;\n             reader.onload = function() {\n                 arr_str = reader.result.replace(\"data:image/png;base64,\", \"\");\n                 this.model.set( \"_image_data\", arr_str );\n                 this.touch();\n             }.bind( this );\n             reader.readAsDataURL( blob );\n        }.bind( this ));\n    },\n\n    cleanOutput: function(){\n\n        var cells = Jupyter.notebook.get_cells();\n        \n        for (var i = 0; i < cells.length; i++){\n            var cell = cells[i];\n            if (cell.output_area.outputs.length > 0) {\n                var out = cell.output_area.outputs[0];\n                if (out.output_type == 'display_data') {\n                    cell.clear_output();\n                }\n            }\n        }\n    },\n\n    on_msg: function(msg){\n        // console.log(msg)\n        // TODO: re-organize\n        if( msg.type == 'call_method' ){\n            var new_args = msg.args.slice();\n            new_args.push( msg.kwargs );\n\n            switch( msg.target ) {\n                case 'Stage':\n                    var stage_func = this.stage[msg.methodName];\n                    var stage = this.stage;\n                    if ( msg.methodName == 'screenshot' ){\n                         NGL.screenshot( this.stage.viewer, msg.kwargs );\n                    }else if( msg.methodName == 'removeComponent' ) {\n                        console.log( \"removeComponent\" );\n                        var index = msg.args[0];\n                        var component = this.stage.compList[ index ];\n                        this.stage.removeComponent( component );\n                    }else{\n                        if( msg.methodName == 'loadFile' ) {\n                            // args = [{'type': ..., 'data': ...}]\n                            var args0 = msg.args[ 0 ];\n                            if( args0.type == 'blob' ) {\n                                var blob; \n                                if( args0.binary ){\n                                    var decoded_data = this.decode_base64( args0.data );\n                                    blob = new Blob( [ decoded_data ], { type: \"application/octet-binary\" });\n                                }else{\n                                    blob = new Blob( [ args0.data ], { type: \"text/plain\" } );\n                                }\n                                this.stage.loadFile( blob, msg.kwargs );\n                            }else{\n                                this.stage.loadFile( msg.args[0].data, msg.kwargs );\n                            }\n                        }else{\n                            stage_func.apply( stage, new_args );\n                        }\n                    }\n                    break;\n                case 'Viewer':\n                    var viewer = this.stage.viewer;\n                    var func = this.stage.viewer[msg.methodName];\n                    func.apply( viewer, new_args );\n                    break;\n                case 'compList':\n                    var index = msg['component_index'];\n                    var component = this.stage.compList[index];\n                    var func = component[msg.methodName];\n                    func.apply( component, new_args );\n                    break;\n                case 'StructureComponent':\n                    var component = this.structureComponent;\n                    var func = component[msg.methodName];\n                    func.apply( component, new_args );\n                    break;\n                case 'Widget':\n                    var func = this[ msg.methodName ];\n                    func.apply( this, new_args );\n                    break;\n                case 'Representation':\n                    var component_index = msg['component_index'];\n                    var repr_index = msg['repr_index'];\n                    var component = this.stage.compList[ component_index ];\n                    var repr = component.reprList[repr_index];\n                    var func = repr[ msg.methodName ];\n                    func.apply( repr, new_args );\n                    break;\n                default:\n                    console.log( \"nothing done for \" + msg.target );\n                    break;\n            }\n        }else if( msg.type == 'base64_single' ){\n            // TODO: remove time\n            var time0 = Date.now();\n\n            var coordinatesDict = msg.data;\n            var keys = Object.keys( coordinatesDict );\n\n            for ( var i = 0; i < keys.length ; i++ ){\n                var traj_index = keys[ i ];\n                var coordinates = this.decode_base64( coordinatesDict[ traj_index ] );\n                if( coordinates.byteLength > 0 ){\n                    this.updateCoordinates( coordinates, traj_index );\n                }\n            }\n            var time1 = Date.now();\n            //console.log( time0 - msg.mytime, time1 - time0, 'base64_single' );\n        }else if( msg.type == 'binary_single' ){\n            // TODO: remove time\n            // console.log(\"msg.buffers\",msg.buffers);\n            var time0 = Date.now();\n\n            var coordinateMeta = msg.data;\n            var keys = Object.keys( coordinateMeta );\n\n            for ( var i = 0; i < keys.length ; i++ ){\n                var traj_index = keys[ i ];\n                var coordinates = new Float32Array( msg.buffers[ i ].buffer );\n                if( coordinates.byteLength > 0 ){\n                    this.updateCoordinates( coordinates, traj_index );\n                }\n            }\n            var time1 = Date.now();\n            //console.log( time0 - msg.mytime, time1 - time0, 'binary_single' );\n        }else if( msg.type == 'get') {\n            console.log( msg.data );\n\n            if( msg.data == 'camera' ) {\n                this.send( JSON.stringify( this.stage.viewer.camera ) );\n            }else if( msg.data == 'parameters' ){\n                this.send( JSON.stringify( this.stage.parameters ));\n            }else{\n                console.log( \"nothing done\");\n                console.log( this.stage.compList.length );\n                for ( var i = 0; i < this.stage.compList.length; i++ ) {\n                    console.log( this.stage.compList[ i ] );\n                }\n            }\n        }\n    }\n})\n\nmodule.exports = {\n    NGLView: NGLView\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/widget_ngl.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jupyter-js-widgets\"\n ** module id = 2\n ** module chunks = 0\n **/","// https://github.com/arose/ngl/ LICENSE\n/*\n MIT License <http://www.opensource.org/licenses/mit-license.php>\n\n Complexity: http://bigocheatsheet.com/ see Quicksort\n\n Example:\n points: [x, y, z, x, y, z, x, y, z, ...]\n eleSize: 3 //because of (x, y, z)\n orderElement: 0 //order according to x\n MIT License <http://www.opensource.org/licenses/mit-license.php>\n\n Requires typed array quicksort\n\n Example:\n points: [x, y, z, x, y, z, x, y, z, ...]\n metric: function(a, b){\treturn Math.pow(a[0] - b[0], 2) +  Math.pow(a[1] - b[1], 2) +  Math.pow(a[2] - b[2], 2); }  //Manhatten distance\n eleSize: 3 //because of (x, y, z)\n\n Further information (including mathematical properties)\n http://en.wikipedia.org/wiki/Binary_tree\n http://en.wikipedia.org/wiki/K-d_tree\n\n If you want to further minimize memory usage, remove Node.depth and replace in search algorithm with a traversal to root node (see comments at THREE.TypedArrayUtils.Kdtree.prototype.Node)\n*/\nvar THREE={REVISION:\"76\"};\"function\"===typeof define&&define.amd?define(\"three\",THREE):\"undefined\"!==typeof exports&&\"undefined\"!==typeof module&&(module.exports=THREE);void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,\"name\",{get:function(){return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1]}});\nvoid 0===Object.assign&&Object.defineProperty(Object,\"assign\",{writable:!0,configurable:!0,value:function(a){if(void 0===a||null===a)throw new TypeError(\"Cannot convert first argument to object\");for(var b=Object(a),c=1,d=arguments.length;c!==d;++c){var e=arguments[c];if(void 0!==e&&null!==e)for(var e=Object(e),f=Object.keys(e),g=0,h=f.length;g!==h;++g){var k=f[g],l=Object.getOwnPropertyDescriptor(e,k);void 0!==l&&l.enumerable&&(b[k]=e[k])}}return b}});THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};\nTHREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;\nTHREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.NeverDepth=0;THREE.AlwaysDepth=1;\nTHREE.LessDepth=2;THREE.LessEqualDepth=3;THREE.EqualDepth=4;THREE.GreaterEqualDepth=5;THREE.GreaterDepth=6;THREE.NotEqualDepth=7;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.NoToneMapping=0;THREE.LinearToneMapping=1;THREE.ReinhardToneMapping=2;THREE.Uncharted2ToneMapping=3;THREE.CineonToneMapping=4;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;\nTHREE.SphericalReflectionMapping=305;THREE.CubeUVReflectionMapping=306;THREE.CubeUVRefractionMapping=307;THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;\nTHREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.DepthFormat=1026;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;\nTHREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;THREE.RGB_ETC1_Format=2151;THREE.LoopOnce=2200;THREE.LoopRepeat=2201;THREE.LoopPingPong=2202;THREE.InterpolateDiscrete=2300;THREE.InterpolateLinear=2301;THREE.InterpolateSmooth=2302;THREE.ZeroCurvatureEnding=2400;THREE.ZeroSlopeEnding=2401;THREE.WrapAroundEnding=2402;THREE.TrianglesDrawMode=0;THREE.TriangleStripDrawMode=1;THREE.TriangleFanDrawMode=2;\nTHREE.LinearEncoding=3E3;THREE.sRGBEncoding=3001;THREE.GammaEncoding=3007;THREE.RGBEEncoding=3002;THREE.LogLuvEncoding=3003;THREE.RGBM7Encoding=3004;THREE.RGBM16Encoding=3005;THREE.RGBDEncoding=3006;THREE.BasicDepthPacking=3200;THREE.RGBADepthPacking=3201;THREE.Color=function(a){return 3===arguments.length?this.fromArray(arguments):this.set(a)};\nTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):\"number\"===typeof a?this.setHex(a):\"string\"===typeof a&&this.setStyle(a);return this},setScalar:function(a){this.b=this.g=this.r=a},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&--d;return d<1/6?a+6*(c-a)*d:\n.5>d?c:d<2/3?a+6*(c-a)*(2/3-d):a}return function(b,c,d){b=THREE.Math.euclideanModulo(b,1);c=THREE.Math.clamp(c,0,1);d=THREE.Math.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1/3),this.g=a(d,c,b),this.b=a(d,c,b-1/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn(\"THREE.Color: Alpha component of \"+a+\" will be ignored.\")}var c;if(c=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(a)){var d=c[2];switch(c[1]){case \"rgb\":case \"rgba\":if(c=\n/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d))return this.r=Math.min(255,parseInt(c[1],10))/255,this.g=Math.min(255,parseInt(c[2],10))/255,this.b=Math.min(255,parseInt(c[3],10))/255,b(c[5]),this;if(c=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d))return this.r=Math.min(100,parseInt(c[1],10))/100,this.g=Math.min(100,parseInt(c[2],10))/100,this.b=Math.min(100,parseInt(c[3],10))/100,b(c[5]),this;break;case \"hsl\":case \"hsla\":if(c=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d)){var d=\nparseFloat(c[1])/360,e=parseInt(c[2],10)/100,f=parseInt(c[3],10)/100;b(c[5]);return this.setHSL(d,e,f)}}}else if(c=/^\\#([A-Fa-f0-9]+)$/.exec(a)){c=c[1];d=c.length;if(3===d)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===d)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}a&&0<a.length&&\n(c=THREE.ColorKeywords[a],void 0!==c?this.setHex(c):console.warn(\"THREE.Color: Unknown color \"+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var c=0<b?1/b:1;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=Math.pow(a.b,\nc);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=\n(f+e)/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k/(e+f):k/(2-e-f);switch(e){case b:g=(c-d)/k+(c<d?6:0);break;case c:g=(d-b)/k+2;break;case d:g=(b-c)/k+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=\na.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,b){void 0===b&&(b=0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,\nb){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a}};\nTHREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,\ndarkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,\ngrey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,\nlime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,\npalegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,\ntomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};\nTHREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},\ncopy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error(\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2),k=a.order;\"XYZ\"===k?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"YXZ\"===\nk?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"ZXY\"===k?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"ZYX\"===k?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"YZX\"===k?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):\"XZY\"===k&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,\nb){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5/Math.sqrt(l+1),this._w=.25/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=\n.25*c,this._z=(g+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+k)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=\n-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},\nmultiply:function(a,b){return void 0!==b?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,k=b._z,l=b._w;this._x=c*l+f*g+d*k-e*h;this._y=d*l+f*h+e*g-c*k;this._z=e*l+f*k+c*h-d*g;this._w=f*l-c*g-d*h-e*k;this.onChangeCallback();return this},slerp:function(a,b){if(0===b)return this;if(1===\nb)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.sqrt(1-g*g);if(.001>Math.abs(h))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var k=Math.atan2(h,g),g=Math.sin((1-b)*k)/h,h=Math.sin(b*k)/h;this._w=f*g+this._w*h;this._x=c*g+this._x*h;this._y=d*g+\nthis._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};\nObject.assign(THREE.Quaternion,{slerp:function(a,b,c,d){return c.copy(a).slerp(b,d)},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],k=c[d+1],l=c[d+2];c=c[d+3];d=e[f+0];var n=e[f+1],p=e[f+2];e=e[f+3];if(c!==e||h!==d||k!==n||l!==p){f=1-g;var m=h*d+k*n+l*p+c*e,q=0<=m?1:-1,r=1-m*m;r>Number.EPSILON&&(r=Math.sqrt(r),m=Math.atan2(r,m*q),f=Math.sin(f*m)/r,g=Math.sin(g*m)/r);q*=g;h=h*f+d*q;k=k*f+n*q;l=l*f+p*q;c=c*f+e*q;f===1-g&&(g=1/Math.sqrt(h*h+k*k+l*l+c*c),h*=g,k*=g,l*=g,c*=g)}a[b]=h;a[b+1]=k;a[b+2]=l;\na[b+3]=c}});THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\nTHREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(a){this.x=a},get height(){return this.y},set height(a){this.y=a},set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;\ncase 1:return this.y;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},\naddScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,\nthis.y*=a):this.y=this.x=0;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this},clampScalar:function(){var a,b;return function(c,d){void 0===\na&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();this.multiplyScalar(Math.max(a,Math.min(b,c))/c);return this},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):\nMath.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var a=Math.atan2(this.y,this.x);0>a&&(a+=\n2*Math.PI);return a},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];\nthis.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];return this},rotateAround:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;this.x=e*c-f*d+a.x;this.y=e*d+f*c+a.y;return this}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\nTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setScalar:function(a){this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;\ncase 2:return this.z;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,\nb){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},\nmultiply:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&\nconsole.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*\nd;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,\nf=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),\ntransformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);\nthis.z=Math.max(this.z,a.z);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();this.multiplyScalar(Math.max(a,Math.min(b,c))/c);return this},floor:function(){this.x=Math.floor(this.x);\nthis.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;\nthis.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*\nb;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},cross:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;\nthis.y=e*f-c*h;this.z=c*g-d*f;return this},projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=\nthis.dot(a)/Math.sqrt(this.lengthSq()*a.lengthSq());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setFromSpherical:function(a){var b=Math.sin(a.phi)*a.radius;this.x=b*Math.sin(a.theta);this.y=Math.cos(a.phi)*a.radius;this.z=b*Math.cos(a.theta);return this},setFromMatrixPosition:function(a){return this.setFromMatrixColumn(a,3)},setFromMatrixScale:function(a){var b=\nthis.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){\"number\"===typeof a&&(console.warn(\"THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).\"),b=a=b);return this.fromArray(a.elements,4*b)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},\ntoArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];return this}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\nTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setScalar:function(a){this.w=this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error(\"index is out of range: \"+\na);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);\nthis.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=\na.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a,this.z*=a,this.w*=a):this.w=this.z=this.y=this.x=0;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=\na[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var l=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>\nMath.abs(k-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(k+b)&&.1>Math.abs(e+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+g)/4;f=(f+c)/4;k=(k+b)/4;e>h&&e>l?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>l?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),b=d/c,d=k/c):.01>l?(c=b=.707106781,d=0):(d=Math.sqrt(l),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-k)/\na;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+l-1)/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));\nthis.w=Math.max(a.w,Math.min(b.w,this.w));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=\nMath.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*\na.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-\nthis.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+\nc;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=a.array[b+3];return this}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=\"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");THREE.Euler.DefaultOrder=\"XYZ\";\nTHREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,\nthis._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],l=e[9],n=e[2],p=e[6],e=e[10];b=b||this._order;\"XYZ\"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,e),this._z=Math.atan2(-f,a)):(this._x=Math.atan2(p,k),this._z=0)):\"YXZ\"===b?(this._x=Math.asin(-d(l,-1,1)),.99999>Math.abs(l)?\n(this._y=Math.atan2(g,e),this._z=Math.atan2(h,k)):(this._y=Math.atan2(-n,a),this._z=0)):\"ZXY\"===b?(this._x=Math.asin(d(p,-1,1)),.99999>Math.abs(p)?(this._y=Math.atan2(-n,e),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,a))):\"ZYX\"===b?(this._y=Math.asin(-d(n,-1,1)),.99999>Math.abs(n)?(this._x=Math.atan2(p,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-f,k))):\"YZX\"===b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-n,a)):(this._x=\n0,this._y=Math.atan2(g,e))):\"XZY\"===b?(this._z=Math.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(p,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-l,e),this._y=0)):console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeRotationFromQuaternion(b);this.setFromRotationMatrix(a,c,d);return this}}(),setFromVector3:function(a,\nb){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+\n3]=this._order;return a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};\nTHREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},\nat:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);\nthis.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};\nTHREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);\nreturn this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);\nthis.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>\nthis.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\na.max.equals(this.max)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};\nTHREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromArray:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.length;h<k;h+=3){var l=a[h],n=a[h+1],p=a[h+2];l<b&&(b=l);n<c&&(c=n);p<d&&(d=p);l>e&&(e=l);n>f&&(f=n);p>g&&(g=p)}this.min.set(b,c,d);this.max.set(e,f,g)},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=\nnew THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);this.makeEmpty();b.traverse(function(b){var e=b.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var f=e.vertices,e=0,g=f.length;e<g;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(e instanceof THREE.BufferGeometry&&void 0!==\ne.attributes.position)for(f=e.attributes.position.array,e=0,g=f.length;e<g;e+=3)a.fromArray(f,e),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},\ncenter:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<\nthis.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<\nthis.min.z||a.min.z>this.max.z?!1:!0},intersectsSphere:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);this.clampPoint(b.center,a);return a.distanceToSquared(b.center)<=b.radius*b.radius}}(),intersectsPlane:function(a){var b,c;0<a.normal.x?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x);0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y);0<a.normal.z?(b+=a.normal.z*\nthis.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z);return b<=a.constant&&c>=a.constant},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),\nintersect:function(a){this.min.max(a.min);this.max.min(a.max);this.isEmpty()&&this.makeEmpty();return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){if(this.isEmpty())return this;a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);\na[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\na.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[1]=d;l[2]=g;l[3]=b;l[4]=e;l[5]=h;l[6]=c;l[7]=f;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},setFromMatrix4:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]);\nreturn this},applyToVector3Array:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.fromArray(b,c),a.applyMatrix3(this),a.toArray(b,c);return b}}(),applyToBuffer:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(a.x,a.y,a.z);return b}}(),\nmultiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){a instanceof THREE.Matrix4&&console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");var c=a.elements,d=this.elements,e=c[0],f=c[1],g=c[2],h=c[3],k=c[4],l=c[5],n=c[6],p=c[7],\nc=c[8],m=c*k-l*p,q=l*n-c*h,r=p*h-k*n,s=e*m+f*q+g*r;if(0===s){if(b)throw Error(\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\");return this.identity()}d[0]=m;d[1]=g*p-c*f;d[2]=l*f-g*k;d[3]=q;d[4]=c*e-g*n;d[5]=g*h-l*e;d[6]=r;d[7]=f*n-p*e;d[8]=k*e-f*h;return this.multiplyScalar(1/s)},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},\nflattenToArrayOffset:function(a,b){console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead.\");return this.toArray(a,b)},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===\nb&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,k,l,n,p,m,q,r,s){var u=this.elements;u[0]=a;u[4]=b;u[8]=c;u[12]=d;u[1]=e;u[5]=f;u[9]=g;u[13]=h;u[2]=k;u[6]=l;u[10]=n;u[14]=p;u[3]=m;u[7]=q;u[11]=r;u[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(a){this.elements.set(a.elements);return this},copyPosition:function(a){var b=this.elements;a=a.elements;\nb[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);var c=this.elements,d=b.elements,e=1/a.setFromMatrixColumn(b,0).length(),f=1/a.setFromMatrixColumn(b,1).length();b=1/a.setFromMatrixColumn(b,\n2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&console.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if(\"XYZ\"===a.order){a=f*h;var k=f*e,l=c*h,n=c*e;b[0]=g*h;b[4]=\n-g*e;b[8]=d;b[1]=k+l*d;b[5]=a-n*d;b[9]=-c*g;b[2]=n-a*d;b[6]=l+k*d;b[10]=f*g}else\"YXZ\"===a.order?(a=g*h,k=g*e,l=d*h,n=d*e,b[0]=a+n*c,b[4]=l*c-k,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=k*c-l,b[6]=n+a*c,b[10]=f*g):\"ZXY\"===a.order?(a=g*h,k=g*e,l=d*h,n=d*e,b[0]=a-n*c,b[4]=-f*e,b[8]=l+k*c,b[1]=k+l*c,b[5]=f*h,b[9]=n-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):\"ZYX\"===a.order?(a=f*h,k=f*e,l=c*h,n=c*e,b[0]=g*h,b[4]=l*d-k,b[8]=a*d+n,b[1]=g*e,b[5]=n*d+a,b[9]=k*d-l,b[2]=-d,b[6]=c*g,b[10]=f*g):\"YZX\"===a.order?(a=f*g,k=f*\nd,l=c*g,n=c*d,b[0]=g*h,b[4]=n-a*e,b[8]=l*e+k,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+l,b[10]=a-n*e):\"XZY\"===a.order&&(a=f*g,k=f*d,l=c*g,n=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+n,b[5]=f*h,b[9]=k*e-l,b[2]=l*e-k,b[6]=c*h,b[10]=n*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*h,c=c*k,n=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(n+e);b[4]=l-f;b[8]=c+h;b[1]=l+\nf;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+n);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a,b,c;return function(d,e,f){void 0===a&&(a=new THREE.Vector3);void 0===b&&(b=new THREE.Vector3);void 0===c&&(c=new THREE.Vector3);var g=this.elements;c.subVectors(d,e).normalize();0===c.lengthSq()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.lengthSq()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;\ng[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],k=c[12],l=c[1],n=c[5],p=c[9],m=c[13],q=c[2],r=c[6],s=c[10],u=c[14],\nv=c[3],x=c[7],A=c[11],c=c[15],w=d[0],B=d[4],z=d[8],y=d[12],C=d[1],J=d[5],D=d[9],H=d[13],G=d[2],K=d[6],P=d[10],I=d[14],L=d[3],E=d[7],M=d[11],d=d[15];e[0]=f*w+g*C+h*G+k*L;e[4]=f*B+g*J+h*K+k*E;e[8]=f*z+g*D+h*P+k*M;e[12]=f*y+g*H+h*I+k*d;e[1]=l*w+n*C+p*G+m*L;e[5]=l*B+n*J+p*K+m*E;e[9]=l*z+n*D+p*P+m*M;e[13]=l*y+n*H+p*I+m*d;e[2]=q*w+r*C+s*G+u*L;e[6]=q*B+r*J+s*K+u*E;e[10]=q*z+r*D+s*P+u*M;e[14]=q*y+r*H+s*I+u*d;e[3]=v*w+x*C+A*G+c*L;e[7]=v*B+x*J+A*K+c*E;e[11]=v*z+x*D+A*P+c*M;e[15]=v*y+x*H+A*I+c*d;return this},\nmultiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},applyToVector3Array:function(){var a;return function(b,\nc,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.fromArray(b,c),a.applyMatrix4(this),a.toArray(b,c);return b}}(),applyToBuffer:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix4(this),b.setXYZ(a.x,a.y,a.z);return b}}(),determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],\ne=a[12],f=a[1],g=a[5],h=a[9],k=a[13],l=a[2],n=a[6],p=a[10],m=a[14];return a[3]*(+e*h*n-d*k*n-e*g*p+c*k*p+d*g*m-c*h*m)+a[7]*(+b*h*m-b*k*p+e*f*p-d*f*m+d*k*l-e*h*l)+a[11]*(+b*k*n-b*g*m-e*f*n+c*f*m+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*n+b*g*p+d*f*n-c*f*p+c*h*l)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,b){console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead.\");\nreturn this.toArray(a,b)},getPosition:function(){var a;return function(){void 0===a&&(a=new THREE.Vector3);console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");return a.setFromMatrixColumn(this,3)}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[1],g=d[2],h=d[3],k=d[4],l=d[5],n=d[6],p=d[7],m=d[8],q=d[9],r=d[10],s=d[11],u=d[12],\nv=d[13],x=d[14],d=d[15],A=q*x*p-v*r*p+v*n*s-l*x*s-q*n*d+l*r*d,w=u*r*p-m*x*p-u*n*s+k*x*s+m*n*d-k*r*d,B=m*v*p-u*q*p+u*l*s-k*v*s-m*l*d+k*q*d,z=u*q*n-m*v*n-u*l*r+k*v*r+m*l*x-k*q*x,y=e*A+f*w+g*B+h*z;if(0===y){if(b)throw Error(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");return this.identity()}c[0]=A;c[1]=v*r*h-q*x*h-v*g*s+f*x*s+q*g*d-f*r*d;c[2]=l*x*h-v*n*h+v*g*p-f*x*p-l*g*d+f*n*d;c[3]=q*n*h-l*r*h-\nq*g*p+f*r*p+l*g*s-f*n*s;c[4]=w;c[5]=m*x*h-u*r*h+u*g*s-e*x*s-m*g*d+e*r*d;c[6]=u*n*h-k*x*h-u*g*p+e*x*p+k*g*d-e*n*d;c[7]=k*r*h-m*n*h+m*g*p-e*r*p-k*g*s+e*n*s;c[8]=B;c[9]=u*q*h-m*v*h-u*f*s+e*v*s+m*f*d-e*q*d;c[10]=k*v*h-u*l*h+u*f*p-e*v*p-k*f*d+e*l*d;c[11]=m*l*h-k*q*h-m*f*p+e*q*p+k*f*s-e*l*s;c[12]=z;c[13]=m*v*g-u*q*g+u*f*r-e*v*r-m*f*x+e*q*x;c[14]=u*l*g-k*v*g-u*f*n+e*v*n+k*f*x-e*l*x;c[15]=k*q*g-m*l*g+m*f*n-e*q*n-k*f*r+e*l*r;return this.multiplyScalar(1/y)},scale:function(a){var b=this.elements,c=a.x,d=a.y;\na=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=\nMath.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,k=e*f,l=e*g;this.set(k*f+c,k*g-d*h,k*h+d*g,0,k*g+d*h,l*g+c,l*h-d*f,0,k*h-d*g,l*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,\nc){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a,b;return function(c,d,e){void 0===a&&(a=new THREE.Vector3);void 0===b&&(b=new THREE.Matrix4);var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,l=1/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=\nf;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.DEG2RAD*a*.5);var e=-a;return this.makeFrustum(e*b,\na*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=1/(b-a),k=1/(c-d),l=1/(f-e);g[0]=2*h;g[4]=0;g[8]=0;g[12]=-((b+a)*h);g[1]=0;g[5]=2*k;g[9]=0;g[13]=-((c+d)*k);g[2]=0;g[6]=0;g[10]=-2*l;g[14]=-((f+e)*l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},equals:function(a){var b=this.elements;a=a.elements;for(var c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a){this.elements.set(a);return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=this.elements;\na[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};\nTHREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},lookAt:function(a){this.direction.copy(a).sub(this.origin).normalize()},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,\na));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceToSquared(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);\nreturn a.distanceToSquared(b)}}(),distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),l=c.dot(this.direction),n=-c.dot(b),p=c.lengthSq(),m=Math.abs(1-k*k),q;0<m?(d=k*n-l,e=k*l-n,q=h*m,0<=d?e>=-q?e<=q?(h=1/m,d*=h,e*=h,k=d*(d+k*e+2*l)+e*(k*d+e+2*n)+p):(e=h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*\nn)+p):(e=-h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*n)+p):e<=-q?(d=Math.max(0,-(-k*h+l)),e=0<d?-h:Math.min(Math.max(-h,-n),h),k=-d*d+e*(e+2*n)+p):e<=q?(d=0,e=Math.min(Math.max(-h,-n),h),k=e*(e+2*n)+p):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-n),h),k=-d*d+e*(e+2*n)+p)):(e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*n)+p);f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),intersectSphere:function(){var a=new THREE.Vector3;return function(b,\nc){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e>f)return null;f=Math.sqrt(f-e);e=d-f;d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=\nthis.distanceToPlane(a);return null===c?null:this.at(c,b)},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==\nd)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectsBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);\nif(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/f,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}};\nTHREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};\nTHREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},\nempty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},intersectsBox:function(a){return a.intersectsSphere(this)},intersectsPlane:function(a){return Math.abs(this.center.dot(a.normal)-a.constant)<=this.radius},clampPoint:function(a,b){var c=\nthis.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&\na.radius===this.radius}};THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};\nTHREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],n=c[8],p=c[9],m=c[10],q=c[11],r=c[12],s=c[13],u=c[14],\nc=c[15];b[0].setComponents(f-a,l-g,q-n,c-r).normalize();b[1].setComponents(f+a,l+g,q+n,c+r).normalize();b[2].setComponents(f+d,l+h,q+p,c+s).normalize();b[3].setComponents(f-d,l-h,q-p,c-s).normalize();b[4].setComponents(f-e,l-k,q-m,c-u).normalize();b[5].setComponents(f+e,l+k,q+m,c+u).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);\nreturn this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;\nvar g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};\nTHREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,\nc);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,\nb){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0===f){if(0===this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),intersectsLine:function(a){var b=\nthis.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectsBox:function(a){return a.intersectsPlane(this)},intersectsSphere:function(a){return a.intersectsPlane(this)},coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Matrix3;return function(c,d){var e=this.coplanarPoint(a).applyMatrix4(c),f=d||b.getNormalMatrix(c),f=this.normal.applyMatrix3(f).normalize();\nthis.constant=-e.dot(f);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}};THREE.Spherical=function(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this};\nTHREE.Spherical.prototype={constructor:THREE.Spherical,set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.radius.copy(a.radius);this.phi.copy(a.phi);this.theta.copy(a.theta);return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi))},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=Math.acos(THREE.Math.clamp(a.y/\nthis.radius,-1,1)));return this}};\nTHREE.Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var a=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8===e||13===e||18===e||23===e?b[e]=\"-\":14===e?b[e]=\"4\":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19===e?d&3|8:d]);return b.join(\"\")}}(),clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,\nd,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){console.warn(\"THREE.Math.random16() has been deprecated. Use Math.random() instead.\");return Math.random()},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*\n(.5-Math.random())},degToRad:function(a){return a*THREE.Math.DEG2RAD},radToDeg:function(a){return a*THREE.Math.RAD2DEG},isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nearestPowerOfTwo:function(a){return Math.pow(2,Math.round(Math.log(a)/Math.LN2))},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};\nTHREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,k,l,n,p,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+\n2;l=this.points[c[0]];n=this.points[c[1]];p=this.points[c[2]];m=this.points[c[3]];h=g*g;k=g*h;d.x=b(l.x,n.x,p.x,m.x,g,h,k);d.y=b(l.y,n.y,p.y,m.y,g,h,k);d.z=b(l.z,n.z,p.z,m.z,g,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=\na/c,d=this.getPoint(b),g.copy(d),k+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!==e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],k=new THREE.Vector3,m=this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];g=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),\nh.push(k.copy(d).clone());h.push(k.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();\nTHREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new THREE.Vector3;if(0===l)return h.set(-2,-1,-1);l=1/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}();\nTHREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();\nTHREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,\nthis.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},\nclosestPointToPoint:function(){var a,b,c,d;return function(e,f){void 0===a&&(a=new THREE.Plane,b=[new THREE.Line3,new THREE.Line3,new THREE.Line3],c=new THREE.Vector3,d=new THREE.Vector3);var g=f||new THREE.Vector3,h=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(!0===this.containsPoint(c))g.copy(c);else{b[0].set(this.a,this.b);b[1].set(this.b,this.c);b[2].set(this.c,this.a);for(var k=0;k<b.length;k++){b[k].closestPointToPoint(c,!0,d);var l=c.distanceToSquared(d);l<\nh&&(h=l,g.copy(d))}}return g}}(),equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}};THREE.Interpolant=function(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c};\nTHREE.Interpolant.prototype={constructor:THREE.Interpolant,evaluate:function(a){var b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];a:{b:{c:{d:if(!(a<d)){for(var f=c+2;;){if(void 0===d){if(a<e)break d;this._cachedIndex=c=b.length;return this.afterEnd_(c-1,a,e)}if(c===f)break;e=d;d=b[++c];if(a<d)break b}d=b.length;break c}if(a>=e)break a;else{f=b[1];a<f&&(c=2,e=f);for(f=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=\nc;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=\nc[a+e];return b},interpolate_:function(a,b,c,d){throw Error(\"call to abstract method\");},intervalChanged_:function(a,b,c){}};Object.assign(THREE.Interpolant.prototype,{beforeStart_:THREE.Interpolant.prototype.copySampleValue_,afterEnd_:THREE.Interpolant.prototype.copySampleValue_});THREE.CubicInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0};\nTHREE.CubicInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.CubicInterpolant,DefaultSettings_:{endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case THREE.ZeroSlopeEnding:e=a;g=2*b-c;break;case THREE.WrapAroundEnding:e=d.length-2;g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case THREE.ZeroSlopeEnding:f=\na;h=2*c-b;break;case THREE.WrapAroundEnding:f=1;h=c+d[1]-d[0];break;default:f=a-1,h=b}a=.5*(c-b);d=this.valueSize;this._weightPrev=a/(b-g);this._weightNext=a/(h-c);this._offsetPrev=e*d;this._offsetNext=f*d},interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g,k=this._offsetPrev,l=this._offsetNext,n=this._weightPrev,p=this._weightNext,m=(c-b)/(d-b);c=m*m;d=c*m;b=-n*d+2*n*c-n*m;n=(1+n)*d+(-1.5-2*n)*c+(-.5+n)*m+1;m=(-1-p)*d+(1.5+p)*c+.5*m;p=p*d-p*\nc;for(c=0;c!==g;++c)e[c]=b*f[k+c]+n*f[h+c]+m*f[a+c]+p*f[l+c];return e}});THREE.DiscreteInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};THREE.DiscreteInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.DiscreteInterpolant,interpolate_:function(a,b,c,d){return this.copySampleValue_(a-1)}});THREE.LinearInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};\nTHREE.LinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.LinearInterpolant,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g;b=(c-b)/(d-b);c=1-b;for(d=0;d!==g;++d)e[d]=f[h+d]*c+f[a+d]*b;return e}});THREE.QuaternionLinearInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};\nTHREE.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.QuaternionLinearInterpolant,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;b=(c-b)/(d-b);for(c=a+g;a!==c;a+=4)THREE.Quaternion.slerpFlat(e,0,f,a-g,f,a,b);return e}});THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};\nTHREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=(performance||Date).now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=(performance||Date).now(),a=(b-this.oldTime)/1E3;this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};\nTHREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&\nc[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};\nTHREE.Layers=function(){this.mask=1};THREE.Layers.prototype={constructor:THREE.Layers,set:function(a){this.mask=1<<a},enable:function(a){this.mask|=1<<a},toggle:function(a){this.mask^=1<<a},disable:function(a){this.mask&=~(1<<a)},test:function(a){return 0!==(this.mask&a.mask)}};\n(function(a){function b(a,b){return a.distance-b.distance}function c(a,b,f,g){if(!1!==a.visible&&(a.raycast(b,f),!0===g)){a=a.children;g=0;for(var h=a.length;g<h;g++)c(a[g],b,f,!0)}}a.Raycaster=function(b,c,f,g){this.ray=new a.Ray(b,c);this.near=f||0;this.far=g||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\");return this.Points}}})};\na.Raycaster.prototype={constructor:a.Raycaster,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c instanceof a.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(c.matrixWorld),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(this.ray.origin).normalize()):c instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,-1).unproject(c),this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)):console.error(\"THREE.Raycaster: Unsupported camera type.\")},\nintersectObject:function(a,e){var f=[];c(a,this,f,e);f.sort(b);return f},intersectObjects:function(a,e){var f=[];if(!1===Array.isArray(a))return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),f;for(var g=0,h=a.length;g<h;g++)c(a[g],this,f,e);f.sort(b);return f}}})(THREE);\nTHREE.Object3D=function(){Object.defineProperty(this,\"id\",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Object3D\";this.parent=null;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,\nvalue:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}});this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new THREE.Layers;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}};\nTHREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.DefaultMatrixAutoUpdate=!0;\nTHREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=\nnew THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);\nthis.position.add(a.multiplyScalar(c));return this}}(),translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),\nlookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",a),this;a instanceof THREE.Object3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:\"added\"}),this.children.push(a)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",\na);return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=null,a.dispatchEvent({type:\"removed\"}),this.children.splice(b,1))},getObjectById:function(a){return this.getObjectByProperty(\"id\",a)},getObjectByName:function(a){return this.getObjectByProperty(\"name\",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,\nb);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new THREE.Vector3;this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,\nthis.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==\nthis.visible){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,\nthis.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a||\"\"===a,d={};c&&(a={geometries:{},materials:{},textures:{},images:{}},d.metadata={version:4.4,type:\"Object\",generator:\"Object3D.toJSON\"});var e={};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);\"{}\"!==JSON.stringify(this.userData)&&\n(e.userData=this.userData);!0===this.castShadow&&(e.castShadow=!0);!0===this.receiveShadow&&(e.receiveShadow=!0);!1===this.visible&&(e.visible=!1);e.matrix=this.matrix.toArray();void 0!==this.geometry&&(void 0===a.geometries[this.geometry.uuid]&&(a.geometries[this.geometry.uuid]=this.geometry.toJSON(a)),e.geometry=this.geometry.uuid);void 0!==this.material&&(void 0===a.materials[this.material.uuid]&&(a.materials[this.material.uuid]=this.material.toJSON(a)),e.material=this.material.uuid);if(0<this.children.length){e.children=\n[];for(var f=0;f<this.children.length;f++)e.children.push(this.children[f].toJSON(a).object)}if(c){var c=b(a.geometries),f=b(a.materials),g=b(a.textures);a=b(a.images);0<c.length&&(d.geometries=c);0<f.length&&(d.materials=f);0<g.length&&(d.textures=g);0<a.length&&(d.images=a)}d.object=e;return d},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===b&&(b=!0);this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);\nthis.rotationAutoUpdate=a.rotationAutoUpdate;this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));if(!0===b)for(var c=0;c<a.children.length;c++)this.add(a.children[c].clone());return this}};\nTHREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=Array.isArray(d)?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0};\nTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}};\nTHREE.BufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.array=a;this.itemSize=b;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0;this.normalized=!0===c};\nTHREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(a){!0===a&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);\nreturn this},copyColorsArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",d),f=new THREE.Color);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",\nd),f=new THREE.Vector2);b[c++]=f.x;b[c++]=f.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",d),f=new THREE.Vector3);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z}return this},copyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",d),f=new THREE.Vector4);\nb[c++]=f.x;b[c++]=f.y;b[c++]=f.z;b[c++]=f.w}return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*\nthis.itemSize+3]},setW:function(a,b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return(new this.constructor).copy(this)}};\nTHREE.Int8Attribute=function(a,b){return new THREE.BufferAttribute(new Int8Array(a),b)};THREE.Uint8Attribute=function(a,b){return new THREE.BufferAttribute(new Uint8Array(a),b)};THREE.Uint8ClampedAttribute=function(a,b){return new THREE.BufferAttribute(new Uint8ClampedArray(a),b)};THREE.Int16Attribute=function(a,b){return new THREE.BufferAttribute(new Int16Array(a),b)};THREE.Uint16Attribute=function(a,b){return new THREE.BufferAttribute(new Uint16Array(a),b)};\nTHREE.Int32Attribute=function(a,b){return new THREE.BufferAttribute(new Int32Array(a),b)};THREE.Uint32Attribute=function(a,b){return new THREE.BufferAttribute(new Uint32Array(a),b)};THREE.Float32Attribute=function(a,b){return new THREE.BufferAttribute(new Float32Array(a),b)};THREE.Float64Attribute=function(a,b){return new THREE.BufferAttribute(new Float64Array(a),b)};\nTHREE.DynamicBufferAttribute=function(a,b){console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\");return(new THREE.BufferAttribute(a,b)).setDynamic(!0)};THREE.InstancedBufferAttribute=function(a,b,c){THREE.BufferAttribute.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute;\nTHREE.InstancedBufferAttribute.prototype.copy=function(a){THREE.BufferAttribute.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBuffer=function(a,b){this.uuid=THREE.Math.generateUUID();this.array=a;this.stride=b;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0};\nTHREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(a){!0===a&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.stride=a.stride;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,\nb){void 0===b&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)}};THREE.InstancedInterleavedBuffer=function(a,b,c){THREE.InterleavedBuffer.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;\nTHREE.InstancedInterleavedBuffer.prototype.copy=function(a){THREE.InterleavedBuffer.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.data=a;this.itemSize=b;this.offset=c};\nTHREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");return this.array.length},get count(){return this.data.count},setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this},\nsetW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;return this},setXYZ:function(a,\nb,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this}};\nTHREE.Geometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Geometry\";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=\nthis.verticesNeedUpdate=!1};\nTHREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=\nthis.verticesNeedUpdate=!0;return this},rotateX:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){void 0===a&&\n(a=new THREE.Matrix4);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(a){function b(a,b,d,e){var f=void 0!==g?[n[a].clone(),n[b].clone(),n[d].clone()]:[],q=void 0!==h?[c.colors[a].clone(),\nc.colors[b].clone(),c.colors[d].clone()]:[];e=new THREE.Face3(a,b,d,f,q,e);c.faces.push(e);void 0!==k&&c.faceVertexUvs[0].push([p[a].clone(),p[b].clone(),p[d].clone()]);void 0!==l&&c.faceVertexUvs[1].push([m[a].clone(),m[b].clone(),m[d].clone()])}var c=this,d=null!==a.index?a.index.array:void 0,e=a.attributes,f=e.position.array,g=void 0!==e.normal?e.normal.array:void 0,h=void 0!==e.color?e.color.array:void 0,k=void 0!==e.uv?e.uv.array:void 0,l=void 0!==e.uv2?e.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=\n[]);for(var n=[],p=[],m=[],q=e=0;e<f.length;e+=3,q+=2)c.vertices.push(new THREE.Vector3(f[e],f[e+1],f[e+2])),void 0!==g&&n.push(new THREE.Vector3(g[e],g[e+1],g[e+2])),void 0!==h&&c.colors.push(new THREE.Color(h[e],h[e+1],h[e+2])),void 0!==k&&p.push(new THREE.Vector2(k[q],k[q+1])),void 0!==l&&m.push(new THREE.Vector2(l[q],l[q+1]));if(void 0!==d)if(f=a.groups,0<f.length)for(e=0;e<f.length;e++)for(var r=f[e],s=r.start,u=r.count,q=s,s=s+u;q<s;q+=3)b(d[q],d[q+1],d[q+2],r.materialIndex);else for(e=0;e<\nd.length;e+=3)b(d[e],d[e+1],d[e+2]);else for(e=0;e<f.length/3;e+=3)b(e,e+1,e+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1/\nb,c=new THREE.Matrix4;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===a&&(a=!0);var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<\nc;b++)d[b]=new THREE.Vector3;if(a){var e,f,g,h=new THREE.Vector3,k=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),k.subVectors(e,f),h.cross(k),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=\nthis.faces[a],e=c.vertexNormals,3===e.length?(e[0].copy(d[c.a]),e[1].copy(d[c.b]),e[2].copy(d[c.c])):(e[0]=d[c.a].clone(),e[1]=d[c.b].clone(),e[2]=d[c.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<\nb;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=this.morphNormals[a].vertexNormals,h,k;c=0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,k={a:new THREE.Vector3,\nb:new THREE.Vector3,c:new THREE.Vector3},e.push(h),g.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){console.warn(\"THREE.Geometry: .computeTangents() has been removed.\")},\ncomputeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",\na);else{var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var n=0,p=g.length;n<p;n++){var m=g[n].clone();void 0!==b&&m.applyMatrix4(b);f.push(m)}n=0;for(p=k.length;n<p;n++){var g=k[n],q,r=g.vertexNormals,s=g.vertexColors,m=new THREE.Face3(g.a+e,g.b+e,g.c+e);m.normal.copy(g.normal);void 0!==d&&m.normal.applyMatrix3(d).normalize();b=0;for(f=r.length;b<\nf;b++)q=r[b].clone(),void 0!==d&&q.applyMatrix3(d).normalize(),m.vertexNormals.push(q);m.color.copy(g.color);b=0;for(f=s.length;b<f;b++)q=s[b],m.vertexColors.push(q.clone());m.materialIndex=g.materialIndex+c;h.push(m)}n=0;for(p=a.length;n<p;n++)if(c=a[n],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());l.push(d)}}},mergeMesh:function(a){!1===a instanceof THREE.Mesh?console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",a):(a.matrixAutoUpdate&&a.updateMatrix(),\nthis.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+\"_\"+Math.round(d.y*e)+\"_\"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<g;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]===e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,\n1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return f},sortFacesByMaterialIndex:function(){for(var a=this.faces,b=a.length,c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});var d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f,g;d&&d.length===b&&(f=[]);e&&e.length===b&&(g=[]);for(c=0;c<b;c++){var h=a[c]._id;f&&f.push(d[h]);g&&g.push(e[h])}f&&(this.faceVertexUvs[0]=f);g&&(this.faceVertexUvs[1]=\ng)},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length/3;k.push(a.x,a.y,a.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==p[b])return p[b];p[b]=n.length;n.push(a.getHex());return p[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==q[b])return q[b];q[b]=m.length/2;m.push(a.x,a.y);return q[b]}var e={metadata:{version:4.4,type:\"Geometry\",\ngenerator:\"Geometry.toJSON\"}};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},n=[],p={},m=[],q={};for(g=0;g<this.faces.length;g++){var r=this.faces[g],s=void 0!==this.faceVertexUvs[0][g],u=0<r.normal.length(),v=0<r.vertexNormals.length,x=1!==r.color.r||1!==r.color.g||1!==r.color.b,\nA=0<r.vertexColors.length,w=0,w=a(w,0,0),w=a(w,1,!0),w=a(w,2,!1),w=a(w,3,s),w=a(w,4,u),w=a(w,5,v),w=a(w,6,x),w=a(w,7,A);h.push(w);h.push(r.a,r.b,r.c);h.push(r.materialIndex);s&&(s=this.faceVertexUvs[0][g],h.push(d(s[0]),d(s[1]),d(s[2])));u&&h.push(b(r.normal));v&&(u=r.vertexNormals,h.push(b(u[0]),b(u[1]),b(u[2])));x&&h.push(c(r.color));A&&(r=r.vertexColors,h.push(c(r[0]),c(r[1]),c(r[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<n.length&&(e.data.colors=n);0<m.length&&(e.data.uvs=[m]);e.data.faces=\nh;return e},clone:function(){return(new THREE.Geometry).copy(this)},copy:function(a){this.vertices=[];this.faces=[];this.faceVertexUvs=[[]];for(var b=a.vertices,c=0,d=b.length;c<d;c++)this.vertices.push(b[c].clone());b=a.faces;c=0;for(d=b.length;c<d;c++)this.faces.push(b[c].clone());c=0;for(d=a.faceVertexUvs.length;c<d;c++){b=a.faceVertexUvs[c];void 0===this.faceVertexUvs[c]&&(this.faceVertexUvs[c]=[]);for(var e=0,f=b.length;e<f;e++){for(var g=b[e],h=[],k=0,l=g.length;k<l;k++)h.push(g[k].clone());\nthis.faceVertexUvs[c].push(h)}}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;\nTHREE.DirectGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"DirectGeometry\";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1};\nTHREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn(\"THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.\")},computeVertexNormals:function(){console.warn(\"THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.\")},computeGroups:function(a){var b,c=[],\nd;a=a.faces;for(var e=0;e<a.length;e++){var f=a[e];f.materialIndex!==d&&(d=f.materialIndex,void 0!==b&&(b.count=3*e-b.start,c.push(b)),b={start:3*e,materialIndex:d})}void 0!==b&&(b.count=3*e-b.start,c.push(b));this.groups=c},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,e=d[0]&&0<d[0].length,f=d[1]&&0<d[1].length,g=a.morphTargets,h=g.length,k;if(0<h){k=[];for(var l=0;l<h;l++)k[l]=[];this.morphTargets.position=k}var n=a.morphNormals,p=n.length,m;if(0<p){m=[];for(l=0;l<p;l++)m[l]=\n[];this.morphTargets.normal=m}for(var q=a.skinIndices,r=a.skinWeights,s=q.length===c.length,u=r.length===c.length,l=0;l<b.length;l++){var v=b[l];this.vertices.push(c[v.a],c[v.b],c[v.c]);var x=v.vertexNormals;3===x.length?this.normals.push(x[0],x[1],x[2]):(x=v.normal,this.normals.push(x,x,x));x=v.vertexColors;3===x.length?this.colors.push(x[0],x[1],x[2]):(x=v.color,this.colors.push(x,x,x));!0===e&&(x=d[0][l],void 0!==x?this.uvs.push(x[0],x[1],x[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \",\nl),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));!0===f&&(x=d[1][l],void 0!==x?this.uvs2.push(x[0],x[1],x[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \",l),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));for(x=0;x<h;x++){var A=g[x].vertices;k[x].push(A[v.a],A[v.b],A[v.c])}for(x=0;x<p;x++)A=n[x].vertexNormals[l],m[x].push(A.a,A.b,A.c);s&&this.skinIndices.push(q[v.a],q[v.b],q[v.c]);u&&this.skinWeights.push(r[v.a],r[v.b],\nr[v.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype);\nTHREE.BufferGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"BufferGeometry\";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}};\nTHREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,getIndex:function(){return this.index},setIndex:function(a){this.index=a},addAttribute:function(a,b,c){if(!1===b instanceof THREE.BufferAttribute&&!1===b instanceof THREE.InterleavedBufferAttribute)console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.addAttribute(a,new THREE.BufferAttribute(b,c));else if(\"index\"===a)console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),\nthis.setIndex(b);else return this.attributes[a]=b,this},getAttribute:function(a){return this.attributes[a]},removeAttribute:function(a){delete this.attributes[a];return this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;\nvoid 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},rotateX:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;\nreturn function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),\ncenter:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a instanceof THREE.Points||a instanceof THREE.Line){a=new THREE.Float32Attribute(3*b.vertices.length,3);var c=new THREE.Float32Attribute(3*b.colors.length,3);this.addAttribute(\"position\",a.copyVector3sArray(b.vertices));this.addAttribute(\"color\",c.copyColorsArray(b.colors));b.lineDistances&&b.lineDistances.length===b.vertices.length&&\n(a=new THREE.Float32Attribute(b.lineDistances.length,1),this.addAttribute(\"lineDistance\",a.copyArray(b.lineDistances)));null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone());null!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone())}else a instanceof THREE.Mesh&&b instanceof THREE.Geometry&&this.fromGeometry(b);return this},updateFromObject:function(a){var b=a.geometry;if(a instanceof THREE.Mesh){var c=b.__directGeometry;if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=\nb.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.groupsNeedUpdate=!1;b=c}!0===b.verticesNeedUpdate&&(c=this.attributes.position,void 0!==c&&(c.copyVector3sArray(b.vertices),c.needsUpdate=!0),b.verticesNeedUpdate=!1);!0===b.normalsNeedUpdate&&(c=this.attributes.normal,void 0!==c&&(c.copyVector3sArray(b.normals),\nc.needsUpdate=!0),b.normalsNeedUpdate=!1);!0===b.colorsNeedUpdate&&(c=this.attributes.color,void 0!==c&&(c.copyColorsArray(b.colors),c.needsUpdate=!0),b.colorsNeedUpdate=!1);b.uvsNeedUpdate&&(c=this.attributes.uv,void 0!==c&&(c.copyVector2sArray(b.uvs),c.needsUpdate=!0),b.uvsNeedUpdate=!1);b.lineDistancesNeedUpdate&&(c=this.attributes.lineDistance,void 0!==c&&(c.copyArray(b.lineDistances),c.needsUpdate=!0),b.lineDistancesNeedUpdate=!1);b.groupsNeedUpdate&&(b.computeGroups(a.geometry),this.groups=\nb.groups,b.groupsNeedUpdate=!1);return this},fromGeometry:function(a){a.__directGeometry=(new THREE.DirectGeometry).fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var b=new Float32Array(3*a.vertices.length);this.addAttribute(\"position\",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.vertices));0<a.normals.length&&(b=new Float32Array(3*a.normals.length),this.addAttribute(\"normal\",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.normals)));\n0<a.colors.length&&(b=new Float32Array(3*a.colors.length),this.addAttribute(\"color\",(new THREE.BufferAttribute(b,3)).copyColorsArray(a.colors)));0<a.uvs.length&&(b=new Float32Array(2*a.uvs.length),this.addAttribute(\"uv\",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs)));0<a.uvs2.length&&(b=new Float32Array(2*a.uvs2.length),this.addAttribute(\"uv2\",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs2)));0<a.indices.length&&(b=new (65535<a.vertices.length?Uint32Array:Uint16Array)(3*a.indices.length),\nthis.setIndex((new THREE.BufferAttribute(b,1)).copyIndicesArray(a.indices)));this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,f=d.length;e<f;e++){var g=d[e],h=new THREE.Float32Attribute(3*g.length,3);b.push(h.copyVector3sArray(g))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new THREE.Float32Attribute(4*a.skinIndices.length,4),this.addAttribute(\"skinIndex\",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new THREE.Float32Attribute(4*a.skinWeights.length,\n4),this.addAttribute(\"skinWeight\",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;void 0!==a?this.boundingBox.setFromArray(a):this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&\nconsole.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){var d=this.boundingSphere.center;a.setFromArray(c);a.center(d);for(var e=0,f=0,g=c.length;f<g;f+=3)b.fromArray(c,f),e=Math.max(e,d.distanceToSquared(b));\nthis.boundingSphere.radius=Math.sqrt(e);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;if(void 0===b.normal)this.addAttribute(\"normal\",new THREE.BufferAttribute(new Float32Array(d.length),3));else for(var e=b.normal.array,\nf=0,g=e.length;f<g;f++)e[f]=0;var e=b.normal.array,h,k,l,n=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3;if(a){a=a.array;0===c.length&&this.addGroup(0,a.length);for(var s=0,u=c.length;s<u;++s)for(f=c[s],g=f.start,h=f.count,f=g,g+=h;f<g;f+=3)h=3*a[f+0],k=3*a[f+1],l=3*a[f+2],n.fromArray(d,h),p.fromArray(d,k),m.fromArray(d,l),q.subVectors(m,p),r.subVectors(n,p),q.cross(r),e[h]+=q.x,e[h+1]+=q.y,e[h+2]+=q.z,e[k]+=q.x,e[k+1]+=q.y,e[k+2]+=q.z,e[l]+=q.x,\ne[l+1]+=q.y,e[l+2]+=q.z}else for(f=0,g=d.length;f<g;f+=9)n.fromArray(d,f),p.fromArray(d,f+3),m.fromArray(d,f+6),q.subVectors(m,p),r.subVectors(n,p),q.cross(r),e[f]=q.x,e[f+1]=q.y,e[f+2]=q.z,e[f+3]=q.x,e[f+4]=q.y,e[f+5]=q.z,e[f+6]=q.x,e[f+7]=q.y,e[f+8]=q.z;this.normalizeNormals();b.normal.needsUpdate=!0}},merge:function(a,b){if(!1===a instanceof THREE.BufferGeometry)console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",a);else{void 0===b&&(b=0);var c=this.attributes,\nd;for(d in c)if(void 0!==a.attributes[d])for(var e=c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},toNonIndexed:function(){if(null===this.index)return console.warn(\"THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.\"),this;var a=new THREE.BufferGeometry,\nb=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h=0,k=0,l=0,n=b.length;l<n;l++)for(var h=b[l]*e,p=0;p<e;p++)g[k++]=f[h++];a.addAttribute(d,new THREE.BufferAttribute(g,e))}return a},toJSON:function(){var a={metadata:{version:4.4,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};a.uuid=this.uuid;a.type=this.type;\"\"!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters,c;for(c in b)void 0!==\nb[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};var d=this.index;null!==d&&(b=Array.prototype.slice.call(d.array),a.data.index={type:d.array.constructor.name,array:b});d=this.attributes;for(c in d){var e=d[c],b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b,normalized:e.normalized}}c=this.groups;0<c.length&&(a.data.groups=JSON.parse(JSON.stringify(c)));c=this.boundingSphere;null!==c&&(a.data.boundingSphere={center:c.center.toArray(),\nradius:c.radius});return a},clone:function(){return(new THREE.BufferGeometry).copy(this)},copy:function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.BufferGeometry.MaxIndex=65535;\nTHREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this);this.type=\"InstancedBufferGeometry\";this.maxInstancedCount=void 0};THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry;THREE.InstancedBufferGeometry.prototype.addGroup=function(a,b,c){this.groups.push({start:a,count:b,instances:c})};\nTHREE.InstancedBufferGeometry.prototype.copy=function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.instances)}return this};THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype);\nTHREE.Uniform=function(a,b){\"string\"===typeof a&&(console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"),a=b);this.value=a;this.dynamic=!1};THREE.Uniform.prototype={constructor:THREE.Uniform,onUpdate:function(a){this.dynamic=!0;this.onUpdateCallback=a;return this}};THREE.AnimationClip=function(a,b,c){this.name=a||THREE.Math.generateUUID();this.tracks=c;this.duration=void 0!==b?b:-1;0>this.duration&&this.resetDuration();this.trim();this.optimize()};\nTHREE.AnimationClip.prototype={constructor:THREE.AnimationClip,resetDuration:function(){for(var a=0,b=0,c=this.tracks.length;b!==c;++b)var d=this.tracks[b],a=Math.max(a,d.times[d.times.length-1]);this.duration=a},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}};\nObject.assign(THREE.AnimationClip,{parse:function(a){for(var b=[],c=a.tracks,d=1/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(THREE.KeyframeTrack.parse(c[e]).scale(d));return new THREE.AnimationClip(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(THREE.KeyframeTrack.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%\ne,g,(g+1)%e);k.push(0,1,0);var l=THREE.AnimationUtils.getKeyframeOrder(h),h=THREE.AnimationUtils.sortedArray(h,1,l),k=THREE.AnimationUtils.sortedArray(k,1,l);d||0!==h[0]||(h.push(e),k.push(k[0]));f.push((new THREE.NumberKeyframeTrack(\".morphTargetInfluences[\"+b[g].name+\"]\",h,k)).scale(1/c))}return new THREE.AnimationClip(a,-1,f)},findByName:function(a,b){for(var c=0;c<a.length;c++)if(a[c].name===b)return a[c];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){for(var d={},e=/^([\\w-]*?)([\\d]+)$/,\nf=0,g=a.length;f<g;f++){var h=a[f],k=h.name.match(e);if(k&&1<k.length){var l=k[1];(k=d[l])||(d[l]=k=[]);k.push(h)}}a=[];for(l in d)a.push(THREE.AnimationClip.CreateFromMorphTargetSequence(l,d[l],b,c));return a},parseAnimation:function(a,b,c){if(!a)return console.error(\"  no animation in JSONLoader data\"),null;c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];THREE.AnimationUtils.flattenJSON(c,f,g,d);0!==f.length&&e.push(new a(b,f,g))}};var d=[],e=a.name||\"default\",f=a.length||-1,g=a.fps||30;a=\na.hierarchy||[];for(var h=0;h<a.length;h++){var k=a[h].keys;if(k&&0!=k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var n=0;n<k[l].morphTargets.length;n++)f[k[l].morphTargets[n]]=-1;for(var p in f){for(var m=[],q=[],n=0;n!==k[l].morphTargets.length;++n){var r=k[l];m.push(r.time);q.push(r.morphTarget===p?1:0)}d.push(new THREE.NumberKeyframeTrack(\".morphTargetInfluence[\"+p+\"]\",m,q))}f=f.length*(g||1)}else l=\".bones[\"+b[h].name+\"]\",c(THREE.VectorKeyframeTrack,\nl+\".position\",k,\"pos\",d),c(THREE.QuaternionKeyframeTrack,l+\".quaternion\",k,\"rot\",d),c(THREE.VectorKeyframeTrack,l+\".scale\",k,\"scl\",d)}return 0===d.length?null:new THREE.AnimationClip(e,f,d)}});THREE.AnimationMixer=function(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1};\nTHREE.AnimationMixer.prototype={constructor:THREE.AnimationMixer,clipAction:function(a,b){var c=(b||this._root).uuid,d=\"string\"===typeof a?a:a.name,e=a!==d?a:null,f=this._actionsByClip[d],g;if(void 0!==f){g=f.actionByRoot[c];if(void 0!==g)return g;g=f.knownActions[0];e=g._clip;if(a!==d&&a!==e)throw Error(\"Different clips with the same name detected!\");}if(null===e)return null;f=new THREE.AnimationMixer._Action(this,e,b);this._bindAction(f,g);this._addInactiveAction(f,d,c);return f},existingAction:function(a,\nb){var c=(b||this._root).uuid,d=this._actionsByClip[\"string\"===typeof a?a:a.name];return void 0!==d?d.actionByRoot[c]||null:null},stopAllAction:function(){for(var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings,e=this._nActiveBindings=this._nActiveActions=0;e!==b;++e)a[e].reset();for(e=0;e!==d;++e)c[e].useCount=0;return this},update:function(a){a*=this.timeScale;for(var b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1,g=0;g!==\nc;++g){var h=b[g];h.enabled&&h._update(d,a,e,f)}a=this._bindings;b=this._nActiveBindings;for(g=0;g!==b;++g)a[g].apply(f);return this},getRoot:function(){return this._root},uncacheClip:function(a){var b=this._actions;a=a.name;var c=this._actionsByClip,d=c[a];if(void 0!==d){for(var d=d.knownActions,e=0,f=d.length;e!==f;++e){var g=d[e];this._deactivateAction(g);var h=g._cacheIndex,k=b[b.length-1];g._cacheIndex=null;g._byClipCacheIndex=null;k._cacheIndex=h;b[h]=k;b.pop();this._removeInactiveBindingsForAction(g)}delete c[a]}},\nuncacheRoot:function(a){a=a.uuid;var b=this._actionsByClip,c;for(c in b){var d=b[c].actionByRoot[a];void 0!==d&&(this._deactivateAction(d),this._removeInactiveAction(d))}c=this._bindingsByRootAndName[a];if(void 0!==c)for(var e in c)a=c[e],a.restoreOriginalState(),this._removeInactiveBinding(a)},uncacheAction:function(a,b){var c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}};THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype);\nTHREE.AnimationMixer._Action=function(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=THREE.LoopRepeat;this._loopCount=\n-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0};\nTHREE.AnimationMixer._Action.prototype={constructor:THREE.AnimationMixer._Action,play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},\nstartAt:function(a){this._startTime=a;return this},setLoop:function(a,b){this.loop=a;this.repetitions=b;return this},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(a,b,c){a.fadeOut(b);this.fadeIn(b);if(c){c=this._clip.duration;var d=a._clip.duration,\ne=c/d;a.warp(1,d/c,b);this.warp(e,1,b)}return this},crossFadeTo:function(a,b,c){return a.crossFadeFrom(this,b,c)},stopFading:function(){var a=this._weightInterpolant;null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(a){this.timeScale=this._clip.duration/\na;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._currentTimeScale,0,a)},warp:function(a,b,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;null===f&&(this._timeScaleInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;d[1]=e+c;f[0]=a/g;f[1]=b/g;return this},stopWarping:function(){var a=this._timeScaleInterpolant;null!==a&&(this._timeScaleInterpolant=\nnull,this._mixer._takeBackControlInterpolant(a));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(a,b,c,d){var e=this._startTime;if(null!==e){b=(a-e)*c;if(0>b||0===c)return;this._startTime=null;b*=c}b*=this._updateTimeScale(a);c=this._updateTime(b);a=this._updateWeight(a);if(0<a){b=this._interpolants;for(var e=this._propertyBindings,f=0,g=b.length;f!==g;++f)b[f].evaluate(c),e[f].accumulate(d,\na)}},_updateWeight:function(a){var b=0;if(this.enabled){var b=this.weight,c=this._weightInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b},_updateTimeScale:function(a){var b=0;if(!this.paused){var b=this.timeScale,c=this._timeScaleInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.pause=!0:this.timeScale=b)}}return this._effectiveTimeScale=\nb},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount,f=!1;switch(d){case THREE.LoopOnce:-1===e&&(this.loopCount=0,this._setEndings(!0,!0,!1));if(b>=c)b=c;else if(0>b)b=0;else break;this.clampWhenFinished?this.pause=!0:this.enabled=!1;this._mixer.dispatchEvent({type:\"finished\",action:this,direction:0>a?-1:1});break;case THREE.LoopPingPong:f=!0;case THREE.LoopRepeat:-1===e&&(0<a?(e=0,this._setEndings(!0,0===this.repetitions,f)):this._setEndings(0===\nthis.repetitions,!0,f));if(b>=c||0>b){var g=Math.floor(b/c),b=b-c*g,e=e+Math.abs(g),h=this.repetitions-e;if(0>h){this.clampWhenFinished?this.paused=!0:this.enabled=!1;b=0<a?c:0;this._mixer.dispatchEvent({type:\"finished\",action:this,direction:0<a?1:-1});break}else 0===h?(a=0>a,this._setEndings(a,!a,f)):this._setEndings(!1,!1,f);this._loopCount=e;this._mixer.dispatchEvent({type:\"loop\",action:this,loopDelta:g})}if(d===THREE.LoopPingPong&&1===(e&1))return this.time=b,c-b}return this.time=b},_setEndings:function(a,\nb,c){var d=this._interpolantSettings;c?(d.endingStart=THREE.ZeroSlopeEnding,d.endingEnd=THREE.ZeroSlopeEnding):(d.endingStart=a?this.zeroSlopeAtStart?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding,d.endingEnd=b?this.zeroSlopeAtEnd?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding)},_scheduleFading:function(a,b,c){var d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(this._weightInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;\nf=f.sampleValues;d[0]=e;f[0]=b;d[1]=e+a;f[1]=c;return this}};\nObject.assign(THREE.AnimationMixer.prototype,{_bindAction:function(a,b){var c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,k=this._bindingsByRootAndName,l=k[h];void 0===l&&(l={},k[h]=l);for(k=0;k!==e;++k){var n=d[k],p=n.name,m=l[p];if(void 0===m){m=f[k];if(void 0!==m){null===m._cacheIndex&&(++m.referenceCount,this._addInactiveBinding(m,h,p));continue}m=new THREE.PropertyMixer(THREE.PropertyBinding.create(c,p,b&&b._propertyBindings[k].binding.parsedPath),\nn.ValueTypeName,n.getValueSize());++m.referenceCount;this._addInactiveBinding(m,h,p)}f[k]=m;g[k].resultBuffer=m.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var b=(a._localRoot||this._root).uuid,c=a._clip.name,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b)}b=a._propertyBindings;c=0;for(d=b.length;c!==d;++c){var e=b[c];0===e.useCount++&&(this._lendBinding(e),e.saveOriginalState())}this._lendAction(a)}},\n_deactivateAction:function(a){if(this._isActiveAction(a)){for(var b=a._propertyBindings,c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},\nget inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=\nf.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);f.actionByRoot[c]=a},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;var c=a._clip.name,d=this._actionsByClip,e=d[c],f=e.knownActions,g=f[f.length-1],h=a._byClipCacheIndex;g._byClipCacheIndex=h;f[h]=g;f.pop();a._byClipCacheIndex=null;delete e.actionByRoot[(b._localRoot||this._root).uuid];0===f.length&&delete d[c];this._removeInactiveBindingsForAction(a)},\n_removeInactiveBindingsForAction:function(a){a=a._propertyBindings;for(var b=0,c=a.length;b!==c;++b){var d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,\ne=d[b],f=this._bindings;void 0===e&&(e={},d[b]=e);e[c]=a;a._cacheIndex=f.length;f.push(a)},_removeInactiveBinding:function(a){var b=this._bindings,c=a.binding,d=c.rootNode.uuid,c=c.path,e=this._bindingsByRootAndName,f=e[d],g=b[b.length-1];a=a._cacheIndex;g._cacheIndex=a;b[a]=g;b.pop();delete f[c];a:{for(var h in f)break a;delete e[d]}},_lendBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackBinding:function(a){var b=\nthis._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_lendControlInterpolant:function(){var a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];void 0===c&&(c=new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),c.__cacheIndex=b,a[b]=c);return c},_takeBackControlInterpolant:function(a){var b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,\ne=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1)});\nTHREE.AnimationObjectGroup=function(a){this.uuid=THREE.Math.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var b={};this._indicesByUUID=b;for(var c=0,d=arguments.length;c!==d;++c)b[arguments[c].uuid]=c;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}};\nTHREE.AnimationObjectGroup.prototype={constructor:THREE.AnimationObjectGroup,add:function(a){for(var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._paths,g=this._parsedPaths,h=this._bindings,k=h.length,l=0,n=arguments.length;l!==n;++l){var p=arguments[l],m=p.uuid,q=e[m];if(void 0===q){q=c++;e[m]=q;b.push(p);for(var m=0,r=k;m!==r;++m)h[m].push(new THREE.PropertyBinding(p,f[m],g[m]))}else if(q<d){var s=b[q],u=--d,r=b[u];e[r.uuid]=q;b[q]=r;e[m]=u;b[u]=p;m=0;for(r=k;m!==\nr;++m){var v=h[m],x=v[q];v[q]=v[u];void 0===x&&(x=new THREE.PropertyBinding(p,f[m],g[m]));v[u]=x}}else b[q]!==s&&console.error(\"Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...\")}this.nCachedObjects_=d},remove:function(a){for(var b=this._objects,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._bindings,f=e.length,g=0,h=arguments.length;g!==h;++g){var k=arguments[g],l=k.uuid,n=d[l];if(void 0!==n&&n>=c){var p=c++,m=b[p];d[m.uuid]=\nn;b[n]=m;d[l]=p;b[p]=k;k=0;for(l=f;k!==l;++k){var m=e[k],q=m[n];m[n]=m[p];m[p]=q}}}this.nCachedObjects_=c},uncache:function(a){for(var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._bindings,g=f.length,h=0,k=arguments.length;h!==k;++h){var l=arguments[h].uuid,n=e[l];if(void 0!==n)if(delete e[l],n<d){var l=--d,p=b[l],m=--c,q=b[m];e[p.uuid]=n;b[n]=p;e[q.uuid]=l;b[l]=q;b.pop();p=0;for(q=g;p!==q;++p){var r=f[p],s=r[m];r[n]=r[l];r[l]=s;r.pop()}}else for(m=--c,q=b[m],e[q.uuid]=\nn,b[n]=q,b.pop(),p=0,q=g;p!==q;++p)r=f[p],r[n]=r[m],r.pop()}this.nCachedObjects_=d},subscribe_:function(a,b){var c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];var f=this._paths,g=this._parsedPaths,h=this._objects,k=this.nCachedObjects_,l=Array(h.length),d=e.length;c[a]=d;f.push(a);g.push(b);e.push(l);c=k;for(d=h.length;c!==d;++c)l[c]=new THREE.PropertyBinding(h[c],a,b);return l},unsubscribe_:function(a){var b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){var d=\nthis._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g];b[a[g]]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop()}}};\nTHREE.AnimationUtils={arraySlice:function(a,b,c){return THREE.AnimationUtils.isTypedArray(a)?new a.constructor(a.subarray(b,c)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:\"number\"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-a[c]});return c},sortedArray:function(a,\nb,c){for(var d=a.length,e=new a.constructor(d),f=0,g=0;g!==d;++f)for(var h=c[f]*b,k=0;k!==b;++k)e[g++]=a[h+k];return e},flattenJSON:function(a,b,c,d){for(var e=1,f=a[0];void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var g=f[d];if(void 0!==g)if(Array.isArray(g)){do g=f[d],void 0!==g&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)}else if(void 0!==g.toArray){do g=f[d],void 0!==g&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f)}else{do g=f[d],void 0!==g&&(b.push(f.time),\nc.push(g)),f=a[e++];while(void 0!==f)}}}};THREE.KeyframeTrack=function(a,b,c,d){if(void 0===a)throw Error(\"track name is undefined\");if(void 0===b||0===b.length)throw Error(\"no keyframes in track named \"+a);this.name=a;this.times=THREE.AnimationUtils.convertArray(b,this.TimeBufferType);this.values=THREE.AnimationUtils.convertArray(c,this.ValueBufferType);this.setInterpolation(d||this.DefaultInterpolation);this.validate();this.optimize()};\nTHREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(a){return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new THREE.CubicInterpolant(this.times,\nthis.values,this.getValueSize(),a)},setInterpolation:function(a){var b=void 0;switch(a){case THREE.InterpolateDiscrete:b=this.InterpolantFactoryMethodDiscrete;break;case THREE.InterpolateLinear:b=this.InterpolantFactoryMethodLinear;break;case THREE.InterpolateSmooth:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){b=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(void 0===this.createInterpolant)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);\nelse throw Error(b);console.warn(b)}else this.createInterpolant=b},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return THREE.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return THREE.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return THREE.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(a){if(0!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]+=a;return this},\nscale:function(a){if(1!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]*=a;return this},trim:function(a,b){for(var c=this.times,d=c.length,e=0,f=d-1;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;++f;if(0!==e||f!==d)e>=f&&(f=Math.max(f,1),e=f-1),d=this.getValueSize(),this.times=THREE.AnimationUtils.arraySlice(c,e,f),this.values=THREE.AnimationUtils.arraySlice(this.values,e*d,f*d);return this},validate:function(){var a=!0,b=this.getValueSize();0!==b-Math.floor(b)&&(console.error(\"invalid value size in track\",\nthis),a=!1);var c=this.times,b=this.values,d=c.length;0===d&&(console.error(\"track is empty\",this),a=!1);for(var e=null,f=0;f!==d;f++){var g=c[f];if(\"number\"===typeof g&&isNaN(g)){console.error(\"time is not a valid number\",this,f,g);a=!1;break}if(null!==e&&e>g){console.error(\"out of order keys\",this,f,g,e);a=!1;break}e=g}if(void 0!==b&&THREE.AnimationUtils.isTypedArray(b))for(f=0,c=b.length;f!==c;++f)if(d=b[f],isNaN(d)){console.error(\"value is not a valid number\",this,f,d);a=!1;break}return a},optimize:function(){for(var a=\nthis.times,b=this.values,c=this.getValueSize(),d=1,e=1,f=a.length-1;e<=f;++e){var g=!1,h=a[e];if(h!==a[e+1]&&(1!==e||h!==h[0]))for(var k=e*c,l=k-c,n=k+c,h=0;h!==c;++h){var p=b[k+h];if(p!==b[l+h]||p!==b[n+h]){g=!0;break}}if(g){if(e!==d)for(a[d]=a[e],g=e*c,k=d*c,h=0;h!==c;++h)b[k+h]=b[g+h];++d}}d!==a.length&&(this.times=THREE.AnimationUtils.arraySlice(a,0,d),this.values=THREE.AnimationUtils.arraySlice(b,0,d*c));return this}};\nObject.assign(THREE.KeyframeTrack,{parse:function(a){if(void 0===a.type)throw Error(\"track type undefined, can not parse\");var b=THREE.KeyframeTrack._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){console.warn(\"legacy JSON format detected, converting\");var c=[],d=[];THREE.AnimationUtils.flattenJSON(a.keys,c,d,\"value\");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);\nelse{var b={name:a.name,times:THREE.AnimationUtils.convertArray(a.times,Array),values:THREE.AnimationUtils.convertArray(a.values,Array)},c=a.getInterpolation();c!==a.DefaultInterpolation&&(b.interpolation=c)}b.type=a.ValueTypeName;return b},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case \"scalar\":case \"double\":case \"float\":case \"number\":case \"integer\":return THREE.NumberKeyframeTrack;case \"vector\":case \"vector2\":case \"vector3\":case \"vector4\":return THREE.VectorKeyframeTrack;\ncase \"color\":return THREE.ColorKeyframeTrack;case \"quaternion\":return THREE.QuaternionKeyframeTrack;case \"bool\":case \"boolean\":return THREE.BooleanKeyframeTrack;case \"string\":return THREE.StringKeyframeTrack}throw Error(\"Unsupported typeName: \"+a);}});THREE.PropertyBinding=function(a,b,c){this.path=b;this.parsedPath=c||THREE.PropertyBinding.parseTrackName(b);this.node=THREE.PropertyBinding.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a};\nTHREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,getValue:function(a,b){this.bind();this.getValue(a,b)},setValue:function(a,b){this.bind();this.setValue(a,b)},bind:function(){var a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;a||(this.node=a=THREE.PropertyBinding.findNode(this.rootNode,b.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(a){if(c){var f=b.objectIndex;switch(c){case \"materials\":if(!a.material){console.error(\"  can not bind to material as node does not have a material\",\nthis);return}if(!a.material.materials){console.error(\"  can not bind to material.materials as node.material does not have a materials array\",this);return}a=a.material.materials;break;case \"bones\":if(!a.skeleton){console.error(\"  can not bind to bones as node does not have a skeleton\",this);return}a=a.skeleton.bones;for(c=0;c<a.length;c++)if(a[c].name===f){f=c;break}break;default:if(void 0===a[c]){console.error(\"  can not bind to objectName of node, undefined\",this);return}a=a[c]}if(void 0!==f){if(void 0===\na[f]){console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\",this,a);return}a=a[f]}}if(f=a[d]){b=this.Versioning.None;void 0!==a.needsUpdate?(b=this.Versioning.NeedsUpdate,this.targetObject=a):void 0!==a.matrixWorldNeedsUpdate&&(b=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=a);c=this.BindingType.Direct;if(void 0!==e){if(\"morphTargetInfluences\"===d){if(!a.geometry){console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry\",\nthis);return}if(!a.geometry.morphTargets){console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets\",this);return}for(c=0;c<this.node.geometry.morphTargets.length;c++)if(a.geometry.morphTargets[c].name===e){e=c;break}}c=this.BindingType.ArrayElement;this.resolvedProperty=f;this.propertyIndex=e}else void 0!==f.fromArray&&void 0!==f.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=f):void 0!==f.length?(c=this.BindingType.EntireArray,this.resolvedProperty=\nf):this.propertyName=d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}else console.error(\"  trying to update property for track: \"+b.nodeName+\".\"+d+\" but it wasn't found.\",a)}else console.error(\"  trying to update node for track: \"+this.path+\" but it wasn't found.\")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}};\nObject.assign(THREE.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:THREE.PropertyBinding.prototype.getValue,_setValue_unbound:THREE.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=\nc[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.node[this.propertyName]=a[b]},function(a,b){this.node[this.propertyName]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.node[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){for(var c=this.resolvedProperty,\nd=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty[this.propertyIndex]=a[b]},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty.fromArray(a,\nb)},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.matrixWorldNeedsUpdate=!0}]]});THREE.PropertyBinding.Composite=function(a,b,c){c=c||THREE.PropertyBinding.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,c)};\nTHREE.PropertyBinding.Composite.prototype={constructor:THREE.PropertyBinding.Composite,getValue:function(a,b){this.bind();var c=this._bindings[this._targetGroup.nCachedObjects_];void 0!==c&&c.getValue(a,b)},setValue:function(a,b){for(var c=this._bindings,d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()},unbind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,\nc=a.length;b!==c;++b)a[b].unbind()}};THREE.PropertyBinding.create=function(a,b,c){return a instanceof THREE.AnimationObjectGroup?new THREE.PropertyBinding.Composite(a,b,c):new THREE.PropertyBinding(a,b,c)};\nTHREE.PropertyBinding.parseTrackName=function(a){var b=/^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/,c=b.exec(a);if(!c)throw Error(\"cannot parse trackName at all: \"+a);c.index===b.lastIndex&&b.lastIndex++;b={nodeName:c[3],objectName:c[5],objectIndex:c[7],propertyName:c[9],propertyIndex:c[11]};if(null===b.propertyName||0===b.propertyName.length)throw Error(\"can not parse propertyName from trackName: \"+a);return b};\nTHREE.PropertyBinding.findNode=function(a,b){if(!b||\"\"===b||\"root\"===b||\".\"===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){var c=function(a){for(var c=0;c<a.bones.length;c++){var d=a.bones[c];if(d.name===b)return d}return null}(a.skeleton);if(c)return c}if(a.children){var d=function(a){for(var c=0;c<a.length;c++){var g=a[c];if(g.name===b||g.uuid===b||(g=d(g.children)))return g}return null};if(c=d(a.children))return c}return null};\nTHREE.PropertyMixer=function(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case \"quaternion\":b=this._slerp;break;case \"string\":case \"bool\":a=Array;b=this._select;break;default:b=this._lerp}this.buffer=new a(4*c);this._mixBufferRegion=b;this.referenceCount=this.useCount=this.cumulativeWeight=0};\nTHREE.PropertyMixer.prototype={constructor:THREE.PropertyMixer,accumulate:function(a,b){var c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(f=0;f!==d;++f)c[e+f]=c[f];f=b}else f+=b,this._mixBufferRegion(c,e,0,b/f,d);this.cumulativeWeight=f},apply:function(a){var b=this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);\nbreak}},saveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=0;d!==e;++d)a[b+d]=a[c+d]},_slerp:function(a,b,c,d,e){THREE.Quaternion.slerpFlat(a,b,a,b,a,c,d)},_lerp:function(a,b,c,d,e){for(var f=1-d,g=0;g!==e;++g){var h=b+g;a[h]=a[h]*f+a[c+g]*d}}};\nTHREE.BooleanKeyframeTrack=function(a,b,c){THREE.KeyframeTrack.call(this,a,b,c)};THREE.BooleanKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.BooleanKeyframeTrack,ValueTypeName:\"bool\",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});THREE.ColorKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\nTHREE.ColorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.ColorKeyframeTrack,ValueTypeName:\"color\"});THREE.NumberKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};THREE.NumberKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.NumberKeyframeTrack,ValueTypeName:\"number\"});THREE.QuaternionKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\nTHREE.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.QuaternionKeyframeTrack,ValueTypeName:\"quaternion\",DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodLinear:function(a){return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});THREE.StringKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\nTHREE.StringKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.StringKeyframeTrack,ValueTypeName:\"string\",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});THREE.VectorKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\nTHREE.VectorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.VectorKeyframeTrack,ValueTypeName:\"vector\"});\nTHREE.Audio=function(a){THREE.Object3D.call(this);this.type=\"Audio\";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType=\"empty\";this.filter=null};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;\nTHREE.Audio.prototype.getOutput=function(){return this.gain};THREE.Audio.prototype.setNodeSource=function(a){this.hasPlaybackControl=!1;this.sourceType=\"audioNode\";this.source=a;this.connect();return this};THREE.Audio.prototype.setBuffer=function(a){this.source.buffer=a;this.sourceType=\"buffer\";this.autoplay&&this.play();return this};\nTHREE.Audio.prototype.play=function(){if(!0===this.isPlaying)console.warn(\"THREE.Audio: Audio is already playing.\");else if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");else{var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.start(0,this.startTime);a.playbackRate.value=this.playbackRate;this.isPlaying=!0;this.source=a;this.connect()}};\nTHREE.Audio.prototype.pause=function(){!1===this.hasPlaybackControl?console.warn(\"THREE.Audio: this Audio has no playback control.\"):(this.source.stop(),this.startTime=this.context.currentTime)};THREE.Audio.prototype.stop=function(){!1===this.hasPlaybackControl?console.warn(\"THREE.Audio: this Audio has no playback control.\"):(this.source.stop(),this.startTime=0)};THREE.Audio.prototype.connect=function(){null!==this.filter?(this.source.connect(this.filter),this.filter.connect(this.getOutput())):this.source.connect(this.getOutput())};\nTHREE.Audio.prototype.disconnect=function(){null!==this.filter?(this.source.disconnect(this.filter),this.filter.disconnect(this.getOutput())):this.source.disconnect(this.getOutput())};THREE.Audio.prototype.getFilter=function(){return this.filter};THREE.Audio.prototype.setFilter=function(a){void 0===a&&(a=null);!0===this.isPlaying?(this.disconnect(),this.filter=a,this.connect()):this.filter=a};\nTHREE.Audio.prototype.setPlaybackRate=function(a){!1===this.hasPlaybackControl?console.warn(\"THREE.Audio: this Audio has no playback control.\"):(this.playbackRate=a,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate))};THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate};THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1};\nTHREE.Audio.prototype.setLoop=function(a){!1===this.hasPlaybackControl?console.warn(\"THREE.Audio: this Audio has no playback control.\"):this.source.loop=a};THREE.Audio.prototype.getLoop=function(){return!1===this.hasPlaybackControl?(console.warn(\"THREE.Audio: this Audio has no playback control.\"),!1):this.source.loop};THREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a};THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value};\nTHREE.AudioAnalyser=function(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)};THREE.AudioAnalyser.prototype={constructor:THREE.AudioAnalyser,getData:function(){this.analyser.getByteFrequencyData(this.data);return this.data}};\nObject.defineProperty(THREE,\"AudioContext\",{get:function(){var a;return function(){void 0===a&&(a=new (window.AudioContext||window.webkitAudioContext));return a}}()});THREE.PositionalAudio=function(a){THREE.Audio.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)};THREE.PositionalAudio.prototype=Object.create(THREE.Audio.prototype);THREE.PositionalAudio.prototype.constructor=THREE.PositionalAudio;THREE.PositionalAudio.prototype.getOutput=function(){return this.panner};\nTHREE.PositionalAudio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.PositionalAudio.prototype.getRefDistance=function(){return this.panner.refDistance};THREE.PositionalAudio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};THREE.PositionalAudio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor};THREE.PositionalAudio.prototype.setDistanceModel=function(a){this.panner.distanceModel=a};THREE.PositionalAudio.prototype.getDistanceModel=function(){return this.panner.distanceModel};\nTHREE.PositionalAudio.prototype.setMaxDistance=function(a){this.panner.maxDistance=a};THREE.PositionalAudio.prototype.getMaxDistance=function(){return this.panner.maxDistance};THREE.PositionalAudio.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}();\nTHREE.AudioListener=function(){THREE.Object3D.call(this);this.type=\"AudioListener\";this.context=THREE.AudioContext;this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null};THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;THREE.AudioListener.prototype.getInput=function(){return this.gain};\nTHREE.AudioListener.prototype.removeFilter=function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)};THREE.AudioListener.prototype.setFilter=function(a){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination)};\nTHREE.AudioListener.prototype.getFilter=function(){return this.filter};THREE.AudioListener.prototype.setMasterVolume=function(a){this.gain.gain.value=a};THREE.AudioListener.prototype.getMasterVolume=function(){return this.gain.gain.value};\nTHREE.AudioListener.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3;return function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e);e=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.setPosition(a.x,a.y,a.z);e.setOrientation(d.x,d.y,d.z,f.x,f.y,f.z)}}();\nTHREE.Camera=function(){THREE.Object3D.call(this);this.type=\"Camera\";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();\nTHREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)};THREE.Camera.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);return this};\nTHREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);this.type=\"CubeCamera\";var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));\nthis.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var k=new THREE.PerspectiveCamera(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,-1));this.add(k);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,m=c.texture.generateMipmaps;c.texture.generateMipmaps=\n!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=m;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;\nTHREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.type=\"OrthographicCamera\";this.zoom=1;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(c-a,c+a,d+b,d-b,this.near,this.far)};THREE.OrthographicCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;return this};\nTHREE.OrthographicCamera.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;return a};\nTHREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type=\"PerspectiveCamera\";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;\nTHREE.PerspectiveCamera.prototype.setLens=function(a,b){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};THREE.PerspectiveCamera.prototype.setFocalLength=function(a){a=.5*this.getFilmHeight()/a;this.fov=2*THREE.Math.RAD2DEG*Math.atan(a);this.updateProjectionMatrix()};\nTHREE.PerspectiveCamera.prototype.getFocalLength=function(){var a=Math.tan(.5*THREE.Math.DEG2RAD*this.fov);return.5*this.getFilmHeight()/a};THREE.PerspectiveCamera.prototype.getEffectiveFOV=function(){return 2*THREE.Math.RAD2DEG*Math.atan(Math.tan(.5*THREE.Math.DEG2RAD*this.fov)/this.zoom)};THREE.PerspectiveCamera.prototype.getFilmWidth=function(){return this.filmGauge*Math.min(this.aspect,1)};THREE.PerspectiveCamera.prototype.getFilmHeight=function(){return this.filmGauge/Math.max(this.aspect,1)};\nTHREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.aspect=a/b;this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,width:e,height:f};this.updateProjectionMatrix()};\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=this.near,b=a*Math.tan(.5*THREE.Math.DEG2RAD*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==f)var g=f.fullWidth,h=f.fullHeight,e=e+f.offsetX*d/g,b=b-f.offsetY*c/h,d=f.width/g*d,c=f.height/h*c;f=this.filmOffset;0!==f&&(e+=a*f/this.getFilmWidth());this.projectionMatrix.makeFrustum(e,e+d,b-c,b,a,this.far)};\nTHREE.PerspectiveCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;this.view=null===a.view?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this};\nTHREE.PerspectiveCamera.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=this.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=this.filmGauge;a.object.filmOffset=this.filmOffset;return a};\nTHREE.StereoCamera=function(){this.type=\"StereoCamera\";this.aspect=1;this.cameraL=new THREE.PerspectiveCamera;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new THREE.PerspectiveCamera;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1};\nTHREE.StereoCamera.prototype={constructor:THREE.StereoCamera,update:function(){var a,b,c,d,e,f=new THREE.Matrix4,g=new THREE.Matrix4;return function(h){if(a!==h.focus||b!==h.fov||c!==h.aspect*this.aspect||d!==h.near||e!==h.far){a=h.focus;b=h.fov;c=h.aspect*this.aspect;d=h.near;e=h.far;var k=h.projectionMatrix.clone(),l=.032*d/a,n=d*Math.tan(THREE.Math.DEG2RAD*b*.5),p,m;g.elements[12]=-.032;f.elements[12]=.032;p=-n*c+l;m=n*c+l;k.elements[0]=2*d/(m-p);k.elements[8]=(m+p)/(m-p);this.cameraL.projectionMatrix.copy(k);\np=-n*c-l;m=n*c-l;k.elements[0]=2*d/(m-p);k.elements[8]=(m+p)/(m-p);this.cameraR.projectionMatrix.copy(k)}this.cameraL.matrixWorld.copy(h.matrixWorld).multiply(g);this.cameraR.matrixWorld.copy(h.matrixWorld).multiply(f)}}()};THREE.Light=function(a,b){THREE.Object3D.call(this);this.type=\"Light\";this.color=new THREE.Color(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;\nTHREE.Light.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this};\nTHREE.Light.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();a.object.intensity=this.intensity;void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(a.object.distance=this.distance);void 0!==this.angle&&(a.object.angle=this.angle);void 0!==this.decay&&(a.object.decay=this.decay);void 0!==this.penumbra&&(a.object.penumbra=this.penumbra);return a};\nTHREE.LightShadow=function(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new THREE.Vector2(512,512);this.map=null;this.matrix=new THREE.Matrix4};THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return(new this.constructor).copy(this)}};THREE.AmbientLight=function(a,b){THREE.Light.call(this,a,b);this.type=\"AmbientLight\";this.castShadow=void 0};\nTHREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a,b);this.type=\"DirectionalLight\";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.shadow=new THREE.DirectionalLightShadow};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;\nTHREE.DirectionalLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this};THREE.DirectionalLightShadow=function(a){THREE.LightShadow.call(this,new THREE.OrthographicCamera(-5,5,5,-5,.5,500))};THREE.DirectionalLightShadow.prototype=Object.create(THREE.LightShadow.prototype);THREE.DirectionalLightShadow.prototype.constructor=THREE.DirectionalLightShadow;\nTHREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a,c);this.type=\"HemisphereLight\";this.castShadow=void 0;this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(b)};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;THREE.HemisphereLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this};\nTHREE.PointLight=function(a,b,c,d){THREE.Light.call(this,a,b);this.type=\"PointLight\";this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,.5,500))};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;Object.defineProperty(THREE.PointLight.prototype,\"power\",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=a/(4*Math.PI)}});\nTHREE.PointLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this};THREE.SpotLight=function(a,b,c,d,e,f){THREE.Light.call(this,a,b);this.type=\"SpotLight\";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new THREE.SpotLightShadow};\nTHREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;Object.defineProperty(THREE.SpotLight.prototype,\"power\",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}});THREE.SpotLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this};\nTHREE.SpotLightShadow=function(){THREE.LightShadow.call(this,new THREE.PerspectiveCamera(50,1,.5,500))};THREE.SpotLightShadow.prototype=Object.create(THREE.LightShadow.prototype);THREE.SpotLightShadow.prototype.constructor=THREE.SpotLightShadow;THREE.SpotLightShadow.prototype.update=function(a){var b=2*THREE.Math.RAD2DEG*a.angle,c=this.mapSize.width/this.mapSize.height;a=a.distance||500;var d=this.camera;if(b!==d.fov||c!==d.aspect||a!==d.far)d.fov=b,d.aspect=c,d.far=a,d.updateProjectionMatrix()};\nTHREE.AudioLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.AudioLoader.prototype={constructor:THREE.AudioLoader,load:function(a,b,c,d){var e=new THREE.XHRLoader(this.manager);e.setResponseType(\"arraybuffer\");e.load(a,function(a){THREE.AudioContext.decodeAudioData(a,function(a){b(a)})},c,d)}};\nTHREE.Cache={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};THREE.Loader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\nTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(a){a=a.split(\"/\");if(1===a.length)return\"./\";a.pop();return a.join(\"/\")+\"/\"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a,b,c;return function(d,e,f){function g(a,c,d,g,k){a=e+a;var l=THREE.Loader.Handlers.get(a);null!==l?a=l.load(a):(b.setCrossOrigin(f),a=b.load(a));void 0!==c&&(a.repeat.fromArray(c),1!==c[0]&&(a.wrapS=\nTHREE.RepeatWrapping),1!==c[1]&&(a.wrapT=THREE.RepeatWrapping));void 0!==d&&a.offset.fromArray(d);void 0!==g&&(\"repeat\"===g[0]&&(a.wrapS=THREE.RepeatWrapping),\"mirror\"===g[0]&&(a.wrapS=THREE.MirroredRepeatWrapping),\"repeat\"===g[1]&&(a.wrapT=THREE.RepeatWrapping),\"mirror\"===g[1]&&(a.wrapT=THREE.MirroredRepeatWrapping));void 0!==k&&(a.anisotropy=k);c=THREE.Math.generateUUID();h[c]=a;return c}void 0===a&&(a=new THREE.Color);void 0===b&&(b=new THREE.TextureLoader);void 0===c&&(c=new THREE.MaterialLoader);\nvar h={},k={uuid:THREE.Math.generateUUID(),type:\"MeshLambertMaterial\"},l;for(l in d){var n=d[l];switch(l){case \"DbgColor\":case \"DbgIndex\":case \"opticalDensity\":case \"illumination\":break;case \"DbgName\":k.name=n;break;case \"blending\":k.blending=THREE[n];break;case \"colorAmbient\":case \"mapAmbient\":console.warn(\"THREE.Loader.createMaterial:\",l,\"is no longer supported.\");break;case \"colorDiffuse\":k.color=a.fromArray(n).getHex();break;case \"colorSpecular\":k.specular=a.fromArray(n).getHex();break;case \"colorEmissive\":k.emissive=\na.fromArray(n).getHex();break;case \"specularCoef\":k.shininess=n;break;case \"shading\":\"basic\"===n.toLowerCase()&&(k.type=\"MeshBasicMaterial\");\"phong\"===n.toLowerCase()&&(k.type=\"MeshPhongMaterial\");break;case \"mapDiffuse\":k.map=g(n,d.mapDiffuseRepeat,d.mapDiffuseOffset,d.mapDiffuseWrap,d.mapDiffuseAnisotropy);break;case \"mapDiffuseRepeat\":case \"mapDiffuseOffset\":case \"mapDiffuseWrap\":case \"mapDiffuseAnisotropy\":break;case \"mapLight\":k.lightMap=g(n,d.mapLightRepeat,d.mapLightOffset,d.mapLightWrap,d.mapLightAnisotropy);\nbreak;case \"mapLightRepeat\":case \"mapLightOffset\":case \"mapLightWrap\":case \"mapLightAnisotropy\":break;case \"mapAO\":k.aoMap=g(n,d.mapAORepeat,d.mapAOOffset,d.mapAOWrap,d.mapAOAnisotropy);break;case \"mapAORepeat\":case \"mapAOOffset\":case \"mapAOWrap\":case \"mapAOAnisotropy\":break;case \"mapBump\":k.bumpMap=g(n,d.mapBumpRepeat,d.mapBumpOffset,d.mapBumpWrap,d.mapBumpAnisotropy);break;case \"mapBumpScale\":k.bumpScale=n;break;case \"mapBumpRepeat\":case \"mapBumpOffset\":case \"mapBumpWrap\":case \"mapBumpAnisotropy\":break;\ncase \"mapNormal\":k.normalMap=g(n,d.mapNormalRepeat,d.mapNormalOffset,d.mapNormalWrap,d.mapNormalAnisotropy);break;case \"mapNormalFactor\":k.normalScale=[n,n];break;case \"mapNormalRepeat\":case \"mapNormalOffset\":case \"mapNormalWrap\":case \"mapNormalAnisotropy\":break;case \"mapSpecular\":k.specularMap=g(n,d.mapSpecularRepeat,d.mapSpecularOffset,d.mapSpecularWrap,d.mapSpecularAnisotropy);break;case \"mapSpecularRepeat\":case \"mapSpecularOffset\":case \"mapSpecularWrap\":case \"mapSpecularAnisotropy\":break;case \"mapAlpha\":k.alphaMap=\ng(n,d.mapAlphaRepeat,d.mapAlphaOffset,d.mapAlphaWrap,d.mapAlphaAnisotropy);break;case \"mapAlphaRepeat\":case \"mapAlphaOffset\":case \"mapAlphaWrap\":case \"mapAlphaAnisotropy\":break;case \"flipSided\":k.side=THREE.BackSide;break;case \"doubleSided\":k.side=THREE.DoubleSide;break;case \"transparency\":console.warn(\"THREE.Loader.createMaterial: transparency has been renamed to opacity\");k.opacity=n;break;case \"depthTest\":case \"depthWrite\":case \"colorWrite\":case \"opacity\":case \"reflectivity\":case \"transparent\":case \"visible\":case \"wireframe\":k[l]=\nn;break;case \"vertexColors\":!0===n&&(k.vertexColors=THREE.VertexColors);\"face\"===n&&(k.vertexColors=THREE.FaceColors);break;default:console.error(\"THREE.Loader.createMaterial: Unsupported\",l,n)}}\"MeshBasicMaterial\"===k.type&&delete k.emissive;\"MeshPhongMaterial\"!==k.type&&delete k.specular;1>k.opacity&&(k.transparent=!0);c.setTextures(h);return c.parse(k)}}()};\nTHREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){void 0!==this.path&&(a=this.path+a);var e=this,f=THREE.Cache.get(a);if(void 0!==f)return b&&setTimeout(function(){b(f)},0),f;var g=new XMLHttpRequest;g.overrideMimeType(\"text/plain\");g.open(\"GET\",a,!0);g.addEventListener(\"load\",function(c){var f=c.target.response;THREE.Cache.add(a,f);200===this.status?(b&&b(f),e.manager.itemEnd(a)):0===this.status?(console.warn(\"THREE.XHRLoader: HTTP Status 0 received.\"),b&&b(f),e.manager.itemEnd(a)):\n(d&&d(c),e.manager.itemError(a))},!1);void 0!==c&&g.addEventListener(\"progress\",function(a){c(a)},!1);g.addEventListener(\"error\",function(b){d&&d(b);e.manager.itemError(a)},!1);void 0!==this.responseType&&(g.responseType=this.responseType);void 0!==this.withCredentials&&(g.withCredentials=this.withCredentials);g.send(null);e.manager.itemStart(a);return g},setPath:function(a){this.path=a},setResponseType:function(a){this.responseType=a},setWithCredentials:function(a){this.withCredentials=a}};\nTHREE.FontLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.FontLoader.prototype={constructor:THREE.FontLoader,load:function(a,b,c,d){(new THREE.XHRLoader(this.manager)).load(a,function(a){b(new THREE.Font(JSON.parse(a.substring(65,a.length-2))))},c,d)}};THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){void 0!==this.path&&(a=this.path+a);var e=this,f=THREE.Cache.get(a);if(void 0!==f)return e.manager.itemStart(a),b?setTimeout(function(){b(f);e.manager.itemEnd(a)},0):e.manager.itemEnd(a),f;var g=document.createElement(\"img\");g.addEventListener(\"load\",function(c){THREE.Cache.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1);void 0!==c&&g.addEventListener(\"progress\",function(a){c(a)},!1);g.addEventListener(\"error\",function(b){d&&\nd(b);e.manager.itemError(a)},!1);void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin);e.manager.itemStart(a);g.src=a;return g},setCrossOrigin:function(a){this.crossOrigin=a},setPath:function(a){this.path=a}};THREE.JSONLoader=function(a){\"boolean\"===typeof a&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),a=void 0);this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.withCredentials=!1};\nTHREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){void 0===this._statusDomElement&&(this._statusDomElement=document.createElement(\"div\"));console.warn(\"THREE.JSONLoader: .statusDomElement has been removed.\");return this._statusDomElement},load:function(a,b,c,d){var e=this,f=this.texturePath&&\"string\"===typeof this.texturePath?this.texturePath:THREE.Loader.prototype.extractUrlBase(a),g=new THREE.XHRLoader(this.manager);g.setWithCredentials(this.withCredentials);g.load(a,\nfunction(c){c=JSON.parse(c);var d=c.metadata;if(void 0!==d&&(d=d.type,void 0!==d)){if(\"object\"===d.toLowerCase()){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.ObjectLoader instead.\");return}if(\"scene\"===d.toLowerCase()){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.SceneLoader instead.\");return}}c=e.parse(c,f);b(c.geometry,c.materials)},c,d)},setTexturePath:function(a){this.texturePath=a},parse:function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/\na.scale:1;(function(b){var d,g,h,k,l,n,p,m,q,r,s,u,v,x=a.faces;n=a.vertices;var A=a.normals,w=a.colors,B=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&B++;for(d=0;d<B;d++)c.faceVertexUvs[d]=[]}k=0;for(l=n.length;k<l;)d=new THREE.Vector3,d.x=n[k++]*b,d.y=n[k++]*b,d.z=n[k++]*b,c.vertices.push(d);k=0;for(l=x.length;k<l;)if(b=x[k++],q=b&1,h=b&2,d=b&8,p=b&16,r=b&32,n=b&64,b&=128,q){q=new THREE.Face3;q.a=x[k];q.b=x[k+1];q.c=x[k+3];s=new THREE.Face3;s.a=x[k+1];s.b=x[k+2];s.c=x[k+3];k+=\n4;h&&(h=x[k++],q.materialIndex=h,s.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<B;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4>g;g++)m=x[k++],v=u[2*m],m=u[2*m+1],v=new THREE.Vector2(v,m),2!==g&&c.faceVertexUvs[d][h].push(v),0!==g&&c.faceVertexUvs[d][h+1].push(v);p&&(p=3*x[k++],q.normal.set(A[p++],A[p++],A[p]),s.normal.copy(q.normal));if(r)for(d=0;4>d;d++)p=3*x[k++],r=new THREE.Vector3(A[p++],A[p++],A[p]),2!==d&&q.vertexNormals.push(r),0!==d&&s.vertexNormals.push(r);\nn&&(n=x[k++],n=w[n],q.color.setHex(n),s.color.setHex(n));if(b)for(d=0;4>d;d++)n=x[k++],n=w[n],2!==d&&q.vertexColors.push(new THREE.Color(n)),0!==d&&s.vertexColors.push(new THREE.Color(n));c.faces.push(q);c.faces.push(s)}else{q=new THREE.Face3;q.a=x[k++];q.b=x[k++];q.c=x[k++];h&&(h=x[k++],q.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<B;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],g=0;3>g;g++)m=x[k++],v=u[2*m],m=u[2*m+1],v=new THREE.Vector2(v,m),c.faceVertexUvs[d][h].push(v);p&&(p=3*x[k++],q.normal.set(A[p++],\nA[p++],A[p]));if(r)for(d=0;3>d;d++)p=3*x[k++],r=new THREE.Vector3(A[p++],A[p++],A[p]),q.vertexNormals.push(r);n&&(n=x[k++],q.color.setHex(w[n]));if(b)for(d=0;3>d;d++)n=x[k++],q.vertexColors.push(new THREE.Color(w[n]));c.faces.push(q)}})(d);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinWeights.push(new THREE.Vector4(a.skinWeights[d],1<b?a.skinWeights[d+1]:0,2<b?a.skinWeights[d+2]:0,3<b?a.skinWeights[d+3]:\n0));if(a.skinIndices)for(d=0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new THREE.Vector4(a.skinIndices[d],1<b?a.skinIndices[d+1]:0,2<b?a.skinIndices[d+2]:0,3<b?a.skinIndices[d+3]:0));c.bones=a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+c.vertices.length+\"), skinIndices (\"+c.skinIndices.length+\"), and skinWeights (\"+c.skinWeights.length+\") should match.\")})();(function(b){if(void 0!==\na.morphTargets)for(var d=0,g=a.morphTargets.length;d<g;d++){c.morphTargets[d]={};c.morphTargets[d].name=a.morphTargets[d].name;c.morphTargets[d].vertices=[];for(var h=c.morphTargets[d].vertices,k=a.morphTargets[d].vertices,l=0,n=k.length;l<n;l+=3){var p=new THREE.Vector3;p.x=k[l]*b;p.y=k[l+1]*b;p.z=k[l+2]*b;h.push(p)}}if(void 0!==a.morphColors&&0<a.morphColors.length)for(console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.'),b=c.faces,h=a.morphColors[0].colors,\nd=0,g=b.length;d<g;d++)b[d].color.fromArray(h,3*d)})(d);(function(){var b=[],d=[];void 0!==a.animation&&d.push(a.animation);void 0!==a.animations&&(a.animations.length?d=d.concat(a.animations):d.push(a.animations));for(var g=0;g<d.length;g++){var h=THREE.AnimationClip.parseAnimation(d[g],c.bones);h&&b.push(h)}c.morphTargets&&(d=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(c.morphTargets,10),b=b.concat(d));0<b.length&&(c.animations=b)})();c.computeFaceNormals();c.computeBoundingSphere();\nif(void 0===a.materials||0===a.materials.length)return{geometry:c};d=THREE.Loader.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:d}}};\nTHREE.LoadingManager=function(a,b,c){var d=this,e=!1,f=0,g=0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,f,g);if(f===g&&(e=!1,void 0!==d.onLoad))d.onLoad()};this.itemError=function(a){if(void 0!==d.onError)d.onError(a)}};THREE.DefaultLoadingManager=new THREE.LoadingManager;\nTHREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},parse:function(a){var b=new THREE.BufferGeometry,c=a.data.index,d={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};void 0!==c&&(c=\nnew d[c.type](c.array),b.setIndex(new THREE.BufferAttribute(c,1)));var e=a.data.attributes,f;for(f in e){var g=e[f],c=new d[g.type](g.array);b.addAttribute(f,new THREE.BufferAttribute(c,g.itemSize,g.normalized))}d=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==d)for(f=0,c=d.length;f!==c;++f)e=d[f],b.addGroup(e.start,e.count,e.materialIndex);a=a.data.boundingSphere;void 0!==a&&(d=new THREE.Vector3,void 0!==a.center&&d.fromArray(a.center),b.boundingSphere=new THREE.Sphere(d,a.radius));\nreturn b}};THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.textures={}};\nTHREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setTextures:function(a){this.textures=a},getTexture:function(a){var b=this.textures;void 0===b[a]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",a);return b[a]},parse:function(a){var b=new THREE[a.type];void 0!==a.uuid&&(b.uuid=a.uuid);void 0!==a.name&&(b.name=a.name);void 0!==a.color&&b.color.setHex(a.color);\nvoid 0!==a.roughness&&(b.roughness=a.roughness);void 0!==a.metalness&&(b.metalness=a.metalness);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&(b.shininess=a.shininess);void 0!==a.uniforms&&(b.uniforms=a.uniforms);void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.shading&&(b.shading=a.shading);\nvoid 0!==a.blending&&(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.alphaTest&&(b.alphaTest=a.alphaTest);void 0!==a.depthTest&&(b.depthTest=a.depthTest);void 0!==a.depthWrite&&(b.depthWrite=a.depthWrite);void 0!==a.colorWrite&&(b.colorWrite=a.colorWrite);void 0!==a.wireframe&&(b.wireframe=a.wireframe);void 0!==a.wireframeLinewidth&&(b.wireframeLinewidth=a.wireframeLinewidth);void 0!==\na.size&&(b.size=a.size);void 0!==a.sizeAttenuation&&(b.sizeAttenuation=a.sizeAttenuation);void 0!==a.map&&(b.map=this.getTexture(a.map));void 0!==a.alphaMap&&(b.alphaMap=this.getTexture(a.alphaMap),b.transparent=!0);void 0!==a.bumpMap&&(b.bumpMap=this.getTexture(a.bumpMap));void 0!==a.bumpScale&&(b.bumpScale=a.bumpScale);void 0!==a.normalMap&&(b.normalMap=this.getTexture(a.normalMap));if(void 0!==a.normalScale){var c=a.normalScale;!1===Array.isArray(c)&&(c=[c,c]);b.normalScale=(new THREE.Vector2).fromArray(c)}void 0!==\na.displacementMap&&(b.displacementMap=this.getTexture(a.displacementMap));void 0!==a.displacementScale&&(b.displacementScale=a.displacementScale);void 0!==a.displacementBias&&(b.displacementBias=a.displacementBias);void 0!==a.roughnessMap&&(b.roughnessMap=this.getTexture(a.roughnessMap));void 0!==a.metalnessMap&&(b.metalnessMap=this.getTexture(a.metalnessMap));void 0!==a.emissiveMap&&(b.emissiveMap=this.getTexture(a.emissiveMap));void 0!==a.emissiveIntensity&&(b.emissiveIntensity=a.emissiveIntensity);\nvoid 0!==a.specularMap&&(b.specularMap=this.getTexture(a.specularMap));void 0!==a.envMap&&(b.envMap=this.getTexture(a.envMap),b.combine=THREE.MultiplyOperation);a.reflectivity&&(b.reflectivity=a.reflectivity);void 0!==a.lightMap&&(b.lightMap=this.getTexture(a.lightMap));void 0!==a.lightMapIntensity&&(b.lightMapIntensity=a.lightMapIntensity);void 0!==a.aoMap&&(b.aoMap=this.getTexture(a.aoMap));void 0!==a.aoMapIntensity&&(b.aoMapIntensity=a.aoMapIntensity);if(void 0!==a.materials)for(var c=0,d=a.materials.length;c<\nd;c++)b.materials.push(this.parse(a.materials[c]));return b}};THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.texturePath=\"\"};\nTHREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){\"\"===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf(\"/\")+1));var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){e.parse(JSON.parse(a),b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==b&&b(e)}),d=this.parseTextures(a.textures,\nd),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case \"PlaneGeometry\":case \"PlaneBufferGeometry\":g=new THREE[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case \"BoxGeometry\":case \"BoxBufferGeometry\":case \"CubeGeometry\":g=\nnew THREE[h.type](h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case \"CircleGeometry\":case \"CircleBufferGeometry\":g=new THREE[h.type](h.radius,h.segments,h.thetaStart,h.thetaLength);break;case \"CylinderGeometry\":case \"CylinderBufferGeometry\":g=new THREE[h.type](h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case \"SphereGeometry\":case \"SphereBufferGeometry\":g=new THREE[h.type](h.radius,h.widthSegments,\nh.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case \"DodecahedronGeometry\":g=new THREE.DodecahedronGeometry(h.radius,h.detail);break;case \"IcosahedronGeometry\":g=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case \"OctahedronGeometry\":g=new THREE.OctahedronGeometry(h.radius,h.detail);break;case \"TetrahedronGeometry\":g=new THREE.TetrahedronGeometry(h.radius,h.detail);break;case \"RingGeometry\":case \"RingBufferGeometry\":g=new THREE[h.type](h.innerRadius,h.outerRadius,\nh.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);break;case \"TorusGeometry\":case \"TorusBufferGeometry\":g=new THREE[h.type](h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case \"TorusKnotGeometry\":case \"TorusKnotBufferGeometry\":g=new THREE[h.type](h.radius,h.tube,h.tubularSegments,h.radialSegments,h.p,h.q);break;case \"LatheGeometry\":case \"LatheBufferGeometry\":g=new THREE[h.type](h.points,h.segments,h.phiStart,h.phiLength);break;case \"BufferGeometry\":g=d.parse(h);break;case \"Geometry\":g=\nc.parse(h.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+h.type+'\"');continue}g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);b[h.uuid]=g}return b},parseMaterials:function(a,b){var c={};if(void 0!==a){var d=new THREE.MaterialLoader;d.setTextures(b);for(var e=0,f=a.length;e<f;e++){var g=d.parse(a[e]);c[g.uuid]=g}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=THREE.AnimationClip.parse(a[c]);b.push(d)}return b},\nparseImages:function(a,b){function c(a){d.manager.itemStart(a);return g.load(a,function(){d.manager.itemEnd(a)})}var d=this,e={};if(void 0!==a&&0<a.length){var f=new THREE.LoadingManager(b),g=new THREE.ImageLoader(f);g.setCrossOrigin(this.crossOrigin);for(var f=0,h=a.length;f<h;f++){var k=a[f],l=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(k.url)?k.url:d.texturePath+k.url;e[k.uuid]=c(l)}}return e},parseTextures:function(a,b){function c(a){if(\"number\"===typeof a)return a;console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",\na);return THREE[a]}var d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',g.uuid);void 0===b[g.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",g.image);var h=new THREE.Texture(b[g.image]);h.needsUpdate=!0;h.uuid=g.uuid;void 0!==g.name&&(h.name=g.name);void 0!==g.mapping&&(h.mapping=c(g.mapping));void 0!==g.offset&&(h.offset=new THREE.Vector2(g.offset[0],g.offset[1]));void 0!==g.repeat&&(h.repeat=new THREE.Vector2(g.repeat[0],\ng.repeat[1]));void 0!==g.minFilter&&(h.minFilter=c(g.minFilter));void 0!==g.magFilter&&(h.magFilter=c(g.magFilter));void 0!==g.anisotropy&&(h.anisotropy=g.anisotropy);Array.isArray(g.wrap)&&(h.wrapS=c(g.wrap[0]),h.wrapT=c(g.wrap[1]));d[g.uuid]=h}return d},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){function e(a){void 0===c[a]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",a);return c[a]}function f(a){if(void 0!==a)return void 0===d[a]&&console.warn(\"THREE.ObjectLoader: Undefined material\",\na),d[a]}var g;switch(b.type){case \"Scene\":g=new THREE.Scene;break;case \"PerspectiveCamera\":g=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);void 0!==b.focus&&(g.focus=b.focus);void 0!==b.zoom&&(g.zoom=b.zoom);void 0!==b.filmGauge&&(g.filmGauge=b.filmGauge);void 0!==b.filmOffset&&(g.filmOffset=b.filmOffset);void 0!==b.view&&(g.view=Object.assign({},b.view));break;case \"OrthographicCamera\":g=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case \"AmbientLight\":g=\nnew THREE.AmbientLight(b.color,b.intensity);break;case \"DirectionalLight\":g=new THREE.DirectionalLight(b.color,b.intensity);break;case \"PointLight\":g=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case \"SpotLight\":g=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.penumbra,b.decay);break;case \"HemisphereLight\":g=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case \"Mesh\":g=e(b.geometry);var h=f(b.material);g=g.bones&&0<g.bones.length?new THREE.SkinnedMesh(g,\nh):new THREE.Mesh(g,h);break;case \"LOD\":g=new THREE.LOD;break;case \"Line\":g=new THREE.Line(e(b.geometry),f(b.material),b.mode);break;case \"PointCloud\":case \"Points\":g=new THREE.Points(e(b.geometry),f(b.material));break;case \"Sprite\":g=new THREE.Sprite(f(b.material));break;case \"Group\":g=new THREE.Group;break;default:g=new THREE.Object3D}g.uuid=b.uuid;void 0!==b.name&&(g.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(g.position,g.quaternion,g.scale)):(void 0!==b.position&&g.position.fromArray(b.position),\nvoid 0!==b.rotation&&g.rotation.fromArray(b.rotation),void 0!==b.scale&&g.scale.fromArray(b.scale));void 0!==b.castShadow&&(g.castShadow=b.castShadow);void 0!==b.receiveShadow&&(g.receiveShadow=b.receiveShadow);void 0!==b.visible&&(g.visible=b.visible);void 0!==b.userData&&(g.userData=b.userData);if(void 0!==b.children)for(var k in b.children)g.add(this.parseObject(b.children[k],c,d));if(\"LOD\"===b.type)for(b=b.levels,h=0;h<b.length;h++){var l=b[h];k=g.getObjectByProperty(\"uuid\",l.object);void 0!==\nk&&g.addLevel(k,l.distance)}return g}}()};THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){var e=new THREE.Texture,f=new THREE.ImageLoader(this.manager);f.setCrossOrigin(this.crossOrigin);f.setPath(this.path);f.load(a,function(a){e.image=a;e.needsUpdate=!0;void 0!==b&&b(e)},c,d);return e},setCrossOrigin:function(a){this.crossOrigin=a},setPath:function(a){this.path=a}};\nTHREE.CubeTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(a,b,c,d){function e(c){g.load(a[c],function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new THREE.CubeTexture,g=new THREE.ImageLoader(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a},setPath:function(a){this.path=a}};\nTHREE.DataTextureLoader=THREE.BinaryTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this._parser=null};\nTHREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(a,b,c,d){var e=this,f=new THREE.DataTexture,g=new THREE.XHRLoader(this.manager);g.setResponseType(\"arraybuffer\");g.load(a,function(a){if(a=e._parser(a))void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping,f.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping,f.magFilter=void 0!==a.magFilter?\na.magFilter:THREE.LinearFilter,f.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter,f.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}};THREE.CompressedTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this._parser=null};\nTHREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,b,c,d){function e(e){k.load(a[e],function(a){a=f._parser(a,!0);g[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};l+=1;6===l&&(1===a.mipmapCount&&(h.minFilter=THREE.LinearFilter),h.format=a.format,h.needsUpdate=!0,b&&b(h))},c,d)}var f=this,g=[],h=new THREE.CompressedTexture;h.image=g;var k=new THREE.XHRLoader(this.manager);k.setPath(this.path);k.setResponseType(\"arraybuffer\");if(Array.isArray(a))for(var l=\n0,n=0,p=a.length;n<p;++n)e(n);else k.load(a,function(a){a=f._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length/a.mipmapCount,d=0;d<c;d++){g[d]={mipmaps:[]};for(var e=0;e<a.mipmapCount;e++)g[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+e]),g[d].format=a.format,g[d].width=a.width,g[d].height=a.height}else h.image.width=a.width,h.image.height=a.height,h.mipmaps=a.mipmaps;1===a.mipmapCount&&(h.minFilter=THREE.LinearFilter);h.format=a.format;h.needsUpdate=!0;b&&b(h)},c,d);return h},setPath:function(a){this.path=\na}};\nTHREE.Material=function(){Object.defineProperty(this,\"id\",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Material\";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.depthFunc=THREE.LessEqualDepth;this.depthWrite=this.depthTest=!0;\nthis.clippingPlanes=null;this.clipShadows=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.premultipliedAlpha=!1;this.overdraw=0;this._needsUpdate=this.visible=!0};\nTHREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn(\"THREE.Material: '\"+b+\"' parameter is undefined.\");else{var d=this[b];void 0===d?console.warn(\"THREE.\"+this.type+\": '\"+b+\"' is not a property of this material.\"):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):\nthis[b]=\"overdraw\"===b?Number(c):c}}},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a;c&&(a={textures:{},images:{}});var d={metadata:{version:4.4,type:\"Material\",generator:\"Material.toJSON\"}};d.uuid=this.uuid;d.type=this.type;\"\"!==this.name&&(d.name=this.name);this.color instanceof THREE.Color&&(d.color=this.color.getHex());.5!==this.roughness&&(d.roughness=this.roughness);.5!==this.metalness&&(d.metalness=this.metalness);this.emissive instanceof\nTHREE.Color&&(d.emissive=this.emissive.getHex());this.specular instanceof THREE.Color&&(d.specular=this.specular.getHex());void 0!==this.shininess&&(d.shininess=this.shininess);this.map instanceof THREE.Texture&&(d.map=this.map.toJSON(a).uuid);this.alphaMap instanceof THREE.Texture&&(d.alphaMap=this.alphaMap.toJSON(a).uuid);this.lightMap instanceof THREE.Texture&&(d.lightMap=this.lightMap.toJSON(a).uuid);this.bumpMap instanceof THREE.Texture&&(d.bumpMap=this.bumpMap.toJSON(a).uuid,d.bumpScale=this.bumpScale);\nthis.normalMap instanceof THREE.Texture&&(d.normalMap=this.normalMap.toJSON(a).uuid,d.normalScale=this.normalScale.toArray());this.displacementMap instanceof THREE.Texture&&(d.displacementMap=this.displacementMap.toJSON(a).uuid,d.displacementScale=this.displacementScale,d.displacementBias=this.displacementBias);this.roughnessMap instanceof THREE.Texture&&(d.roughnessMap=this.roughnessMap.toJSON(a).uuid);this.metalnessMap instanceof THREE.Texture&&(d.metalnessMap=this.metalnessMap.toJSON(a).uuid);\nthis.emissiveMap instanceof THREE.Texture&&(d.emissiveMap=this.emissiveMap.toJSON(a).uuid);this.specularMap instanceof THREE.Texture&&(d.specularMap=this.specularMap.toJSON(a).uuid);this.envMap instanceof THREE.Texture&&(d.envMap=this.envMap.toJSON(a).uuid,d.reflectivity=this.reflectivity);void 0!==this.size&&(d.size=this.size);void 0!==this.sizeAttenuation&&(d.sizeAttenuation=this.sizeAttenuation);void 0!==this.vertexColors&&this.vertexColors!==THREE.NoColors&&(d.vertexColors=this.vertexColors);\nvoid 0!==this.shading&&this.shading!==THREE.SmoothShading&&(d.shading=this.shading);void 0!==this.blending&&this.blending!==THREE.NormalBlending&&(d.blending=this.blending);void 0!==this.side&&this.side!==THREE.FrontSide&&(d.side=this.side);1>this.opacity&&(d.opacity=this.opacity);!0===this.transparent&&(d.transparent=this.transparent);0<this.alphaTest&&(d.alphaTest=this.alphaTest);!0===this.premultipliedAlpha&&(d.premultipliedAlpha=this.premultipliedAlpha);!0===this.wireframe&&(d.wireframe=this.wireframe);\n1<this.wireframeLinewidth&&(d.wireframeLinewidth=this.wireframeLinewidth);c&&(c=b(a.textures),a=b(a.images),0<c.length&&(d.textures=c),0<a.length&&(d.images=a));return d},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.side=a.side;this.opacity=a.opacity;this.transparent=a.transparent;this.blending=a.blending;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;\nthis.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.colorWrite=a.colorWrite;this.precision=a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.overdraw=a.overdraw;this.visible=a.visible;this.clipShadows=a.clipShadows;a=a.clippingPlanes;var b=null;if(null!==\na)for(var c=a.length,b=Array(c),d=0;d!==c;++d)b[d]=a[d].clone();this.clippingPlanes=b;return this},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;\nTHREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type=\"LineBasicMaterial\";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap=\"round\";this.blending=THREE.NormalBlending;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;\nTHREE.LineBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};\nTHREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type=\"LineDashedMaterial\";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.blending=THREE.NormalBlending;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;\nTHREE.LineDashedMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};\nTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type=\"MeshBasicMaterial\";this.color=new THREE.Color(16777215);this.aoMap=this.map=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=\nTHREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;\nTHREE.MeshBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;\nthis.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type=\"MeshDepthMaterial\";this.depthPacking=THREE.BasicDepthPacking;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};\nTHREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;\nTHREE.MeshDepthMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};\nTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type=\"MeshLambertMaterial\";this.color=new THREE.Color(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.blending=THREE.NormalBlending;this.wireframe=!1;this.wireframeLinewidth=\n1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;\nTHREE.MeshLambertMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=\na.refractionRatio;this.fog=a.fog;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type=\"MeshNormalMaterial\";this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};\nTHREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};\nTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type=\"MeshPhongMaterial\";this.color=new THREE.Color(16777215);this.specular=new THREE.Color(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=\n0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);\nTHREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;\nTHREE.MeshPhongMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);\nthis.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=\na.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};\nTHREE.MeshStandardMaterial=function(a){THREE.Material.call(this);this.defines={STANDARD:\"\"};this.type=\"MeshStandardMaterial\";this.color=new THREE.Color(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=\n1;this.displacementBias=0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshStandardMaterial.prototype=Object.create(THREE.Material.prototype);\nTHREE.MeshStandardMaterial.prototype.constructor=THREE.MeshStandardMaterial;\nTHREE.MeshStandardMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.defines={STANDARD:\"\"};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=\na.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.roughnessMap=a.roughnessMap;this.metalnessMap=a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;\nthis.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshPhysicalMaterial=function(a){THREE.MeshStandardMaterial.call(this);this.defines={PHYSICAL:\"\"};this.type=\"MeshPhysicalMaterial\";this.reflectivity=.5;this.setValues(a)};THREE.MeshPhysicalMaterial.prototype=Object.create(THREE.MeshStandardMaterial.prototype);THREE.MeshPhysicalMaterial.prototype.constructor=THREE.MeshPhysicalMaterial;\nTHREE.MeshPhysicalMaterial.prototype.copy=function(a){THREE.MeshStandardMaterial.prototype.copy.call(this,a);this.defines={PHYSICAL:\"\"};this.reflectivity=a.reflectivity;return this};THREE.MultiMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type=\"MultiMaterial\";this.materials=a instanceof Array?a:[];this.visible=!0};\nTHREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(a){for(var b={metadata:{version:4.2,type:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type,materials:[]},c=this.materials,d=0,e=c.length;d<e;d++){var f=c[d].toJSON(a);delete f.metadata;b.materials.push(f)}b.visible=this.visible;return b},clone:function(){for(var a=new this.constructor,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());a.visible=this.visible;return a}};\nTHREE.PointsMaterial=function(a){THREE.Material.call(this);this.type=\"PointsMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.blending=THREE.NormalBlending;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial;\nTHREE.PointsMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};\nTHREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type=\"ShaderMaterial\";this.defines={};this.uniforms={};this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.clipping=this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=\nthis.morphTargets=this.skinning=!1;this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(a))};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;\nTHREE.ShaderMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.defines=a.defines;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.fog=a.fog;this.lights=a.lights;this.clipping=a.clipping;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=\na.morphNormals;this.extensions=a.extensions;return this};THREE.ShaderMaterial.prototype.toJSON=function(a){a=THREE.Material.prototype.toJSON.call(this,a);a.uniforms=this.uniforms;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type=\"RawShaderMaterial\"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;\nTHREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type=\"SpriteMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;THREE.SpriteMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;this.fog=a.fog;return this};\nTHREE.Texture=function(a,b,c,d,e,f,g,h,k,l){Object.defineProperty(this,\"id\",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.sourceFile=this.name=\"\";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;\nthis.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==l?l:THREE.LinearEncoding;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;\nTHREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(a){!0===a&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=\na.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;this.encoding=a.encoding;return this},toJSON:function(a){if(void 0!==a.textures[this.uuid])return a.textures[this.uuid];var b={metadata:{version:4.4,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};\nif(void 0!==this.image){var c=this.image;void 0===c.uuid&&(c.uuid=THREE.Math.generateUUID());if(void 0===a.images[c.uuid]){var d=a.images,e=c.uuid,f=c.uuid,g;void 0!==c.toDataURL?g=c:(g=document.createElement(\"canvas\"),g.width=c.width,g.height=c.height,g.getContext(\"2d\").drawImage(c,0,0,c.width,c.height));g=2048<g.width||2048<g.height?g.toDataURL(\"image/jpeg\",.6):g.toDataURL(\"image/png\");d[e]={uuid:f,url:g}}b.image=c.uuid}return a.textures[this.uuid]=b},dispose:function(){this.dispatchEvent({type:\"dispose\"})},\ntransformUv:function(a){if(this.mapping===THREE.UVMapping){a.multiply(this.repeat);a.add(this.offset);if(0>a.x||1<a.x)switch(this.wrapS){case THREE.RepeatWrapping:a.x-=Math.floor(a.x);break;case THREE.ClampToEdgeWrapping:a.x=0>a.x?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x-=Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case THREE.RepeatWrapping:a.y-=Math.floor(a.y);break;case THREE.ClampToEdgeWrapping:a.y=0>a.y?0:1;break;case THREE.MirroredRepeatWrapping:1===\nMath.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y-=Math.floor(a.y)}this.flipY&&(a.y=1-a.y)}}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.DepthTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,null,d,e,f,g,h,THREE.DepthFormat,c,k);this.image={width:a,height:b};this.type=void 0!==c?c:THREE.UnsignedShortType;this.magFilter=void 0!==g?g:THREE.NearestFilter;this.minFilter=void 0!==h?h:THREE.NearestFilter;this.generateMipmaps=this.flipY=!1};\nTHREE.DepthTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DepthTexture.prototype.constructor=THREE.DepthTexture;THREE.CanvasTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.needsUpdate=!0};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;\nTHREE.CubeTexture=function(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];b=void 0!==b?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,a,b,c,d,e,f,g,h,k,l);this.flipY=!1};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;Object.defineProperty(THREE.CubeTexture.prototype,\"images\",{get:function(){return this.image},set:function(a){this.image=a}});\nTHREE.CompressedTexture=function(a,b,c,d,e,f,g,h,k,l,n,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,n,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;\nTHREE.DataTexture=function(a,b,c,d,e,f,g,h,k,l,n,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,n,p);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:THREE.NearestFilter;this.minFilter=void 0!==l?l:THREE.NearestFilter;this.generateMipmaps=this.flipY=!1};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;\nTHREE.VideoTexture=function(a,b,c,d,e,f,g,h,k){function l(){requestAnimationFrame(l);a.readyState>=a.HAVE_CURRENT_DATA&&(n.needsUpdate=!0)}THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var n=this;l()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type=\"Group\"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Group.prototype.constructor=THREE.Group;THREE.Points=function(a,b){THREE.Object3D.call(this);this.type=\"Points\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.PointsMaterial({color:16777215*Math.random()})};THREE.Points.prototype=Object.create(THREE.Object3D.prototype);THREE.Points.prototype.constructor=THREE.Points;\nTHREE.Points.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<n){var h=b.closestPointToPoint(a);h.applyMatrix4(k);var m=d.ray.origin.distanceTo(h);m<d.near||m>d.far||e.push({distance:m,distanceToRay:Math.sqrt(f),point:h.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,k=this.matrixWorld,l=d.params.Points.threshold;null===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);\nc.applyMatrix4(k);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(k);b.copy(d.ray).applyMatrix4(a);var l=l/((this.scale.x+this.scale.y+this.scale.z)/3),n=l*l,l=new THREE.Vector3;if(h instanceof THREE.BufferGeometry){var p=h.index,h=h.attributes.position.array;if(null!==p)for(var m=p.array,p=0,q=m.length;p<q;p++){var r=m[p];l.fromArray(h,3*r);f(l,r)}else for(p=0,m=h.length/3;p<m;p++)l.fromArray(h,3*p),f(l,p)}else for(l=h.vertices,p=0,m=l.length;p<m;p++)f(l[p],p)}}}();\nTHREE.Points.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};THREE.Line=function(a,b,c){if(1===c)return console.warn(\"THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.\"),new THREE.LineSegments(a,b);THREE.Object3D.call(this);this.type=\"Line\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()})};THREE.Line.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Line.prototype.constructor=THREE.Line;\nTHREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry,h=this.matrixWorld;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var k=new THREE.Vector3,l=new THREE.Vector3,h=new THREE.Vector3,n=new THREE.Vector3,p=this instanceof THREE.LineSegments?2:1;if(g instanceof THREE.BufferGeometry){var m=\ng.index,q=g.attributes.position.array;if(null!==m)for(var m=m.array,g=0,r=m.length-1;g<r;g+=p){var s=m[g+1];k.fromArray(q,3*m[g]);l.fromArray(q,3*s);s=b.distanceSqToSegment(k,l,n,h);s>f||(n.applyMatrix4(this.matrixWorld),s=d.ray.origin.distanceTo(n),s<d.near||s>d.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else for(g=0,r=q.length/3-1;g<r;g+=p)k.fromArray(q,3*g),l.fromArray(q,3*g+3),s=b.distanceSqToSegment(k,l,n,h),s>f||(n.applyMatrix4(this.matrixWorld),\ns=d.ray.origin.distanceTo(n),s<d.near||s>d.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g instanceof THREE.Geometry)for(k=g.vertices,l=k.length,g=0;g<l-1;g+=p)s=b.distanceSqToSegment(k[g],k[g+1],n,h),s>f||(n.applyMatrix4(this.matrixWorld),s=d.ray.origin.distanceTo(n),s<d.near||s>d.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}();\nTHREE.Line.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};THREE.LineStrip=0;THREE.LinePieces=1;THREE.LineSegments=function(a,b){THREE.Line.call(this,a,b);this.type=\"LineSegments\"};THREE.LineSegments.prototype=Object.create(THREE.Line.prototype);THREE.LineSegments.prototype.constructor=THREE.LineSegments;\nTHREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type=\"Mesh\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.drawMode=THREE.TrianglesDrawMode;this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.setDrawMode=function(a){this.drawMode=a};\nTHREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};\nTHREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.warn(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0};\nTHREE.Mesh.prototype.raycast=function(){function a(a,b,c,d,e,f,g){THREE.Triangle.barycoordFromPoint(a,b,c,d,s);e.multiplyScalar(s.x);f.multiplyScalar(s.y);g.multiplyScalar(s.z);e.add(f).add(g);return e.clone()}function b(a,b,c,d,e,f,g){var h=a.material;if(null===(h.side===THREE.BackSide?c.intersectTriangle(f,e,d,!0,g):c.intersectTriangle(d,e,f,h.side!==THREE.DoubleSide,g)))return null;v.copy(g);v.applyMatrix4(a.matrixWorld);c=b.ray.origin.distanceTo(v);return c<b.near||c>b.far?null:{distance:c,point:v.clone(),\nobject:a}}function c(c,d,e,f,l,n,p,s){g.fromArray(f,3*n);h.fromArray(f,3*p);k.fromArray(f,3*s);if(c=b(c,d,e,g,h,k,u))l&&(m.fromArray(l,2*n),q.fromArray(l,2*p),r.fromArray(l,2*s),c.uv=a(u,g,h,k,m,q,r)),c.face=new THREE.Face3(n,p,s,THREE.Triangle.normal(g,h,k)),c.faceIndex=n;return c}var d=new THREE.Matrix4,e=new THREE.Ray,f=new THREE.Sphere,g=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector2,q=new THREE.Vector2,\nr=new THREE.Vector2,s=new THREE.Vector3,u=new THREE.Vector3,v=new THREE.Vector3;return function(s,v){var w=this.geometry,B=this.material,z=this.matrixWorld;if(void 0!==B&&(null===w.boundingSphere&&w.computeBoundingSphere(),f.copy(w.boundingSphere),f.applyMatrix4(z),!1!==s.ray.intersectsSphere(f)&&(d.getInverse(z),e.copy(s.ray).applyMatrix4(d),null===w.boundingBox||!1!==e.intersectsBox(w.boundingBox)))){var y,C;if(w instanceof THREE.BufferGeometry){var J,D,B=w.index,z=w.attributes,w=z.position.array;\nvoid 0!==z.uv&&(y=z.uv.array);if(null!==B)for(var z=B.array,H=0,G=z.length;H<G;H+=3){if(B=z[H],J=z[H+1],D=z[H+2],C=c(this,s,e,w,y,B,J,D))C.faceIndex=Math.floor(H/3),v.push(C)}else for(H=0,G=w.length;H<G;H+=9)if(B=H/3,J=B+1,D=B+2,C=c(this,s,e,w,y,B,J,D))C.index=B,v.push(C)}else if(w instanceof THREE.Geometry){var K,P,z=B instanceof THREE.MultiMaterial,H=!0===z?B.materials:null,G=w.vertices;J=w.faces;D=w.faceVertexUvs[0];0<D.length&&(y=D);for(var I=0,L=J.length;I<L;I++){var E=J[I];C=!0===z?H[E.materialIndex]:\nB;if(void 0!==C){D=G[E.a];K=G[E.b];P=G[E.c];if(!0===C.morphTargets){C=w.morphTargets;var M=this.morphTargetInfluences;g.set(0,0,0);h.set(0,0,0);k.set(0,0,0);for(var O=0,Q=C.length;O<Q;O++){var R=M[O];if(0!==R){var F=C[O].vertices;g.addScaledVector(l.subVectors(F[E.a],D),R);h.addScaledVector(n.subVectors(F[E.b],K),R);k.addScaledVector(p.subVectors(F[E.c],P),R)}}g.add(D);h.add(K);k.add(P);D=g;K=h;P=k}if(C=b(this,s,e,D,K,P,u))y&&(M=y[I],m.copy(M[0]),q.copy(M[1]),r.copy(M[2]),C.uv=a(u,D,K,P,m,q,r)),C.face=\nE,C.faceIndex=I,v.push(C)}}}}}}();THREE.Mesh.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};THREE.Bone=function(a){THREE.Object3D.call(this);this.type=\"Bone\";this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.skin=a.skin;return this};\nTHREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(a=Math.sqrt(4*this.bones.length),a=THREE.Math.nextPowerOfTwo(Math.ceil(a)),this.boneTextureHeight=this.boneTextureWidth=a=Math.max(a,4),this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)):\nthis.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn(\"THREE.Skeleton bonInverses is the wrong length.\"),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};\nTHREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}};\nTHREE.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};\nTHREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.toArray(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)};\nTHREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type=\"SkinnedMesh\";this.bindMode=\"attached\";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e=0,f=this.geometry.bones.length;e<f;++e)d=this.geometry.bones[e],b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.fromArray(d.pos),b.quaternion.fromArray(d.rotq),void 0!==d.scl&&b.scale.fromArray(d.scl);e=0;for(f=this.geometry.bones.length;e<f;++e)d=\nthis.geometry.bones[e],-1!==d.parent&&null!==d.parent&&void 0!==a[d.parent]?a[d.parent].add(a[e]):this.add(a[e])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c),this.matrixWorld)};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;\nTHREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinWeights.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0)}else if(this.geometry instanceof THREE.BufferGeometry)for(var b=new THREE.Vector4,d=this.geometry.attributes.skinWeight,a=0;a<d.count;a++)b.x=d.getX(a),b.y=d.getY(a),b.z=d.getZ(a),b.w=d.getW(a),c=1/b.lengthManhattan(),Infinity!==c?b.multiplyScalar(c):\nb.set(1,0,0,0),d.setXYZW(a,b.x,b.y,b.z,b.w)};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn(\"THREE.SkinnedMesh unrecognized bindMode: \"+this.bindMode)};THREE.SkinnedMesh.prototype.clone=function(){return(new this.constructor(this.geometry,this.material,this.useVertexTexture)).copy(this)};\nTHREE.LOD=function(){THREE.Object3D.call(this);this.type=\"LOD\";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=this.levels,d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a)};\nTHREE.LOD.prototype.getObjectForDistance=function(a){for(var b=this.levels,c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object};THREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}();\nTHREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){var d=this.levels;if(1<d.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=!0;for(var e=1,f=d.length;e<f;e++)if(c>=d[e].distance)d[e-1].object.visible=!1,d[e].object.visible=!0;else break;for(;e<f;e++)d[e].object.visible=!1}}}();\nTHREE.LOD.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a,!1);a=a.levels;for(var b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this};THREE.LOD.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.levels=[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a};\nTHREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),c=new Float32Array([0,0,1,0,1,1,0,1]),d=new THREE.BufferGeometry;d.setIndex(new THREE.BufferAttribute(a,1));d.addAttribute(\"position\",new THREE.BufferAttribute(b,3));d.addAttribute(\"uv\",new THREE.BufferAttribute(c,2));return function(a){THREE.Object3D.call(this);this.type=\"Sprite\";this.geometry=d;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceSqToPoint(a);d>this.scale.x*this.scale.y/4||c.push({distance:Math.sqrt(d),point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(){return(new this.constructor(this.material)).copy(this)};THREE.Particle=THREE.Sprite;\nTHREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;\nTHREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})};\nTHREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)};\nTHREE.LensFlare.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this};THREE.Scene=function(){THREE.Object3D.call(this);this.type=\"Scene\";this.overrideMaterial=this.fog=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;\nTHREE.Scene.prototype.copy=function(a,b){THREE.Object3D.prototype.copy.call(this,a,b);null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this};THREE.Fog=function(a,b,c){this.name=\"\";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};\nTHREE.FogExp2=function(a,b){this.name=\"\";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";THREE.ShaderChunk.alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";THREE.ShaderChunk.alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\nTHREE.ShaderChunk.aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\nTHREE.ShaderChunk.begin_vertex=\"\\nvec3 transformed = vec3( position );\\n\";THREE.ShaderChunk.beginnormal_vertex=\"\\nvec3 objectNormal = vec3( normal );\\n\";THREE.ShaderChunk.bsdfs=\"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\nTHREE.ShaderChunk.bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n#endif\\n\";THREE.ShaderChunk.clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\nTHREE.ShaderChunk.clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";THREE.ShaderChunk.clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";THREE.ShaderChunk.color_fragment=\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";THREE.ShaderChunk.color_pars_fragment=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\nTHREE.ShaderChunk.color_pars_vertex=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";THREE.ShaderChunk.color_vertex=\"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";THREE.ShaderChunk.common=\"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\nTHREE.ShaderChunk.cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\nconst float cubeUV_textureSize = 1024.0;\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\nfloat cubeUV_maxLods1 = log2(cubeUV_textureSize*0.25) - 1.0;\\nfloat cubeUV_rangeClamp = exp2((6.0 - 1.0) * 2.0);\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\nfloat cubeUV_maxLods2 = log2(cubeUV_textureSize*0.25) - 2.0;\\nconst float cubeUV_rcpTextureSize = 1.0 / cubeUV_textureSize;\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\nfloat cubeUV_maxLods3 = log2(cubeUV_textureSize*0.25) - 3.0;\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\nTHREE.ShaderChunk.defaultnormal_vertex=\"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";THREE.ShaderChunk.displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";THREE.ShaderChunk.displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\nTHREE.ShaderChunk.emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";THREE.ShaderChunk.emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";THREE.ShaderChunk.encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\nTHREE.ShaderChunk.encodings_fragment=\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";THREE.ShaderChunk.envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#else\\n\\t\\tfloat flipNormal = 1.0;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_fragment=\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\nTHREE.ShaderChunk.fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";THREE.ShaderChunk.lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";THREE.ShaderChunk.lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\nTHREE.ShaderChunk.lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.lights_pars=\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#else\\n\\t\\t\\tfloat flipNormal = 1.0;\\n\\t\\t#endif\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#else\\n\\t\\t\\tfloat flipNormal = 1.0;\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";THREE.ShaderChunk.lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\nTHREE.ShaderChunk.lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n\";THREE.ShaderChunk.lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t#endif\\n};\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\nTHREE.ShaderChunk.lights_template=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\";\nTHREE.ShaderChunk.logdepthbuf_fragment=\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";THREE.ShaderChunk.logdepthbuf_pars_fragment=\"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\nTHREE.ShaderChunk.logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\nTHREE.ShaderChunk.map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";THREE.ShaderChunk.map_particle_fragment=\"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";THREE.ShaderChunk.map_particle_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";THREE.ShaderChunk.metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\nTHREE.ShaderChunk.metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";THREE.ShaderChunk.morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\nTHREE.ShaderChunk.morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";THREE.ShaderChunk.morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.normal_fragment=\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\nTHREE.ShaderChunk.normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nvec4 packDepthToRGBA( const in float value ) {\\n\\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\\tvec4 res = mod( value * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\\tres -= res.xxyz * bit_mask;\\n\\treturn res;\\n}\\nfloat unpackRGBAToDepth( const in vec4 rgba ) {\\n\\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\\treturn dot( rgba, bitSh );\\n}\\nfloat viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\nTHREE.ShaderChunk.premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";THREE.ShaderChunk.project_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";THREE.ShaderChunk.roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\nTHREE.ShaderChunk.roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";THREE.ShaderChunk.shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\nTHREE.ShaderChunk.skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";THREE.ShaderChunk.skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";THREE.ShaderChunk.skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\nTHREE.ShaderChunk.specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";THREE.ShaderChunk.specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";THREE.ShaderChunk.tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\nTHREE.ShaderChunk.tonemapping_pars_fragment=\"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\nTHREE.ShaderChunk.uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";THREE.ShaderChunk.uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";THREE.ShaderChunk.uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";THREE.ShaderChunk.uv_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\nTHREE.ShaderChunk.uv_pars_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";THREE.ShaderChunk.uv_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\nTHREE.ShaderChunk.worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\";\nTHREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix3||e instanceof THREE.Matrix4||e instanceof THREE.Texture?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}};\nTHREE.UniformsLib={common:{diffuse:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"1f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:\"t\",value:null},alphaMap:{type:\"t\",value:null},envMap:{type:\"t\",value:null},flipEnvMap:{type:\"1f\",value:-1},reflectivity:{type:\"1f\",value:1},refractionRatio:{type:\"1f\",value:.98}},aomap:{aoMap:{type:\"t\",value:null},aoMapIntensity:{type:\"1f\",value:1}},lightmap:{lightMap:{type:\"t\",value:null},lightMapIntensity:{type:\"1f\",\nvalue:1}},emissivemap:{emissiveMap:{type:\"t\",value:null}},bumpmap:{bumpMap:{type:\"t\",value:null},bumpScale:{type:\"1f\",value:1}},normalmap:{normalMap:{type:\"t\",value:null},normalScale:{type:\"v2\",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:\"t\",value:null},displacementScale:{type:\"1f\",value:1},displacementBias:{type:\"1f\",value:0}},roughnessmap:{roughnessMap:{type:\"t\",value:null}},metalnessmap:{metalnessMap:{type:\"t\",value:null}},fog:{fogDensity:{type:\"1f\",value:2.5E-4},fogNear:{type:\"1f\",\nvalue:1},fogFar:{type:\"1f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:\"3fv\",value:[]},directionalLights:{type:\"sa\",value:[],properties:{direction:{type:\"v3\"},color:{type:\"c\"},shadow:{type:\"1i\"},shadowBias:{type:\"1f\"},shadowRadius:{type:\"1f\"},shadowMapSize:{type:\"v2\"}}},directionalShadowMap:{type:\"tv\",value:[]},directionalShadowMatrix:{type:\"m4v\",value:[]},spotLights:{type:\"sa\",value:[],properties:{color:{type:\"c\"},position:{type:\"v3\"},direction:{type:\"v3\"},\ndistance:{type:\"1f\"},coneCos:{type:\"1f\"},penumbraCos:{type:\"1f\"},decay:{type:\"1f\"},shadow:{type:\"1i\"},shadowBias:{type:\"1f\"},shadowRadius:{type:\"1f\"},shadowMapSize:{type:\"v2\"}}},spotShadowMap:{type:\"tv\",value:[]},spotShadowMatrix:{type:\"m4v\",value:[]},pointLights:{type:\"sa\",value:[],properties:{color:{type:\"c\"},position:{type:\"v3\"},decay:{type:\"1f\"},distance:{type:\"1f\"},shadow:{type:\"1i\"},shadowBias:{type:\"1f\"},shadowRadius:{type:\"1f\"},shadowMapSize:{type:\"v2\"}}},pointShadowMap:{type:\"tv\",value:[]},\npointShadowMatrix:{type:\"m4v\",value:[]},hemisphereLights:{type:\"sa\",value:[],properties:{direction:{type:\"v3\"},skyColor:{type:\"c\"},groundColor:{type:\"c\"}}}},points:{diffuse:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"1f\",value:1},size:{type:\"1f\",value:1},scale:{type:\"1f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)}}};THREE.ShaderChunk.cube_frag=\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\nTHREE.ShaderChunk.cube_vert=\"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";THREE.ShaderChunk.depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\nTHREE.ShaderChunk.depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\nTHREE.ShaderChunk.distanceRGBA_frag=\"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";THREE.ShaderChunk.distanceRGBA_vert=\"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\nTHREE.ShaderChunk.equirect_frag=\"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\nTHREE.ShaderChunk.equirect_vert=\"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";THREE.ShaderChunk.linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\nTHREE.ShaderChunk.meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.meshphysical_frag=\"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.meshphysical_vert=\"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.normal_frag=\"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";THREE.ShaderChunk.normal_vert=\"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\nTHREE.ShaderChunk.points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.meshbasic_vert,fragmentShader:THREE.ShaderChunk.meshbasic_frag},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:\"c\",value:new THREE.Color(0)}}]),vertexShader:THREE.ShaderChunk.meshlambert_vert,\nfragmentShader:THREE.ShaderChunk.meshlambert_frag},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:\"c\",value:new THREE.Color(0)},specular:{type:\"c\",value:new THREE.Color(1118481)},shininess:{type:\"1f\",value:30}}]),vertexShader:THREE.ShaderChunk.meshphong_vert,\nfragmentShader:THREE.ShaderChunk.meshphong_frag},standard:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.roughnessmap,THREE.UniformsLib.metalnessmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:\"c\",value:new THREE.Color(0)},roughness:{type:\"1f\",value:.5},metalness:{type:\"1f\",value:0},\nenvMapIntensity:{type:\"1f\",value:1}}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,fragmentShader:THREE.ShaderChunk.meshphysical_frag},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.points_vert,fragmentShader:THREE.ShaderChunk.points_frag},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:\"1f\",value:1},dashSize:{type:\"1f\",value:1},totalSize:{type:\"1f\",value:2}}]),\nvertexShader:THREE.ShaderChunk.linedashed_vert,fragmentShader:THREE.ShaderChunk.linedashed_frag},depth:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.displacementmap]),vertexShader:THREE.ShaderChunk.depth_vert,fragmentShader:THREE.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{type:\"1f\",value:1}},vertexShader:THREE.ShaderChunk.normal_vert,fragmentShader:THREE.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{type:\"t\",value:null},tFlip:{type:\"1f\",value:-1}},vertexShader:THREE.ShaderChunk.cube_vert,\nfragmentShader:THREE.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{type:\"t\",value:null},tFlip:{type:\"1f\",value:-1}},vertexShader:THREE.ShaderChunk.equirect_vert,fragmentShader:THREE.ShaderChunk.equirect_frag},distanceRGBA:{uniforms:{lightPos:{type:\"v3\",value:new THREE.Vector3}},vertexShader:THREE.ShaderChunk.distanceRGBA_vert,fragmentShader:THREE.ShaderChunk.distanceRGBA_frag}};\nTHREE.ShaderLib.physical={uniforms:THREE.UniformsUtils.merge([THREE.ShaderLib.standard.uniforms,{}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,fragmentShader:THREE.ShaderChunk.meshphysical_frag};\nTHREE.WebGLRenderer=function(a){function b(a,b,c,d){!0===O&&(a*=d,b*=d,c*=d);N.clearColor(a,b,c,d)}function c(){N.init();N.scissor(ua.copy(Fa).multiplyScalar($));N.viewport(la.copy(ma).multiplyScalar($));b(aa.r,aa.g,aa.b,ja)}function d(){ga=ca=null;na=\"\";oa=-1;N.reset()}function e(a){a.preventDefault();d();c();U.clear()}function f(a){a=a.target;a.removeEventListener(\"dispose\",f);a:{var b=U.get(a);if(a.image&&b.__image__webglTextureCube)t.deleteTexture(b.__image__webglTextureCube);else{if(void 0===\nb.__webglInit)break a;t.deleteTexture(b.__webglTexture)}U.delete(a)}ka.textures--}function g(a){a=a.target;a.removeEventListener(\"dispose\",g);var b=U.get(a),c=U.get(a.texture);if(a){void 0!==c.__webglTexture&&t.deleteTexture(c.__webglTexture);a.depthTexture&&a.depthTexture.dispose();if(a instanceof THREE.WebGLRenderTargetCube)for(c=0;6>c;c++)t.deleteFramebuffer(b.__webglFramebuffer[c]),b.__webglDepthbuffer&&t.deleteRenderbuffer(b.__webglDepthbuffer[c]);else t.deleteFramebuffer(b.__webglFramebuffer),\nb.__webglDepthbuffer&&t.deleteRenderbuffer(b.__webglDepthbuffer);U.delete(a.texture);U.delete(a)}ka.textures--}function h(a){a=a.target;a.removeEventListener(\"dispose\",h);k(a);U.delete(a)}function k(a){var b=U.get(a).program;a.program=void 0;void 0!==b&&pa.releaseProgram(b)}function l(a,b){return Math.abs(b[0])-Math.abs(a[0])}function n(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==\nb.z?a.z-b.z:a.id-b.id}function p(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function m(a,b,c,d,e){var f;c.transparent?(d=T,f=++X):(d=F,f=++Z);f=d[f];void 0!==f?(f.id=a.id,f.object=a,f.geometry=b,f.material=c,f.z=Y.z,f.group=e):(f={id:a.id,object:a,geometry:b,material:c,z:Y.z,group:e},d.push(f))}function q(a){var b=a.geometry;null===b.boundingSphere&&b.computeBoundingSphere();var c=Ma.copy(b.boundingSphere).applyMatrix4(a.matrixWorld);\nif(!Ha.intersectsSphere(c))return!1;if(0===da)return!0;a=W.clippingPlanes;var b=c.center,c=-c.radius,d=0;do if(a[d].distanceToPoint(b)<c)return!1;while(++d!==da);return!0}function r(a,b){if(!1!==a.visible){if(a.layers.test(b.layers))if(a instanceof THREE.Light)R.push(a);else if(a instanceof THREE.Sprite)!1!==a.frustumCulled&&!0!==q(a)||ha.push(a);else if(a instanceof THREE.LensFlare)qa.push(a);else if(a instanceof THREE.ImmediateRenderObject)!0===W.sortObjects&&(Y.setFromMatrixPosition(a.matrixWorld),\nY.applyProjection(va)),m(a,null,a.material,Y.z,null);else if(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points)if(a instanceof THREE.SkinnedMesh&&a.skeleton.update(),!1===a.frustumCulled||!0===q(a)){var c=a.material;if(!0===c.visible){!0===W.sortObjects&&(Y.setFromMatrixPosition(a.matrixWorld),Y.applyProjection(va));var d=ra.update(a);if(c instanceof THREE.MultiMaterial)for(var e=d.groups,f=c.materials,c=0,g=e.length;c<g;c++){var h=e[c],k=f[h.materialIndex];!0===k.visible&&\nm(a,d,k,Y.z,h)}else m(a,d,c,Y.z,null)}}d=a.children;c=0;for(g=d.length;c<g;c++)r(d[c],b)}}function s(a,b,c,d){for(var e=0,f=a.length;e<f;e++){var g=a[e],h=g.object,k=g.geometry,m=void 0===d?g.material:d,g=g.group;h.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,h.matrixWorld);h.normalMatrix.getNormalMatrix(h.modelViewMatrix);if(h instanceof THREE.ImmediateRenderObject){u(m);var l=v(b,c,m,h);na=\"\";h.render(function(a){W.renderBufferImmediate(a,l,m)})}else W.renderBufferDirect(b,c,k,m,h,g)}}\nfunction u(a){a.side!==THREE.DoubleSide?N.enable(t.CULL_FACE):N.disable(t.CULL_FACE);N.setFlipSided(a.side===THREE.BackSide);!0===a.transparent?N.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha):N.setBlending(THREE.NoBlending);N.setDepthFunc(a.depthFunc);N.setDepthTest(a.depthTest);N.setDepthWrite(a.depthWrite);N.setColorWrite(a.colorWrite);N.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}\nfunction v(a,b,c,d){wa=0;var e=U.get(c);if(xa){if(ya||a!==ga){var f=c.clippingPlanes,g=a===ga&&c.id===oa;if(!ya||null===f||0===f.length||sa&&!c.clipShadows)sa?A(null):w();else{var m=sa?0:ta,l=4*m,n=e.clippingState||null;fa.value=n;n=A(f,a,l,g);for(f=0;f!==l;++f)n[f]=za[f];e.clippingState=n;da+=m}}void 0!==e.numClippingPlanes&&e.numClippingPlanes!==da&&(c.needsUpdate=!0)}void 0===e.program&&(c.needsUpdate=!0);void 0!==e.lightsHash&&e.lightsHash!==S.hash&&(c.needsUpdate=!0);if(c.needsUpdate){a:{m=U.get(c);\nl=pa.getParameters(c,S,b,da,d);n=pa.getProgramCode(c,l);f=m.program;g=!0;if(void 0===f)c.addEventListener(\"dispose\",h);else if(f.code!==n)k(c);else if(void 0!==l.shaderID)break a;else g=!1;g&&(l.shaderID?(f=THREE.ShaderLib[l.shaderID],m.__webglShader={name:c.type,uniforms:THREE.UniformsUtils.clone(f.uniforms),vertexShader:f.vertexShader,fragmentShader:f.fragmentShader}):m.__webglShader={name:c.type,uniforms:c.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader},c.__webglShader=m.__webglShader,\nf=pa.acquireProgram(c,l,n),m.program=f,c.program=f);l=f.getAttributes();if(c.morphTargets)for(n=c.numSupportedMorphTargets=0;n<W.maxMorphTargets;n++)0<=l[\"morphTarget\"+n]&&c.numSupportedMorphTargets++;if(c.morphNormals)for(n=c.numSupportedMorphNormals=0;n<W.maxMorphNormals;n++)0<=l[\"morphNormal\"+n]&&c.numSupportedMorphNormals++;l=m.__webglShader.uniforms;(c instanceof THREE.ShaderMaterial||c instanceof THREE.RawShaderMaterial)&&!0!==c.clipping||(m.numClippingPlanes=da,l.clippingPlanes=fa);if(c instanceof\nTHREE.MeshPhongMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshStandardMaterial||c.lights)m.lightsHash=S.hash,l.ambientLightColor.value=S.ambient,l.directionalLights.value=S.directional,l.spotLights.value=S.spot,l.pointLights.value=S.point,l.hemisphereLights.value=S.hemi,l.directionalShadowMap.value=S.directionalShadowMap,l.directionalShadowMatrix.value=S.directionalShadowMatrix,l.spotShadowMap.value=S.spotShadowMap,l.spotShadowMatrix.value=S.spotShadowMatrix,l.pointShadowMap.value=\nS.pointShadowMap,l.pointShadowMatrix.value=S.pointShadowMatrix;n=m.program.getUniforms();n=THREE.WebGLUniforms.seqWithValue(n.seq,l);m.uniformsList=n;m.dynamicUniforms=THREE.WebGLUniforms.splitDynamic(n,l)}c.needsUpdate=!1}var q=!1,g=f=!1,m=e.program,n=m.getUniforms(),l=e.__webglShader.uniforms;m.id!==ca&&(t.useProgram(m.program),ca=m.id,g=f=q=!0);c.id!==oa&&(oa=c.id,f=!0);if(q||a!==ga){n.set(t,a,\"projectionMatrix\");ea.logarithmicDepthBuffer&&n.setValue(t,\"logDepthBufFC\",2/(Math.log(a.far+1)/Math.LN2));\na!==ga&&(ga=a,g=f=!0);if(c instanceof THREE.ShaderMaterial||c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshStandardMaterial||c.envMap)q=n.map.cameraPosition,void 0!==q&&q.setValue(t,Y.setFromMatrixPosition(a.matrixWorld));(c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshBasicMaterial||c instanceof THREE.MeshStandardMaterial||c instanceof THREE.ShaderMaterial||c.skinning)&&n.setValue(t,\"viewMatrix\",a.matrixWorldInverse);n.set(t,W,\"toneMappingExposure\");\nn.set(t,W,\"toneMappingWhitePoint\")}c.skinning&&(n.setOptional(t,d,\"bindMatrix\"),n.setOptional(t,d,\"bindMatrixInverse\"),q=d.skeleton)&&(ea.floatVertexTextures&&q.useVertexTexture?(n.set(t,q,\"boneTexture\"),n.set(t,q,\"boneTextureWidth\"),n.set(t,q,\"boneTextureHeight\")):n.setOptional(t,q,\"boneMatrices\"));if(f){if(c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshStandardMaterial||c.lights)f=g,l.ambientLightColor.needsUpdate=f,l.directionalLights.needsUpdate=\nf,l.pointLights.needsUpdate=f,l.spotLights.needsUpdate=f,l.hemisphereLights.needsUpdate=f;b&&c.fog&&(l.fogColor.value=b.color,b instanceof THREE.Fog?(l.fogNear.value=b.near,l.fogFar.value=b.far):b instanceof THREE.FogExp2&&(l.fogDensity.value=b.density));if(c instanceof THREE.MeshBasicMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshStandardMaterial||c instanceof THREE.MeshDepthMaterial){l.opacity.value=c.opacity;l.diffuse.value=c.color;\nc.emissive&&l.emissive.value.copy(c.emissive).multiplyScalar(c.emissiveIntensity);l.map.value=c.map;l.specularMap.value=c.specularMap;l.alphaMap.value=c.alphaMap;c.aoMap&&(l.aoMap.value=c.aoMap,l.aoMapIntensity.value=c.aoMapIntensity);var p;c.map?p=c.map:c.specularMap?p=c.specularMap:c.displacementMap?p=c.displacementMap:c.normalMap?p=c.normalMap:c.bumpMap?p=c.bumpMap:c.roughnessMap?p=c.roughnessMap:c.metalnessMap?p=c.metalnessMap:c.alphaMap?p=c.alphaMap:c.emissiveMap&&(p=c.emissiveMap);void 0!==\np&&(p instanceof THREE.WebGLRenderTarget&&(p=p.texture),b=p.offset,p=p.repeat,l.offsetRepeat.value.set(b.x,b.y,p.x,p.y));l.envMap.value=c.envMap;l.flipEnvMap.value=c.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;l.reflectivity.value=c.reflectivity;l.refractionRatio.value=c.refractionRatio}c instanceof THREE.LineBasicMaterial?(l.diffuse.value=c.color,l.opacity.value=c.opacity):c instanceof THREE.LineDashedMaterial?(l.diffuse.value=c.color,l.opacity.value=c.opacity,l.dashSize.value=c.dashSize,\nl.totalSize.value=c.dashSize+c.gapSize,l.scale.value=c.scale):c instanceof THREE.PointsMaterial?(l.diffuse.value=c.color,l.opacity.value=c.opacity,l.size.value=c.size*$,l.scale.value=.5*K.clientHeight,l.map.value=c.map,null!==c.map&&(p=c.map.offset,c=c.map.repeat,l.offsetRepeat.value.set(p.x,p.y,c.x,c.y))):c instanceof THREE.MeshLambertMaterial?(c.lightMap&&(l.lightMap.value=c.lightMap,l.lightMapIntensity.value=c.lightMapIntensity),c.emissiveMap&&(l.emissiveMap.value=c.emissiveMap)):c instanceof THREE.MeshPhongMaterial?\n(l.specular.value=c.specular,l.shininess.value=Math.max(c.shininess,1E-4),c.lightMap&&(l.lightMap.value=c.lightMap,l.lightMapIntensity.value=c.lightMapIntensity),c.emissiveMap&&(l.emissiveMap.value=c.emissiveMap),c.bumpMap&&(l.bumpMap.value=c.bumpMap,l.bumpScale.value=c.bumpScale),c.normalMap&&(l.normalMap.value=c.normalMap,l.normalScale.value.copy(c.normalScale)),c.displacementMap&&(l.displacementMap.value=c.displacementMap,l.displacementScale.value=c.displacementScale,l.displacementBias.value=c.displacementBias)):\nc instanceof THREE.MeshPhysicalMaterial?x(l,c):c instanceof THREE.MeshStandardMaterial?x(l,c):c instanceof THREE.MeshDepthMaterial?c.displacementMap&&(l.displacementMap.value=c.displacementMap,l.displacementScale.value=c.displacementScale,l.displacementBias.value=c.displacementBias):c instanceof THREE.MeshNormalMaterial&&(l.opacity.value=c.opacity);THREE.WebGLUniforms.upload(t,e.uniformsList,l,W)}n.set(t,d,\"modelViewMatrix\");n.set(t,d,\"normalMatrix\");n.setValue(t,\"modelMatrix\",d.matrixWorld);e=e.dynamicUniforms;\nnull!==e&&(THREE.WebGLUniforms.evalDynamic(e,l,d,a),THREE.WebGLUniforms.upload(t,e,l,W));return m}function x(a,b){a.roughness.value=b.roughness;a.metalness.value=b.metalness;b.roughnessMap&&(a.roughnessMap.value=b.roughnessMap);b.metalnessMap&&(a.metalnessMap.value=b.metalnessMap);b.lightMap&&(a.lightMap.value=b.lightMap,a.lightMapIntensity.value=b.lightMapIntensity);b.emissiveMap&&(a.emissiveMap.value=b.emissiveMap);b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale);b.normalMap&&\n(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale));b.displacementMap&&(a.displacementMap.value=b.displacementMap,a.displacementScale.value=b.displacementScale,a.displacementBias.value=b.displacementBias);b.envMap&&(a.envMapIntensity.value=b.envMapIntensity)}function A(a,b,c,d){var e=null!==a?a.length:0,f=null;if(0!==e){f=fa.value;if(!0!==d||null===f){var g=c+4*e;b=b.matrixWorldInverse;d=Na.getNormalMatrix(b);if(null===f||f.length<g)f=new Float32Array(g);for(g=0;g!==e;++g,c+=4){var h=\nOa.copy(a[g]).applyMatrix4(b,d);h.normal.toArray(f,c);f[c+3]=h.constant}}fa.value=f;fa.needsUpdate=!0}da=e;return f}function w(){fa.value!==za&&(fa.value=za,fa.needsUpdate=0<ta);da=ta}function B(a,b,c){c?(t.texParameteri(a,t.TEXTURE_WRAP_S,G(b.wrapS)),t.texParameteri(a,t.TEXTURE_WRAP_T,G(b.wrapT)),t.texParameteri(a,t.TEXTURE_MAG_FILTER,G(b.magFilter)),t.texParameteri(a,t.TEXTURE_MIN_FILTER,G(b.minFilter))):(t.texParameteri(a,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(a,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),\nb.wrapS===THREE.ClampToEdgeWrapping&&b.wrapT===THREE.ClampToEdgeWrapping||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\",b),t.texParameteri(a,t.TEXTURE_MAG_FILTER,H(b.magFilter)),t.texParameteri(a,t.TEXTURE_MIN_FILTER,H(b.minFilter)),b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\",\nb));!(c=V.get(\"EXT_texture_filter_anisotropic\"))||b.type===THREE.FloatType&&null===V.get(\"OES_texture_float_linear\")||b.type===THREE.HalfFloatType&&null===V.get(\"OES_texture_half_float_linear\")||!(1<b.anisotropy||U.get(b).__currentAnisotropy)||(t.texParameterf(a,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,W.getMaxAnisotropy())),U.get(b).__currentAnisotropy=b.anisotropy)}function z(a,b){a instanceof THREE.WebGLRenderTarget&&(a=a.texture);var c=U.get(a);if(0<a.version&&c.__version!==a.version){var d=\na.image;if(void 0===d)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\",a);else if(!1===d.complete)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\",a);else{d=a;void 0===c.__webglInit&&(c.__webglInit=!0,d.addEventListener(\"dispose\",f),c.__webglTexture=t.createTexture(),ka.textures++);N.activeTexture(t.TEXTURE0+b);N.bindTexture(t.TEXTURE_2D,c.__webglTexture);t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,d.flipY);t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\nd.premultiplyAlpha);t.pixelStorei(t.UNPACK_ALIGNMENT,d.unpackAlignment);var e=y(d.image,ea.maxTextureSize);if((d.wrapS!==THREE.ClampToEdgeWrapping||d.wrapT!==THREE.ClampToEdgeWrapping||d.minFilter!==THREE.NearestFilter&&d.minFilter!==THREE.LinearFilter)&&!1===C(e)){var g=e;if(g instanceof HTMLImageElement||g instanceof HTMLCanvasElement){var h=document.createElement(\"canvas\");h.width=THREE.Math.nearestPowerOfTwo(g.width);h.height=THREE.Math.nearestPowerOfTwo(g.height);h.getContext(\"2d\").drawImage(g,\n0,0,h.width,h.height);console.warn(\"THREE.WebGLRenderer: image is not power of two (\"+g.width+\"x\"+g.height+\"). Resized to \"+h.width+\"x\"+h.height,g);e=h}else e=g}var g=C(e),h=G(d.format),k=G(d.type);B(t.TEXTURE_2D,d,g);var m=d.mipmaps;if(d instanceof THREE.DepthTexture){m=t.DEPTH_COMPONENT;if(d.type===THREE.FloatType){if(!Ia)throw Error(\"Float Depth Texture only supported in WebGL2.0\");m=t.DEPTH_COMPONENT32F}else Ia&&(m=t.DEPTH_COMPONENT16);N.texImage2D(t.TEXTURE_2D,0,m,e.width,e.height,0,h,k,null)}else if(d instanceof\nTHREE.DataTexture)if(0<m.length&&g){for(var l=0,n=m.length;l<n;l++)e=m[l],N.texImage2D(t.TEXTURE_2D,l,h,e.width,e.height,0,h,k,e.data);d.generateMipmaps=!1}else N.texImage2D(t.TEXTURE_2D,0,h,e.width,e.height,0,h,k,e.data);else if(d instanceof THREE.CompressedTexture)for(l=0,n=m.length;l<n;l++)e=m[l],d.format!==THREE.RGBAFormat&&d.format!==THREE.RGBFormat?-1<N.getCompressedTextureFormats().indexOf(h)?N.compressedTexImage2D(t.TEXTURE_2D,l,h,e.width,e.height,0,e.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):\nN.texImage2D(t.TEXTURE_2D,l,h,e.width,e.height,0,h,k,e.data);else if(0<m.length&&g){l=0;for(n=m.length;l<n;l++)e=m[l],N.texImage2D(t.TEXTURE_2D,l,h,h,k,e);d.generateMipmaps=!1}else N.texImage2D(t.TEXTURE_2D,0,h,h,k,e);d.generateMipmaps&&g&&t.generateMipmap(t.TEXTURE_2D);c.__version=d.version;if(d.onUpdate)d.onUpdate(d)}}else N.activeTexture(t.TEXTURE0+b),N.bindTexture(t.TEXTURE_2D,c.__webglTexture)}function y(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement(\"canvas\");\nd.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext(\"2d\").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.warn(\"THREE.WebGLRenderer: image is too big (\"+a.width+\"x\"+a.height+\"). Resized to \"+d.width+\"x\"+d.height,a);return d}return a}function C(a){return THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height)}function J(a,b,c,d){var e=G(b.texture.format),f=G(b.texture.type);N.texImage2D(d,0,e,b.width,b.height,0,e,f,null);t.bindFramebuffer(t.FRAMEBUFFER,\na);t.framebufferTexture2D(t.FRAMEBUFFER,c,d,U.get(b.texture).__webglTexture,0);t.bindFramebuffer(t.FRAMEBUFFER,null)}function D(a,b){t.bindRenderbuffer(t.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,b.width,b.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,b.width,b.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,\nt.RENDERBUFFER,a)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,b.width,b.height);t.bindRenderbuffer(t.RENDERBUFFER,null)}function H(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?t.NEAREST:t.LINEAR}function G(a){var b;if(a===THREE.RepeatWrapping)return t.REPEAT;if(a===THREE.ClampToEdgeWrapping)return t.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return t.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return t.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return t.NEAREST_MIPMAP_NEAREST;\nif(a===THREE.NearestMipMapLinearFilter)return t.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return t.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return t.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return t.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return t.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return t.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return t.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return t.UNSIGNED_SHORT_5_6_5;\nif(a===THREE.ByteType)return t.BYTE;if(a===THREE.ShortType)return t.SHORT;if(a===THREE.UnsignedShortType)return t.UNSIGNED_SHORT;if(a===THREE.IntType)return t.INT;if(a===THREE.UnsignedIntType)return t.UNSIGNED_INT;if(a===THREE.FloatType)return t.FLOAT;b=V.get(\"OES_texture_half_float\");if(null!==b&&a===THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return t.ALPHA;if(a===THREE.RGBFormat)return t.RGB;if(a===THREE.RGBAFormat)return t.RGBA;if(a===THREE.LuminanceFormat)return t.LUMINANCE;\nif(a===THREE.LuminanceAlphaFormat)return t.LUMINANCE_ALPHA;if(a===THREE.DepthFormat)return t.DEPTH_COMPONENT;if(a===THREE.AddEquation)return t.FUNC_ADD;if(a===THREE.SubtractEquation)return t.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return t.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return t.ZERO;if(a===THREE.OneFactor)return t.ONE;if(a===THREE.SrcColorFactor)return t.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return t.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return t.SRC_ALPHA;\nif(a===THREE.OneMinusSrcAlphaFactor)return t.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return t.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return t.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return t.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return t.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return t.SRC_ALPHA_SATURATE;b=V.get(\"WEBGL_compressed_texture_s3tc\");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;\nif(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=V.get(\"WEBGL_compressed_texture_pvrtc\");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=\nV.get(\"WEBGL_compressed_texture_etc1\");if(null!==b&&a===THREE.RGB_ETC1_Format)return b.COMPRESSED_RGB_ETC1_WEBGL;b=V.get(\"EXT_blend_minmax\");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}console.log(\"THREE.WebGLRenderer\",THREE.REVISION);a=a||{};var K=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),P=void 0!==a.context?a.context:null,I=void 0!==a.alpha?a.alpha:!1,L=void 0!==a.depth?a.depth:!0,E=void 0!==a.stencil?a.stencil:!0,\nM=void 0!==a.antialias?a.antialias:!1,O=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,Q=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,R=[],F=[],Z=-1,T=[],X=-1,ba=new Float32Array(8),ha=[],qa=[];this.domElement=K;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1;this.toneMapping=\nTHREE.LinearToneMapping;this.toneMappingWhitePoint=this.toneMappingExposure=1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;var W=this,ca=null,Aa=null,Ba=null,oa=-1,na=\"\",ga=null,ua=new THREE.Vector4,Ga=null,la=new THREE.Vector4,wa=0,aa=new THREE.Color(0),ja=0,Ca=K.width,Da=K.height,$=1,Fa=new THREE.Vector4(0,0,Ca,Da),Ja=!1,ma=new THREE.Vector4(0,0,Ca,Da),Ha=new THREE.Frustum,xa=!1,ya=!1,sa=!1,da=0,fa={type:\"4fv\",value:null,needsUpdate:!1},za=null,ta=0,Na=new THREE.Matrix3,\nMa=new THREE.Sphere,Oa=new THREE.Plane,va=new THREE.Matrix4,Y=new THREE.Vector3,S={hash:\"\",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},ka={geometries:0,textures:0},ia={calls:0,vertices:0,faces:0,points:0};this.info={render:ia,memory:ka,programs:null};var t;try{I={alpha:I,depth:L,stencil:E,antialias:M,premultipliedAlpha:O,preserveDrawingBuffer:Q};t=\nP||K.getContext(\"webgl\",I)||K.getContext(\"experimental-webgl\",I);if(null===t){if(null!==K.getContext(\"webgl\"))throw\"Error creating WebGL context with your selected attributes.\";throw\"Error creating WebGL context.\";}void 0===t.getShaderPrecisionFormat&&(t.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});K.addEventListener(\"webglcontextlost\",e,!1)}catch(Pa){console.error(\"THREE.WebGLRenderer: \"+Pa)}var Ia=\"undefined\"!==typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext,\nV=new THREE.WebGLExtensions(t);V.get(\"WEBGL_depth_texture\");V.get(\"OES_texture_float\");V.get(\"OES_texture_float_linear\");V.get(\"OES_texture_half_float\");V.get(\"OES_texture_half_float_linear\");V.get(\"OES_standard_derivatives\");V.get(\"ANGLE_instanced_arrays\");V.get(\"OES_element_index_uint\")&&(THREE.BufferGeometry.MaxIndex=4294967296);var ea=new THREE.WebGLCapabilities(t,V,a),N=new THREE.WebGLState(t,V,G),U=new THREE.WebGLProperties,ra=new THREE.WebGLObjects(t,U,this.info),pa=new THREE.WebGLPrograms(this,\nea),Ea=new THREE.WebGLLights;this.info.programs=pa.programs;var Qa=new THREE.WebGLBufferRenderer(t,V,ia),Ra=new THREE.WebGLIndexedBufferRenderer(t,V,ia);c();this.context=t;this.capabilities=ea;this.extensions=V;this.properties=U;this.state=N;var Ka=new THREE.WebGLShadowMap(this,S,ra);this.shadowMap=Ka;var Sa=new THREE.SpritePlugin(this,ha),Ta=new THREE.LensFlarePlugin(this,qa);this.getContext=function(){return t};this.getContextAttributes=function(){return t.getContextAttributes()};this.forceContextLoss=\nfunction(){V.get(\"WEBGL_lose_context\").loseContext()};this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=V.get(\"EXT_texture_filter_anisotropic\");return a=null!==b?t.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}();this.getPrecision=function(){return ea.precision};this.getPixelRatio=function(){return $};this.setPixelRatio=function(a){void 0!==a&&($=a,this.setSize(ma.z,ma.w,!1))};this.getSize=function(){return{width:Ca,height:Da}};this.setSize=function(a,b,c){Ca=\na;Da=b;K.width=a*$;K.height=b*$;!1!==c&&(K.style.width=a+\"px\",K.style.height=b+\"px\");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){N.viewport(ma.set(a,b,c,d))};this.setScissor=function(a,b,c,d){N.scissor(Fa.set(a,b,c,d))};this.setScissorTest=function(a){N.setScissorTest(Ja=a)};this.getClearColor=function(){return aa};this.setClearColor=function(a,c){aa.set(a);ja=void 0!==c?c:1;b(aa.r,aa.g,aa.b,ja)};this.getClearAlpha=function(){return ja};this.setClearAlpha=function(a){ja=a;b(aa.r,\naa.g,aa.b,ja)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=t.COLOR_BUFFER_BIT;if(void 0===b||b)d|=t.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=t.STENCIL_BUFFER_BIT;t.clear(d)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=d;this.dispose=function(){K.removeEventListener(\"webglcontextlost\",e,!1)};this.renderBufferImmediate=\nfunction(a,b,c){N.initAttributes();var d=U.get(a);a.hasPositions&&!d.position&&(d.position=t.createBuffer());a.hasNormals&&!d.normal&&(d.normal=t.createBuffer());a.hasUvs&&!d.uv&&(d.uv=t.createBuffer());a.hasColors&&!d.color&&(d.color=t.createBuffer());b=b.getAttributes();a.hasPositions&&(t.bindBuffer(t.ARRAY_BUFFER,d.position),t.bufferData(t.ARRAY_BUFFER,a.positionArray,t.DYNAMIC_DRAW),N.enableAttribute(b.position),t.vertexAttribPointer(b.position,3,t.FLOAT,!1,0,0));if(a.hasNormals){t.bindBuffer(t.ARRAY_BUFFER,\nd.normal);if(\"MeshPhongMaterial\"!==c.type&&\"MeshStandardMaterial\"!==c.type&&\"MeshPhysicalMaterial\"!==c.type&&c.shading===THREE.FlatShading)for(var e=0,f=3*a.count;e<f;e+=9){var g=a.normalArray,h=(g[e+0]+g[e+3]+g[e+6])/3,k=(g[e+1]+g[e+4]+g[e+7])/3,m=(g[e+2]+g[e+5]+g[e+8])/3;g[e+0]=h;g[e+1]=k;g[e+2]=m;g[e+3]=h;g[e+4]=k;g[e+5]=m;g[e+6]=h;g[e+7]=k;g[e+8]=m}t.bufferData(t.ARRAY_BUFFER,a.normalArray,t.DYNAMIC_DRAW);N.enableAttribute(b.normal);t.vertexAttribPointer(b.normal,3,t.FLOAT,!1,0,0)}a.hasUvs&&c.map&&\n(t.bindBuffer(t.ARRAY_BUFFER,d.uv),t.bufferData(t.ARRAY_BUFFER,a.uvArray,t.DYNAMIC_DRAW),N.enableAttribute(b.uv),t.vertexAttribPointer(b.uv,2,t.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(t.bindBuffer(t.ARRAY_BUFFER,d.color),t.bufferData(t.ARRAY_BUFFER,a.colorArray,t.DYNAMIC_DRAW),N.enableAttribute(b.color),t.vertexAttribPointer(b.color,3,t.FLOAT,!1,0,0));N.disableUnusedAttributes();t.drawArrays(t.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){u(d);\nvar g=v(a,b,d,e),h=!1;a=c.id+\"_\"+g.id+\"_\"+d.wireframe;a!==na&&(na=a,h=!0);b=e.morphTargetInfluences;if(void 0!==b){a=[];for(var k=0,h=b.length;k<h;k++){var m=b[k];a.push([m,k])}a.sort(l);8<a.length&&(a.length=8);for(var n=c.morphAttributes,k=0,h=a.length;k<h;k++)m=a[k],ba[k]=m[0],0!==m[0]?(b=m[1],!0===d.morphTargets&&n.position&&c.addAttribute(\"morphTarget\"+k,n.position[b]),!0===d.morphNormals&&n.normal&&c.addAttribute(\"morphNormal\"+k,n.normal[b])):(!0===d.morphTargets&&c.removeAttribute(\"morphTarget\"+\nk),!0===d.morphNormals&&c.removeAttribute(\"morphNormal\"+k));g.getUniforms().setValue(t,\"morphTargetInfluences\",ba);h=!0}b=c.index;k=c.attributes.position;!0===d.wireframe&&(b=ra.getWireframeAttribute(c));null!==b?(a=Ra,a.setIndex(b)):a=Qa;if(h){a:{var h=void 0,q;if(c instanceof THREE.InstancedBufferGeometry&&(q=V.get(\"ANGLE_instanced_arrays\"),null===q)){console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\nbreak a}void 0===h&&(h=0);N.initAttributes();var m=c.attributes,g=g.getAttributes(),n=d.defaultAttributeValues,p;for(p in g){var r=g[p];if(0<=r){var s=m[p];if(void 0!==s){var w=t.FLOAT,x=s.array,M=s.normalized;x instanceof Float32Array?w=t.FLOAT:x instanceof Float64Array?console.warn(\"Unsupported data buffer format: Float64Array\"):x instanceof Uint16Array?w=t.UNSIGNED_SHORT:x instanceof Int16Array?w=t.SHORT:x instanceof Uint32Array?w=t.UNSIGNED_INT:x instanceof Int32Array?w=t.INT:x instanceof Int8Array?\nw=t.BYTE:x instanceof Uint8Array&&(w=t.UNSIGNED_BYTE);var x=s.itemSize,E=ra.getAttributeBuffer(s);if(s instanceof THREE.InterleavedBufferAttribute){var A=s.data,O=A.stride,s=s.offset;A instanceof THREE.InstancedInterleavedBuffer?(N.enableAttributeAndDivisor(r,A.meshPerAttribute,q),void 0===c.maxInstancedCount&&(c.maxInstancedCount=A.meshPerAttribute*A.count)):N.enableAttribute(r);t.bindBuffer(t.ARRAY_BUFFER,E);t.vertexAttribPointer(r,x,w,M,O*A.array.BYTES_PER_ELEMENT,(h*O+s)*A.array.BYTES_PER_ELEMENT)}else s instanceof\nTHREE.InstancedBufferAttribute?(N.enableAttributeAndDivisor(r,s.meshPerAttribute,q),void 0===c.maxInstancedCount&&(c.maxInstancedCount=s.meshPerAttribute*s.count)):N.enableAttribute(r),t.bindBuffer(t.ARRAY_BUFFER,E),t.vertexAttribPointer(r,x,w,M,0,h*x*s.array.BYTES_PER_ELEMENT)}else if(void 0!==n&&(w=n[p],void 0!==w))switch(w.length){case 2:t.vertexAttrib2fv(r,w);break;case 3:t.vertexAttrib3fv(r,w);break;case 4:t.vertexAttrib4fv(r,w);break;default:t.vertexAttrib1fv(r,w)}}}N.disableUnusedAttributes()}null!==\nb&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,ra.getAttributeBuffer(b))}q=Infinity;null!==b?q=b.count:void 0!==k&&(q=k.count);p=c.drawRange.start;b=c.drawRange.count;k=null!==f?f.start:0;h=null!==f?f.count:Infinity;f=Math.max(0,p,k);q=Math.min(0+q,p+b,k+h)-1;q=Math.max(0,q-f+1);if(e instanceof THREE.Mesh)if(!0===d.wireframe)N.setLineWidth(d.wireframeLinewidth*(null===Aa?$:1)),a.setMode(t.LINES);else switch(e.drawMode){case THREE.TrianglesDrawMode:a.setMode(t.TRIANGLES);break;case THREE.TriangleStripDrawMode:a.setMode(t.TRIANGLE_STRIP);\nbreak;case THREE.TriangleFanDrawMode:a.setMode(t.TRIANGLE_FAN)}else e instanceof THREE.Line?(d=d.linewidth,void 0===d&&(d=1),N.setLineWidth(d*(null===Aa?$:1)),e instanceof THREE.LineSegments?a.setMode(t.LINES):a.setMode(t.LINE_STRIP)):e instanceof THREE.Points&&a.setMode(t.POINTS);c instanceof THREE.InstancedBufferGeometry?0<c.maxInstancedCount&&a.renderInstances(c,f,q):a.render(f,q)};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");\nelse{var e=a.fog;na=\"\";oa=-1;ga=null;!0===a.autoUpdate&&a.updateMatrixWorld();null===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);va.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);Ha.setFromMatrix(va);R.length=0;X=Z=-1;ha.length=0;qa.length=0;var f=this.clippingPlanes;xa=0!==W.clippingPlanes.length||W.localClippingEnabled||0!==ta||ya;ya=W.localClippingEnabled;za=A(f,b,0);ta=null!==f?f.length:0;r(a,b);F.length=Z+1;T.length=X+1;!0===W.sortObjects&&(F.sort(n),\nT.sort(p));xa&&(sa=!0,A(null));for(var f=R,g=0,h=0,k=f.length;h<k;h++){var m=f[h];m.castShadow&&(S.shadows[g++]=m)}S.shadows.length=g;Ka.render(a,b);for(var f=R,l=m=0,q=0,u,v,x,M=b.matrixWorldInverse,E=0,O=0,ba=0,z=0,g=0,h=f.length;g<h;g++)if(k=f[g],u=k.color,v=k.intensity,x=k.distance,k instanceof THREE.AmbientLight)m+=u.r*v,l+=u.g*v,q+=u.b*v;else if(k instanceof THREE.DirectionalLight){var y=Ea.get(k);y.color.copy(k.color).multiplyScalar(k.intensity);y.direction.setFromMatrixPosition(k.matrixWorld);\nY.setFromMatrixPosition(k.target.matrixWorld);y.direction.sub(Y);y.direction.transformDirection(M);if(y.shadow=k.castShadow)y.shadowBias=k.shadow.bias,y.shadowRadius=k.shadow.radius,y.shadowMapSize=k.shadow.mapSize;S.directionalShadowMap[E]=k.shadow.map;S.directionalShadowMatrix[E]=k.shadow.matrix;S.directional[E++]=y}else if(k instanceof THREE.SpotLight){y=Ea.get(k);y.position.setFromMatrixPosition(k.matrixWorld);y.position.applyMatrix4(M);y.color.copy(u).multiplyScalar(v);y.distance=x;y.direction.setFromMatrixPosition(k.matrixWorld);\nY.setFromMatrixPosition(k.target.matrixWorld);y.direction.sub(Y);y.direction.transformDirection(M);y.coneCos=Math.cos(k.angle);y.penumbraCos=Math.cos(k.angle*(1-k.penumbra));y.decay=0===k.distance?0:k.decay;if(y.shadow=k.castShadow)y.shadowBias=k.shadow.bias,y.shadowRadius=k.shadow.radius,y.shadowMapSize=k.shadow.mapSize;S.spotShadowMap[ba]=k.shadow.map;S.spotShadowMatrix[ba]=k.shadow.matrix;S.spot[ba++]=y}else if(k instanceof THREE.PointLight){y=Ea.get(k);y.position.setFromMatrixPosition(k.matrixWorld);\ny.position.applyMatrix4(M);y.color.copy(k.color).multiplyScalar(k.intensity);y.distance=k.distance;y.decay=0===k.distance?0:k.decay;if(y.shadow=k.castShadow)y.shadowBias=k.shadow.bias,y.shadowRadius=k.shadow.radius,y.shadowMapSize=k.shadow.mapSize;S.pointShadowMap[O]=k.shadow.map;void 0===S.pointShadowMatrix[O]&&(S.pointShadowMatrix[O]=new THREE.Matrix4);Y.setFromMatrixPosition(k.matrixWorld).negate();S.pointShadowMatrix[O].identity().setPosition(Y);S.point[O++]=y}else k instanceof THREE.HemisphereLight&&\n(y=Ea.get(k),y.direction.setFromMatrixPosition(k.matrixWorld),y.direction.transformDirection(M),y.direction.normalize(),y.skyColor.copy(k.color).multiplyScalar(v),y.groundColor.copy(k.groundColor).multiplyScalar(v),S.hemi[z++]=y);S.ambient[0]=m;S.ambient[1]=l;S.ambient[2]=q;S.directional.length=E;S.spot.length=ba;S.point.length=O;S.hemi.length=z;S.hash=E+\",\"+O+\",\"+ba+\",\"+z+\",\"+S.shadows.length;xa&&(sa=!1,w());ia.calls=0;ia.vertices=0;ia.faces=0;ia.points=0;void 0===c&&(c=null);this.setRenderTarget(c);\n(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);a.overrideMaterial?(d=a.overrideMaterial,s(F,b,e,d),s(T,b,e,d)):(N.setBlending(THREE.NoBlending),s(F,b,e),s(T,b,e));Sa.render(a,b);Ta.render(a,b,la);c&&(a=c.texture,a.generateMipmaps&&C(c)&&a.minFilter!==THREE.NearestFilter&&a.minFilter!==THREE.LinearFilter&&(a=c instanceof THREE.WebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,c=U.get(c.texture).__webglTexture,N.bindTexture(a,c),t.generateMipmap(a),\nN.bindTexture(a,null)));N.setDepthTest(!0);N.setDepthWrite(!0);N.setColorWrite(!0)}};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?N.disable(t.CULL_FACE):(b===THREE.FrontFaceDirectionCW?t.frontFace(t.CW):t.frontFace(t.CCW),a===THREE.CullFaceBack?t.cullFace(t.BACK):a===THREE.CullFaceFront?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK),N.enable(t.CULL_FACE))};var La=!1;this.setTexture=function(a,b){La||(console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\"),\nLa=!0);z(a,b)};this.allocTextureUnit=function(){var a=wa;a>=ea.maxTextures&&console.warn(\"WebGLRenderer: trying to use \"+a+\" texture units while this GPU supports only \"+ea.maxTextures);wa+=1;return a};this.setTexture2D=z;this.setTextureCube=function(a,b){if(a instanceof THREE.CubeTexture||Array.isArray(a.image)&&6===a.image.length){var c=U.get(a);if(6===a.image.length)if(0<a.version&&c.__version!==a.version){c.__image__webglTextureCube||(a.addEventListener(\"dispose\",f),c.__image__webglTextureCube=\nt.createTexture(),ka.textures++);N.activeTexture(t.TEXTURE0+b);N.bindTexture(t.TEXTURE_CUBE_MAP,c.__image__webglTextureCube);t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY);for(var d=a instanceof THREE.CompressedTexture,e=a.image[0]instanceof THREE.DataTexture,g=[],h=0;6>h;h++)g[h]=!W.autoScaleCubemaps||d||e?e?a.image[h].image:a.image[h]:y(a.image[h],ea.maxCubemapSize);var k=C(g[0]),m=G(a.format),l=G(a.type);B(t.TEXTURE_CUBE_MAP,a,k);for(h=0;6>h;h++)if(d)for(var n,q=g[h].mipmaps,p=0,r=q.length;p<r;p++)n=\nq[p],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?-1<N.getCompressedTextureFormats().indexOf(m)?N.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+h,p,m,n.width,n.height,0,n.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\"):N.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+h,p,m,n.width,n.height,0,m,l,n.data);else e?N.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,m,g[h].width,g[h].height,0,m,l,g[h].data):N.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+\nh,0,m,m,l,g[h]);a.generateMipmaps&&k&&t.generateMipmap(t.TEXTURE_CUBE_MAP);c.__version=a.version;if(a.onUpdate)a.onUpdate(a)}else N.activeTexture(t.TEXTURE0+b),N.bindTexture(t.TEXTURE_CUBE_MAP,c.__image__webglTextureCube)}else c=a.texture,N.activeTexture(t.TEXTURE0+b),N.bindTexture(t.TEXTURE_CUBE_MAP,U.get(c).__webglTexture)};this.getCurrentRenderTarget=function(){return Aa};this.setRenderTarget=function(a){if((Aa=a)&&void 0===U.get(a).__webglFramebuffer){var b=U.get(a),c=U.get(a.texture);a.addEventListener(\"dispose\",\ng);c.__webglTexture=t.createTexture();ka.textures++;var d=a instanceof THREE.WebGLRenderTargetCube,e=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height);if(d){b.__webglFramebuffer=[];for(var f=0;6>f;f++)b.__webglFramebuffer[f]=t.createFramebuffer()}else b.__webglFramebuffer=t.createFramebuffer();if(d){N.bindTexture(t.TEXTURE_CUBE_MAP,c.__webglTexture);B(t.TEXTURE_CUBE_MAP,a.texture,e);for(f=0;6>f;f++)J(b.__webglFramebuffer[f],a,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+f);\na.texture.generateMipmaps&&e&&t.generateMipmap(t.TEXTURE_CUBE_MAP);N.bindTexture(t.TEXTURE_CUBE_MAP,null)}else N.bindTexture(t.TEXTURE_2D,c.__webglTexture),B(t.TEXTURE_2D,a.texture,e),J(b.__webglFramebuffer,a,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),a.texture.generateMipmaps&&e&&t.generateMipmap(t.TEXTURE_2D),N.bindTexture(t.TEXTURE_2D,null);if(a.depthBuffer){b=U.get(a);c=a instanceof THREE.WebGLRenderTargetCube;if(a.depthTexture){if(c)throw Error(\"target.depthTexture not supported in Cube render targets\");\nif(a instanceof THREE.WebGLRenderTargetCube)throw Error(\"Depth Texture with cube render targets is not supported!\");t.bindFramebuffer(t.FRAMEBUFFER,b.__webglFramebuffer);if(!(a.depthTexture instanceof THREE.DepthTexture))throw Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");U.get(a.depthTexture).__webglTexture&&a.depthTexture.image.width===a.width&&a.depthTexture.image.height===a.height||(a.depthTexture.image.width=a.width,a.depthTexture.image.height=a.height,a.depthTexture.needsUpdate=\n!0);W.setTexture(a.depthTexture,0);b=U.get(a.depthTexture).__webglTexture;t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,b,0)}else if(c)for(b.__webglDepthbuffer=[],c=0;6>c;c++)t.bindFramebuffer(t.FRAMEBUFFER,b.__webglFramebuffer[c]),b.__webglDepthbuffer[c]=t.createRenderbuffer(),D(b.__webglDepthbuffer[c],a);else t.bindFramebuffer(t.FRAMEBUFFER,b.__webglFramebuffer),b.__webglDepthbuffer=t.createRenderbuffer(),D(b.__webglDepthbuffer,a);t.bindFramebuffer(t.FRAMEBUFFER,null)}}b=\na instanceof THREE.WebGLRenderTargetCube;a?(c=U.get(a),c=b?c.__webglFramebuffer[a.activeCubeFace]:c.__webglFramebuffer,ua.copy(a.scissor),Ga=a.scissorTest,la.copy(a.viewport)):(c=null,ua.copy(Fa).multiplyScalar($),Ga=Ja,la.copy(ma).multiplyScalar($));Ba!==c&&(t.bindFramebuffer(t.FRAMEBUFFER,c),Ba=c);N.scissor(ua);N.setScissorTest(Ga);N.viewport(la);b&&(b=U.get(a.texture),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,b.__webglTexture,a.activeMipMapLevel))};\nthis.readRenderTargetPixels=function(a,b,c,d,e,f){if(!1===a instanceof THREE.WebGLRenderTarget)console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");else{var g=U.get(a).__webglFramebuffer;if(g){var h=!1;g!==Ba&&(t.bindFramebuffer(t.FRAMEBUFFER,g),h=!0);try{var k=a.texture;k.format!==THREE.RGBAFormat&&G(k.format)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)?console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\"):\nk.type===THREE.UnsignedByteType||G(k.type)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)||k.type===THREE.FloatType&&V.get(\"WEBGL_color_buffer_float\")||k.type===THREE.HalfFloatType&&V.get(\"EXT_color_buffer_half_float\")?t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE?0<b&&b<=a.width-d&&0<c&&c<=a.height-e&&t.readPixels(b,c,d,e,G(k.format),G(k.type),f):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\"):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\")}finally{h&&\nt.bindFramebuffer(t.FRAMEBUFFER,Ba)}}}}};\nTHREE.WebGLRenderTarget=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.width=a;this.height=b;this.scissor=new THREE.Vector4(0,0,a,b);this.scissorTest=!1;this.viewport=new THREE.Vector4(0,0,a,b);c=c||{};void 0===c.minFilter&&(c.minFilter=THREE.LinearFilter);this.texture=new THREE.Texture(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:\n!0;this.depthTexture=null};\nTHREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.dispose();this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,b)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;return this},\ndispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeMipMapLevel=this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;\nTHREE.WebGLBufferRenderer=function(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,f){a.drawArrays(d,b,f);c.calls++;c.vertices+=f;d===a.TRIANGLES&&(c.faces+=f/3)};this.renderInstances=function(e){var f=b.get(\"ANGLE_instanced_arrays\");if(null===f)console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");else{var g=e.attributes.position,h=0,h=g instanceof THREE.InterleavedBufferAttribute?g.data.count:\ng.count;f.drawArraysInstancedANGLE(d,0,h,e.maxInstancedCount);c.calls++;c.vertices+=h*e.maxInstancedCount;d===a.TRIANGLES&&(c.faces+=e.maxInstancedCount*h/3)}}};\nTHREE.WebGLIndexedBufferRenderer=function(a,b,c){var d,e,f;this.setMode=function(a){d=a};this.setIndex=function(c){c.array instanceof Uint32Array&&b.get(\"OES_element_index_uint\")?(e=a.UNSIGNED_INT,f=4):(e=a.UNSIGNED_SHORT,f=2)};this.render=function(b,h){a.drawElements(d,h,e,b*f);c.calls++;c.vertices+=h;d===a.TRIANGLES&&(c.faces+=h/3)};this.renderInstances=function(g,h,k){var l=b.get(\"ANGLE_instanced_arrays\");null===l?console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\"):\n(l.drawElementsInstancedANGLE(d,k,e,h*f,g.maxInstancedCount),c.calls++,c.vertices+=k*g.maxInstancedCount,d===a.TRIANGLES&&(c.faces+=g.maxInstancedCount*k/3))}};\nTHREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case \"WEBGL_depth_texture\":a.getExtension(\"WEBGL_depth_texture\")||a.getExtension(\"MOZ_WEBGL_depth_texture\")||a.getExtension(\"WEBKIT_WEBGL_depth_texture\");case \"EXT_texture_filter_anisotropic\":d=a.getExtension(\"EXT_texture_filter_anisotropic\")||a.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||a.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case \"WEBGL_compressed_texture_s3tc\":d=\na.getExtension(\"WEBGL_compressed_texture_s3tc\")||a.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");break;case \"WEBGL_compressed_texture_pvrtc\":d=a.getExtension(\"WEBGL_compressed_texture_pvrtc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;case \"WEBGL_compressed_texture_etc1\":d=a.getExtension(\"WEBGL_compressed_texture_etc1\");break;default:d=a.getExtension(c)}null===d&&console.warn(\"THREE.WebGLRenderer: \"+c+\" extension not supported.\");\nreturn b[c]=d}};\nTHREE.WebGLCapabilities=function(a,b,c){function d(b){if(\"highp\"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return\"highp\";b=\"mediump\"}return\"mediump\"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision?\"mediump\":\"lowp\"}this.getMaxPrecision=d;this.precision=void 0!==c.precision?c.precision:\"highp\";\nthis.logarithmicDepthBuffer=void 0!==c.logarithmicDepthBuffer?c.logarithmicDepthBuffer:!1;this.maxTextures=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.maxTextureSize=a.getParameter(a.MAX_TEXTURE_SIZE);this.maxCubemapSize=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxAttributes=a.getParameter(a.MAX_VERTEX_ATTRIBS);this.maxVertexUniforms=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS);this.maxVaryings=a.getParameter(a.MAX_VARYING_VECTORS);\nthis.maxFragmentUniforms=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS);this.vertexTextures=0<this.maxVertexTextures;this.floatFragmentTextures=!!b.get(\"OES_texture_float\");this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;c=d(this.precision);c!==this.precision&&(console.warn(\"THREE.WebGLRenderer:\",this.precision,\"not supported, using\",c,\"instead.\"),this.precision=c);this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!b.get(\"EXT_frag_depth\"))};\nTHREE.WebGLGeometries=function(a,b,c){function d(a){var h=a.target;a=f[h.id];null!==a.index&&e(a.index);var k=a.attributes,l;for(l in k)e(k[l]);h.removeEventListener(\"dispose\",d);delete f[h.id];l=b.get(h);l.wireframe&&e(l.wireframe);b.delete(h);h=b.get(a);h.wireframe&&e(h.wireframe);b.delete(a);c.memory.geometries--}function e(c){var d;d=c instanceof THREE.InterleavedBufferAttribute?b.get(c.data).__webglBuffer:b.get(c).__webglBuffer;void 0!==d&&(a.deleteBuffer(d),c instanceof THREE.InterleavedBufferAttribute?\nb.delete(c.data):b.delete(c))}var f={};this.get=function(a){var b=a.geometry;if(void 0!==f[b.id])return f[b.id];b.addEventListener(\"dispose\",d);var e;b instanceof THREE.BufferGeometry?e=b:b instanceof THREE.Geometry&&(void 0===b._bufferGeometry&&(b._bufferGeometry=(new THREE.BufferGeometry).setFromObject(a)),e=b._bufferGeometry);f[b.id]=e;c.memory.geometries++;return e}};\nTHREE.WebGLLights=function(){var a={};this.get=function(b){if(void 0!==a[b.id])return a[b.id];var c;switch(b.type){case \"DirectionalLight\":c={direction:new THREE.Vector3,color:new THREE.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"SpotLight\":c={position:new THREE.Vector3,direction:new THREE.Vector3,color:new THREE.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"PointLight\":c=\n{position:new THREE.Vector3,color:new THREE.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"HemisphereLight\":c={direction:new THREE.Vector3,skyColor:new THREE.Color,groundColor:new THREE.Color}}return a[b.id]=c}};\nTHREE.WebGLObjects=function(a,b,c){function d(c,d){var e=c instanceof THREE.InterleavedBufferAttribute?c.data:c,f=b.get(e);void 0===f.__webglBuffer?(f.__webglBuffer=a.createBuffer(),a.bindBuffer(d,f.__webglBuffer),a.bufferData(d,e.array,e.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW),f.version=e.version):f.version!==e.version&&(a.bindBuffer(d,f.__webglBuffer),!1===e.dynamic||-1===e.updateRange.count?a.bufferSubData(d,0,e.array):0===e.updateRange.count?console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\"):\n(a.bufferSubData(d,e.updateRange.offset*e.array.BYTES_PER_ELEMENT,e.array.subarray(e.updateRange.offset,e.updateRange.offset+e.updateRange.count)),e.updateRange.count=0),f.version=e.version)}function e(a,b,c){if(b>c){var d=b;b=c;c=d}d=a[b];return void 0===d?(a[b]=[c],!0):-1===d.indexOf(c)?(d.push(c),!0):!1}var f=new THREE.WebGLGeometries(a,b,c);this.getAttributeBuffer=function(a){return a instanceof THREE.InterleavedBufferAttribute?b.get(a.data).__webglBuffer:b.get(a).__webglBuffer};this.getWireframeAttribute=\nfunction(c){var f=b.get(c);if(void 0!==f.wireframe)return f.wireframe;var k=[],l=c.index,n=c.attributes;c=n.position;if(null!==l)for(var n={},l=l.array,p=0,m=l.length;p<m;p+=3){var q=l[p+0],r=l[p+1],s=l[p+2];e(n,q,r)&&k.push(q,r);e(n,r,s)&&k.push(r,s);e(n,s,q)&&k.push(s,q)}else for(l=n.position.array,p=0,m=l.length/3-1;p<m;p+=3)q=p+0,r=p+1,s=p+2,k.push(q,r,r,s,s,q);k=new THREE.BufferAttribute(new (65535<c.count?Uint32Array:Uint16Array)(k),1);d(k,a.ELEMENT_ARRAY_BUFFER);return f.wireframe=k};this.update=\nfunction(b){var c=f.get(b);b.geometry instanceof THREE.Geometry&&c.updateFromObject(b);b=c.index;var e=c.attributes;null!==b&&d(b,a.ELEMENT_ARRAY_BUFFER);for(var l in e)d(e[l],a.ARRAY_BUFFER);b=c.morphAttributes;for(l in b)for(var e=b[l],n=0,p=e.length;n<p;n++)d(e[n],a.ARRAY_BUFFER);return c}};\nTHREE.WebGLProgram=function(){function a(a){switch(a){case THREE.LinearEncoding:return[\"Linear\",\"( value )\"];case THREE.sRGBEncoding:return[\"sRGB\",\"( value )\"];case THREE.RGBEEncoding:return[\"RGBE\",\"( value )\"];case THREE.RGBM7Encoding:return[\"RGBM\",\"( value, 7.0 )\"];case THREE.RGBM16Encoding:return[\"RGBM\",\"( value, 16.0 )\"];case THREE.RGBDEncoding:return[\"RGBD\",\"( value, 256.0 )\"];case THREE.GammaEncoding:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];default:throw Error(\"unsupported encoding: \"+\na);}}function b(b,c){var d=a(c);return\"vec4 \"+b+\"( vec4 value ) { return \"+d[0]+\"ToLinear\"+d[1]+\"; }\"}function c(b,c){var d=a(c);return\"vec4 \"+b+\"( vec4 value ) { return LinearTo\"+d[0]+d[1]+\"; }\"}function d(a,b){var c;switch(b){case THREE.LinearToneMapping:c=\"Linear\";break;case THREE.ReinhardToneMapping:c=\"Reinhard\";break;case THREE.Uncharted2ToneMapping:c=\"Uncharted2\";break;case THREE.CineonToneMapping:c=\"OptimizedCineon\";break;default:throw Error(\"unsupported toneMapping: \"+b);}return\"vec3 \"+a+\n\"( vec3 color ) { return \"+c+\"ToneMapping( color ); }\"}function e(a,b,c){a=a||{};return[a.derivatives||b.envMapCubeUV||b.bumpMap||b.normalMap||b.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",(a.fragDepth||b.logarithmicDepthBuffer)&&c.get(\"EXT_frag_depth\")?\"#extension GL_EXT_frag_depth : enable\":\"\",a.drawBuffers&&c.get(\"WEBGL_draw_buffers\")?\"#extension GL_EXT_draw_buffers : require\":\"\",(a.shaderTextureLOD||b.envMap)&&c.get(\"EXT_shader_texture_lod\")?\"#extension GL_EXT_shader_texture_lod : enable\":\n\"\"].filter(g).join(\"\\n\")}function f(a){var b=[],c;for(c in a){var d=a[c];!1!==d&&b.push(\"#define \"+c+\" \"+d)}return b.join(\"\\n\")}function g(a){return\"\"!==a}function h(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights)}function k(a){return a.replace(/#include +<([\\w\\d.]+)>/g,function(a,b){var c=THREE.ShaderChunk[b];if(void 0===c)throw Error(\"Can not resolve #include <\"+\nb+\">\");return k(c)})}function l(a){return a.replace(/for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,function(a,b,c,d){a=\"\";for(b=parseInt(b);b<parseInt(c);b++)a+=d.replace(/\\[ i \\]/g,\"[ \"+b+\" ]\");return a})}var n=0;return function(a,m,q,r){var s=a.context,u=q.extensions,v=q.defines,x=q.__webglShader.vertexShader,A=q.__webglShader.fragmentShader,w=\"SHADOWMAP_TYPE_BASIC\";r.shadowMapType===THREE.PCFShadowMap?w=\"SHADOWMAP_TYPE_PCF\":r.shadowMapType===THREE.PCFSoftShadowMap&&(w=\"SHADOWMAP_TYPE_PCF_SOFT\");\nvar B=\"ENVMAP_TYPE_CUBE\",z=\"ENVMAP_MODE_REFLECTION\",y=\"ENVMAP_BLENDING_MULTIPLY\";if(r.envMap){switch(q.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:B=\"ENVMAP_TYPE_CUBE\";break;case THREE.CubeUVReflectionMapping:case THREE.CubeUVRefractionMapping:B=\"ENVMAP_TYPE_CUBE_UV\";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:B=\"ENVMAP_TYPE_EQUIREC\";break;case THREE.SphericalReflectionMapping:B=\"ENVMAP_TYPE_SPHERE\"}switch(q.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:z=\n\"ENVMAP_MODE_REFRACTION\"}switch(q.combine){case THREE.MultiplyOperation:y=\"ENVMAP_BLENDING_MULTIPLY\";break;case THREE.MixOperation:y=\"ENVMAP_BLENDING_MIX\";break;case THREE.AddOperation:y=\"ENVMAP_BLENDING_ADD\"}}var C=0<a.gammaFactor?a.gammaFactor:1,u=e(u,r,a.extensions),J=f(v),D=s.createProgram();q instanceof THREE.RawShaderMaterial?w=v=\"\":(v=[\"precision \"+r.precision+\" float;\",\"precision \"+r.precision+\" int;\",\"#define SHADER_NAME \"+q.__webglShader.name,J,r.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\n\"\",\"#define GAMMA_FACTOR \"+C,\"#define MAX_BONES \"+r.maxBones,r.map?\"#define USE_MAP\":\"\",r.envMap?\"#define USE_ENVMAP\":\"\",r.envMap?\"#define \"+z:\"\",r.lightMap?\"#define USE_LIGHTMAP\":\"\",r.aoMap?\"#define USE_AOMAP\":\"\",r.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",r.bumpMap?\"#define USE_BUMPMAP\":\"\",r.normalMap?\"#define USE_NORMALMAP\":\"\",r.displacementMap&&r.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",r.specularMap?\"#define USE_SPECULARMAP\":\"\",r.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",r.metalnessMap?\n\"#define USE_METALNESSMAP\":\"\",r.alphaMap?\"#define USE_ALPHAMAP\":\"\",r.vertexColors?\"#define USE_COLOR\":\"\",r.flatShading?\"#define FLAT_SHADED\":\"\",r.skinning?\"#define USE_SKINNING\":\"\",r.useVertexTexture?\"#define BONE_TEXTURE\":\"\",r.morphTargets?\"#define USE_MORPHTARGETS\":\"\",r.morphNormals&&!1===r.flatShading?\"#define USE_MORPHNORMALS\":\"\",r.doubleSided?\"#define DOUBLE_SIDED\":\"\",r.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+r.numClippingPlanes,r.shadowMapEnabled?\"#define USE_SHADOWMAP\":\n\"\",r.shadowMapEnabled?\"#define \"+w:\"\",r.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",r.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",r.logarithmicDepthBuffer&&a.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_COLOR\",\n\"\\tattribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\n\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(g).join(\"\\n\"),w=[u,\"precision \"+r.precision+\" float;\",\"precision \"+r.precision+\" int;\",\"#define SHADER_NAME \"+q.__webglShader.name,J,r.alphaTest?\"#define ALPHATEST \"+r.alphaTest:\"\",\"#define GAMMA_FACTOR \"+C,r.useFog&&r.fog?\"#define USE_FOG\":\"\",r.useFog&&r.fogExp?\"#define FOG_EXP2\":\"\",r.map?\"#define USE_MAP\":\"\",r.envMap?\"#define USE_ENVMAP\":\"\",r.envMap?\"#define \"+B:\"\",r.envMap?\n\"#define \"+z:\"\",r.envMap?\"#define \"+y:\"\",r.lightMap?\"#define USE_LIGHTMAP\":\"\",r.aoMap?\"#define USE_AOMAP\":\"\",r.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",r.bumpMap?\"#define USE_BUMPMAP\":\"\",r.normalMap?\"#define USE_NORMALMAP\":\"\",r.specularMap?\"#define USE_SPECULARMAP\":\"\",r.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",r.metalnessMap?\"#define USE_METALNESSMAP\":\"\",r.alphaMap?\"#define USE_ALPHAMAP\":\"\",r.vertexColors?\"#define USE_COLOR\":\"\",r.flatShading?\"#define FLAT_SHADED\":\"\",r.doubleSided?\"#define DOUBLE_SIDED\":\n\"\",r.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+r.numClippingPlanes,r.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",r.shadowMapEnabled?\"#define \"+w:\"\",r.premultipliedAlpha?\"#define PREMULTIPLIED_ALPHA\":\"\",r.physicallyCorrectLights?\"#define PHYSICALLY_CORRECT_LIGHTS\":\"\",r.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",r.logarithmicDepthBuffer&&a.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",r.envMap&&a.extensions.get(\"EXT_shader_texture_lod\")?\"#define TEXTURE_LOD_EXT\":\n\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",r.toneMapping!==THREE.NoToneMapping?\"#define TONE_MAPPING\":\"\",r.toneMapping!==THREE.NoToneMapping?THREE.ShaderChunk.tonemapping_pars_fragment:\"\",r.toneMapping!==THREE.NoToneMapping?d(\"toneMapping\",r.toneMapping):\"\",r.outputEncoding||r.mapEncoding||r.envMapEncoding||r.emissiveMapEncoding?THREE.ShaderChunk.encodings_pars_fragment:\"\",r.mapEncoding?b(\"mapTexelToLinear\",r.mapEncoding):\"\",r.envMapEncoding?b(\"envMapTexelToLinear\",r.envMapEncoding):\n\"\",r.emissiveMapEncoding?b(\"emissiveMapTexelToLinear\",r.emissiveMapEncoding):\"\",r.outputEncoding?c(\"linearToOutputTexel\",r.outputEncoding):\"\",r.depthPacking?\"#define DEPTH_PACKING \"+q.depthPacking:\"\",\"\\n\"].filter(g).join(\"\\n\"));x=k(x,r);x=h(x,r);A=k(A,r);A=h(A,r);!1===q instanceof THREE.ShaderMaterial&&(x=l(x),A=l(A));A=w+A;x=THREE.WebGLShader(s,s.VERTEX_SHADER,v+x);A=THREE.WebGLShader(s,s.FRAGMENT_SHADER,A);s.attachShader(D,x);s.attachShader(D,A);void 0!==q.index0AttributeName?s.bindAttribLocation(D,\n0,q.index0AttributeName):!0===r.morphTargets&&s.bindAttribLocation(D,0,\"position\");s.linkProgram(D);r=s.getProgramInfoLog(D);B=s.getShaderInfoLog(x);z=s.getShaderInfoLog(A);C=y=!0;if(!1===s.getProgramParameter(D,s.LINK_STATUS))y=!1,console.error(\"THREE.WebGLProgram: shader error: \",s.getError(),\"gl.VALIDATE_STATUS\",s.getProgramParameter(D,s.VALIDATE_STATUS),\"gl.getProgramInfoLog\",r,B,z);else if(\"\"!==r)console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\",r);else if(\"\"===B||\"\"===z)C=!1;C&&(this.diagnostics=\n{runnable:y,material:q,programLog:r,vertexShader:{log:B,prefix:v},fragmentShader:{log:z,prefix:w}});s.deleteShader(x);s.deleteShader(A);var H;this.getUniforms=function(){void 0===H&&(H=new THREE.WebGLUniforms(s,D,a));return H};var G;this.getAttributes=function(){if(void 0===G){for(var a={},b=s.getProgramParameter(D,s.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=s.getActiveAttrib(D,c).name;a[d]=s.getAttribLocation(D,d)}G=a}return G};this.destroy=function(){s.deleteProgram(D);this.program=void 0};Object.defineProperties(this,\n{uniforms:{get:function(){console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\");return this.getUniforms()}},attributes:{get:function(){console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\");return this.getAttributes()}}});this.id=n++;this.code=m;this.usedTimes=1;this.program=D;this.vertexShader=x;this.fragmentShader=A;return this}}();\nTHREE.WebGLPrograms=function(a,b){function c(a,b){var c;a?a instanceof THREE.Texture?c=a.encoding:a instanceof THREE.WebGLRenderTarget&&(c=a.texture.encoding):c=THREE.LinearEncoding;c===THREE.LinearEncoding&&b&&(c=THREE.GammaEncoding);return c}var d=[],e={MeshDepthMaterial:\"depth\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",MeshStandardMaterial:\"physical\",MeshPhysicalMaterial:\"physical\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",\nPointsMaterial:\"points\"},f=\"precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes depthPacking\".split(\" \");\nthis.getParameters=function(d,f,k,l,n){var p=e[d.type],m;b.floatVertexTextures&&n&&n.skeleton&&n.skeleton.useVertexTexture?m=1024:(m=Math.floor((b.maxVertexUniforms-20)/4),void 0!==n&&n instanceof THREE.SkinnedMesh&&(m=Math.min(n.skeleton.bones.length,m),m<n.skeleton.bones.length&&console.warn(\"WebGLRenderer: too many bones - \"+n.skeleton.bones.length+\", this GPU supports just \"+m+\" (try OpenGL instead of ANGLE)\")));var q=a.getPrecision();null!==d.precision&&(q=b.getMaxPrecision(d.precision),q!==\nd.precision&&console.warn(\"THREE.WebGLProgram.getParameters:\",d.precision,\"not supported, using\",q,\"instead.\"));return{shaderID:p,precision:q,supportsVertexTextures:b.vertexTextures,outputEncoding:c(a.getCurrentRenderTarget(),a.gammaOutput),map:!!d.map,mapEncoding:c(d.map,a.gammaInput),envMap:!!d.envMap,envMapMode:d.envMap&&d.envMap.mapping,envMapEncoding:c(d.envMap,a.gammaInput),envMapCubeUV:!!d.envMap&&(d.envMap.mapping===THREE.CubeUVReflectionMapping||d.envMap.mapping===THREE.CubeUVRefractionMapping),\nlightMap:!!d.lightMap,aoMap:!!d.aoMap,emissiveMap:!!d.emissiveMap,emissiveMapEncoding:c(d.emissiveMap,a.gammaInput),bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,displacementMap:!!d.displacementMap,roughnessMap:!!d.roughnessMap,metalnessMap:!!d.metalnessMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,combine:d.combine,vertexColors:d.vertexColors,fog:k,useFog:d.fog,fogExp:k instanceof THREE.FogExp2,flatShading:d.shading===THREE.FlatShading,sizeAttenuation:d.sizeAttenuation,logarithmicDepthBuffer:b.logarithmicDepthBuffer,\nskinning:d.skinning,maxBones:m,useVertexTexture:b.floatVertexTextures&&n&&n.skeleton&&n.skeleton.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:f.directional.length,numPointLights:f.point.length,numSpotLights:f.spot.length,numHemiLights:f.hemi.length,numClippingPlanes:l,shadowMapEnabled:a.shadowMap.enabled&&n.receiveShadow&&0<f.shadows.length,shadowMapType:a.shadowMap.type,toneMapping:a.toneMapping,\nphysicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:d.premultipliedAlpha,alphaTest:d.alphaTest,doubleSided:d.side===THREE.DoubleSide,flipSided:d.side===THREE.BackSide,depthPacking:void 0!==d.depthPacking?d.depthPacking:!1}};this.getProgramCode=function(a,b){var c=[];b.shaderID?c.push(b.shaderID):(c.push(a.fragmentShader),c.push(a.vertexShader));if(void 0!==a.defines)for(var d in a.defines)c.push(d),c.push(a.defines[d]);for(d=0;d<f.length;d++)c.push(b[f[d]]);return c.join()};this.acquireProgram=\nfunction(b,c,e){for(var f,n=0,p=d.length;n<p;n++){var m=d[n];if(m.code===e){f=m;++f.usedTimes;break}}void 0===f&&(f=new THREE.WebGLProgram(a,e,b,c),d.push(f));return f};this.releaseProgram=function(a){if(0===--a.usedTimes){var b=d.indexOf(a);d[b]=d[d.length-1];d.pop();a.destroy()}};this.programs=d};THREE.WebGLProperties=function(){var a={};this.get=function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c};this.delete=function(b){delete a[b.uuid]};this.clear=function(){a={}}};\nTHREE.WebGLShader=function(){function a(a){a=a.split(\"\\n\");for(var c=0;c<a.length;c++)a[c]=c+1+\": \"+a[c];return a.join(\"\\n\")}return function(b,c,d){var e=b.createShader(c);b.shaderSource(e,d);b.compileShader(e);!1===b.getShaderParameter(e,b.COMPILE_STATUS)&&console.error(\"THREE.WebGLShader: Shader couldn't compile.\");\"\"!==b.getShaderInfoLog(e)&&console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",c===b.VERTEX_SHADER?\"vertex\":\"fragment\",b.getShaderInfoLog(e),a(d));return e}}();\nTHREE.WebGLShadowMap=function(a,b,c){function d(b,c,d,e){var f=b.geometry,g=null,g=r,h=b.customDepthMaterial;d&&(g=s,h=b.customDistanceMaterial);h?g=h:(b=b instanceof THREE.SkinnedMesh&&c.skinning,h=0,void 0!==f.morphTargets&&0<f.morphTargets.length&&c.morphTargets&&(h|=1),b&&(h|=2),g=g[h]);a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length&&(h=g.uuid,f=c.uuid,b=u[h],void 0===b&&(b={},u[h]=b),h=b[f],void 0===h&&(h=g.clone(),b[f]=h),g=h);g.visible=c.visible;g.wireframe=c.wireframe;\ng.side=c.side;g.clipShadows=c.clipShadows;g.clippingPlanes=c.clippingPlanes;g.wireframeLinewidth=c.wireframeLinewidth;g.linewidth=c.linewidth;d&&void 0!==g.uniforms.lightPos&&g.uniforms.lightPos.value.copy(e);return g}function e(a,b,c){if(!1!==a.visible){a.layers.test(b.layers)&&(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points)&&a.castShadow&&(!1===a.frustumCulled||!0===h.intersectsObject(a))&&!0===a.material.visible&&(a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,\na.matrixWorld),q.push(a));a=a.children;for(var d=0,f=a.length;d<f;d++)e(a[d],b,c)}}var f=a.context,g=a.state,h=new THREE.Frustum,k=new THREE.Matrix4,l=b.shadows,n=new THREE.Vector2,p=new THREE.Vector3,m=new THREE.Vector3,q=[],r=Array(4),s=Array(4),u={},v=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],x=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,\n1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],A=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4];b=new THREE.MeshDepthMaterial;b.depthPacking=THREE.RGBADepthPacking;b.clipping=!0;for(var w=THREE.ShaderLib.distanceRGBA,B=THREE.UniformsUtils.clone(w.uniforms),z=0;4!==z;++z){var y=0!==(z&1),C=0!==(z&2),J=b.clone();J.morphTargets=y;J.skinning=C;r[z]=J;y=new THREE.ShaderMaterial({defines:{USE_SHADOWMAP:\"\"},uniforms:B,vertexShader:w.vertexShader,\nfragmentShader:w.fragmentShader,morphTargets:y,skinning:C,clipping:!0});s[z]=y}var D=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=THREE.PCFShadowMap;this.cullFace=THREE.CullFaceFront;this.render=function(b,r){if(!1!==D.enabled&&(!1!==D.autoUpdate||!1!==D.needsUpdate)&&0!==l.length){g.clearColor(1,1,1,1);g.disable(f.BLEND);g.enable(f.CULL_FACE);f.frontFace(f.CCW);f.cullFace(D.cullFace===THREE.CullFaceFront?f.FRONT:f.BACK);g.setDepthTest(!0);g.setScissorTest(!1);for(var s,u,\nw=0,y=l.length;w<y;w++){var E=l[w],M=E.shadow,O=M.camera;n.copy(M.mapSize);if(E instanceof THREE.PointLight){s=6;u=!0;var z=n.x,B=n.y;A[0].set(2*z,B,z,B);A[1].set(0,B,z,B);A[2].set(3*z,B,z,B);A[3].set(z,B,z,B);A[4].set(3*z,0,z,B);A[5].set(z,0,z,B);n.x*=4;n.y*=2}else s=1,u=!1;null===M.map&&(M.map=new THREE.WebGLRenderTarget(n.x,n.y,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),O.updateProjectionMatrix());M instanceof THREE.SpotLightShadow&&M.update(E);z=M.map;\nM=M.matrix;m.setFromMatrixPosition(E.matrixWorld);O.position.copy(m);a.setRenderTarget(z);a.clear();for(z=0;z<s;z++){u?(p.copy(O.position),p.add(v[z]),O.up.copy(x[z]),O.lookAt(p),g.viewport(A[z])):(p.setFromMatrixPosition(E.target.matrixWorld),O.lookAt(p));O.updateMatrixWorld();O.matrixWorldInverse.getInverse(O.matrixWorld);M.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);M.multiply(O.projectionMatrix);M.multiply(O.matrixWorldInverse);k.multiplyMatrices(O.projectionMatrix,O.matrixWorldInverse);h.setFromMatrix(k);\nq.length=0;e(b,r,O);for(var B=0,C=q.length;B<C;B++){var J=q[B],T=c.update(J),X=J.material;if(X instanceof THREE.MultiMaterial)for(var ba=T.groups,X=X.materials,ha=0,qa=ba.length;ha<qa;ha++){var W=ba[ha],ca=X[W.materialIndex];!0===ca.visible&&(ca=d(J,ca,u,m),a.renderBufferDirect(O,null,T,ca,J,W))}else ca=d(J,X,u,m),a.renderBufferDirect(O,null,T,ca,J,null)}}}s=a.getClearColor();u=a.getClearAlpha();a.setClearColor(s,u);g.enable(f.BLEND);D.cullFace===THREE.CullFaceFront&&f.cullFace(f.BACK);D.needsUpdate=\n!1}}};\nTHREE.WebGLState=function(a,b,c){var d=this,e=new THREE.Vector4,f=a.getParameter(a.MAX_VERTEX_ATTRIBS),g=new Uint8Array(f),h=new Uint8Array(f),k=new Uint8Array(f),l={},n=null,p=null,m=null,q=null,r=null,s=null,u=null,v=null,x=!1,A=null,w=null,B=null,z=null,y=null,C=null,J=null,D=null,H=null,G=null,K=null,P=null,I=null,L=null,E=null,M=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),O=void 0,Q={},R=new THREE.Vector4,F=null,Z=null,T=new THREE.Vector4,X=new THREE.Vector4;this.init=function(){this.clearColor(0,0,\n0,1);this.clearDepth(1);this.clearStencil(0);this.enable(a.DEPTH_TEST);a.depthFunc(a.LEQUAL);a.frontFace(a.CCW);a.cullFace(a.BACK);this.enable(a.CULL_FACE);this.enable(a.BLEND);a.blendEquation(a.FUNC_ADD);a.blendFunc(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA)};this.initAttributes=function(){for(var a=0,b=g.length;a<b;a++)g[a]=0};this.enableAttribute=function(c){g[c]=1;0===h[c]&&(a.enableVertexAttribArray(c),h[c]=1);0!==k[c]&&(b.get(\"ANGLE_instanced_arrays\").vertexAttribDivisorANGLE(c,0),k[c]=0)};this.enableAttributeAndDivisor=\nfunction(b,c,d){g[b]=1;0===h[b]&&(a.enableVertexAttribArray(b),h[b]=1);k[b]!==c&&(d.vertexAttribDivisorANGLE(b,c),k[b]=c)};this.disableUnusedAttributes=function(){for(var b=0,c=h.length;b<c;b++)h[b]!==g[b]&&(a.disableVertexAttribArray(b),h[b]=0)};this.enable=function(b){!0!==l[b]&&(a.enable(b),l[b]=!0)};this.disable=function(b){!1!==l[b]&&(a.disable(b),l[b]=!1)};this.getCompressedTextureFormats=function(){if(null===n&&(n=[],b.get(\"WEBGL_compressed_texture_pvrtc\")||b.get(\"WEBGL_compressed_texture_s3tc\")||\nb.get(\"WEBGL_compressed_texture_etc1\")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<c.length;d++)n.push(c[d]);return n};this.setBlending=function(b,d,e,f,g,h,k,l){b===THREE.NoBlending?this.disable(a.BLEND):this.enable(a.BLEND);if(b!==p||l!==x)b===THREE.AdditiveBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):b===THREE.SubtractiveBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,\na.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):b===THREE.MultiplyBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.ZERO,a.SRC_COLOR,a.SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquationSeparate(a.FUNC_ADD,\na.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),p=b,x=l;if(b===THREE.CustomBlending){g=g||d;h=h||e;k=k||f;if(d!==m||g!==s)a.blendEquationSeparate(c(d),c(g)),m=d,s=g;if(e!==q||f!==r||h!==u||k!==v)a.blendFuncSeparate(c(e),c(f),c(h),c(k)),q=e,r=f,u=h,v=k}else v=u=s=r=q=m=null};this.setDepthFunc=function(b){if(A!==b){if(b)switch(b){case THREE.NeverDepth:a.depthFunc(a.NEVER);break;case THREE.AlwaysDepth:a.depthFunc(a.ALWAYS);break;case THREE.LessDepth:a.depthFunc(a.LESS);\nbreak;case THREE.LessEqualDepth:a.depthFunc(a.LEQUAL);break;case THREE.EqualDepth:a.depthFunc(a.EQUAL);break;case THREE.GreaterEqualDepth:a.depthFunc(a.GEQUAL);break;case THREE.GreaterDepth:a.depthFunc(a.GREATER);break;case THREE.NotEqualDepth:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);A=b}};this.setDepthTest=function(b){b?this.enable(a.DEPTH_TEST):this.disable(a.DEPTH_TEST)};this.setDepthWrite=function(b){w!==b&&(a.depthMask(b),w=b)};this.setColorWrite=\nfunction(b){B!==b&&(a.colorMask(b,b,b,b),B=b)};this.setStencilFunc=function(b,c,d){if(y!==b||C!==c||J!==d)a.stencilFunc(b,c,d),y=b,C=c,J=d};this.setStencilOp=function(b,c,d){if(D!==b||H!==c||G!==d)a.stencilOp(b,c,d),D=b,H=c,G=d};this.setStencilTest=function(b){b?this.enable(a.STENCIL_TEST):this.disable(a.STENCIL_TEST)};this.setStencilWrite=function(b){z!==b&&(a.stencilMask(b),z=b)};this.setFlipSided=function(b){K!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),K=b)};this.setLineWidth=function(b){b!==\nP&&(a.lineWidth(b),P=b)};this.setPolygonOffset=function(b,c,d){b?this.enable(a.POLYGON_OFFSET_FILL):this.disable(a.POLYGON_OFFSET_FILL);!b||I===c&&L===d||(a.polygonOffset(c,d),I=c,L=d)};this.getScissorTest=function(){return E};this.setScissorTest=function(b){(E=b)?this.enable(a.SCISSOR_TEST):this.disable(a.SCISSOR_TEST)};this.activeTexture=function(b){void 0===b&&(b=a.TEXTURE0+M-1);O!==b&&(a.activeTexture(b),O=b)};this.bindTexture=function(b,c){void 0===O&&d.activeTexture();var e=Q[O];void 0===e&&\n(e={type:void 0,texture:void 0},Q[O]=e);if(e.type!==b||e.texture!==c)a.bindTexture(b,c),e.type=b,e.texture=c};this.compressedTexImage2D=function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.texImage2D=function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.clearColor=function(b,c,d,f){e.set(b,c,d,f);!1===R.equals(e)&&(a.clearColor(b,c,d,f),R.copy(e))};this.clearDepth=function(b){F!==b&&(a.clearDepth(b),F=b)};this.clearStencil=function(b){Z!==\nb&&(a.clearStencil(b),Z=b)};this.scissor=function(b){!1===T.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),T.copy(b))};this.viewport=function(b){!1===X.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),X.copy(b))};this.reset=function(){for(var b=0;b<h.length;b++)1===h[b]&&(a.disableVertexAttribArray(b),h[b]=0);l={};n=null;O=void 0;Q={};K=z=w=B=p=null}};\nTHREE.WebGLUniforms=function(){var a=[],b=[],c=function(b,c,d){var e=b[0];if(0>=e||0<e)return b;var f=c*d,g=a[f];void 0===g&&(g=new Float32Array(f),a[f]=g);if(0!==c)for(e.toArray(g,0),e=1,f=0;e!==c;++e)f+=d,b[e].toArray(g,f);return g},d=function(a,c){var d=b[c];void 0===d&&(d=new Int32Array(c),b[c]=d);for(var e=0;e!==c;++e)d[e]=a.allocTextureUnit();return d},e=function(a,b){a.uniform1f(this.addr,b)},f=function(a,b){a.uniform1i(this.addr,b)},g=function(a,b){void 0===b.x?a.uniform2fv(this.addr,b):a.uniform2f(this.addr,\nb.x,b.y)},h=function(a,b){void 0!==b.x?a.uniform3f(this.addr,b.x,b.y,b.z):void 0!==b.r?a.uniform3f(this.addr,b.r,b.g,b.b):a.uniform3fv(this.addr,b)},k=function(a,b){void 0===b.x?a.uniform4fv(this.addr,b):a.uniform4f(this.addr,b.x,b.y,b.z,b.w)},l=function(a,b){a.uniformMatrix2fv(this.addr,!1,b.elements||b)},n=function(a,b){a.uniformMatrix3fv(this.addr,!1,b.elements||b)},p=function(a,b){a.uniformMatrix4fv(this.addr,!1,b.elements||b)},m=function(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,\nd);b&&c.setTexture2D(b,d)},q=function(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,d);b&&c.setTextureCube(b,d)},r=function(a,b){a.uniform2iv(this.addr,b)},s=function(a,b){a.uniform3iv(this.addr,b)},u=function(a,b){a.uniform4iv(this.addr,b)},v=function(a){switch(a){case 5126:return e;case 35664:return g;case 35665:return h;case 35666:return k;case 35674:return l;case 35675:return n;case 35676:return p;case 35678:return m;case 35680:return q;case 5124:case 35670:return f;case 35667:case 35671:return r;\ncase 35668:case 35672:return s;case 35669:case 35673:return u}},x=function(a,b){a.uniform1fv(this.addr,b)},A=function(a,b){a.uniform1iv(this.addr,b)},w=function(a,b){a.uniform2fv(this.addr,c(b,this.size,2))},B=function(a,b){a.uniform3fv(this.addr,c(b,this.size,3))},z=function(a,b){a.uniform4fv(this.addr,c(b,this.size,4))},y=function(a,b){a.uniformMatrix2fv(this.addr,!1,c(b,this.size,4))},C=function(a,b){a.uniformMatrix3fv(this.addr,!1,c(b,this.size,9))},J=function(a,b){a.uniformMatrix4fv(this.addr,\n!1,c(b,this.size,16))},D=function(a,b,c){var e=b.length,f=d(c,e);a.uniform1iv(this.addr,f);for(a=0;a!==e;++a){var g=b[a];g&&c.setTexture2D(g,f[a])}},H=function(a,b,c){var e=b.length,f=d(c,e);a.uniform1iv(this.addr,f);for(a=0;a!==e;++a){var g=b[a];g&&c.setTextureCube(g,f[a])}},G=function(a){switch(a){case 5126:return x;case 35664:return w;case 35665:return B;case 35666:return z;case 35674:return y;case 35675:return C;case 35676:return J;case 35678:return D;case 35680:return H;case 5124:case 35670:return A;\ncase 35667:case 35671:return r;case 35668:case 35672:return s;case 35669:case 35673:return u}},K=function(a,b,c){this.id=a;this.addr=c;this.setValue=v(b.type)},P=function(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=G(b.type)},I=function(a){this.id=a;this.seq=[];this.map={}};I.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var L=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g,E=function(a,b,c){this.seq=[];this.map={};this.renderer=c;c=a.getProgramParameter(b,\na.ACTIVE_UNIFORMS);for(var d=0;d!==c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,k=h.length;for(L.lastIndex=0;;){var m=L.exec(h),l=L.lastIndex,n=m[1],q=m[3];\"]\"===m[2]&&(n|=0);if(void 0===q||\"[\"===q&&l+2===k){h=g;e=void 0===q?new K(n,e,f):new P(n,e,f);h.seq.push(e);h.map[e.id]=e;break}else q=g.map[n],void 0===q&&(q=new I(n),n=g,g=q,n.seq.push(g),n.map[g.id]=g),g=q}}};E.prototype.setValue=function(a,b,c){b=this.map[b];void 0!==b&&b.setValue(a,c,this.renderer)};\nE.prototype.set=function(a,b,c){var d=this.map[c];void 0!==d&&d.setValue(a,b[c],this.renderer)};E.prototype.setOptional=function(a,b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};E.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};E.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==e;++d){var f=a[d];f.id in b&&c.push(f)}return c};E.splitDynamic=function(a,b){for(var c=null,d=a.length,e=0,f=0;f!==d;++f){var g=a[f],h=\nb[g.id];h&&!0===h.dynamic?(null===c&&(c=[]),c.push(g)):(e<f&&(a[e]=g),++e)}e<d&&(a.length=e);return c};E.evalDynamic=function(a,b,c,d){for(var e=0,f=a.length;e!==f;++e){var g=b[a[e].id],h=g.onUpdateCallback;void 0!==h&&h.call(g,c,d)}};return E}();\nTHREE.LensFlarePlugin=function(a,b){var c,d,e,f,g,h,k,l,n,p,m=a.context,q=a.state,r,s,u,v,x,A;this.render=function(w,B,z){if(0!==b.length){w=new THREE.Vector3;var y=z.w/z.z,C=.5*z.z,J=.5*z.w,D=16/z.w,H=new THREE.Vector2(D*y,D),G=new THREE.Vector3(1,1,0),K=new THREE.Vector2(1,1),P=new THREE.Box2;P.min.set(0,0);P.max.set(z.z-16,z.w-16);if(void 0===v){var D=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),I=new Uint16Array([0,1,2,0,2,3]);r=m.createBuffer();s=m.createBuffer();m.bindBuffer(m.ARRAY_BUFFER,\nr);m.bufferData(m.ARRAY_BUFFER,D,m.STATIC_DRAW);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,s);m.bufferData(m.ELEMENT_ARRAY_BUFFER,I,m.STATIC_DRAW);x=m.createTexture();A=m.createTexture();q.bindTexture(m.TEXTURE_2D,x);m.texImage2D(m.TEXTURE_2D,0,m.RGB,16,16,0,m.RGB,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,\nm.NEAREST);q.bindTexture(m.TEXTURE_2D,A);m.texImage2D(m.TEXTURE_2D,0,m.RGBA,16,16,0,m.RGBA,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);var D=u={vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif ( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility =        visibility.r / 9.0;\\nvVisibility *= 1.0 - visibility.g / 9.0;\\nvVisibility *=       visibility.b / 9.0;\\nvVisibility *= 1.0 - visibility.a / 9.0;\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif ( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if ( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},I=m.createProgram(),L=m.createShader(m.FRAGMENT_SHADER),\nE=m.createShader(m.VERTEX_SHADER),M=\"precision \"+a.getPrecision()+\" float;\\n\";m.shaderSource(L,M+D.fragmentShader);m.shaderSource(E,M+D.vertexShader);m.compileShader(L);m.compileShader(E);m.attachShader(I,L);m.attachShader(I,E);m.linkProgram(I);v=I;n=m.getAttribLocation(v,\"position\");p=m.getAttribLocation(v,\"uv\");c=m.getUniformLocation(v,\"renderType\");d=m.getUniformLocation(v,\"map\");e=m.getUniformLocation(v,\"occlusionMap\");f=m.getUniformLocation(v,\"opacity\");g=m.getUniformLocation(v,\"color\");h=m.getUniformLocation(v,\n\"scale\");k=m.getUniformLocation(v,\"rotation\");l=m.getUniformLocation(v,\"screenPosition\")}m.useProgram(v);q.initAttributes();q.enableAttribute(n);q.enableAttribute(p);q.disableUnusedAttributes();m.uniform1i(e,0);m.uniform1i(d,1);m.bindBuffer(m.ARRAY_BUFFER,r);m.vertexAttribPointer(n,2,m.FLOAT,!1,16,0);m.vertexAttribPointer(p,2,m.FLOAT,!1,16,8);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,s);q.disable(m.CULL_FACE);q.setDepthWrite(!1);I=0;for(L=b.length;I<L;I++)if(D=16/z.w,H.set(D*y,D),E=b[I],w.set(E.matrixWorld.elements[12],\nE.matrixWorld.elements[13],E.matrixWorld.elements[14]),w.applyMatrix4(B.matrixWorldInverse),w.applyProjection(B.projectionMatrix),G.copy(w),K.x=z.x+G.x*C+C-8,K.y=z.y+G.y*J+J-8,!0===P.containsPoint(K)){q.activeTexture(m.TEXTURE0);q.bindTexture(m.TEXTURE_2D,null);q.activeTexture(m.TEXTURE1);q.bindTexture(m.TEXTURE_2D,x);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGB,K.x,K.y,16,16,0);m.uniform1i(c,0);m.uniform2f(h,H.x,H.y);m.uniform3f(l,G.x,G.y,G.z);q.disable(m.BLEND);q.enable(m.DEPTH_TEST);m.drawElements(m.TRIANGLES,\n6,m.UNSIGNED_SHORT,0);q.activeTexture(m.TEXTURE0);q.bindTexture(m.TEXTURE_2D,A);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,K.x,K.y,16,16,0);m.uniform1i(c,1);q.disable(m.DEPTH_TEST);q.activeTexture(m.TEXTURE1);q.bindTexture(m.TEXTURE_2D,x);m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0);E.positionScreen.copy(G);E.customUpdateCallback?E.customUpdateCallback(E):E.updateLensFlares();m.uniform1i(c,2);q.enable(m.BLEND);for(var M=0,O=E.lensFlares.length;M<O;M++){var Q=E.lensFlares[M];.001<Q.opacity&&.001<Q.scale&&\n(G.x=Q.x,G.y=Q.y,G.z=Q.z,D=Q.size*Q.scale/z.w,H.x=D*y,H.y=D,m.uniform3f(l,G.x,G.y,G.z),m.uniform2f(h,H.x,H.y),m.uniform1f(k,Q.rotation),m.uniform1f(f,Q.opacity),m.uniform3f(g,Q.color.r,Q.color.g,Q.color.b),q.setBlending(Q.blending,Q.blendEquation,Q.blendSrc,Q.blendDst),a.setTexture2D(Q.texture,1),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0))}}q.enable(m.CULL_FACE);q.enable(m.DEPTH_TEST);q.setDepthWrite(!0);a.resetGLState()}}};\nTHREE.SpritePlugin=function(a,b){var c,d,e,f,g,h,k,l,n,p,m,q,r,s,u,v,x;function A(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:b.id-a.id}var w=a.context,B=a.state,z,y,C,J,D=new THREE.Vector3,H=new THREE.Quaternion,G=new THREE.Vector3;this.render=function(K,P){if(0!==b.length){if(void 0===C){var I=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),L=new Uint16Array([0,1,2,0,2,3]);z=w.createBuffer();y=w.createBuffer();w.bindBuffer(w.ARRAY_BUFFER,\nz);w.bufferData(w.ARRAY_BUFFER,I,w.STATIC_DRAW);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,y);w.bufferData(w.ELEMENT_ARRAY_BUFFER,L,w.STATIC_DRAW);var I=w.createProgram(),L=w.createShader(w.VERTEX_SHADER),E=w.createShader(w.FRAGMENT_SHADER);w.shaderSource(L,[\"precision \"+a.getPrecision()+\" float;\",\"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position * scale;\\nvec2 rotatedPosition;\\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\nvec4 finalPosition;\\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition;\\nfinalPosition = projectionMatrix * finalPosition;\\ngl_Position = finalPosition;\\n}\"].join(\"\\n\"));\nw.shaderSource(E,[\"precision \"+a.getPrecision()+\" float;\",\"uniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\nif ( texture.a < alphaTest ) discard;\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\nif ( fogType > 0 ) {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat fogFactor = 0.0;\\nif ( fogType == 1 ) {\\nfogFactor = smoothstep( fogNear, fogFar, depth );\\n} else {\\nconst float LOG2 = 1.442695;\\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n}\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\\n}\"].join(\"\\n\"));\nw.compileShader(L);w.compileShader(E);w.attachShader(I,L);w.attachShader(I,E);w.linkProgram(I);C=I;v=w.getAttribLocation(C,\"position\");x=w.getAttribLocation(C,\"uv\");c=w.getUniformLocation(C,\"uvOffset\");d=w.getUniformLocation(C,\"uvScale\");e=w.getUniformLocation(C,\"rotation\");f=w.getUniformLocation(C,\"scale\");g=w.getUniformLocation(C,\"color\");h=w.getUniformLocation(C,\"map\");k=w.getUniformLocation(C,\"opacity\");l=w.getUniformLocation(C,\"modelViewMatrix\");n=w.getUniformLocation(C,\"projectionMatrix\");p=\nw.getUniformLocation(C,\"fogType\");m=w.getUniformLocation(C,\"fogDensity\");q=w.getUniformLocation(C,\"fogNear\");r=w.getUniformLocation(C,\"fogFar\");s=w.getUniformLocation(C,\"fogColor\");u=w.getUniformLocation(C,\"alphaTest\");I=document.createElement(\"canvas\");I.width=8;I.height=8;L=I.getContext(\"2d\");L.fillStyle=\"white\";L.fillRect(0,0,8,8);J=new THREE.Texture(I);J.needsUpdate=!0}w.useProgram(C);B.initAttributes();B.enableAttribute(v);B.enableAttribute(x);B.disableUnusedAttributes();B.disable(w.CULL_FACE);\nB.enable(w.BLEND);w.bindBuffer(w.ARRAY_BUFFER,z);w.vertexAttribPointer(v,2,w.FLOAT,!1,16,0);w.vertexAttribPointer(x,2,w.FLOAT,!1,16,8);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,y);w.uniformMatrix4fv(n,!1,P.projectionMatrix.elements);B.activeTexture(w.TEXTURE0);w.uniform1i(h,0);L=I=0;(E=K.fog)?(w.uniform3f(s,E.color.r,E.color.g,E.color.b),E instanceof THREE.Fog?(w.uniform1f(q,E.near),w.uniform1f(r,E.far),w.uniform1i(p,1),L=I=1):E instanceof THREE.FogExp2&&(w.uniform1f(m,E.density),w.uniform1i(p,2),L=I=2)):\n(w.uniform1i(p,0),L=I=0);for(var E=0,M=b.length;E<M;E++){var O=b[E];O.modelViewMatrix.multiplyMatrices(P.matrixWorldInverse,O.matrixWorld);O.z=-O.modelViewMatrix.elements[14]}b.sort(A);for(var Q=[],E=0,M=b.length;E<M;E++){var O=b[E],R=O.material;w.uniform1f(u,R.alphaTest);w.uniformMatrix4fv(l,!1,O.modelViewMatrix.elements);O.matrixWorld.decompose(D,H,G);Q[0]=G.x;Q[1]=G.y;O=0;K.fog&&R.fog&&(O=L);I!==O&&(w.uniform1i(p,O),I=O);null!==R.map?(w.uniform2f(c,R.map.offset.x,R.map.offset.y),w.uniform2f(d,\nR.map.repeat.x,R.map.repeat.y)):(w.uniform2f(c,0,0),w.uniform2f(d,1,1));w.uniform1f(k,R.opacity);w.uniform3f(g,R.color.r,R.color.g,R.color.b);w.uniform1f(e,R.rotation);w.uniform2fv(f,Q);B.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst);B.setDepthTest(R.depthTest);B.setDepthWrite(R.depthWrite);R.map?a.setTexture2D(R.map,0):a.setTexture2D(J,0);w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0)}B.enable(w.CULL_FACE);a.resetGLState()}}};\nObject.defineProperties(THREE.Box2.prototype,{empty:{value:function(){console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\");return this.isEmpty()}},isIntersectionBox:{value:function(a){console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)}}});\nObject.defineProperties(THREE.Box3.prototype,{empty:{value:function(){console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\");return this.isEmpty()}},isIntersectionBox:{value:function(a){console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)}},isIntersectionSphere:{value:function(a){console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\");return this.intersectsSphere(a)}}});\nObject.defineProperties(THREE.Matrix3.prototype,{multiplyVector3:{value:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");return a.applyMatrix3(this)}},multiplyVector3Array:{value:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)}}});\nObject.defineProperties(THREE.Matrix4.prototype,{extractPosition:{value:function(a){console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");return this.copyPosition(a)}},setRotationFromQuaternion:{value:function(a){console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");return this.makeRotationFromQuaternion(a)}},multiplyVector3:{value:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\");\nreturn a.applyProjection(this)}},multiplyVector4:{value:function(a){console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)}},multiplyVector3Array:{value:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)}},rotateAxis:{value:function(a){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");\na.transformDirection(this)}},crossVector:{value:function(a){console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)}},translate:{value:function(a){console.error(\"THREE.Matrix4: .translate() has been removed.\")}},rotateX:{value:function(a){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")}},rotateY:{value:function(a){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")}},rotateZ:{value:function(a){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")}},\nrotateByAxis:{value:function(a,b){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")}}});Object.defineProperties(THREE.Plane.prototype,{isIntersectionLine:{value:function(a){console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\");return this.intersectsLine(a)}}});\nObject.defineProperties(THREE.Quaternion.prototype,{multiplyVector3:{value:function(a){console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");return a.applyQuaternion(this)}}});\nObject.defineProperties(THREE.Ray.prototype,{isIntersectionBox:{value:function(a){console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)}},isIntersectionPlane:{value:function(a){console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\");return this.intersectsPlane(a)}},isIntersectionSphere:{value:function(a){console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\");return this.intersectsSphere(a)}}});\nObject.defineProperties(THREE.Vector3.prototype,{setEulerFromRotationMatrix:{value:function(){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")}},setEulerFromQuaternion:{value:function(){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")}},getPositionFromMatrix:{value:function(a){console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");\nreturn this.setFromMatrixPosition(a)}},getScaleFromMatrix:{value:function(a){console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");return this.setFromMatrixScale(a)}},getColumnFromMatrix:{value:function(a,b){console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");return this.setFromMatrixColumn(a,b)}}});\nTHREE.Face4=function(a,b,c,d,e,f,g){console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");return new THREE.Face3(a,b,c,e,f,g)};THREE.Vertex=function(a,b,c){console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\");return new THREE.Vector3(a,b,c)};\nObject.defineProperties(THREE.Object3D.prototype,{eulerOrder:{get:function(){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");return this.rotation.order},set:function(a){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");this.rotation.order=a}},getChildByName:{value:function(a){console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");return this.getObjectByName(a)}},renderDepth:{set:function(a){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")}},\ntranslate:{value:function(a,b){console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\");return this.translateOnAxis(b,a)}},useQuaternion:{get:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set:function(a){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")}}});\nObject.defineProperties(THREE,{PointCloud:{value:function(a,b){console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\");return new THREE.Points(a,b)}},ParticleSystem:{value:function(a,b){console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\");return new THREE.Points(a,b)}}});\nObject.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(a){console.warn(\"THREE.Light: .onlyShadow has been removed.\")}},shadowCameraFov:{set:function(a){console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\");this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\");this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\");\nthis.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\");this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\");this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\");this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\");\nthis.shadow.camera.far=a}},shadowCameraVisible:{set:function(a){console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\")}},shadowBias:{set:function(a){console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\");this.shadow.bias=a}},shadowDarkness:{set:function(a){console.warn(\"THREE.Light: .shadowDarkness has been removed.\")}},shadowMapWidth:{set:function(a){console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\");\nthis.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\");this.shadow.mapSize.height=a}}});Object.defineProperties(THREE.BufferAttribute.prototype,{length:{get:function(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");return this.array.length}}});\nObject.defineProperties(THREE.BufferGeometry.prototype,{drawcalls:{get:function(){console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\");return this.groups}},offsets:{get:function(){console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\");return this.groups}},addIndex:{value:function(a){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\");this.setIndex(a)}},addDrawCall:{value:function(a,b,c){void 0!==c&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\");\nconsole.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\");this.addGroup(a,b)}},clearDrawCalls:{value:function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\");this.clearGroups()}},computeTangents:{value:function(){console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\")}},computeOffsets:{value:function(){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")}}});\nObject.defineProperties(THREE.Material.prototype,{wrapAround:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")},set:function(a){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")}},wrapRGB:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapRGB has been removed.\");return new THREE.Color}}});\nObject.defineProperties(THREE,{PointCloudMaterial:{value:function(a){console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)}},ParticleBasicMaterial:{value:function(a){console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)}},ParticleSystemMaterial:{value:function(a){console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)}}});\nObject.defineProperties(THREE.MeshPhongMaterial.prototype,{metal:{get:function(){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\");return!1},set:function(a){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\")}}});\nObject.defineProperties(THREE.ShaderMaterial.prototype,{derivatives:{get:function(){console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");return this.extensions.derivatives},set:function(a){console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");this.extensions.derivatives=a}}});\nObject.defineProperties(THREE.WebGLRenderer.prototype,{supportsFloatTextures:{value:function(){console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\");return this.extensions.get(\"OES_texture_float\")}},supportsHalfFloatTextures:{value:function(){console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\");return this.extensions.get(\"OES_texture_half_float\")}},supportsStandardDerivatives:{value:function(){console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\");\nreturn this.extensions.get(\"OES_standard_derivatives\")}},supportsCompressedTextureS3TC:{value:function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\");return this.extensions.get(\"WEBGL_compressed_texture_s3tc\")}},supportsCompressedTexturePVRTC:{value:function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\");return this.extensions.get(\"WEBGL_compressed_texture_pvrtc\")}},\nsupportsBlendMinMax:{value:function(){console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\");return this.extensions.get(\"EXT_blend_minmax\")}},supportsVertexTextures:{value:function(){return this.capabilities.vertexTextures}},supportsInstancedArrays:{value:function(){console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\");return this.extensions.get(\"ANGLE_instanced_arrays\")}},enableScissorTest:{value:function(a){console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\");\nthis.setScissorTest(a)}},initMaterial:{value:function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")}},addPrePlugin:{value:function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")}},addPostPlugin:{value:function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")}},updateShadowMap:{value:function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")}},shadowMapEnabled:{get:function(){return this.shadowMap.enabled},\nset:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\");this.shadowMap.type=a}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.\");this.shadowMap.cullFace=a}}});\nObject.defineProperties(THREE.WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");return this.texture.wrapS},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");this.texture.wrapS=a}},wrapT:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");return this.texture.wrapT},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");this.texture.wrapT=\na}},magFilter:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\");return this.texture.magFilter},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\");this.texture.magFilter=a}},minFilter:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\");return this.texture.minFilter},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\");this.texture.minFilter=\na}},anisotropy:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\");return this.texture.anisotropy},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\");this.texture.anisotropy=a}},offset:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");return this.texture.offset},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");this.texture.offset=\na}},repeat:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");return this.texture.repeat},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");this.texture.repeat=a}},format:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");return this.texture.format},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");this.texture.format=a}},type:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");\nreturn this.texture.type},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");this.texture.type=a}},generateMipmaps:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\");return this.texture.generateMipmaps},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\");this.texture.generateMipmaps=a}}});\nObject.defineProperties(THREE.Audio.prototype,{load:{value:function(a){console.warn(\"THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.\");var b=this;(new THREE.AudioLoader).load(a,function(a){b.setBuffer(a)});return this}}});\nTHREE.GeometryUtils={merge:function(a,b,c){console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\");var d;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");return a.center()}};\nTHREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");var e=new THREE.TextureLoader;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadTextureCube:function(a,b,c,d){console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");var e=new THREE.CubeTextureLoader;e.setCrossOrigin(this.crossOrigin);a=e.load(a,\nc,void 0,d);b&&(a.mapping=b);return a},loadCompressedTexture:function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},loadCompressedTextureCube:function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")}};\nTHREE.Projector=function(){console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\");this.projectVector=function(a,b){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");a.project(b)};this.unprojectVector=function(a,b){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");a.unproject(b)};this.pickingRay=function(a,b){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}};\nTHREE.CanvasRenderer=function(){console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\");this.domElement=document.createElement(\"canvas\");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.MeshFaceMaterial=THREE.MultiMaterial;Object.defineProperties(THREE.LOD.prototype,{objects:{get:function(){console.warn(\"THREE.LOD: .objects has been renamed to .levels.\");return this.levels}}});\nTHREE.CurveUtils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};\nTHREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Group,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\nTHREE.ShapeUtils={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g,h,k;if(0<THREE.ShapeUtils.area(a))for(h=0;h<c;h++)e[h]=h;else for(h=0;h<c;h++)e[h]=c-1-h;var l=2*c;for(h=c-1;2<c;){if(0>=l--){console.warn(\"THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()\");break}g=h;c<=g&&(g=0);h=g+1;c<=h&&(h=0);k=h+1;c<=k&&(k=0);var n;a:{var p=\nn=void 0,m=void 0,q=void 0,r=void 0,s=void 0,u=void 0,v=void 0,x=void 0,p=a[e[g]].x,m=a[e[g]].y,q=a[e[h]].x,r=a[e[h]].y,s=a[e[k]].x,u=a[e[k]].y;if(Number.EPSILON>(q-p)*(u-m)-(r-m)*(s-p))n=!1;else{var A=void 0,w=void 0,B=void 0,z=void 0,y=void 0,C=void 0,J=void 0,D=void 0,H=void 0,G=void 0,H=D=J=x=v=void 0,A=s-q,w=u-r,B=p-s,z=m-u,y=q-p,C=r-m;for(n=0;n<c;n++)if(v=a[e[n]].x,x=a[e[n]].y,!(v===p&&x===m||v===q&&x===r||v===s&&x===u)&&(J=v-p,D=x-m,H=v-q,G=x-r,v-=s,x-=u,H=A*G-w*H,J=y*D-C*J,D=B*x-z*v,H>=-Number.EPSILON&&\nD>=-Number.EPSILON&&J>=-Number.EPSILON)){n=!1;break a}n=!0}}if(n){d.push([a[e[g]],a[e[h]],a[e[k]]]);f.push([e[g],e[h],e[k]]);g=h;for(k=h+1;k<c;g++,k++)e[g]=e[k];c--;l=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-d.x,l=e.y-d.y,n=a.x-d.x,p=a.y-d.y,y=h*k-g*l,C=h*n-g*p;if(Math.abs(y)>Number.EPSILON){if(0<y){if(0>C||C>\ny)return[];k=l*n-k*p;if(0>k||k>y)return[]}else{if(0<C||C<y)return[];k=l*n-k*p;if(0<k||k<y)return[]}if(0===k)return!f||0!==C&&C!==y?[a]:[];if(k===y)return!f||0!==C&&C!==y?[b]:[];if(0===C)return[d];if(C===y)return[e];f=k/y;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!==C||l*n!==k*p)return[];h=0===g&&0===h;k=0===k&&0===l;if(h&&k)return a.x!==d.x||a.y!==d.y?[]:[a];if(h)return c(d,e,a)?[a]:[];if(k)return c(a,b,d)?[d]:[];0!==g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),d.x<e.x?(b=d,y=d.x,l=e,d=e.x):(b=\ne,y=e.x,l=d,d=d.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),d.y<e.y?(b=d,y=d.y,l=e,d=e.y):(b=e,y=e.y,l=d,d=d.y));return k<=y?a<y?[]:a===y?f?[]:[b]:a<=d?[b,h]:[b,l]:k>d?[]:k===d?f?[]:[g]:a<=d?[g,h]:[g,l]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var f,g,h,k,l,n={};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=\nh.length;f<g;f++)l=h[f].x+\":\"+h[f].y,void 0!==n[l]&&console.warn(\"THREE.Shape: Duplicate point\",l),n[l]=f;f=function(a,b){function c(a,b){var d=h.length-1,f=a-1;0>f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],k[b]);if(!d)return!1;d=k.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(k[b],k[f],k[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,k;for(e=0;e<l.length;e++)for(f=b[l[e]],\nh=0;h<f.length;h++)if(k=h+1,k%=f.length,k=d(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var h=a.concat(),k,l=[],n,p,z,y,C,J=[],D,H,G,K=0;for(n=b.length;K<n;K++)l.push(K);D=0;for(var P=2*l.length;0<l.length;){P--;if(0>P){console.log(\"Infinite Loop! Holes left:\"+l.length+\", Probably Hole outside Shape!\");break}for(p=D;p<h.length;p++){z=h[p];n=-1;for(K=0;K<l.length;K++)if(y=l[K],C=z.x+\":\"+z.y+\":\"+y,void 0===J[C]){k=b[y];for(H=0;H<k.length;H++)if(y=k[H],c(p,H)&&!f(z,y)&&!g(z,y)){n=H;l.splice(K,1);\nD=h.slice(0,p+1);y=h.slice(p);H=k.slice(n);G=k.slice(0,n+1);h=D.concat(H).concat(G).concat(y);D=p;break}if(0<=n)break;J[C]=!0}if(0<=n)break}}return h}(a,b);var p=THREE.ShapeUtils.triangulate(f,!1);f=0;for(g=p.length;f<g;f++)for(k=p[f],h=0;3>h;h++)l=k[h].x+\":\"+k[h].y,l=n[l],void 0!==l&&(k[h]=l);return p.concat()},isClockWise:function(a){return 0>THREE.ShapeUtils.area(a)},b2:function(){return function(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}}(),b3:function(){return function(a,b,c,d,e){var f=\n1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}}()};THREE.Curve=function(){};\nTHREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(a){console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");return null},getPointAt:function(a){a=this.getUtoTmapping(a);return this.getPoint(a)},getPoints:function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c},getSpacedPoints:function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){a||\n(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-\n1,k;g<=h;)if(d=Math.floor(g+(h-g)/2),k=c[d]-f,0>k)g=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]===f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)},getTangent:function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},getTangentAt:function(a){a=this.getUtoTmapping(a);return this.getTangent(a)}};\nTHREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};\nTHREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),d=0;d<c.length;){if(c[d]>=b)return a=this.curves[d],b=1-(c[d]-b)/a.getLength(),a.getPointAt(b);d++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};\nTHREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a);return this.createGeometry(a)};\nTHREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new THREE.Vector3(e.x,e.y,e.z||0))}return b};THREE.Font=function(a){this.data=a};\nTHREE.Font.prototype={constructor:THREE.Font,generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split(\"\");var e=b/d.resolution,f=0;b=[];for(var g=0;g<a.length;g++){var h;h=e;var k=f,l=d.glyphs[a[g]]||d.glyphs[\"?\"];if(l){var n=new THREE.Path,p=[],m=THREE.ShapeUtils.b2,q=THREE.ShapeUtils.b3,r=void 0,s=void 0,u=s=r=void 0,v=void 0,x=void 0,A=void 0,w=void 0,B=void 0,v=void 0;if(l.o)for(var z=l._cachedOutline||(l._cachedOutline=l.o.split(\" \")),y=0,C=z.length;y<\nC;)switch(z[y++]){case \"m\":r=z[y++]*h+k;s=z[y++]*h;n.moveTo(r,s);break;case \"l\":r=z[y++]*h+k;s=z[y++]*h;n.lineTo(r,s);break;case \"q\":r=z[y++]*h+k;s=z[y++]*h;x=z[y++]*h+k;A=z[y++]*h;n.quadraticCurveTo(x,A,r,s);if(v=p[p.length-1])for(var u=v.x,v=v.y,J=1;J<=c;J++){var D=J/c;m(D,u,x,r);m(D,v,A,s)}break;case \"b\":if(r=z[y++]*h+k,s=z[y++]*h,x=z[y++]*h+k,A=z[y++]*h,w=z[y++]*h+k,B=z[y++]*h,n.bezierCurveTo(x,A,w,B,r,s),v=p[p.length-1])for(u=v.x,v=v.y,J=1;J<=c;J++)D=J/c,q(D,u,x,w,r),q(D,v,A,B,s)}h={offset:l.ha*\nh,path:n}}else h=void 0;f+=h.offset;b.push(h.path)}c=[];d=0;for(a=b.length;d<a;d++)Array.prototype.push.apply(c,b[d].toShapes());return c}};THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};\nTHREE.Path.prototype.moveTo=function(a,b){this.actions.push({action:\"moveTo\",args:[a,b]})};THREE.Path.prototype.lineTo=function(a,b){var c=this.actions[this.actions.length-1].args,c=new THREE.LineCurve(new THREE.Vector2(c[c.length-2],c[c.length-1]),new THREE.Vector2(a,b));this.curves.push(c);this.actions.push({action:\"lineTo\",args:[a,b]})};\nTHREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=this.actions[this.actions.length-1].args,e=new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(e);this.actions.push({action:\"quadraticCurveTo\",args:[a,b,c,d]})};\nTHREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args,g=new THREE.CubicBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(g);this.actions.push({action:\"bezierCurveTo\",args:[a,b,c,d,e,f]})};\nTHREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:\"splineThru\",args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};\nTHREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g,h){var k=this.actions[this.actions.length-1].args;this.absellipse(a+k[k.length-2],b+k[k.length-1],c,d,e,f,g,h)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g,h){var k=[a,b,c,d,e,f,g,h||0];a=new THREE.EllipseCurve(a,b,c,d,e,f,g,h);this.curves.push(a);a=a.getPoint(1);k.push(a.x);k.push(a.y);this.actions.push({action:\"ellipse\",args:k})};\nTHREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));this.autoClose&&b.push(b[0]);return b};\nTHREE.Path.prototype.getPoints=function(a){a=a||12;for(var b=THREE.ShapeUtils.b2,c=THREE.ShapeUtils.b3,d=[],e,f,g,h,k,l,n,p,m,q,r=0,s=this.actions.length;r<s;r++){m=this.actions[r];var u=m.args;switch(m.action){case \"moveTo\":d.push(new THREE.Vector2(u[0],u[1]));break;case \"lineTo\":d.push(new THREE.Vector2(u[0],u[1]));break;case \"quadraticCurveTo\":e=u[2];f=u[3];k=u[0];l=u[1];0<d.length?(m=d[d.length-1],n=m.x,p=m.y):(m=this.actions[r-1].args,n=m[m.length-2],p=m[m.length-1]);for(u=1;u<=a;u++)q=u/a,m=\nb(q,n,k,e),q=b(q,p,l,f),d.push(new THREE.Vector2(m,q));break;case \"bezierCurveTo\":e=u[4];f=u[5];k=u[0];l=u[1];g=u[2];h=u[3];0<d.length?(m=d[d.length-1],n=m.x,p=m.y):(m=this.actions[r-1].args,n=m[m.length-2],p=m[m.length-1]);for(u=1;u<=a;u++)q=u/a,m=c(q,n,k,g,e),q=c(q,p,l,h,f),d.push(new THREE.Vector2(m,q));break;case \"splineThru\":m=this.actions[r-1].args;q=[new THREE.Vector2(m[m.length-2],m[m.length-1])];m=a*u[0].length;q=q.concat(u[0]);q=new THREE.SplineCurve(q);for(u=1;u<=m;u++)d.push(q.getPointAt(u/\nm));break;case \"arc\":e=u[0];f=u[1];l=u[2];g=u[3];m=u[4];k=!!u[5];n=m-g;p=2*a;for(u=1;u<=p;u++)q=u/p,k||(q=1-q),q=g+q*n,m=e+l*Math.cos(q),q=f+l*Math.sin(q),d.push(new THREE.Vector2(m,q));break;case \"ellipse\":e=u[0];f=u[1];l=u[2];h=u[3];g=u[4];m=u[5];k=!!u[6];var v=u[7];n=m-g;p=2*a;var x,A;0!==v&&(x=Math.cos(v),A=Math.sin(v));for(u=1;u<=p;u++){q=u/p;k||(q=1-q);q=g+q*n;m=e+l*Math.cos(q);q=f+h*Math.sin(q);if(0!==v){var w=m;m=(w-e)*x-(q-f)*A+e;q=(w-e)*A+(q-f)*x+f}d.push(new THREE.Vector2(m,q))}}}a=d[d.length-\n1];Math.abs(a.x-d[0].x)<Number.EPSILON&&Math.abs(a.y-d[0].y)<Number.EPSILON&&d.splice(d.length-1,1);this.autoClose&&d.push(d[0]);return d};\nTHREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,l=h.y-g.y;if(Math.abs(l)>Number.EPSILON){if(0>l&&(g=b[f],k=-k,h=b[e],l=-l),!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return!0}else{e=l*(a.x-g.x)-k*(a.y-g.y);if(0===e)return!0;0>e||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&a.x<=g.x||\ng.x<=a.x&&a.x<=h.x))return!0}return d}var e=THREE.ShapeUtils.isClockWise,f=function(a){for(var b=[],c=new THREE.Path,d=0,e=a.length;d<e;d++){var f=a[d],g=f.args,f=f.action;\"moveTo\"===f&&0!==c.actions.length&&(b.push(c),c=new THREE.Path);c[f].apply(c,g)}0!==c.actions.length&&b.push(c);return b}(this.actions);if(0===f.length)return[];if(!0===b)return c(f);var g,h,k,l=[];if(1===f.length)return h=f[0],k=new THREE.Shape,k.actions=h.actions,k.curves=h.curves,l.push(k),l;var n=!e(f[0].getPoints()),n=a?!n:\nn;k=[];var p=[],m=[],q=0,r;p[q]=void 0;m[q]=[];for(var s=0,u=f.length;s<u;s++)h=f[s],r=h.getPoints(),g=e(r),(g=a?!g:g)?(!n&&p[q]&&q++,p[q]={s:new THREE.Shape,p:r},p[q].s.actions=h.actions,p[q].s.curves=h.curves,n&&q++,m[q]=[]):m[q].push({h:h,p:r[0]});if(!p[0])return c(f);if(1<p.length){s=!1;h=[];e=0;for(f=p.length;e<f;e++)k[e]=[];e=0;for(f=p.length;e<f;e++)for(g=m[e],n=0;n<g.length;n++){q=g[n];r=!0;for(u=0;u<p.length;u++)d(q.p,p[u].p)&&(e!==u&&h.push({froms:e,tos:u,hole:n}),r?(r=!1,k[u].push(q)):\ns=!0);r&&k[e].push(q)}0<h.length&&(s||(m=k))}s=0;for(e=p.length;s<e;s++)for(k=p[s].s,l.push(k),h=m[s],f=0,g=h.length;f<g;f++)k.holes.push(h[f].h);return l};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};\nTHREE.Shape.prototype.getPointsHoles=function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.extractAllPoints(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;\nTHREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;\nTHREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=THREE.ShapeUtils.b2;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y))};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentQuadraticBezier;return(new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y))).normalize()};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};\nTHREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(a){var b=THREE.ShapeUtils.b3;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};\nTHREE.CubicBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentCubicBezier;return(new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y))).normalize()};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;\nTHREE.SplineCurve.prototype.getPoint=function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0===c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector2(c(d.x,e.x,f.x,b.x,a),c(d.y,e.y,f.y,b.y,a))};THREE.EllipseCurve=function(a,b,c,d,e,f,g,h){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);\nTHREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;\nTHREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);b=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);var c=this.aY+this.yRadius*Math.sin(b);if(0!==this.aRotation){var b=Math.cos(this.aRotation),d=Math.sin(this.aRotation),e=a;a=(e-this.aX)*b-(c-this.aY)*d+this.aX;c=(e-this.aX)*d+(c-this.aY)*b+this.aY}return new THREE.Vector2(a,c)};\nTHREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});\nTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=THREE.ShapeUtils.b2;return new THREE.Vector3(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y),b(a,this.v0.z,this.v1.z,this.v2.z))});\nTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=THREE.ShapeUtils.b3;return new THREE.Vector3(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),b(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z))});\nTHREE.SplineCurve3=THREE.Curve.create(function(a){console.warn(\"THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3\");this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(d.x,e.x,f.x,b.x,a),c(d.y,e.y,f.y,b.y,a),c(d.z,e.z,f.z,b.z,a))});\nTHREE.CatmullRomCurve3=function(){function a(){}var b=new THREE.Vector3,c=new a,d=new a,e=new a;a.prototype.init=function(a,b,c,d){this.c0=a;this.c1=c;this.c2=-3*a+3*b-2*c-d;this.c3=2*a-2*b+c+d};a.prototype.initNonuniformCatmullRom=function(a,b,c,d,e,n,p){a=((b-a)/e-(c-a)/(e+n)+(c-b)/n)*n;d=((c-b)/n-(d-b)/(n+p)+(d-c)/p)*n;this.init(b,c,a,d)};a.prototype.initCatmullRom=function(a,b,c,d,e){this.init(b,c,e*(c-a),e*(d-b))};a.prototype.calc=function(a){var b=a*a;return this.c0+this.c1*a+this.c2*b+this.c3*\nb*a};return THREE.Curve.create(function(a){this.points=a||[];this.closed=!1},function(a){var g=this.points,h,k;k=g.length;2>k&&console.log(\"duh, you need at least 2 points\");a*=k-(this.closed?0:1);h=Math.floor(a);a-=h;this.closed?h+=0<h?0:(Math.floor(Math.abs(h)/g.length)+1)*g.length:0===a&&h===k-1&&(h=k-2,a=1);var l,n,p;this.closed||0<h?l=g[(h-1)%k]:(b.subVectors(g[0],g[1]).add(g[0]),l=b);n=g[h%k];p=g[(h+1)%k];this.closed||h+2<k?g=g[(h+2)%k]:(b.subVectors(g[k-1],g[k-2]).add(g[k-1]),g=b);if(void 0===\nthis.type||\"centripetal\"===this.type||\"chordal\"===this.type){var m=\"chordal\"===this.type?.5:.25;k=Math.pow(l.distanceToSquared(n),m);h=Math.pow(n.distanceToSquared(p),m);m=Math.pow(p.distanceToSquared(g),m);1E-4>h&&(h=1);1E-4>k&&(k=h);1E-4>m&&(m=h);c.initNonuniformCatmullRom(l.x,n.x,p.x,g.x,k,h,m);d.initNonuniformCatmullRom(l.y,n.y,p.y,g.y,k,h,m);e.initNonuniformCatmullRom(l.z,n.z,p.z,g.z,k,h,m)}else\"catmullrom\"===this.type&&(k=void 0!==this.tension?this.tension:.5,c.initCatmullRom(l.x,n.x,p.x,g.x,\nk),d.initCatmullRom(l.y,n.y,p.y,g.y,k),e.initCatmullRom(l.z,n.z,p.z,g.z,k));return new THREE.Vector3(c.calc(a),d.calc(a),e.calc(a))})}();THREE.ClosedSplineCurve3=function(a){console.warn(\"THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.\");THREE.CatmullRomCurve3.call(this,a);this.type=\"catmullrom\";this.closed=!0};THREE.ClosedSplineCurve3.prototype=Object.create(THREE.CatmullRomCurve3.prototype);\nTHREE.BoxGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"BoxGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new THREE.BoxBufferGeometry(a,b,c,d,e,f));this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.CubeGeometry=THREE.BoxGeometry;\nTHREE.BoxBufferGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,k,l,G,K){var P=f/l,I=g/G,L=f/2,E=g/2,M=k/2;g=l+1;for(var O=G+1,Q=f=0,R=new THREE.Vector3,F=0;F<O;F++)for(var Z=F*I-E,T=0;T<g;T++)R[a]=(T*P-L)*d,R[b]=Z*e,R[c]=M,p[r]=R.x,p[r+1]=R.y,p[r+2]=R.z,R[a]=0,R[b]=0,R[c]=0<k?1:-1,m[r]=R.x,m[r+1]=R.y,m[r+2]=R.z,q[s]=T/l,q[s+1]=1-F/G,r+=3,s+=2,f+=1;for(F=0;F<G;F++)for(T=0;T<l;T++)a=v+T+g*(F+1),b=v+(T+1)+g*(F+1),c=v+(T+1)+g*F,n[u]=v+T+g*F,n[u+1]=a,n[u+2]=c,n[u+3]=a,n[u+4]=b,n[u+5]=c,u+=6,Q+=\n6;h.addGroup(x,Q,K);x+=Q;v+=f}THREE.BufferGeometry.call(this);this.type=\"BoxBufferGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var h=this;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var k=function(a,b,c){a=0+a*b*2+a*c*2;a+=c*b*2;return 4*a}(d,e,f),l=k/4*6,n=new (65535<l?Uint32Array:Uint16Array)(l),p=new Float32Array(3*k),m=new Float32Array(3*k),q=new Float32Array(2*k),r=0,s=0,u=0,v=0,x=0;g(\"z\",\"y\",\"x\",-1,-1,c,b,a,f,e,0);g(\"z\",\"y\",\n\"x\",1,-1,c,b,-a,f,e,1);g(\"x\",\"z\",\"y\",1,1,a,c,b,d,f,2);g(\"x\",\"z\",\"y\",1,-1,a,c,-b,d,f,3);g(\"x\",\"y\",\"z\",1,-1,a,b,c,d,e,4);g(\"x\",\"y\",\"z\",-1,-1,a,b,-c,d,e,5);this.setIndex(new THREE.BufferAttribute(n,1));this.addAttribute(\"position\",new THREE.BufferAttribute(p,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(m,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(q,2))};THREE.BoxBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);\nTHREE.BoxBufferGeometry.prototype.constructor=THREE.BoxBufferGeometry;THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"CircleGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new THREE.CircleBufferGeometry(a,b,c,d))};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;\nTHREE.CircleBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"CircleBufferGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=b+2,f=new Float32Array(3*e),g=new Float32Array(3*e),e=new Float32Array(2*e);g[2]=1;e[0]=.5;e[1]=.5;for(var h=0,k=3,l=2;h<=b;h++,k+=3,l+=2){var n=c+h/b*d;f[k]=a*Math.cos(n);f[k+1]=a*Math.sin(n);g[k+2]=1;e[l]=(f[k]/a+1)/2;e[l+1]=(f[k+1]/a+1)/2}c=\n[];for(k=1;k<=b;k++)c.push(k,k+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(c),1));this.addAttribute(\"position\",new THREE.BufferAttribute(f,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(g,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(e,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;\nTHREE.CylinderBufferGeometry=function(a,b,c,d,e,f,g,h){function k(c){var e,f,k;k=new THREE.Vector2;var n=new THREE.Vector3,p=0,x=!0===c?a:b,G=!0===c?1:-1;f=u;for(e=1;e<=d;e++)q.setXYZ(u,0,A*G,0),r.setXYZ(u,0,G,0),!0===c?(k.x=e/d,k.y=0):(k.x=(e-1)/d,k.y=1),s.setXY(u,k.x,k.y),u++;k=u;for(e=0;e<=d;e++){var K=e/d;n.x=x*Math.sin(K*h+g);n.y=A*G;n.z=x*Math.cos(K*h+g);q.setXYZ(u,n.x,n.y,n.z);r.setXYZ(u,0,G,0);s.setXY(u,K,!0===c?1:0);u++}for(e=0;e<d;e++)n=f+e,x=k+e,!0===c?(m.setX(v,x),v++,m.setX(v,x+1)):(m.setX(v,\nx+1),v++,m.setX(v,x)),v++,m.setX(v,n),v++,p+=3;l.addGroup(w,p,!0===c?1:2);w+=p}THREE.BufferGeometry.call(this);this.type=\"CylinderBufferGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var l=this;a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var n=function(){var a=(d+1)*(e+1);!1===f&&(a+=2*(d+1)+2*d);return a}(),\np=function(){var a=d*e*6;!1===f&&(a+=6*d);return a}(),m=new THREE.BufferAttribute(new (65535<p?Uint32Array:Uint16Array)(p),1),q=new THREE.BufferAttribute(new Float32Array(3*n),3),r=new THREE.BufferAttribute(new Float32Array(3*n),3),s=new THREE.BufferAttribute(new Float32Array(2*n),2),u=0,v=0,x=[],A=c/2,w=0;(function(){var f,k,n=new THREE.Vector3,p=new THREE.Vector3,J=0,D=(b-a)/c;for(k=0;k<=e;k++){var H=[],G=k/e,K=G*(b-a)+a;for(f=0;f<=d;f++){var P=f/d;p.x=K*Math.sin(P*h+g);p.y=-G*c+A;p.z=K*Math.cos(P*\nh+g);q.setXYZ(u,p.x,p.y,p.z);n.copy(p);if(0===a&&0===k||0===b&&k===e)n.x=Math.sin(P*h+g),n.z=Math.cos(P*h+g);n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*D).normalize();r.setXYZ(u,n.x,n.y,n.z);s.setXY(u,P,1-G);H.push(u);u++}x.push(H)}for(f=0;f<d;f++)for(k=0;k<e;k++)n=x[k+1][f],p=x[k+1][f+1],D=x[k][f+1],m.setX(v,x[k][f]),v++,m.setX(v,n),v++,m.setX(v,D),v++,m.setX(v,n),v++,m.setX(v,p),v++,m.setX(v,D),v++,J+=6;l.addGroup(w,J,0);w+=J})();!1===f&&(0<a&&k(!0),0<b&&k(!1));this.setIndex(m);this.addAttribute(\"position\",\nq);this.addAttribute(\"normal\",r);this.addAttribute(\"uv\",s)};THREE.CylinderBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CylinderBufferGeometry.prototype.constructor=THREE.CylinderBufferGeometry;\nTHREE.CylinderGeometry=function(a,b,c,d,e,f,g,h){THREE.Geometry.call(this);this.type=\"CylinderGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new THREE.CylinderBufferGeometry(a,b,c,d,e,f,g,h));this.mergeVertices()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;\nTHREE.EdgesGeometry=function(a,b){function c(a,b){return a-b}THREE.BufferGeometry.call(this);var d=Math.cos(THREE.Math.DEG2RAD*(void 0!==b?b:1)),e=[0,0],f={},g=[\"a\",\"b\",\"c\"],h;a instanceof THREE.BufferGeometry?(h=new THREE.Geometry,h.fromBufferGeometry(a)):h=a.clone();h.mergeVertices();h.computeFaceNormals();var k=h.vertices;h=h.faces;for(var l=0,n=h.length;l<n;l++)for(var p=h[l],m=0;3>m;m++){e[0]=p[g[m]];e[1]=p[g[(m+1)%3]];e.sort(c);var q=e.toString();void 0===f[q]?f[q]={vert1:e[0],vert2:e[1],face1:l,\nface2:void 0}:f[q].face2=l}e=[];for(q in f)if(g=f[q],void 0===g.face2||h[g.face1].normal.dot(h[g.face2].normal)<=d)l=k[g.vert1],e.push(l.x),e.push(l.y),e.push(l.z),l=k[g.vert2],e.push(l.x),e.push(l.y),e.push(l.z);this.addAttribute(\"position\",new THREE.BufferAttribute(new Float32Array(e),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;\nTHREE.ExtrudeGeometry=function(a,b){\"undefined\"!==typeof a&&(THREE.Geometry.call(this),this.type=\"ExtrudeGeometry\",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};\nTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.error(\"THREE.ExtrudeGeometry: vec does not exist\");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=1,d=a.x-b.x,e=a.y-b.y,f=c.x-a.x,g=c.y-a.y,h=d*d+e*e;if(Math.abs(d*g-e*f)>Number.EPSILON){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e/k;b=b.y+d/k;f=((c.x-g/l-h)*g-(c.y+f/l-b)*f)/(d*g-e*f);c=h+d*f-a.x;a=b+e*f-a.y;d=c*c+a*a;if(2>=d)return new THREE.Vector2(c,a);d=Math.sqrt(d/2)}else a=!1,d>Number.EPSILON?\nf>Number.EPSILON&&(a=!0):d<-Number.EPSILON?f<-Number.EPSILON&&(a=!0):Math.sign(e)===Math.sign(g)&&(a=!0),a?(c=-e,a=d,d=Math.sqrt(h)):(c=d,a=e,d=Math.sqrt(h/2));return new THREE.Vector2(c/d,a/d)}function e(a,b){var c,d;for(F=a.length;0<=--F;){c=F;d=F-1;0>d&&(d=a.length-1);for(var e=0,f=q+2*n,e=0;e<f;e++){var g=O*e,h=O*(e+1),k=b+c+g,g=b+d+g,l=b+d+h,h=b+c+h,k=k+D,g=g+D,l=l+D,h=h+D;J.faces.push(new THREE.Face3(k,g,h,null,null,1));J.faces.push(new THREE.Face3(g,l,h,null,null,1));k=v.generateSideWallUV(J,\nk,g,l,h);J.faceVertexUvs[0].push([k[0],k[1],k[3]]);J.faceVertexUvs[0].push([k[1],k[2],k[3]])}}}function f(a,b,c){J.vertices.push(new THREE.Vector3(a,b,c))}function g(a,b,c){a+=D;b+=D;c+=D;J.faces.push(new THREE.Face3(a,b,c,null,null,0));a=v.generateTopUV(J,a,b,c);J.faceVertexUvs[0].push(a)}var h=void 0!==b.amount?b.amount:100,k=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:k-2,n=void 0!==b.bevelSegments?b.bevelSegments:3,p=void 0!==b.bevelEnabled?b.bevelEnabled:!0,\nm=void 0!==b.curveSegments?b.curveSegments:12,q=void 0!==b.steps?b.steps:1,r=b.extrudePath,s,u=!1,v=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,x,A,w,B;r&&(s=r.getSpacedPoints(q),u=!0,p=!1,x=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(r,q,!1),A=new THREE.Vector3,w=new THREE.Vector3,B=new THREE.Vector3);p||(l=k=n=0);var z,y,C,J=this,D=this.vertices.length,r=a.extractPoints(m),m=r.shape,H=r.holes;if(r=!THREE.ShapeUtils.isClockWise(m)){m=m.reverse();\ny=0;for(C=H.length;y<C;y++)z=H[y],THREE.ShapeUtils.isClockWise(z)&&(H[y]=z.reverse());r=!1}var G=THREE.ShapeUtils.triangulateShape(m,H),K=m;y=0;for(C=H.length;y<C;y++)z=H[y],m=m.concat(z);var P,I,L,E,M,O=m.length,Q,R=G.length,r=[],F=0;L=K.length;P=L-1;for(I=F+1;F<L;F++,P++,I++)P===L&&(P=0),I===L&&(I=0),r[F]=d(K[F],K[P],K[I]);var Z=[],T,X=r.concat();y=0;for(C=H.length;y<C;y++){z=H[y];T=[];F=0;L=z.length;P=L-1;for(I=F+1;F<L;F++,P++,I++)P===L&&(P=0),I===L&&(I=0),T[F]=d(z[F],z[P],z[I]);Z.push(T);X=X.concat(T)}for(P=\n0;P<n;P++){L=P/n;E=k*(1-L);I=l*Math.sin(L*Math.PI/2);F=0;for(L=K.length;F<L;F++)M=c(K[F],r[F],I),f(M.x,M.y,-E);y=0;for(C=H.length;y<C;y++)for(z=H[y],T=Z[y],F=0,L=z.length;F<L;F++)M=c(z[F],T[F],I),f(M.x,M.y,-E)}I=l;for(F=0;F<O;F++)M=p?c(m[F],X[F],I):m[F],u?(w.copy(x.normals[0]).multiplyScalar(M.x),A.copy(x.binormals[0]).multiplyScalar(M.y),B.copy(s[0]).add(w).add(A),f(B.x,B.y,B.z)):f(M.x,M.y,0);for(L=1;L<=q;L++)for(F=0;F<O;F++)M=p?c(m[F],X[F],I):m[F],u?(w.copy(x.normals[L]).multiplyScalar(M.x),A.copy(x.binormals[L]).multiplyScalar(M.y),\nB.copy(s[L]).add(w).add(A),f(B.x,B.y,B.z)):f(M.x,M.y,h/q*L);for(P=n-1;0<=P;P--){L=P/n;E=k*(1-L);I=l*Math.sin(L*Math.PI/2);F=0;for(L=K.length;F<L;F++)M=c(K[F],r[F],I),f(M.x,M.y,h+E);y=0;for(C=H.length;y<C;y++)for(z=H[y],T=Z[y],F=0,L=z.length;F<L;F++)M=c(z[F],T[F],I),u?f(M.x,M.y+s[q-1].y,s[q-1].x+E):f(M.x,M.y,h+E)}(function(){if(p){var a;a=0*O;for(F=0;F<R;F++)Q=G[F],g(Q[2]+a,Q[1]+a,Q[0]+a);a=q+2*n;a*=O;for(F=0;F<R;F++)Q=G[F],g(Q[0]+a,Q[1]+a,Q[2]+a)}else{for(F=0;F<R;F++)Q=G[F],g(Q[2],Q[1],Q[0]);for(F=\n0;F<R;F++)Q=G[F],g(Q[0]+O*q,Q[1]+O*q,Q[2]+O*q)}})();(function(){var a=0;e(K,a);a+=K.length;y=0;for(C=H.length;y<C;y++)z=H[y],e(z,a),a+=z.length})()};\nTHREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y),new THREE.Vector2(d.x,d.y)]},generateSideWallUV:function(a,b,c,d,e){a=a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return.01>Math.abs(b.y-c.y)?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(d.y,\n1-d.z),new THREE.Vector2(e.y,1-e.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type=\"ShapeGeometry\";!1===Array.isArray(a)&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};\nTHREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var k=e.shape,l=e.holes;if(!THREE.ShapeUtils.isClockWise(k))for(k=k.reverse(),e=0,f=l.length;e<f;e++)g=l[e],THREE.ShapeUtils.isClockWise(g)&&(l[e]=g.reverse());var n=THREE.ShapeUtils.triangulateShape(k,l);e=0;for(f=l.length;e<f;e++)g=l[e],k=k.concat(g);\nl=k.length;f=n.length;for(e=0;e<l;e++)g=k[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)l=n[e],k=l[0]+h,g=l[1]+h,l=l[2]+h,this.faces.push(new THREE.Face3(k,g,l,null,null,c)),this.faceVertexUvs[0].push(d.generateTopUV(this,k,g,l))};\nTHREE.LatheBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"LatheBufferGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=THREE.Math.clamp(d,0,2*Math.PI);for(var e=(b+1)*a.length,f=b*a.length*6,g=new THREE.BufferAttribute(new (65535<f?Uint32Array:Uint16Array)(f),1),h=new THREE.BufferAttribute(new Float32Array(3*e),3),k=new THREE.BufferAttribute(new Float32Array(2*e),2),l=0,n=0,p=1/b,m=new THREE.Vector3,q=new THREE.Vector2,\ne=0;e<=b;e++)for(var f=c+e*p*d,r=Math.sin(f),s=Math.cos(f),f=0;f<=a.length-1;f++)m.x=a[f].x*r,m.y=a[f].y,m.z=a[f].x*s,h.setXYZ(l,m.x,m.y,m.z),q.x=e/b,q.y=f/(a.length-1),k.setXY(l,q.x,q.y),l++;for(e=0;e<b;e++)for(f=0;f<a.length-1;f++)c=f+e*a.length,l=c+a.length,p=c+a.length+1,m=c+1,g.setX(n,c),n++,g.setX(n,l),n++,g.setX(n,m),n++,g.setX(n,l),n++,g.setX(n,p),n++,g.setX(n,m),n++;this.setIndex(g);this.addAttribute(\"position\",h);this.addAttribute(\"uv\",k);this.computeVertexNormals();if(d===2*Math.PI)for(d=\nthis.attributes.normal.array,g=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,c=b*a.length*3,f=e=0;e<a.length;e++,f+=3)g.x=d[f+0],g.y=d[f+1],g.z=d[f+2],h.x=d[c+f+0],h.y=d[c+f+1],h.z=d[c+f+2],k.addVectors(g,h).normalize(),d[f+0]=d[c+f+0]=k.x,d[f+1]=d[c+f+1]=k.y,d[f+2]=d[c+f+2]=k.z};THREE.LatheBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.LatheBufferGeometry.prototype.constructor=THREE.LatheBufferGeometry;\nTHREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"LatheGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new THREE.LatheBufferGeometry(a,b,c,d));this.mergeVertices()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;\nTHREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"PlaneGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;\nTHREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"PlaneBufferGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,f=b/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a/c,l=b/d;b=new Float32Array(g*h*3);a=new Float32Array(g*h*3);for(var n=new Float32Array(g*h*2),p=0,m=0,q=0;q<h;q++)for(var r=q*l-f,s=0;s<g;s++)b[p]=s*k-e,b[p+1]=-r,a[p+2]=1,n[m]=s/c,n[m+1]=1-q/d,p+=3,m+=2;p=0;e=new (65535<b.length/3?Uint32Array:Uint16Array)(c*\nd*6);for(q=0;q<d;q++)for(s=0;s<c;s++)f=s+g*(q+1),h=s+1+g*(q+1),k=s+1+g*q,e[p]=s+g*q,e[p+1]=f,e[p+2]=k,e[p+3]=f,e[p+4]=h,e[p+5]=k,p+=6;this.setIndex(new THREE.BufferAttribute(e,1));this.addAttribute(\"position\",new THREE.BufferAttribute(b,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(a,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(n,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;\nTHREE.RingBufferGeometry=function(a,b,c,d,e,f){THREE.BufferGeometry.call(this);this.type=\"RingBufferGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||20;b=b||50;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;var g=(c+1)*(d+1),h=c*d*6,h=new THREE.BufferAttribute(new (65535<h?Uint32Array:Uint16Array)(h),1),k=new THREE.BufferAttribute(new Float32Array(3*g),3),l=new THREE.BufferAttribute(new Float32Array(3*\ng),3),g=new THREE.BufferAttribute(new Float32Array(2*g),2),n=0,p=0,m,q=a,r=(b-a)/d,s=new THREE.Vector3,u=new THREE.Vector2,v;for(a=0;a<=d;a++){for(v=0;v<=c;v++)m=e+v/c*f,s.x=q*Math.cos(m),s.y=q*Math.sin(m),k.setXYZ(n,s.x,s.y,s.z),l.setXYZ(n,0,0,1),u.x=(s.x/b+1)/2,u.y=(s.y/b+1)/2,g.setXY(n,u.x,u.y),n++;q+=r}for(a=0;a<d;a++)for(b=a*(c+1),v=0;v<c;v++)e=m=v+b,f=m+c+1,n=m+c+2,m+=1,h.setX(p,e),p++,h.setX(p,f),p++,h.setX(p,n),p++,h.setX(p,e),p++,h.setX(p,n),p++,h.setX(p,m),p++;this.setIndex(h);this.addAttribute(\"position\",\nk);this.addAttribute(\"normal\",l);this.addAttribute(\"uv\",g)};THREE.RingBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.RingBufferGeometry.prototype.constructor=THREE.RingBufferGeometry;THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"RingGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new THREE.RingBufferGeometry(a,b,c,d,e,f))};\nTHREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type=\"SphereGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new THREE.SphereBufferGeometry(a,b,c,d,e,f,g))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;\nTHREE.SphereBufferGeometry=function(a,b,c,d,e,f,g){THREE.BufferGeometry.call(this);this.type=\"SphereBufferGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;for(var h=f+g,k=(b+1)*(c+1),l=new THREE.BufferAttribute(new Float32Array(3*k),3),n=new THREE.BufferAttribute(new Float32Array(3*\nk),3),k=new THREE.BufferAttribute(new Float32Array(2*k),2),p=0,m=[],q=new THREE.Vector3,r=0;r<=c;r++){for(var s=[],u=r/c,v=0;v<=b;v++){var x=v/b,A=-a*Math.cos(d+x*e)*Math.sin(f+u*g),w=a*Math.cos(f+u*g),B=a*Math.sin(d+x*e)*Math.sin(f+u*g);q.set(A,w,B).normalize();l.setXYZ(p,A,w,B);n.setXYZ(p,q.x,q.y,q.z);k.setXY(p,x,1-u);s.push(p);p++}m.push(s)}d=[];for(r=0;r<c;r++)for(v=0;v<b;v++)e=m[r][v+1],g=m[r][v],p=m[r+1][v],q=m[r+1][v+1],(0!==r||0<f)&&d.push(e,g,q),(r!==c-1||h<Math.PI)&&d.push(g,p,q);this.setIndex(new (65535<\nl.count?THREE.Uint32Attribute:THREE.Uint16Attribute)(d,1));this.addAttribute(\"position\",l);this.addAttribute(\"normal\",n);this.addAttribute(\"uv\",k);this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;\nTHREE.TextGeometry=function(a,b){b=b||{};var c=b.font;if(!1===c instanceof THREE.Font)return console.error(\"THREE.TextGeometry: font parameter is not an instance of THREE.Font.\"),new THREE.Geometry;c=c.generateShapes(a,b.size,b.curveSegments);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b);this.type=\"TextGeometry\"};\nTHREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;\nTHREE.TorusBufferGeometry=function(a,b,c,d,e){THREE.BufferGeometry.call(this);this.type=\"TorusBufferGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=Math.floor(c)||8;d=Math.floor(d)||6;e=e||2*Math.PI;var f=(c+1)*(d+1),g=c*d*6,g=new (65535<g?Uint32Array:Uint16Array)(g),h=new Float32Array(3*f),k=new Float32Array(3*f),f=new Float32Array(2*f),l=0,n=0,p=0,m=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3,s,u;for(s=0;s<=c;s++)for(u=0;u<=d;u++){var v=\nu/d*e,x=s/c*Math.PI*2;q.x=(a+b*Math.cos(x))*Math.cos(v);q.y=(a+b*Math.cos(x))*Math.sin(v);q.z=b*Math.sin(x);h[l]=q.x;h[l+1]=q.y;h[l+2]=q.z;m.x=a*Math.cos(v);m.y=a*Math.sin(v);r.subVectors(q,m).normalize();k[l]=r.x;k[l+1]=r.y;k[l+2]=r.z;f[n]=u/d;f[n+1]=s/c;l+=3;n+=2}for(s=1;s<=c;s++)for(u=1;u<=d;u++)a=(d+1)*(s-1)+u-1,b=(d+1)*(s-1)+u,e=(d+1)*s+u,g[p]=(d+1)*s+u-1,g[p+1]=a,g[p+2]=e,g[p+3]=a,g[p+4]=b,g[p+5]=e,p+=6;this.setIndex(new THREE.BufferAttribute(g,1));this.addAttribute(\"position\",new THREE.BufferAttribute(h,\n3));this.addAttribute(\"normal\",new THREE.BufferAttribute(k,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(f,2))};THREE.TorusBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.TorusBufferGeometry.prototype.constructor=THREE.TorusBufferGeometry;\nTHREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.type=\"TorusGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new THREE.TorusBufferGeometry(a,b,c,d,e))};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;\nTHREE.TorusKnotBufferGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);a*=c/b;b=Math.cos(a);e.x=d*(2+b)*.5*f;e.y=d*(2+b)*g*.5;e.z=d*Math.sin(a)*.5}THREE.BufferGeometry.call(this);this.type=\"TorusKnotBufferGeometry\";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||100;b=b||40;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=(d+1)*(c+1),k=d*c*6,k=new THREE.BufferAttribute(new (65535<k?Uint32Array:Uint16Array)(k),1),l=new THREE.BufferAttribute(new Float32Array(3*\nh),3),n=new THREE.BufferAttribute(new Float32Array(3*h),3),h=new THREE.BufferAttribute(new Float32Array(2*h),2),p,m,q=0,r=0,s=new THREE.Vector3,u=new THREE.Vector3,v=new THREE.Vector2,x=new THREE.Vector3,A=new THREE.Vector3,w=new THREE.Vector3,B=new THREE.Vector3,z=new THREE.Vector3;for(p=0;p<=c;++p)for(m=p/c*e*Math.PI*2,g(m,e,f,a,x),g(m+.01,e,f,a,A),B.subVectors(A,x),z.addVectors(A,x),w.crossVectors(B,z),z.crossVectors(w,B),w.normalize(),z.normalize(),m=0;m<=d;++m){var y=m/d*Math.PI*2,C=-b*Math.cos(y),\ny=b*Math.sin(y);s.x=x.x+(C*z.x+y*w.x);s.y=x.y+(C*z.y+y*w.y);s.z=x.z+(C*z.z+y*w.z);l.setXYZ(q,s.x,s.y,s.z);u.subVectors(s,x).normalize();n.setXYZ(q,u.x,u.y,u.z);v.x=p/c;v.y=m/d;h.setXY(q,v.x,v.y);q++}for(m=1;m<=c;m++)for(p=1;p<=d;p++)a=(d+1)*m+(p-1),b=(d+1)*m+p,e=(d+1)*(m-1)+p,k.setX(r,(d+1)*(m-1)+(p-1)),r++,k.setX(r,a),r++,k.setX(r,e),r++,k.setX(r,a),r++,k.setX(r,b),r++,k.setX(r,e),r++;this.setIndex(k);this.addAttribute(\"position\",l);this.addAttribute(\"normal\",n);this.addAttribute(\"uv\",h)};\nTHREE.TorusKnotBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.TorusKnotBufferGeometry.prototype.constructor=THREE.TorusKnotBufferGeometry;\nTHREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type=\"TorusKnotGeometry\";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn(\"THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.\");this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(a,b,c,d,e,f));this.mergeVertices()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;\nTHREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"TubeGeometry\";this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e,taper:f};b=b||64;c=c||1;d=d||8;e=e||!1;f=f||THREE.TubeGeometry.NoTaper;var g=[],h,k,l=b+1,n,p,m,q,r,s=new THREE.Vector3,u,v,x;u=new THREE.TubeGeometry.FrenetFrames(a,b,e);v=u.normals;x=u.binormals;this.tangents=u.tangents;this.normals=v;this.binormals=x;for(u=0;u<l;u++)for(g[u]=[],n=u/(l-1),r=a.getPointAt(n),h=v[u],k=x[u],m=c*f(n),n=0;n<\nd;n++)p=n/d*2*Math.PI,q=-m*Math.cos(p),p=m*Math.sin(p),s.copy(r),s.x+=q*h.x+p*k.x,s.y+=q*h.y+p*k.y,s.z+=q*h.z+p*k.z,g[u][n]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1;for(u=0;u<b;u++)for(n=0;n<d;n++)f=e?(u+1)%b:u+1,l=(n+1)%d,a=g[u][n],c=g[f][n],f=g[f][l],l=g[u][l],s=new THREE.Vector2(u/b,n/d),v=new THREE.Vector2((u+1)/b,n/d),x=new THREE.Vector2((u+1)/b,(n+1)/d),h=new THREE.Vector2(u/b,(n+1)/d),this.faces.push(new THREE.Face3(a,c,l)),this.faceVertexUvs[0].push([s,v,h]),this.faces.push(new THREE.Face3(c,\nf,l)),this.faceVertexUvs[0].push([v.clone(),x,h.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};\nTHREE.TubeGeometry.FrenetFrames=function(a,b,c){var d=new THREE.Vector3,e=[],f=[],g=[],h=new THREE.Vector3,k=new THREE.Matrix4;b+=1;var l,n,p;this.tangents=e;this.normals=f;this.binormals=g;for(l=0;l<b;l++)n=l/(b-1),e[l]=a.getTangentAt(n),e[l].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;l=Math.abs(e[0].x);n=Math.abs(e[0].y);p=Math.abs(e[0].z);l<=a&&(a=l,d.set(1,0,0));n<=a&&(a=n,d.set(0,1,0));p<=a&&d.set(0,0,1);h.crossVectors(e[0],d).normalize();f[0].crossVectors(e[0],\nh);g[0].crossVectors(e[0],f[0]);for(l=1;l<b;l++)f[l]=f[l-1].clone(),g[l]=g[l-1].clone(),h.crossVectors(e[l-1],e[l]),h.length()>Number.EPSILON&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[l-1].dot(e[l]),-1,1)),f[l].applyMatrix4(k.makeRotationAxis(h,d))),g[l].crossVectors(e[l],f[l]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),l=1;l<b;l++)f[l].applyMatrix4(k.makeRotationAxis(e[l],d*l)),g[l].crossVectors(e[l],f[l])};\nTHREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c,d){d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()],void 0,d);k.faces.push(d);u.copy(a).add(b).add(c).divideScalar(3);d=Math.atan2(u.z,-u.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function g(a,\nb){for(var c=Math.pow(2,b),d=e(k.vertices[a.a]),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),l=[],m=a.materialIndex,n=0;n<=c;n++){l[n]=[];for(var p=e(d.clone().lerp(h,n/c)),q=e(g.clone().lerp(h,n/c)),r=c-n,s=0;s<=r;s++)l[n][s]=0===s&&n===c?p:e(p.clone().lerp(q,s/r))}for(n=0;n<c;n++)for(s=0;s<2*(c-n)-1;s++)d=Math.floor(s/2),0===s%2?f(l[n][d+1],l[n+1][d],l[n][d],m):f(l[n][d+1],l[n+1][d+1],l[n+1][d],m)}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/\n2/Math.PI+.5,a.y));return a.clone()}THREE.Geometry.call(this);this.type=\"PolyhedronGeometry\";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;for(var k=this,l=0,n=a.length;l<n;l+=3)e(new THREE.Vector3(a[l],a[l+1],a[l+2]));a=this.vertices;for(var p=[],m=l=0,n=b.length;l<n;l+=3,m++){var q=a[b[l]],r=a[b[l+1]],s=a[b[l+2]];p[m]=new THREE.Face3(q.index,r.index,s.index,[q.clone(),r.clone(),s.clone()],void 0,m)}for(var u=new THREE.Vector3,l=0,n=p.length;l<n;l++)g(p[l],d);l=0;for(n=this.faceVertexUvs[0].length;l<\nn;l++)b=this.faceVertexUvs[0][l],d=b[0].x,a=b[1].x,p=b[2].x,m=Math.max(d,a,p),q=Math.min(d,a,p),.9<m&&.1>q&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>p&&(b[2].x+=1));l=0;for(n=this.vertices.length;l<n;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;\nTHREE.DodecahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2,d=1/c;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,\n12,14,1,14,5,1,5,9],a,b);this.type=\"DodecahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;\nTHREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type=\"IcosahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type=\"OctahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;\nTHREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type=\"TetrahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;\nTHREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);this.type=\"ParametricGeometry\";this.parameters={func:a,slices:b,stacks:c};var d=this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,k,l,n=b+1;for(g=0;g<=c;g++)for(l=g/c,h=0;h<=b;h++)k=h/b,k=a(k,l),d.push(k);var p,m,q,r;for(g=0;g<c;g++)for(h=0;h<b;h++)a=g*n+h,d=g*n+h+1,l=(g+1)*n+h+1,k=(g+1)*n+h,p=new THREE.Vector2(h/b,g/c),m=new THREE.Vector2((h+1)/b,g/c),q=new THREE.Vector2((h+1)/b,(g+1)/c),r=new THREE.Vector2(h/b,(g+1)/c),e.push(new THREE.Face3(a,\nd,k)),f.push([p,m,r]),e.push(new THREE.Face3(d,l,k)),f.push([m.clone(),q,r.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;\nTHREE.WireframeGeometry=function(a){function b(a,b){return a-b}THREE.BufferGeometry.call(this);var c=[0,0],d={},e=[\"a\",\"b\",\"c\"];if(a instanceof THREE.Geometry){var f=a.vertices,g=a.faces,h=0,k=new Uint32Array(6*g.length);a=0;for(var l=g.length;a<l;a++)for(var n=g[a],p=0;3>p;p++){c[0]=n[e[p]];c[1]=n[e[(p+1)%3]];c.sort(b);var m=c.toString();void 0===d[m]&&(k[2*h]=c[0],k[2*h+1]=c[1],d[m]=!0,h++)}c=new Float32Array(6*h);a=0;for(l=h;a<l;a++)for(p=0;2>p;p++)d=f[k[2*a+p]],h=6*a+3*p,c[h+0]=d.x,c[h+1]=d.y,\nc[h+2]=d.z;this.addAttribute(\"position\",new THREE.BufferAttribute(c,3))}else if(a instanceof THREE.BufferGeometry){if(null!==a.index){l=a.index.array;f=a.attributes.position;e=a.groups;h=0;0===e.length&&a.addGroup(0,l.length);k=new Uint32Array(2*l.length);g=0;for(n=e.length;g<n;++g){a=e[g];p=a.start;m=a.count;a=p;for(var q=p+m;a<q;a+=3)for(p=0;3>p;p++)c[0]=l[a+p],c[1]=l[a+(p+1)%3],c.sort(b),m=c.toString(),void 0===d[m]&&(k[2*h]=c[0],k[2*h+1]=c[1],d[m]=!0,h++)}c=new Float32Array(6*h);a=0;for(l=h;a<\nl;a++)for(p=0;2>p;p++)h=6*a+3*p,d=k[2*a+p],c[h+0]=f.getX(d),c[h+1]=f.getY(d),c[h+2]=f.getZ(d)}else for(f=a.attributes.position.array,h=f.length/3,k=h/3,c=new Float32Array(6*h),a=0,l=k;a<l;a++)for(p=0;3>p;p++)h=18*a+6*p,k=9*a+3*p,c[h+0]=f[k],c[h+1]=f[k+1],c[h+2]=f[k+2],d=9*a+(p+1)%3*3,c[h+3]=f[d],c[h+4]=f[d+1],c[h+5]=f[d+2];this.addAttribute(\"position\",new THREE.BufferAttribute(c,3))}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);\nTHREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.BufferAttribute(b,3));a.addAttribute(\"color\",new THREE.BufferAttribute(c,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,a,b)};THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype);\nTHREE.AxisHelper.prototype.constructor=THREE.AxisHelper;\nTHREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var b=new THREE.CylinderGeometry(0,.5,1,5,1);b.translate(0,-.5,0);return function(c,d,e,f,g,h){THREE.Object3D.call(this);void 0===f&&(f=16776960);void 0===e&&(e=1);void 0===g&&(g=.2*e);void 0===h&&(h=.2*g);this.position.copy(d);this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:f}));\nthis.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(c);this.setLength(e,g,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();\nTHREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,Math.max(0,a-b),1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a);this.cone.material.color.set(a)};\nTHREE.BoxHelper=function(a){var b=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),c=new Float32Array(24),d=new THREE.BufferGeometry;d.setIndex(new THREE.BufferAttribute(b,1));d.addAttribute(\"position\",new THREE.BufferAttribute(c,3));THREE.LineSegments.call(this,d,new THREE.LineBasicMaterial({color:16776960}));void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;\nTHREE.BoxHelper.prototype.update=function(){var a=new THREE.Box3;return function(b){b instanceof THREE.Box3?a.copy(b):a.setFromObject(b);if(!a.isEmpty()){b=a.min;var c=a.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=c.z;e[12]=c.x;e[13]=c.y;e[14]=b.z;e[15]=b.x;e[16]=c.y;e[17]=b.z;e[18]=b.x;e[19]=b.y;e[20]=b.z;e[21]=c.x;e[22]=b.y;e[23]=b.z;d.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();\nTHREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};\nTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b(\"n1\",\"n2\",16755200);b(\"n2\",\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);\nb(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);THREE.LineSegments.call(this,d,e);this.camera=a;this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};\nTHREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;\nTHREE.CameraHelper.prototype.update=function(){function a(a,g,h,k){d.set(g,h,k).unproject(e);a=c[a];if(void 0!==a)for(g=0,h=a.length;g<h;g++)b.vertices[a[g]].copy(d)}var b,c,d=new THREE.Vector3,e=new THREE.Camera;return function(){b=this.geometry;c=this.pointMap;e.projectionMatrix.copy(this.camera.projectionMatrix);a(\"c\",0,0,-1);a(\"t\",0,0,1);a(\"n1\",-1,-1,-1);a(\"n2\",1,-1,-1);a(\"n3\",-1,1,-1);a(\"n4\",1,1,-1);a(\"f1\",-1,-1,1);a(\"f2\",1,-1,1);a(\"f3\",-1,1,1);a(\"f4\",1,1,1);a(\"u1\",.7,1.1,-1);a(\"u2\",-.7,1.1,\n-1);a(\"u3\",0,2,-1);a(\"cf1\",-1,0,1);a(\"cf2\",1,0,1);a(\"cf3\",0,-1,1);a(\"cf4\",0,1,1);a(\"cn1\",-1,0,-1);a(\"cn2\",1,0,-1);a(\"cn3\",0,-1,-1);a(\"cn4\",0,1,-1);b.verticesNeedUpdate=!0}}();\nTHREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(c,d);this.add(this.lightPlane);\nc=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3);d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(c,d);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;\nTHREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};\nTHREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(c);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();\nTHREE.EdgesHelper=function(a,b,c){b=void 0!==b?b:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(a.geometry,c),new THREE.LineBasicMaterial({color:b}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;\nTHREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=c.faces.length:console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(6*b,3);c.addAttribute(\"position\",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=\n!1;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;\nTHREE.FaceNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,f=f.faces,h=0,k=0,l=f.length;k<l;k++){var n=f[k],p=n.normal;a.copy(g[n.a]).add(g[n.b]).add(g[n.c]).divideScalar(3).applyMatrix4(d);b.copy(p).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);\ne.setXYZ(h,a.x,a.y,a.z);h+=1;e.setXYZ(h,b.x,b.y,b.z);h+=1}e.needsUpdate=!0;return this}}();\nTHREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var e=-a;e<=a;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.LineSegments.call(this,c,d)};THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype);\nTHREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};\nTHREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.rotateX(-Math.PI/2);for(var d=0;8>d;d++)c.faces[d].color=this.colors[4>d?0:1];d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,d);this.add(this.lightSphere);this.update()};\nTHREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};\nTHREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();\nTHREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;\nTHREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};\nTHREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)));b.dynamic=!0;c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.LineSegments.call(this,b,c);this.root=a;this.matrix=a.matrixWorld;\nthis.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b};\nTHREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var f=this.bones[e];f.parent instanceof THREE.Bone&&(c.multiplyMatrices(b,f.matrixWorld),a.vertices[d].setFromMatrixPosition(c),c.multiplyMatrices(b,f.parent.matrixWorld),a.vertices[d+1].setFromMatrixPosition(c),d+=2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};\nTHREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.BufferGeometry;for(var b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],c=0,d=1;32>c;c++,d++){var e=c/32*Math.PI*2,f=d/32*Math.PI*2;b.push(Math.cos(e),Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute(\"position\",new THREE.Float32Attribute(b,3));b=new THREE.LineBasicMaterial({fog:!1});this.cone=new THREE.LineSegments(a,\nb);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};\nTHREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E3,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();\nTHREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=3*c.faces.length:c instanceof THREE.BufferGeometry&&(b=c.attributes.normal.count);c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(6*b,3);c.addAttribute(\"position\",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()};\nTHREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;\nTHREE.VertexNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){var d=[\"a\",\"b\",\"c\"];this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld,f=this.geometry.attributes.position,g=this.object.geometry;if(g instanceof THREE.Geometry)for(var h=g.vertices,k=g.faces,l=g=0,n=k.length;l<n;l++)for(var p=k[l],m=0,q=p.vertexNormals.length;m<q;m++){var r=p.vertexNormals[m];a.copy(h[p[d[m]]]).applyMatrix4(e);\nb.copy(r).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);f.setXYZ(g,a.x,a.y,a.z);g+=1;f.setXYZ(g,b.x,b.y,b.z);g+=1}else if(g instanceof THREE.BufferGeometry)for(d=g.attributes.position,h=g.attributes.normal,m=g=0,q=d.count;m<q;m++)a.set(d.getX(m),d.getY(m),d.getZ(m)).applyMatrix4(e),b.set(h.getX(m),h.getY(m),h.getZ(m)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),f.setXYZ(g,a.x,a.y,a.z),g+=1,f.setXYZ(g,b.x,b.y,b.z),g+=1;f.needsUpdate=!0;return this}}();\nTHREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(a.geometry),new THREE.LineBasicMaterial({color:c}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(a){THREE.Object3D.call(this);this.material=a;this.render=function(a){}};\nTHREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation(\"__default\",0,c-1,c/1);this.setAnimationWeight(\"__default\",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;\nTHREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={start:b,end:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\\d+)/i,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var k=h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};\nTHREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};\nTHREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn(\"THREE.MorphBlendMesh: animation[\"+a+\"] undefined in .playAnimation()\")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};\nTHREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.start+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&\n(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);d.currentFrame!==d.lastFrame?(this.morphTargetInfluences[d.currentFrame]=e*g,this.morphTargetInfluences[d.lastFrame]=(1-e)*g):this.morphTargetInfluences[d.currentFrame]=g}}};THREE.TypedArrayUtils={};\nTHREE.TypedArrayUtils.quicksortIP=function(){var a=new Float32Array(4),b=new Float32Array(4);return function(c,d,e,f,g){g=(g||c.length/d)-1;var h=[],k=-1;f=f||0;for(var l=0,n=0,p=0,m=function(a,b){a*=d;b*=d;for(p=0;p<d;p++)l=c[a+p],c[a+p]=c[b+p],c[b+p]=l},q,r;;)if(25>=g-f){for(r=f+1;r<=g;r++){for(n=0;n<d;n++)a[n]=c[r*d+n];for(q=r-1;q>=f&&c[q*d+e]>a[e];){for(n=0;n<d;n++)c[(q+1)*d+n]=c[q*d+n];q--}for(n=0;n<d;n++)c[(q+1)*d+n]=a[n]}if(-1==k)break;g=h[k--];f=h[k--]}else{n=f+g>>1;q=f+1;r=g;m(n,q);c[f*d+\ne]>c[g*d+e]&&m(f,g);c[q*d+e]>c[g*d+e]&&m(q,g);c[f*d+e]>c[q*d+e]&&m(f,q);for(n=0;n<d;n++)b[n]=c[q*d+n];for(;;){do q++;while(c[q*d+e]<b[e]);do r--;while(c[r*d+e]>b[e]);if(r<q)break;m(q,r)}for(n=0;n<d;n++)c[(f+1)*d+n]=c[r*d+n],c[r*d+n]=b[n];g-q+1>=r-f?(h[++k]=q,h[++k]=g,g=r-1):(h[++k]=f,h[++k]=r-1,f=q)}return c}}();\nTHREE.TypedArrayUtils.Kdtree=function(a,b,c,d){function e(b,f,n,p){var m=b%c,q=p-n;b>h&&(h=b);if(0===q)return null;1===q&&new g.Node((0+n)*c,f);m<d&&THREE.TypedArrayUtils.quicksortIP(a,c,m,n,p);m=Math.floor(q/2);f=new g.Node((m+n)*c,f);f.left=e(b+1,f,n,n+m);f.right=e(b+1,f,n+m+1,p);return f}function f(a){return null===a.parent?0:f(a.parent)+1}var g=this,h=0;this.root=e(0,null,0,a.length/c);this.getMaxDepth=function(){return h};this.nearest=function(e,h,n){function p(g){var m;m=f(g)%c;for(var q=[a[g.pos+\n0],a[g.pos+1],a[g.pos+2]],s=b(e,q),w=0,B=[],w=0;w<d;w+=1)w===f(g)%c?B[w]=e[w]:B[w]=a[g.pos+w];w=b(B,q);null===g.right&&null===g.left?(r.size()<h||s<r.peek()[1])&&s<n&&(r.push([g,s]),r.size()>h&&r.pop()):(m=null===g.right?g.left:null===g.left?g.right:e[m]<a[g.pos+m]?g.left:g.right,p(m),(r.size()<h||s<r.peek()[1])&&s<=n&&(r.push([g,s]),r.size()>h&&r.pop()),(r.size()<h||Math.abs(w)<r.peek()[1])&&Math.abs(w)<=n&&(g=m===g.left?g.right:g.left,null!==g&&p(g)))}var m,q,r;r=new THREE.TypedArrayUtils.Kdtree.BinaryHeap(function(a){return-a[1]});\np(g.root);q=[];for(m=0;m<Math.min(r.size(),h);m+=1){var s=r.content[m];s&&s[0]&&q.push([s[0],s[1]])}return q}};THREE.TypedArrayUtils.Kdtree.prototype.Node=function(a,b){this.pos=a;this.right=this.left=null;this.parent=b};THREE.TypedArrayUtils.Kdtree.BinaryHeap=function(a){this.content=[];this.scoreFunction=a};\nTHREE.TypedArrayUtils.Kdtree.BinaryHeap.prototype={push:function(a){this.content.push(a);this.bubbleUp(this.content.length-1)},pop:function(){var a=this.content[0],b=this.content.pop();0<this.content.length&&(this.content[0]=b,this.sinkDown(0));return a},peek:function(){return this.content[0]},remove:function(a){for(var b=this.content.length,c=0;c<b;c++)if(this.content[c]==a){var d=this.content.pop();c!=b-1&&(this.content[c]=d,this.scoreFunction(d)<this.scoreFunction(a)?this.bubbleUp(c):this.sinkDown(c));\nreturn}throw Error(\"Node not found.\");},size:function(){return this.content.length},bubbleUp:function(a){for(var b=this.content[a];0<a;){var c=Math.floor((a+1)/2)-1,d=this.content[c];if(this.scoreFunction(b)<this.scoreFunction(d))this.content[c]=b,this.content[a]=d,a=c;else break}},sinkDown:function(a){for(var b=this.content.length,c=this.content[a],d=this.scoreFunction(c);;){var e=2*(a+1),f=e-1,g=null;if(f<b){var h=this.scoreFunction(this.content[f]);h<d&&(g=f)}e<b&&this.scoreFunction(this.content[e])<\n(null===g?d:h)&&(g=e);if(null!==g)this.content[a]=this.content[g],this.content[g]=c,a=g;else break}}};\nTHREE.TrackballControls=function(a,b){function c(a){!1!==m.enabled&&(u=s,s===q.NONE)&&(a.keyCode!==m.keys[q.ROTATE]||m.noRotate?a.keyCode!==m.keys[q.ZOOM]||m.noZoom?a.keyCode!==m.keys[q.PAN]||m.noPan||(s=q.PAN):s=q.ZOOM:s=q.ROTATE)}function d(a){!1!==m.enabled&&(s=u)}function e(a){!1!==m.enabled&&(s===q.NONE&&(s=a.button),s!==q.ROTATE||m.noRotate?s!==q.ZOOM||m.noZoom?s!==q.PAN||m.noPan||(D.copy(I(a.pageX,a.pageY)),H.copy(D)):(z.copy(I(a.pageX,a.pageY)),y.copy(z)):(A.copy(L(a.pageX,a.pageY)),x.copy(A)),\ndocument.addEventListener(\"mousemove\",f,!1),document.addEventListener(\"mouseup\",g,!1),m.dispatchEvent(K))}function f(a){!1!==m.enabled&&(s!==q.ROTATE||m.noRotate?s!==q.ZOOM||m.noZoom?s!==q.PAN||m.noPan||H.copy(I(a.pageX,a.pageY)):y.copy(I(a.pageX,a.pageY)):(x.copy(A),A.copy(L(a.pageX,a.pageY))))}function g(a){!1!==m.enabled&&(s=q.NONE,document.removeEventListener(\"mousemove\",f),document.removeEventListener(\"mouseup\",g),m.dispatchEvent(P))}function h(a){if(!1!==m.enabled){var b=0;a.wheelDelta?b=a.wheelDelta/\n40:a.detail&&(b=-a.detail/3);z.y+=.01*b;m.dispatchEvent(K);m.dispatchEvent(P)}}function k(a){if(!1!==m.enabled){switch(a.touches.length){case 1:s=q.TOUCH_ROTATE;A.copy(L(a.touches[0].pageX,a.touches[0].pageY));x.copy(A);break;default:s=q.TOUCH_ZOOM_PAN;var b=a.touches[0].pageX-a.touches[1].pageX,c=a.touches[0].pageY-a.touches[1].pageY;J=C=Math.sqrt(b*b+c*c);D.copy(I((a.touches[0].pageX+a.touches[1].pageX)/2,(a.touches[0].pageY+a.touches[1].pageY)/2));H.copy(D)}m.dispatchEvent(K)}}function l(a){if(!1!==\nm.enabled)switch(a.touches.length){case 1:x.copy(A);A.copy(L(a.touches[0].pageX,a.touches[0].pageY));break;default:var b=a.touches[0].pageX-a.touches[1].pageX,c=a.touches[0].pageY-a.touches[1].pageY;J=Math.sqrt(b*b+c*c);H.copy(I((a.touches[0].pageX+a.touches[1].pageX)/2,(a.touches[0].pageY+a.touches[1].pageY)/2))}}function n(a){if(!1!==m.enabled){switch(a.touches.length){case 0:s=q.NONE;break;case 1:s=q.TOUCH_ROTATE,A.copy(L(a.touches[0].pageX,a.touches[0].pageY)),x.copy(A)}m.dispatchEvent(P)}}function p(a){a.preventDefault()}\nvar m=this,q={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={left:0,top:0,width:0,height:0};this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var r=new THREE.Vector3,s=q.NONE,u=q.NONE,v=new THREE.Vector3,x=new THREE.Vector2,\nA=new THREE.Vector2,w=new THREE.Vector3,B=0,z=new THREE.Vector2,y=new THREE.Vector2,C=0,J=0,D=new THREE.Vector2,H=new THREE.Vector2;this.target0=this.target.clone();this.position0=this.object.position.clone();this.up0=this.object.up.clone();var G={type:\"change\"},K={type:\"start\"},P={type:\"end\"};this.handleResize=function(){if(this.domElement===document)this.screen.left=0,this.screen.top=0,this.screen.width=window.innerWidth,this.screen.height=window.innerHeight;else{var a=this.domElement.getBoundingClientRect(),\nb=this.domElement.ownerDocument.documentElement;this.screen.left=a.left+window.pageXOffset-b.clientLeft;this.screen.top=a.top+window.pageYOffset-b.clientTop;this.screen.width=a.width;this.screen.height=a.height}};this.handleEvent=function(a){if(\"function\"==typeof this[a.type])this[a.type](a)};var I=function(){var a=new THREE.Vector2;return function(b,c){a.set((b-m.screen.left)/m.screen.width,(c-m.screen.top)/m.screen.height);return a}}(),L=function(){var a=new THREE.Vector2;return function(b,c){a.set((b-\n.5*m.screen.width-m.screen.left)/(.5*m.screen.width),(m.screen.height+2*(m.screen.top-c))/m.screen.width);return a}}();this.rotateCamera=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3,g;return function(){f.set(A.x-x.x,A.y-x.y,0);(g=f.length())?(v.copy(m.object.position).sub(m.target),c.copy(v).normalize(),d.copy(m.object.up).normalize(),e.crossVectors(d,c).normalize(),d.setLength(A.y-x.y),e.setLength(A.x-x.x),\nf.copy(d.add(e)),a.crossVectors(f,v).normalize(),g*=m.rotateSpeed,b.setFromAxisAngle(a,g),v.applyQuaternion(b),m.object.up.applyQuaternion(b),w.copy(a),B=g):!m.staticMoving&&B&&(B*=Math.sqrt(1-m.dynamicDampingFactor),v.copy(m.object.position).sub(m.target),b.setFromAxisAngle(w,B),v.applyQuaternion(b),m.object.up.applyQuaternion(b));x.copy(A)}}();this.zoomCamera=function(){var a;s===q.TOUCH_ZOOM_PAN?(a=C/J,C=J,v.multiplyScalar(a),void 0===m.object.fov&&(m.object.zoom*=a)):(a=1+(y.y-z.y)*m.zoomSpeed,\n1!==a&&0<a&&(v.multiplyScalar(a),void 0===m.object.fov&&(m.object.zoom/=a),m.staticMoving?z.copy(y):z.y+=(y.y-z.y)*this.dynamicDampingFactor))};this.panCamera=function(){var a=new THREE.Vector2,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.copy(H).sub(D);if(a.lengthSq()){if(void 0===m.object.fov){var d=(m.object.top-m.object.bottom)/m.object.zoom;a.x*=(m.object.right-m.object.left)/m.object.zoom;a.y*=d}else a.multiplyScalar(v.length()*m.panSpeed);c.copy(v).cross(m.object.up).setLength(a.x);\nc.add(b.copy(m.object.up).setLength(a.y));m.object.position.add(c);m.target.add(c);m.staticMoving?D.copy(H):D.add(a.subVectors(H,D).multiplyScalar(m.dynamicDampingFactor))}}}();this.checkDistances=function(){m.noZoom&&m.noPan||(v.lengthSq()>m.maxDistance*m.maxDistance&&(m.object.position.addVectors(m.target,v.setLength(m.maxDistance)),z.copy(y)),v.lengthSq()<m.minDistance*m.minDistance&&(m.object.position.addVectors(m.target,v.setLength(m.minDistance)),z.copy(y)))};this.update=function(){v.subVectors(m.object.position,\nm.target);m.noRotate||m.rotateCamera();m.noZoom||m.zoomCamera();m.noPan||m.panCamera();m.object.position.addVectors(m.target,v);m.checkDistances();m.object.lookAt(m.target);1E-6<r.distanceToSquared(m.object.position)&&(m.dispatchEvent(G),r.copy(m.object.position))};this.reset=function(){u=s=q.NONE;m.target.copy(m.target0);m.object.position.copy(m.position0);m.object.up.copy(m.up0);v.subVectors(m.object.position,m.target);m.object.lookAt(m.target);m.dispatchEvent(G);r.copy(m.object.position)};this.dispose=\nfunction(){this.domElement.removeEventListener(\"contextmenu\",p,!1);this.domElement.removeEventListener(\"mousedown\",e,!1);this.domElement.removeEventListener(\"mousewheel\",h,!1);this.domElement.removeEventListener(\"MozMousePixelScroll\",h,!1);this.domElement.removeEventListener(\"touchstart\",k,!1);this.domElement.removeEventListener(\"touchend\",n,!1);this.domElement.removeEventListener(\"touchmove\",l,!1);document.removeEventListener(\"mousemove\",f,!1);document.removeEventListener(\"mouseup\",g,!1);window.removeEventListener(\"keydown\",\nc,!1);window.removeEventListener(\"keyup\",d,!1)};this.domElement.addEventListener(\"contextmenu\",p,!1);this.domElement.addEventListener(\"mousedown\",e,!1);this.domElement.addEventListener(\"mousewheel\",h,!1);this.domElement.addEventListener(\"MozMousePixelScroll\",h,!1);this.domElement.addEventListener(\"touchstart\",k,!1);this.domElement.addEventListener(\"touchend\",n,!1);this.domElement.addEventListener(\"touchmove\",l,!1);window.addEventListener(\"keydown\",c,!1);window.addEventListener(\"keyup\",d,!1);this.handleResize();\nthis.update()};THREE.TrackballControls.prototype=Object.create(THREE.EventDispatcher.prototype);THREE.TrackballControls.prototype.constructor=THREE.TrackballControls;\nTHREE.OBJLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.materials=null;this.regexp={vertex_pattern:/^v\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,normal_pattern:/^vn\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,uv_pattern:/^vt\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,face_vertex:/^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/,face_vertex_uv:/^f\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+))?/,\nface_vertex_uv_normal:/^f\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/,face_vertex_normal:/^f\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)(?:\\s+(-?\\d+)\\/\\/(-?\\d+))?/,object_pattern:/^[og]\\s*(.+)?/,smoothing_pattern:/^s\\s+(\\d+|on|off)/,material_library_pattern:/^mtllib /,material_use_pattern:/^usemtl /}};\nTHREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setPath(this.path);f.load(a,function(a){b(e.parse(a))},c,d)},setPath:function(a){this.path=a},setMaterials:function(a){this.materials=a},_createParserState:function(){var a={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(a,c){this.object&&!1===this.object.fromDeclaration?(this.object.name=a,this.object.fromDeclaration=!1!==c):(this.object=\n{name:a||\"\",geometry:{vertices:[],normals:[],uvs:[]},material:{name:\"\",smooth:!0},fromDeclaration:!1!==c},this.objects.push(this.object))},parseVertexIndex:function(a,c){var d=parseInt(a,10);return 3*(0<=d?d-1:d+c/3)},parseNormalIndex:function(a,c){var d=parseInt(a,10);return 3*(0<=d?d-1:d+c/3)},parseUVIndex:function(a,c){var d=parseInt(a,10);return 2*(0<=d?d-1:d+c/2)},addVertex:function(a,c,d){var e=this.vertices,f=this.object.geometry.vertices;f.push(e[a+0]);f.push(e[a+1]);f.push(e[a+2]);f.push(e[c+\n0]);f.push(e[c+1]);f.push(e[c+2]);f.push(e[d+0]);f.push(e[d+1]);f.push(e[d+2])},addVertexLine:function(a){var c=this.vertices,d=this.object.geometry.vertices;d.push(c[a+0]);d.push(c[a+1]);d.push(c[a+2])},addNormal:function(a,c,d){var e=this.normals,f=this.object.geometry.normals;f.push(e[a+0]);f.push(e[a+1]);f.push(e[a+2]);f.push(e[c+0]);f.push(e[c+1]);f.push(e[c+2]);f.push(e[d+0]);f.push(e[d+1]);f.push(e[d+2])},addUV:function(a,c,d){var e=this.uvs,f=this.object.geometry.uvs;f.push(e[a+0]);f.push(e[a+\n1]);f.push(e[c+0]);f.push(e[c+1]);f.push(e[d+0]);f.push(e[d+1])},addUVLine:function(a){var c=this.uvs,d=this.object.geometry.uvs;d.push(c[a+0]);d.push(c[a+1])},addFace:function(a,c,d,e,f,g,h,k,l,n,p,m){var q=this.vertices.length;a=this.parseVertexIndex(a,q);c=this.parseVertexIndex(c,q);d=this.parseVertexIndex(d,q);void 0===e?this.addVertex(a,c,d):(q=this.parseVertexIndex(e,q),this.addVertex(a,c,q),this.addVertex(c,d,q));void 0!==f&&(q=this.uvs.length,a=this.parseUVIndex(f,q),c=this.parseUVIndex(g,\nq),d=this.parseUVIndex(h,q),void 0===e?this.addUV(a,c,d):(q=this.parseUVIndex(k,q),this.addUV(a,c,q),this.addUV(c,d,q)));void 0!==l&&(f=this.normals.length,a=this.parseNormalIndex(l,f),c=l===n?a:this.parseNormalIndex(n,f),d=l===p?a:this.parseNormalIndex(p,f),void 0===e?this.addNormal(a,c,d):(q=this.parseNormalIndex(m,f),this.addNormal(a,c,q),this.addNormal(c,d,q)))},addLineGeometry:function(a,c){this.object.geometry.type=\"Line\";for(var d=this.vertices.length,e=this.uvs.length,f=0,g=a.length;f<g;f++)this.addVertexLine(this.parseVertexIndex(a[f],\nd));d=0;for(g=c.length;d<g;d++)this.addUVLine(this.parseUVIndex(c[d],e))}};a.startObject(\"\",!1);return a},parse:function(a){console.time(\"OBJLoader\");var b=this._createParserState();-1!==a.indexOf(\"\\r\\n\")&&(a=a.replace(\"\\r\\n\",\"\\n\"));var c=a.split(\"\\n\"),d=\"\",e=\"\",e=\"\",e=0,f=[],g=\"function\"===typeof\"\".trimLeft;a=0;for(var h=c.length;a<h;a++)if(d=c[a],d=g?d.trimLeft():d.trim(),e=d.length,0!==e&&(e=d.charAt(0),\"#\"!==e))if(\"v\"===e)if(e=d.charAt(1),\" \"===e&&null!==(f=this.regexp.vertex_pattern.exec(d)))b.vertices.push(parseFloat(f[1]),\nparseFloat(f[2]),parseFloat(f[3]));else if(\"n\"===e&&null!==(f=this.regexp.normal_pattern.exec(d)))b.normals.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3]));else if(\"t\"===e&&null!==(f=this.regexp.uv_pattern.exec(d)))b.uvs.push(parseFloat(f[1]),parseFloat(f[2]));else throw Error(\"Unexpected vertex/normal/uv line: '\"+d+\"'\");else if(\"f\"===e)if(null!==(f=this.regexp.face_vertex_uv_normal.exec(d)))b.addFace(f[1],f[4],f[7],f[10],f[2],f[5],f[8],f[11],f[3],f[6],f[9],f[12]);else if(null!==(f=this.regexp.face_vertex_uv.exec(d)))b.addFace(f[1],\nf[3],f[5],f[7],f[2],f[4],f[6],f[8]);else if(null!==(f=this.regexp.face_vertex_normal.exec(d)))b.addFace(f[1],f[3],f[5],f[7],void 0,void 0,void 0,void 0,f[2],f[4],f[6],f[8]);else if(null!==(f=this.regexp.face_vertex.exec(d)))b.addFace(f[1],f[2],f[3],f[4]);else throw Error(\"Unexpected face line: '\"+d+\"'\");else if(\"l\"===e){var e=d.substring(1).trim().split(\" \"),k=[],l=[];if(-1===d.indexOf(\"/\"))k=e;else for(var d=0,n=e.length;d<n;d++){var p=e[d].split(\"/\");\"\"!==p[0]&&k.push(p[0]);\"\"!==p[1]&&l.push(p[1])}b.addLineGeometry(k,\nl)}else if(null!==(f=this.regexp.object_pattern.exec(d)))d=f[0].substr(1).trim(),b.startObject(d);else if(this.regexp.material_use_pattern.test(d))b.object.material.name=d.substring(7).trim();else if(this.regexp.material_library_pattern.test(d))b.materialLibraries.push(d.substring(7).trim());else if(null!==(f=this.regexp.smoothing_pattern.exec(d)))d=f[1].trim().toLowerCase(),b.object.material.smooth=\"1\"===d||\"on\"===d;else if(\"\\x00\"!==d)throw Error(\"Unexpected line: '\"+d+\"'\");c=new THREE.Group;c.materialLibraries=\n[].concat(b.materialLibraries);a=0;for(h=b.objects.length;a<h;a++)if(f=b.objects[a],e=f.geometry,g=\"Line\"===e.type,0!==e.vertices.length){d=new THREE.BufferGeometry;d.addAttribute(\"position\",new THREE.BufferAttribute(new Float32Array(e.vertices),3));0<e.normals.length?d.addAttribute(\"normal\",new THREE.BufferAttribute(new Float32Array(e.normals),3)):d.computeVertexNormals();0<e.uvs.length&&d.addAttribute(\"uv\",new THREE.BufferAttribute(new Float32Array(e.uvs),2));var m;null!==this.materials&&(m=this.materials.create(f.material.name),\n!g||!m||m instanceof THREE.LineBasicMaterial||(e=new THREE.LineBasicMaterial,e.copy(m),m=e));m||(m=g?new THREE.LineBasicMaterial:new THREE.MeshPhongMaterial,m.name=f.material.name);m.shading=f.material.smooth?THREE.SmoothShading:THREE.FlatShading;g=g?new THREE.Line(d,m):new THREE.Mesh(d,m);g.name=f.name;c.add(g)}console.timeEnd(\"OBJLoader\");return c}};THREE.PLYLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.propertyNameMapping={}};\nTHREE.PLYLoader.prototype={constructor:THREE.PLYLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(this.manager);f.setResponseType(\"arraybuffer\");f.load(a,function(a){b(e.parse(a))},c,d)},setPropertyNameMapping:function(a){this.propertyNameMapping=a},bin2str:function(a){for(var b=new Uint8Array(a),c=\"\",d=0;d<a.byteLength;d++)c+=String.fromCharCode(b[d]);return c},isASCII:function(a){return\"ascii\"===this.parseHeader(this.bin2str(a)).format},parse:function(a){return a instanceof ArrayBuffer?\nthis.isASCII(a)?this.parseASCII(this.bin2str(a)):this.parseBinary(a):this.parseASCII(a)},parseHeader:function(a){function b(a,b){var c={type:a[0]};\"list\"===c.type?(c.name=a[3],c.countType=a[1],c.itemType=a[2]):c.name=a[1];c.name in b&&(c.name=b[c.name]);return c}var c=\"\",d=0;a=/ply([\\s\\S]*)end_header\\s/.exec(a);null!==a&&(c=a[1],d=a[0].length);d={comments:[],elements:[],headerLength:d};c=c.split(\"\\n\");a=void 0;for(var e,f,g=0;g<c.length;g++){var h=c[g],h=h.trim();if(\"\"!==h)switch(f=h.split(/\\s+/),\ne=f.shift(),h=f.join(\" \"),e){case \"format\":d.format=f[0];d.version=f[1];break;case \"comment\":d.comments.push(h);break;case \"element\":void 0!==a&&d.elements.push(a);a={};a.name=f[0];a.count=parseInt(f[1]);a.properties=[];break;case \"property\":a.properties.push(b(f,this.propertyNameMapping));break;default:console.log(\"unhandled\",e,f)}}void 0!==a&&d.elements.push(a);return d},parseASCIINumber:function(a,b){switch(b){case \"char\":case \"uchar\":case \"short\":case \"ushort\":case \"int\":case \"uint\":case \"int8\":case \"uint8\":case \"int16\":case \"uint16\":case \"int32\":case \"uint32\":return parseInt(a);\ncase \"float\":case \"double\":case \"float32\":case \"float64\":return parseFloat(a)}},parseASCIIElement:function(a,b){for(var c=b.split(/\\s+/),d={},e=0;e<a.length;e++)if(\"list\"===a[e].type){for(var f=[],g=this.parseASCIINumber(c.shift(),a[e].countType),h=0;h<g;h++)f.push(this.parseASCIINumber(c.shift(),a[e].itemType));d[a[e].name]=f}else d[a[e].name]=this.parseASCIINumber(c.shift(),a[e].type);return d},parseASCII:function(a){var b=new THREE.Geometry,c,d=this.parseHeader(a),e=\"\";null!==(c=/end_header\\s([\\s\\S]*)$/.exec(a))&&\n(e=c[1]);a=e.split(\"\\n\");e=c=0;b.useColor=!1;for(var f=0;f<a.length;f++){var g=a[f],g=g.trim();\"\"!==g&&(e>=d.elements[c].count&&(c++,e=0),g=this.parseASCIIElement(d.elements[c].properties,g),this.handleElement(b,d.elements[c].name,g),e++)}return this.postProcess(b)},postProcess:function(a){if(a.useColor){for(var b=0;b<a.faces.length;b++)a.faces[b].vertexColors=[a.colors[a.faces[b].a],a.colors[a.faces[b].b],a.colors[a.faces[b].c]];a.elementsNeedUpdate=!0}a.computeBoundingSphere();return a},handleElement:function(a,\nb,c){\"vertex\"===b?(a.vertices.push(new THREE.Vector3(c.x,c.y,c.z)),\"red\"in c&&\"green\"in c&&\"blue\"in c&&(a.useColor=!0,b=new THREE.Color,b.setRGB(c.red/255,c.green/255,c.blue/255),a.colors.push(b))):\"face\"===b&&(c=c.vertex_indices,3===c.length?a.faces.push(new THREE.Face3(c[0],c[1],c[2])):4===c.length&&a.faces.push(new THREE.Face3(c[0],c[1],c[3]),new THREE.Face3(c[1],c[2],c[3])))},binaryRead:function(a,b,c,d){switch(c){case \"int8\":case \"char\":return[a.getInt8(b),1];case \"uint8\":case \"uchar\":return[a.getUint8(b),\n1];case \"int16\":case \"short\":return[a.getInt16(b,d),2];case \"uint16\":case \"ushort\":return[a.getUint16(b,d),2];case \"int32\":case \"int\":return[a.getInt32(b,d),4];case \"uint32\":case \"uint\":return[a.getUint32(b,d),4];case \"float32\":case \"float\":return[a.getFloat32(b,d),4];case \"float64\":case \"double\":return[a.getFloat64(b,d),8]}},binaryReadElement:function(a,b,c,d){for(var e={},f,g=0,h=0;h<c.length;h++)if(\"list\"===c[h].type){var k=[];f=this.binaryRead(a,b+g,c[h].countType,d);for(var l=f[0],g=g+f[1],n=\n0;n<l;n++)f=this.binaryRead(a,b+g,c[h].itemType,d),k.push(f[0]),g+=f[1];e[c[h].name]=k}else f=this.binaryRead(a,b+g,c[h].type,d),e[c[h].name]=f[0],g+=f[1];return[e,g]},parseBinary:function(a){var b=new THREE.Geometry,c=this.parseHeader(this.bin2str(a)),d=\"binary_little_endian\"===c.format;a=new DataView(a,c.headerLength);for(var e,f=0,g=0;g<c.elements.length;g++)for(var h=0;h<c.elements[g].count;h++)e=this.binaryReadElement(a,f,c.elements[g].properties,d),f+=e[1],this.handleElement(b,c.elements[g].name,\ne[0]);return this.postProcess(b)}};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/three.custom.min.js\n ** module id = 3\n ** module chunks = 0\n **/","/*! promise-polyfill 3.1.0 */\n!function(a){function b(a,b){return function(){a.apply(b,arguments)}}function c(a){if(\"object\"!=typeof this)throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof a)throw new TypeError(\"not a function\");this._state=null,this._value=null,this._deferreds=[],i(a,b(e,this),b(f,this))}function d(a){var b=this;return null===this._state?void this._deferreds.push(a):void k(function(){var c=b._state?a.onFulfilled:a.onRejected;if(null===c)return void(b._state?a.resolve:a.reject)(b._value);var d;try{d=c(b._value)}catch(e){return void a.reject(e)}a.resolve(d)})}function e(a){try{if(a===this)throw new TypeError(\"A promise cannot be resolved with itself.\");if(a&&(\"object\"==typeof a||\"function\"==typeof a)){var c=a.then;if(\"function\"==typeof c)return void i(b(c,a),b(e,this),b(f,this))}this._state=!0,this._value=a,g.call(this)}catch(d){f.call(this,d)}}function f(a){this._state=!1,this._value=a,g.call(this)}function g(){for(var a=0,b=this._deferreds.length;b>a;a++)d.call(this,this._deferreds[a]);this._deferreds=null}function h(a,b,c,d){this.onFulfilled=\"function\"==typeof a?a:null,this.onRejected=\"function\"==typeof b?b:null,this.resolve=c,this.reject=d}function i(a,b,c){var d=!1;try{a(function(a){d||(d=!0,b(a))},function(a){d||(d=!0,c(a))})}catch(e){if(d)return;d=!0,c(e)}}var j=setTimeout,k=\"function\"==typeof setImmediate&&setImmediate||function(a){j(a,1)},l=Array.isArray||function(a){return\"[object Array]\"===Object.prototype.toString.call(a)};c.prototype[\"catch\"]=function(a){return this.then(null,a)},c.prototype.then=function(a,b){var e=this;return new c(function(c,f){d.call(e,new h(a,b,c,f))})},c.all=function(){var a=Array.prototype.slice.call(1===arguments.length&&l(arguments[0])?arguments[0]:arguments);return new c(function(b,c){function d(f,g){try{if(g&&(\"object\"==typeof g||\"function\"==typeof g)){var h=g.then;if(\"function\"==typeof h)return void h.call(g,function(a){d(f,a)},c)}a[f]=g,0===--e&&b(a)}catch(i){c(i)}}if(0===a.length)return b([]);for(var e=a.length,f=0;f<a.length;f++)d(f,a[f])})},c.resolve=function(a){return a&&\"object\"==typeof a&&a.constructor===c?a:new c(function(b){b(a)})},c.reject=function(a){return new c(function(b,c){c(a)})},c.race=function(a){return new c(function(b,c){for(var d=0,e=a.length;e>d;d++)a[d].then(b,c)})},c._setImmediateFn=function(a){k=a},\"undefined\"!=typeof module&&module.exports?module.exports=c:a.Promise||(a.Promise=c)}(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/promise.min.js\n ** module id = 4\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/timers-browserify/main.js\n ** module id = 5\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n  try {\n    cachedSetTimeout = setTimeout;\n  } catch (e) {\n    cachedSetTimeout = function () {\n      throw new Error('setTimeout is not defined');\n    }\n  }\n  try {\n    cachedClearTimeout = clearTimeout;\n  } catch (e) {\n    cachedClearTimeout = function () {\n      throw new Error('clearTimeout is not defined');\n    }\n  }\n} ())\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = cachedSetTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    cachedClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        cachedSetTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 6\n ** module chunks = 0\n **/","/*! sprintf-js | Alexandru Marasteanu <hello@alexei.ro> (http://alexei.ro/) | BSD-3-Clause */\n\n!function(a){function b(){var a=arguments[0],c=b.cache;return c[a]&&c.hasOwnProperty(a)||(c[a]=b.parse(a)),b.format.call(null,c[a],arguments)}function c(a){return Object.prototype.toString.call(a).slice(8,-1).toLowerCase()}function d(a,b){return Array(b+1).join(a)}var e={not_string:/[^s]/,number:/[diefg]/,json:/[j]/,not_json:/[^j]/,text:/^[^\\x25]+/,modulo:/^\\x25{2}/,placeholder:/^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijosuxX])/,key:/^([a-z_][a-z_\\d]*)/i,key_access:/^\\.([a-z_][a-z_\\d]*)/i,index_access:/^\\[(\\d+)\\]/,sign:/^[\\+\\-]/};b.format=function(a,f){var g,h,i,j,k,l,m,n=1,o=a.length,p=\"\",q=[],r=!0,s=\"\";for(h=0;o>h;h++)if(p=c(a[h]),\"string\"===p)q[q.length]=a[h];else if(\"array\"===p){if(j=a[h],j[2])for(g=f[n],i=0;i<j[2].length;i++){if(!g.hasOwnProperty(j[2][i]))throw new Error(b(\"[sprintf] property '%s' does not exist\",j[2][i]));g=g[j[2][i]]}else g=j[1]?f[j[1]]:f[n++];if(\"function\"==c(g)&&(g=g()),e.not_string.test(j[8])&&e.not_json.test(j[8])&&\"number\"!=c(g)&&isNaN(g))throw new TypeError(b(\"[sprintf] expecting number but found %s\",c(g)));switch(e.number.test(j[8])&&(r=g>=0),j[8]){case\"b\":g=g.toString(2);break;case\"c\":g=String.fromCharCode(g);break;case\"d\":case\"i\":g=parseInt(g,10);break;case\"j\":g=JSON.stringify(g,null,j[6]?parseInt(j[6]):0);break;case\"e\":g=j[7]?g.toExponential(j[7]):g.toExponential();break;case\"f\":g=j[7]?parseFloat(g).toFixed(j[7]):parseFloat(g);break;case\"g\":g=j[7]?parseFloat(g).toPrecision(j[7]):parseFloat(g);break;case\"o\":g=g.toString(8);break;case\"s\":g=(g=String(g))&&j[7]?g.substring(0,j[7]):g;break;case\"u\":g>>>=0;break;case\"x\":g=g.toString(16);break;case\"X\":g=g.toString(16).toUpperCase()}e.json.test(j[8])?q[q.length]=g:(!e.number.test(j[8])||r&&!j[3]?s=\"\":(s=r?\"+\":\"-\",g=g.toString().replace(e.sign,\"\")),l=j[4]?\"0\"===j[4]?\"0\":j[4].charAt(1):\" \",m=j[6]-(s+g).length,k=j[6]&&m>0?d(l,m):\"\",q[q.length]=j[5]?s+g+k:\"0\"===l?s+k+g:k+s+g)}return q.join(\"\")},b.cache={},b.parse=function(a){for(var b=a,c=[],d=[],f=0;b;){if(null!==(c=e.text.exec(b)))d[d.length]=c[0];else if(null!==(c=e.modulo.exec(b)))d[d.length]=\"%\";else{if(null===(c=e.placeholder.exec(b)))throw new SyntaxError(\"[sprintf] unexpected placeholder\");if(c[2]){f|=1;var g=[],h=c[2],i=[];if(null===(i=e.key.exec(h)))throw new SyntaxError(\"[sprintf] failed to parse named argument key\");for(g[g.length]=i[1];\"\"!==(h=h.substring(i[0].length));)if(null!==(i=e.key_access.exec(h)))g[g.length]=i[1];else{if(null===(i=e.index_access.exec(h)))throw new SyntaxError(\"[sprintf] failed to parse named argument key\");g[g.length]=i[1]}c[2]=g}else f|=2;if(3===f)throw new Error(\"[sprintf] mixing positional and named placeholders is not (yet) supported\");d[d.length]=c}b=b.substring(c[0].length)}return d};var f=function(a,c,d){return d=(c||[]).slice(0),d.splice(0,0,a),b.apply(null,d)};\"undefined\"!=typeof exports?(exports.sprintf=b,exports.vsprintf=f):(a.sprintf=b,a.vsprintf=f,\"function\"==typeof define&&define.amd&&define(function(){return{sprintf:b,vsprintf:f}}))}(\"undefined\"==typeof window?this:window);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sprintf.min.js\n ** module id = 7\n ** module chunks = 0\n **/","/* pako 0.2.8 nodeca/pako */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var t;t=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,t.pako=e()}}(function(){return function e(t,i,n){function a(o,s){if(!i[o]){if(!t[o]){var f=\"function\"==typeof require&&require;if(!s&&f)return f(o,!0);if(r)return r(o,!0);var l=new Error(\"Cannot find module '\"+o+\"'\");throw l.code=\"MODULE_NOT_FOUND\",l}var d=i[o]={exports:{}};t[o][0].call(d.exports,function(e){var i=t[o][1][e];return a(i?i:e)},d,d.exports,e,t,i,n)}return i[o].exports}for(var r=\"function\"==typeof require&&require,o=0;o<n.length;o++)a(n[o]);return a}({1:[function(e,t,i){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;i.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var i=t.shift();if(i){if(\"object\"!=typeof i)throw new TypeError(i+\"must be non-object\");for(var n in i)i.hasOwnProperty(n)&&(e[n]=i[n])}}return e},i.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var a={arraySet:function(e,t,i,n,a){if(t.subarray&&e.subarray)return void e.set(t.subarray(i,i+n),a);for(var r=0;n>r;r++)e[a+r]=t[i+r]},flattenChunks:function(e){var t,i,n,a,r,o;for(n=0,t=0,i=e.length;i>t;t++)n+=e[t].length;for(o=new Uint8Array(n),a=0,t=0,i=e.length;i>t;t++)r=e[t],o.set(r,a),a+=r.length;return o}},r={arraySet:function(e,t,i,n,a){for(var r=0;n>r;r++)e[a+r]=t[i+r]},flattenChunks:function(e){return[].concat.apply([],e)}};i.setTyped=function(e){e?(i.Buf8=Uint8Array,i.Buf16=Uint16Array,i.Buf32=Int32Array,i.assign(i,a)):(i.Buf8=Array,i.Buf16=Array,i.Buf32=Array,i.assign(i,r))},i.setTyped(n)},{}],2:[function(e,t,i){\"use strict\";function n(e,t){if(65537>t&&(e.subarray&&o||!e.subarray&&r))return String.fromCharCode.apply(null,a.shrinkBuf(e,t));for(var i=\"\",n=0;t>n;n++)i+=String.fromCharCode(e[n]);return i}var a=e(\"./common\"),r=!0,o=!0;try{String.fromCharCode.apply(null,[0])}catch(s){r=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(s){o=!1}for(var f=new a.Buf8(256),l=0;256>l;l++)f[l]=l>=252?6:l>=248?5:l>=240?4:l>=224?3:l>=192?2:1;f[254]=f[254]=1,i.string2buf=function(e){var t,i,n,r,o,s=e.length,f=0;for(r=0;s>r;r++)i=e.charCodeAt(r),55296===(64512&i)&&s>r+1&&(n=e.charCodeAt(r+1),56320===(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),f+=128>i?1:2048>i?2:65536>i?3:4;for(t=new a.Buf8(f),o=0,r=0;f>o;r++)i=e.charCodeAt(r),55296===(64512&i)&&s>r+1&&(n=e.charCodeAt(r+1),56320===(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),128>i?t[o++]=i:2048>i?(t[o++]=192|i>>>6,t[o++]=128|63&i):65536>i?(t[o++]=224|i>>>12,t[o++]=128|i>>>6&63,t[o++]=128|63&i):(t[o++]=240|i>>>18,t[o++]=128|i>>>12&63,t[o++]=128|i>>>6&63,t[o++]=128|63&i);return t},i.buf2binstring=function(e){return n(e,e.length)},i.binstring2buf=function(e){for(var t=new a.Buf8(e.length),i=0,n=t.length;n>i;i++)t[i]=e.charCodeAt(i);return t},i.buf2string=function(e,t){var i,a,r,o,s=t||e.length,l=new Array(2*s);for(a=0,i=0;s>i;)if(r=e[i++],128>r)l[a++]=r;else if(o=f[r],o>4)l[a++]=65533,i+=o-1;else{for(r&=2===o?31:3===o?15:7;o>1&&s>i;)r=r<<6|63&e[i++],o--;o>1?l[a++]=65533:65536>r?l[a++]=r:(r-=65536,l[a++]=55296|r>>10&1023,l[a++]=56320|1023&r)}return n(l,a)},i.utf8border=function(e,t){var i;for(t=t||e.length,t>e.length&&(t=e.length),i=t-1;i>=0&&128===(192&e[i]);)i--;return 0>i?t:0===i?t:i+f[e[i]]>t?i:t}},{\"./common\":1}],3:[function(e,t,i){\"use strict\";function n(e,t,i,n){for(var a=65535&e|0,r=e>>>16&65535|0,o=0;0!==i;){o=i>2e3?2e3:i,i-=o;do a=a+t[n++]|0,r=r+a|0;while(--o);a%=65521,r%=65521}return a|r<<16|0}t.exports=n},{}],4:[function(e,t,i){t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],5:[function(e,t,i){\"use strict\";function n(){for(var e,t=[],i=0;256>i;i++){e=i;for(var n=0;8>n;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t}function a(e,t,i,n){var a=r,o=n+i;e=-1^e;for(var s=n;o>s;s++)e=e>>>8^a[255&(e^t[s])];return-1^e}var r=n();t.exports=a},{}],6:[function(e,t,i){\"use strict\";function n(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}t.exports=n},{}],7:[function(e,t,i){\"use strict\";var n=30,a=12;t.exports=function(e,t){var i,r,o,s,f,l,d,u,h,c,b,w,m,k,_,g,v,p,x,y,S,E,B,Z,A;i=e.state,r=e.next_in,Z=e.input,o=r+(e.avail_in-5),s=e.next_out,A=e.output,f=s-(t-e.avail_out),l=s+(e.avail_out-257),d=i.dmax,u=i.wsize,h=i.whave,c=i.wnext,b=i.window,w=i.hold,m=i.bits,k=i.lencode,_=i.distcode,g=(1<<i.lenbits)-1,v=(1<<i.distbits)-1;e:do{15>m&&(w+=Z[r++]<<m,m+=8,w+=Z[r++]<<m,m+=8),p=k[w&g];t:for(;;){if(x=p>>>24,w>>>=x,m-=x,x=p>>>16&255,0===x)A[s++]=65535&p;else{if(!(16&x)){if(0===(64&x)){p=k[(65535&p)+(w&(1<<x)-1)];continue t}if(32&x){i.mode=a;break e}e.msg=\"invalid literal/length code\",i.mode=n;break e}y=65535&p,x&=15,x&&(x>m&&(w+=Z[r++]<<m,m+=8),y+=w&(1<<x)-1,w>>>=x,m-=x),15>m&&(w+=Z[r++]<<m,m+=8,w+=Z[r++]<<m,m+=8),p=_[w&v];i:for(;;){if(x=p>>>24,w>>>=x,m-=x,x=p>>>16&255,!(16&x)){if(0===(64&x)){p=_[(65535&p)+(w&(1<<x)-1)];continue i}e.msg=\"invalid distance code\",i.mode=n;break e}if(S=65535&p,x&=15,x>m&&(w+=Z[r++]<<m,m+=8,x>m&&(w+=Z[r++]<<m,m+=8)),S+=w&(1<<x)-1,S>d){e.msg=\"invalid distance too far back\",i.mode=n;break e}if(w>>>=x,m-=x,x=s-f,S>x){if(x=S-x,x>h&&i.sane){e.msg=\"invalid distance too far back\",i.mode=n;break e}if(E=0,B=b,0===c){if(E+=u-x,y>x){y-=x;do A[s++]=b[E++];while(--x);E=s-S,B=A}}else if(x>c){if(E+=u+c-x,x-=c,y>x){y-=x;do A[s++]=b[E++];while(--x);if(E=0,y>c){x=c,y-=x;do A[s++]=b[E++];while(--x);E=s-S,B=A}}}else if(E+=c-x,y>x){y-=x;do A[s++]=b[E++];while(--x);E=s-S,B=A}for(;y>2;)A[s++]=B[E++],A[s++]=B[E++],A[s++]=B[E++],y-=3;y&&(A[s++]=B[E++],y>1&&(A[s++]=B[E++]))}else{E=s-S;do A[s++]=A[E++],A[s++]=A[E++],A[s++]=A[E++],y-=3;while(y>2);y&&(A[s++]=A[E++],y>1&&(A[s++]=A[E++]))}break}}break}}while(o>r&&l>s);y=m>>3,r-=y,m-=y<<3,w&=(1<<m)-1,e.next_in=r,e.next_out=s,e.avail_in=o>r?5+(o-r):5-(r-o),e.avail_out=l>s?257+(l-s):257-(s-l),i.hold=w,i.bits=m}},{}],8:[function(e,t,i){\"use strict\";function n(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function a(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new k.Buf16(320),this.work=new k.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function r(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=T,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new k.Buf32(be),t.distcode=t.distdyn=new k.Buf32(we),t.sane=1,t.back=-1,A):N}function o(e){var t;return e&&e.state?(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,r(e)):N}function s(e,t){var i,n;return e&&e.state?(n=e.state,0>t?(i=0,t=-t):(i=(t>>4)+1,48>t&&(t&=15)),t&&(8>t||t>15)?N:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,o(e))):N}function f(e,t){var i,n;return e?(n=new a,e.state=n,n.window=null,i=s(e,t),i!==A&&(e.state=null),i):N}function l(e){return f(e,ke)}function d(e){if(_e){var t;for(w=new k.Buf32(512),m=new k.Buf32(32),t=0;144>t;)e.lens[t++]=8;for(;256>t;)e.lens[t++]=9;for(;280>t;)e.lens[t++]=7;for(;288>t;)e.lens[t++]=8;for(p(y,e.lens,0,288,w,0,e.work,{bits:9}),t=0;32>t;)e.lens[t++]=5;p(S,e.lens,0,32,m,0,e.work,{bits:5}),_e=!1}e.lencode=w,e.lenbits=9,e.distcode=m,e.distbits=5}function u(e,t,i,n){var a,r=e.state;return null===r.window&&(r.wsize=1<<r.wbits,r.wnext=0,r.whave=0,r.window=new k.Buf8(r.wsize)),n>=r.wsize?(k.arraySet(r.window,t,i-r.wsize,r.wsize,0),r.wnext=0,r.whave=r.wsize):(a=r.wsize-r.wnext,a>n&&(a=n),k.arraySet(r.window,t,i-n,a,r.wnext),n-=a,n?(k.arraySet(r.window,t,i-n,n,0),r.wnext=n,r.whave=r.wsize):(r.wnext+=a,r.wnext===r.wsize&&(r.wnext=0),r.whave<r.wsize&&(r.whave+=a))),0}function h(e,t){var i,a,r,o,s,f,l,h,c,b,w,m,be,we,me,ke,_e,ge,ve,pe,xe,ye,Se,Ee,Be=0,Ze=new k.Buf8(4),Ae=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return N;i=e.state,i.mode===G&&(i.mode=X),s=e.next_out,r=e.output,l=e.avail_out,o=e.next_in,a=e.input,f=e.avail_in,h=i.hold,c=i.bits,b=f,w=l,ye=A;e:for(;;)switch(i.mode){case T:if(0===i.wrap){i.mode=X;break}for(;16>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(2&i.wrap&&35615===h){i.check=0,Ze[0]=255&h,Ze[1]=h>>>8&255,i.check=g(i.check,Ze,2,0),h=0,c=0,i.mode=U;break}if(i.flags=0,i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&h)<<8)+(h>>8))%31){e.msg=\"incorrect header check\",i.mode=ue;break}if((15&h)!==F){e.msg=\"unknown compression method\",i.mode=ue;break}if(h>>>=4,c-=4,xe=(15&h)+8,0===i.wbits)i.wbits=xe;else if(xe>i.wbits){e.msg=\"invalid window size\",i.mode=ue;break}i.dmax=1<<xe,e.adler=i.check=1,i.mode=512&h?Y:G,h=0,c=0;break;case U:for(;16>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(i.flags=h,(255&i.flags)!==F){e.msg=\"unknown compression method\",i.mode=ue;break}if(57344&i.flags){e.msg=\"unknown header flags set\",i.mode=ue;break}i.head&&(i.head.text=h>>8&1),512&i.flags&&(Ze[0]=255&h,Ze[1]=h>>>8&255,i.check=g(i.check,Ze,2,0)),h=0,c=0,i.mode=D;case D:for(;32>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}i.head&&(i.head.time=h),512&i.flags&&(Ze[0]=255&h,Ze[1]=h>>>8&255,Ze[2]=h>>>16&255,Ze[3]=h>>>24&255,i.check=g(i.check,Ze,4,0)),h=0,c=0,i.mode=L;case L:for(;16>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}i.head&&(i.head.xflags=255&h,i.head.os=h>>8),512&i.flags&&(Ze[0]=255&h,Ze[1]=h>>>8&255,i.check=g(i.check,Ze,2,0)),h=0,c=0,i.mode=H;case H:if(1024&i.flags){for(;16>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}i.length=h,i.head&&(i.head.extra_len=h),512&i.flags&&(Ze[0]=255&h,Ze[1]=h>>>8&255,i.check=g(i.check,Ze,2,0)),h=0,c=0}else i.head&&(i.head.extra=null);i.mode=j;case j:if(1024&i.flags&&(m=i.length,m>f&&(m=f),m&&(i.head&&(xe=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Array(i.head.extra_len)),k.arraySet(i.head.extra,a,o,m,xe)),512&i.flags&&(i.check=g(i.check,a,m,o)),f-=m,o+=m,i.length-=m),i.length))break e;i.length=0,i.mode=M;case M:if(2048&i.flags){if(0===f)break e;m=0;do xe=a[o+m++],i.head&&xe&&i.length<65536&&(i.head.name+=String.fromCharCode(xe));while(xe&&f>m);if(512&i.flags&&(i.check=g(i.check,a,m,o)),f-=m,o+=m,xe)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=K;case K:if(4096&i.flags){if(0===f)break e;m=0;do xe=a[o+m++],i.head&&xe&&i.length<65536&&(i.head.comment+=String.fromCharCode(xe));while(xe&&f>m);if(512&i.flags&&(i.check=g(i.check,a,m,o)),f-=m,o+=m,xe)break e}else i.head&&(i.head.comment=null);i.mode=P;case P:if(512&i.flags){for(;16>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(h!==(65535&i.check)){e.msg=\"header crc mismatch\",i.mode=ue;break}h=0,c=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=G;break;case Y:for(;32>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}e.adler=i.check=n(h),h=0,c=0,i.mode=q;case q:if(0===i.havedict)return e.next_out=s,e.avail_out=l,e.next_in=o,e.avail_in=f,i.hold=h,i.bits=c,R;e.adler=i.check=1,i.mode=G;case G:if(t===B||t===Z)break e;case X:if(i.last){h>>>=7&c,c-=7&c,i.mode=fe;break}for(;3>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}switch(i.last=1&h,h>>>=1,c-=1,3&h){case 0:i.mode=W;break;case 1:if(d(i),i.mode=te,t===Z){h>>>=2,c-=2;break e}break;case 2:i.mode=V;break;case 3:e.msg=\"invalid block type\",i.mode=ue}h>>>=2,c-=2;break;case W:for(h>>>=7&c,c-=7&c;32>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if((65535&h)!==(h>>>16^65535)){e.msg=\"invalid stored block lengths\",i.mode=ue;break}if(i.length=65535&h,h=0,c=0,i.mode=J,t===Z)break e;case J:i.mode=Q;case Q:if(m=i.length){if(m>f&&(m=f),m>l&&(m=l),0===m)break e;k.arraySet(r,a,o,m,s),f-=m,o+=m,l-=m,s+=m,i.length-=m;break}i.mode=G;break;case V:for(;14>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(i.nlen=(31&h)+257,h>>>=5,c-=5,i.ndist=(31&h)+1,h>>>=5,c-=5,i.ncode=(15&h)+4,h>>>=4,c-=4,i.nlen>286||i.ndist>30){e.msg=\"too many length or distance symbols\",i.mode=ue;break}i.have=0,i.mode=$;case $:for(;i.have<i.ncode;){for(;3>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}i.lens[Ae[i.have++]]=7&h,h>>>=3,c-=3}for(;i.have<19;)i.lens[Ae[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,Se={bits:i.lenbits},ye=p(x,i.lens,0,19,i.lencode,0,i.work,Se),i.lenbits=Se.bits,ye){e.msg=\"invalid code lengths set\",i.mode=ue;break}i.have=0,i.mode=ee;case ee:for(;i.have<i.nlen+i.ndist;){for(;Be=i.lencode[h&(1<<i.lenbits)-1],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(c>=me);){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(16>_e)h>>>=me,c-=me,i.lens[i.have++]=_e;else{if(16===_e){for(Ee=me+2;Ee>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(h>>>=me,c-=me,0===i.have){e.msg=\"invalid bit length repeat\",i.mode=ue;break}xe=i.lens[i.have-1],m=3+(3&h),h>>>=2,c-=2}else if(17===_e){for(Ee=me+3;Ee>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}h>>>=me,c-=me,xe=0,m=3+(7&h),h>>>=3,c-=3}else{for(Ee=me+7;Ee>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}h>>>=me,c-=me,xe=0,m=11+(127&h),h>>>=7,c-=7}if(i.have+m>i.nlen+i.ndist){e.msg=\"invalid bit length repeat\",i.mode=ue;break}for(;m--;)i.lens[i.have++]=xe}}if(i.mode===ue)break;if(0===i.lens[256]){e.msg=\"invalid code -- missing end-of-block\",i.mode=ue;break}if(i.lenbits=9,Se={bits:i.lenbits},ye=p(y,i.lens,0,i.nlen,i.lencode,0,i.work,Se),i.lenbits=Se.bits,ye){e.msg=\"invalid literal/lengths set\",i.mode=ue;break}if(i.distbits=6,i.distcode=i.distdyn,Se={bits:i.distbits},ye=p(S,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,Se),i.distbits=Se.bits,ye){e.msg=\"invalid distances set\",i.mode=ue;break}if(i.mode=te,t===Z)break e;case te:i.mode=ie;case ie:if(f>=6&&l>=258){e.next_out=s,e.avail_out=l,e.next_in=o,e.avail_in=f,i.hold=h,i.bits=c,v(e,w),s=e.next_out,r=e.output,l=e.avail_out,o=e.next_in,a=e.input,f=e.avail_in,h=i.hold,c=i.bits,i.mode===G&&(i.back=-1);break}for(i.back=0;Be=i.lencode[h&(1<<i.lenbits)-1],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(c>=me);){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(ke&&0===(240&ke)){for(ge=me,ve=ke,pe=_e;Be=i.lencode[pe+((h&(1<<ge+ve)-1)>>ge)],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(c>=ge+me);){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}h>>>=ge,c-=ge,i.back+=ge}if(h>>>=me,c-=me,i.back+=me,i.length=_e,0===ke){i.mode=se;break}if(32&ke){i.back=-1,i.mode=G;break}if(64&ke){e.msg=\"invalid literal/length code\",i.mode=ue;break}i.extra=15&ke,i.mode=ne;case ne:if(i.extra){for(Ee=i.extra;Ee>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}i.length+=h&(1<<i.extra)-1,h>>>=i.extra,c-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=ae;case ae:for(;Be=i.distcode[h&(1<<i.distbits)-1],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(c>=me);){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(0===(240&ke)){for(ge=me,ve=ke,pe=_e;Be=i.distcode[pe+((h&(1<<ge+ve)-1)>>ge)],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(c>=ge+me);){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}h>>>=ge,c-=ge,i.back+=ge}if(h>>>=me,c-=me,i.back+=me,64&ke){e.msg=\"invalid distance code\",i.mode=ue;break}i.offset=_e,i.extra=15&ke,i.mode=re;case re:if(i.extra){for(Ee=i.extra;Ee>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}i.offset+=h&(1<<i.extra)-1,h>>>=i.extra,c-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg=\"invalid distance too far back\",i.mode=ue;break}i.mode=oe;case oe:if(0===l)break e;if(m=w-l,i.offset>m){if(m=i.offset-m,m>i.whave&&i.sane){e.msg=\"invalid distance too far back\",i.mode=ue;break}m>i.wnext?(m-=i.wnext,be=i.wsize-m):be=i.wnext-m,m>i.length&&(m=i.length),we=i.window}else we=r,be=s-i.offset,m=i.length;m>l&&(m=l),l-=m,i.length-=m;do r[s++]=we[be++];while(--m);0===i.length&&(i.mode=ie);break;case se:if(0===l)break e;r[s++]=i.length,l--,i.mode=ie;break;case fe:if(i.wrap){for(;32>c;){if(0===f)break e;f--,h|=a[o++]<<c,c+=8}if(w-=l,e.total_out+=w,i.total+=w,w&&(e.adler=i.check=i.flags?g(i.check,r,w,s-w):_(i.check,r,w,s-w)),w=l,(i.flags?h:n(h))!==i.check){e.msg=\"incorrect data check\",i.mode=ue;break}h=0,c=0}i.mode=le;case le:if(i.wrap&&i.flags){for(;32>c;){if(0===f)break e;f--,h+=a[o++]<<c,c+=8}if(h!==(4294967295&i.total)){e.msg=\"incorrect length check\",i.mode=ue;break}h=0,c=0}i.mode=de;case de:ye=z;break e;case ue:ye=O;break e;case he:return C;case ce:default:return N}return e.next_out=s,e.avail_out=l,e.next_in=o,e.avail_in=f,i.hold=h,i.bits=c,(i.wsize||w!==e.avail_out&&i.mode<ue&&(i.mode<fe||t!==E))&&u(e,e.output,e.next_out,w-e.avail_out)?(i.mode=he,C):(b-=e.avail_in,w-=e.avail_out,e.total_in+=b,e.total_out+=w,i.total+=w,i.wrap&&w&&(e.adler=i.check=i.flags?g(i.check,r,w,e.next_out-w):_(i.check,r,w,e.next_out-w)),e.data_type=i.bits+(i.last?64:0)+(i.mode===G?128:0)+(i.mode===te||i.mode===J?256:0),(0===b&&0===w||t===E)&&ye===A&&(ye=I),ye)}function c(e){if(!e||!e.state)return N;var t=e.state;return t.window&&(t.window=null),e.state=null,A}function b(e,t){var i;return e&&e.state?(i=e.state,0===(2&i.wrap)?N:(i.head=t,t.done=!1,A)):N}var w,m,k=e(\"../utils/common\"),_=e(\"./adler32\"),g=e(\"./crc32\"),v=e(\"./inffast\"),p=e(\"./inftrees\"),x=0,y=1,S=2,E=4,B=5,Z=6,A=0,z=1,R=2,N=-2,O=-3,C=-4,I=-5,F=8,T=1,U=2,D=3,L=4,H=5,j=6,M=7,K=8,P=9,Y=10,q=11,G=12,X=13,W=14,J=15,Q=16,V=17,$=18,ee=19,te=20,ie=21,ne=22,ae=23,re=24,oe=25,se=26,fe=27,le=28,de=29,ue=30,he=31,ce=32,be=852,we=592,me=15,ke=me,_e=!0;i.inflateReset=o,i.inflateReset2=s,i.inflateResetKeep=r,i.inflateInit=l,i.inflateInit2=f,i.inflate=h,i.inflateEnd=c,i.inflateGetHeader=b,i.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":1,\"./adler32\":3,\"./crc32\":5,\"./inffast\":7,\"./inftrees\":9}],9:[function(e,t,i){\"use strict\";var n=e(\"../utils/common\"),a=15,r=852,o=592,s=0,f=1,l=2,d=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],u=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],h=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],c=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,i,b,w,m,k,_){var g,v,p,x,y,S,E,B,Z,A=_.bits,z=0,R=0,N=0,O=0,C=0,I=0,F=0,T=0,U=0,D=0,L=null,H=0,j=new n.Buf16(a+1),M=new n.Buf16(a+1),K=null,P=0;for(z=0;a>=z;z++)j[z]=0;for(R=0;b>R;R++)j[t[i+R]]++;for(C=A,O=a;O>=1&&0===j[O];O--);if(C>O&&(C=O),0===O)return w[m++]=20971520,w[m++]=20971520,_.bits=1,0;for(N=1;O>N&&0===j[N];N++);for(N>C&&(C=N),T=1,z=1;a>=z;z++)if(T<<=1,T-=j[z],0>T)return-1;if(T>0&&(e===s||1!==O))return-1;for(M[1]=0,z=1;a>z;z++)M[z+1]=M[z]+j[z];for(R=0;b>R;R++)0!==t[i+R]&&(k[M[t[i+R]]++]=R);if(e===s?(L=K=k,S=19):e===f?(L=d,H-=257,K=u,P-=257,S=256):(L=h,K=c,S=-1),D=0,R=0,z=N,y=m,I=C,F=0,p=-1,U=1<<C,x=U-1,e===f&&U>r||e===l&&U>o)return 1;for(var Y=0;;){Y++,E=z-F,k[R]<S?(B=0,Z=k[R]):k[R]>S?(B=K[P+k[R]],Z=L[H+k[R]]):(B=96,Z=0),g=1<<z-F,v=1<<I,N=v;do v-=g,w[y+(D>>F)+v]=E<<24|B<<16|Z|0;while(0!==v);for(g=1<<z-1;D&g;)g>>=1;if(0!==g?(D&=g-1,D+=g):D=0,R++,0===--j[z]){if(z===O)break;z=t[i+k[R]]}if(z>C&&(D&x)!==p){for(0===F&&(F=C),y+=N,I=z-F,T=1<<I;O>I+F&&(T-=j[I+F],!(0>=T));)I++,T<<=1;if(U+=1<<I,e===f&&U>r||e===l&&U>o)return 1;p=D&x,w[p]=C<<24|I<<16|y-m|0}}return 0!==D&&(w[y+D]=z-F<<24|64<<16|0),_.bits=C,0}},{\"../utils/common\":1}],10:[function(e,t,i){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],11:[function(e,t,i){\"use strict\";function n(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}t.exports=n},{}],\"/lib/inflate.js\":[function(e,t,i){\"use strict\";function n(e,t){var i=new c(t);if(i.push(e,!0),i.err)throw i.msg;return i.result}function a(e,t){return t=t||{},t.raw=!0,n(e,t)}var r=e(\"./zlib/inflate.js\"),o=e(\"./utils/common\"),s=e(\"./utils/strings\"),f=e(\"./zlib/constants\"),l=e(\"./zlib/messages\"),d=e(\"./zlib/zstream\"),u=e(\"./zlib/gzheader\"),h=Object.prototype.toString,c=function(e){this.options=o.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0===(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new d,this.strm.avail_out=0;var i=r.inflateInit2(this.strm,t.windowBits);if(i!==f.Z_OK)throw new Error(l[i]);this.header=new u,r.inflateGetHeader(this.strm,this.header)};c.prototype.push=function(e,t){var i,n,a,l,d,u=this.strm,c=this.options.chunkSize,b=!1;if(this.ended)return!1;n=t===~~t?t:t===!0?f.Z_FINISH:f.Z_NO_FLUSH,\"string\"==typeof e?u.input=s.binstring2buf(e):\"[object ArrayBuffer]\"===h.call(e)?u.input=new Uint8Array(e):u.input=e,u.next_in=0,u.avail_in=u.input.length;do{if(0===u.avail_out&&(u.output=new o.Buf8(c),u.next_out=0,u.avail_out=c),i=r.inflate(u,f.Z_NO_FLUSH),i===f.Z_BUF_ERROR&&b===!0&&(i=f.Z_OK,b=!1),i!==f.Z_STREAM_END&&i!==f.Z_OK)return this.onEnd(i),this.ended=!0,!1;u.next_out&&(0===u.avail_out||i===f.Z_STREAM_END||0===u.avail_in&&(n===f.Z_FINISH||n===f.Z_SYNC_FLUSH))&&(\"string\"===this.options.to?(a=s.utf8border(u.output,u.next_out),l=u.next_out-a,d=s.buf2string(u.output,a),u.next_out=l,u.avail_out=c-l,l&&o.arraySet(u.output,u.output,a,l,0),this.onData(d)):this.onData(o.shrinkBuf(u.output,u.next_out))),0===u.avail_in&&0===u.avail_out&&(b=!0)}while((u.avail_in>0||0===u.avail_out)&&i!==f.Z_STREAM_END);return i===f.Z_STREAM_END&&(n=f.Z_FINISH),n===f.Z_FINISH?(i=r.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===f.Z_OK):n===f.Z_SYNC_FLUSH?(this.onEnd(f.Z_OK),u.avail_out=0,!0):!0},c.prototype.onData=function(e){this.chunks.push(e)},c.prototype.onEnd=function(e){e===f.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},i.Inflate=c,i.inflate=n,i.inflateRaw=a,i.ungzip=n},{\"./utils/common\":1,\"./utils/strings\":2,\"./zlib/constants\":4,\"./zlib/gzheader\":6,\"./zlib/inflate.js\":8,\"./zlib/messages\":10,\"./zlib/zstream\":11}]},{},[])(\"/lib/inflate.js\")});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pako_inflate.min.js\n ** module id = 8\n ** module chunks = 0\n **/","/*\nchroma.js - JavaScript library for color conversions\n\nCopyright (c) 2011-2015, Gregor Aisch\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. The name Gregor Aisch may not be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n*/\n(function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga,ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za=[].slice;ua=function(){var a,b,c,d,e;for(a={},e=\"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \"),d=0,b=e.length;b>d;d++)c=e[d],a[\"[object \"+c+\"]\"]=c.toLowerCase();return function(b){var c;return c=Object.prototype.toString.call(b),a[c]||\"object\"}}(),S=function(a,b,c){return null==b&&(b=0),null==c&&(c=1),b>a&&(a=b),a>c&&(a=c),a},va=function(a){return a.length>=3?[].slice.call(a):a[0]},t=function(a){var b;for(b in a)3>b?(a[b]<0&&(a[b]=0),a[b]>255&&(a[b]=255)):3===b&&(a[b]<0&&(a[b]=0),a[b]>1&&(a[b]=1));return a},d=Math.PI,pa=Math.round,w=Math.cos,B=Math.floor,_=Math.pow,T=Math.log,ra=Math.sin,sa=Math.sqrt,m=Math.atan2,W=Math.max,l=Math.abs,g=2*d,e=d/3,b=d/180,f=180/d,s=function(){return arguments[0]instanceof a?arguments[0]:function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,arguments,function(){})},k=[],\"undefined\"!=typeof module&&null!==module&&null!=module.exports&&(module.exports=s),\"function\"==typeof define&&define.amd?define([],function(){return s}):(oa=\"undefined\"!=typeof exports&&null!==exports?exports:this,oa.chroma=s),s.version=\"1.1.1\",j={},h=[],i=!1,a=function(){function a(){var a,b,c,d,e,f,g,k,l;for(f=this,b=[],k=0,d=arguments.length;d>k;k++)a=arguments[k],null!=a&&b.push(a);if(g=b[b.length-1],null!=j[g])f._rgb=t(j[g](va(b.slice(0,-1))));else{for(i||(h=h.sort(function(a,b){return b.p-a.p}),i=!0),l=0,e=h.length;e>l&&(c=h[l],!(g=c.test.apply(c,b)));l++);g&&(f._rgb=t(j[g].apply(j,b)))}null==f._rgb&&console.warn(\"unknown format: \"+b),null==f._rgb&&(f._rgb=[0,0,0]),3===f._rgb.length&&f._rgb.push(1)}return a.prototype.alpha=function(a){return arguments.length?(this._rgb[3]=a,this):this._rgb[3]},a.prototype.toString=function(){return this.name()},a}(),s._input=j,s.brewer=q={OrRd:[\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"],PuBu:[\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"],BuPu:[\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"],Oranges:[\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"],BuGn:[\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"],YlOrBr:[\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"],YlGn:[\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"],Reds:[\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"],RdPu:[\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"],Greens:[\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"],YlGnBu:[\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"],Purples:[\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"],GnBu:[\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"],Greys:[\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"],YlOrRd:[\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"],PuRd:[\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"],Blues:[\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"],PuBuGn:[\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"],Spectral:[\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],RdYlGn:[\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],RdBu:[\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],PiYG:[\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],PRGn:[\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],RdYlBu:[\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],BrBG:[\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],RdGy:[\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],PuOr:[\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],Set2:[\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"],Accent:[\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"],Set1:[\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"],Set3:[\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"],Dark2:[\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"],Paired:[\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"],Pastel2:[\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"],Pastel1:[\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]},wa={indigo:\"#4b0082\",gold:\"#ffd700\",hotpink:\"#ff69b4\",firebrick:\"#b22222\",indianred:\"#cd5c5c\",yellow:\"#ffff00\",mistyrose:\"#ffe4e1\",darkolivegreen:\"#556b2f\",olive:\"#808000\",darkseagreen:\"#8fbc8f\",pink:\"#ffc0cb\",tomato:\"#ff6347\",lightcoral:\"#f08080\",orangered:\"#ff4500\",navajowhite:\"#ffdead\",lime:\"#00ff00\",palegreen:\"#98fb98\",darkslategrey:\"#2f4f4f\",greenyellow:\"#adff2f\",burlywood:\"#deb887\",seashell:\"#fff5ee\",mediumspringgreen:\"#00fa9a\",fuchsia:\"#ff00ff\",papayawhip:\"#ffefd5\",blanchedalmond:\"#ffebcd\",chartreuse:\"#7fff00\",dimgray:\"#696969\",black:\"#000000\",peachpuff:\"#ffdab9\",springgreen:\"#00ff7f\",aquamarine:\"#7fffd4\",white:\"#ffffff\",orange:\"#ffa500\",lightsalmon:\"#ffa07a\",darkslategray:\"#2f4f4f\",brown:\"#a52a2a\",ivory:\"#fffff0\",dodgerblue:\"#1e90ff\",peru:\"#cd853f\",lawngreen:\"#7cfc00\",chocolate:\"#d2691e\",crimson:\"#dc143c\",forestgreen:\"#228b22\",darkgrey:\"#a9a9a9\",lightseagreen:\"#20b2aa\",cyan:\"#00ffff\",mintcream:\"#f5fffa\",silver:\"#c0c0c0\",antiquewhite:\"#faebd7\",mediumorchid:\"#ba55d3\",skyblue:\"#87ceeb\",gray:\"#808080\",darkturquoise:\"#00ced1\",goldenrod:\"#daa520\",darkgreen:\"#006400\",floralwhite:\"#fffaf0\",darkviolet:\"#9400d3\",darkgray:\"#a9a9a9\",moccasin:\"#ffe4b5\",saddlebrown:\"#8b4513\",grey:\"#808080\",darkslateblue:\"#483d8b\",lightskyblue:\"#87cefa\",lightpink:\"#ffb6c1\",mediumvioletred:\"#c71585\",slategrey:\"#708090\",red:\"#ff0000\",deeppink:\"#ff1493\",limegreen:\"#32cd32\",darkmagenta:\"#8b008b\",palegoldenrod:\"#eee8aa\",plum:\"#dda0dd\",turquoise:\"#40e0d0\",lightgrey:\"#d3d3d3\",lightgoldenrodyellow:\"#fafad2\",darkgoldenrod:\"#b8860b\",lavender:\"#e6e6fa\",maroon:\"#800000\",yellowgreen:\"#9acd32\",sandybrown:\"#f4a460\",thistle:\"#d8bfd8\",violet:\"#ee82ee\",navy:\"#000080\",magenta:\"#ff00ff\",dimgrey:\"#696969\",tan:\"#d2b48c\",rosybrown:\"#bc8f8f\",olivedrab:\"#6b8e23\",blue:\"#0000ff\",lightblue:\"#add8e6\",ghostwhite:\"#f8f8ff\",honeydew:\"#f0fff0\",cornflowerblue:\"#6495ed\",slateblue:\"#6a5acd\",linen:\"#faf0e6\",darkblue:\"#00008b\",powderblue:\"#b0e0e6\",seagreen:\"#2e8b57\",darkkhaki:\"#bdb76b\",snow:\"#fffafa\",sienna:\"#a0522d\",mediumblue:\"#0000cd\",royalblue:\"#4169e1\",lightcyan:\"#e0ffff\",green:\"#008000\",mediumpurple:\"#9370db\",midnightblue:\"#191970\",cornsilk:\"#fff8dc\",paleturquoise:\"#afeeee\",bisque:\"#ffe4c4\",slategray:\"#708090\",darkcyan:\"#008b8b\",khaki:\"#f0e68c\",wheat:\"#f5deb3\",teal:\"#008080\",darkorchid:\"#9932cc\",deepskyblue:\"#00bfff\",salmon:\"#fa8072\",darkred:\"#8b0000\",steelblue:\"#4682b4\",palevioletred:\"#db7093\",lightslategray:\"#778899\",aliceblue:\"#f0f8ff\",lightslategrey:\"#778899\",lightgreen:\"#90ee90\",orchid:\"#da70d6\",gainsboro:\"#dcdcdc\",mediumseagreen:\"#3cb371\",lightgray:\"#d3d3d3\",mediumturquoise:\"#48d1cc\",lemonchiffon:\"#fffacd\",cadetblue:\"#5f9ea0\",lightyellow:\"#ffffe0\",lavenderblush:\"#fff0f5\",coral:\"#ff7f50\",purple:\"#800080\",aqua:\"#00ffff\",whitesmoke:\"#f5f5f5\",mediumslateblue:\"#7b68ee\",darkorange:\"#ff8c00\",mediumaquamarine:\"#66cdaa\",darksalmon:\"#e9967a\",beige:\"#f5f5dc\",blueviolet:\"#8a2be2\",azure:\"#f0ffff\",lightsteelblue:\"#b0c4de\",oldlace:\"#fdf5e6\",rebeccapurple:\"#663399\"},s.colors=v=wa,N=function(){var a,b,d,e,f,g,h,i,j;return b=va(arguments),f=b[0],a=b[1],d=b[2],i=(f+16)/116,h=isNaN(a)?i:i+a/500,j=isNaN(d)?i:i-d/200,i=c.Yn*O(i),h=c.Xn*O(h),j=c.Zn*O(j),g=ya(3.2404542*h-1.5371385*i-.4985314*j),e=ya(-.969266*h+1.8760108*i+.041556*j),d=ya(.0556434*h-.2040259*i+1.0572252*j),g=S(g,0,255),e=S(e,0,255),d=S(d,0,255),[g,e,d,b.length>3?b[3]:1]},ya=function(a){return pa(255*(.00304>=a?12.92*a:1.055*_(a,1/2.4)-.055))},O=function(a){return a>c.t1?a*a*a:c.t2*(a-c.t0)},c={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},ga=function(){var a,b,c,d,e,f,g,h;return d=va(arguments),c=d[0],b=d[1],a=d[2],e=la(c,b,a),f=e[0],g=e[1],h=e[2],[116*g-16,500*(f-g),200*(g-h)]},ma=function(a){return(a/=255)<=.04045?a/12.92:_((a+.055)/1.055,2.4)},xa=function(a){return a>c.t3?_(a,1/3):a/c.t2+c.t0},la=function(){var a,b,d,e,f,g,h;return e=va(arguments),d=e[0],b=e[1],a=e[2],d=ma(d),b=ma(b),a=ma(a),f=xa((.4124564*d+.3575761*b+.1804375*a)/c.Xn),g=xa((.2126729*d+.7151522*b+.072175*a)/c.Yn),h=xa((.0193339*d+.119192*b+.9503041*a)/c.Zn),[f,g,h]},s.lab=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"lab\"]),function(){})},j.lab=N,a.prototype.lab=function(){return ga(this._rgb)},n=function(a){var b,c,d,e,f,g,h,i,j,k,l;return a=function(){var b,c,d;for(d=[],c=0,b=a.length;b>c;c++)e=a[c],d.push(s(e));return d}(),2===a.length?(j=function(){var b,c,d;for(d=[],c=0,b=a.length;b>c;c++)e=a[c],d.push(e.lab());return d}(),f=j[0],g=j[1],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;2>=c;b=++c)d.push(f[b]+a*(g[b]-f[b]));return d}(),s.lab.apply(s,c)}):3===a.length?(k=function(){var b,c,d;for(d=[],c=0,b=a.length;b>c;c++)e=a[c],d.push(e.lab());return d}(),f=k[0],g=k[1],h=k[2],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;2>=c;b=++c)d.push((1-a)*(1-a)*f[b]+2*(1-a)*a*g[b]+a*a*h[b]);return d}(),s.lab.apply(s,c)}):4===a.length?(l=function(){var b,c,d;for(d=[],c=0,b=a.length;b>c;c++)e=a[c],d.push(e.lab());return d}(),f=l[0],g=l[1],h=l[2],i=l[3],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;2>=c;b=++c)d.push((1-a)*(1-a)*(1-a)*f[b]+3*(1-a)*(1-a)*a*g[b]+3*(1-a)*a*a*h[b]+a*a*a*i[b]);return d}(),s.lab.apply(s,c)}):5===a.length&&(c=n(a.slice(0,3)),d=n(a.slice(2,5)),b=function(a){return.5>a?c(2*a):d(2*(a-.5))}),b},s.bezier=function(a){var b;return b=n(a),b.scale=function(){return s.scale(b)},b},s.cubehelix=function(a,b,c,d,e){var f,h,i;return null==a&&(a=300),null==b&&(b=-1.5),null==c&&(c=1),null==d&&(d=1),null==e&&(e=[0,1]),h=e[1]-e[0],f=0,i=function(i){var j,k,l,m,n,o,p,q,r;return j=g*((a+120)/360+b*i),p=_(e[0]+h*i,d),o=0!==f?c[0]+i*f:c,k=o*p*(1-p)/2,m=w(j),r=ra(j),q=p+k*(-.14861*m+1.78277*r),n=p+k*(-.29227*m-.90649*r),l=p+1.97294*k*m,s(t([255*q,255*n,255*l]))},i.start=function(b){return null==b?a:(a=b,i)},i.rotations=function(a){return null==a?b:(b=a,i)},i.gamma=function(a){return null==a?d:(d=a,i)},i.hue=function(a){return null==a?c:(c=a,\"array\"===ua(c)?(f=c[1]-c[0],0===f&&(c=c[1])):f=0,i)},i.lightness=function(a){return null==a?e:(e=a,\"array\"===ua(e)?(h=e[1]-e[0],0===h&&(e=e[1])):h=0,i)},i.scale=function(){return s.scale(i)},i.hue(c),i},s.random=function(){var b,c,d,e;for(c=\"0123456789abcdef\",b=\"#\",d=e=0;6>e;d=++e)b+=c.charAt(B(16*Math.random()));return new a(b)},j.rgb=function(){var a,b,c,d;b=va(arguments),c=[];for(a in b)d=b[a],c.push(d);return c},s.rgb=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"rgb\"]),function(){})},a.prototype.rgb=function(){return this._rgb.slice(0,3)},a.prototype.rgba=function(){return this._rgb},h.push({p:15,test:function(a){var b;return b=va(arguments),\"array\"===ua(b)&&3===b.length?\"rgb\":4===b.length&&\"number\"===ua(b[3])&&b[3]>=0&&b[3]<=1?\"rgb\":void 0}}),C=function(a){var b,c,d,e,f,g;if(a.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/))return(4===a.length||7===a.length)&&(a=a.substr(1)),3===a.length&&(a=a.split(\"\"),a=a[0]+a[0]+a[1]+a[1]+a[2]+a[2]),g=parseInt(a,16),e=g>>16,d=g>>8&255,c=255&g,[e,d,c,1];if(a.match(/^#?([A-Fa-f0-9]{8})$/))return 9===a.length&&(a=a.substr(1)),g=parseInt(a,16),e=g>>24&255,d=g>>16&255,c=g>>8&255,b=pa((255&g)/255*100)/100,[e,d,c,b];if(null!=j.css&&(f=j.css(a)))return f;throw\"unknown color: \"+a},ca=function(a,b){var c,d,e,f,g,h,i;return null==b&&(b=\"rgb\"),g=a[0],e=a[1],d=a[2],c=a[3],i=g<<16|e<<8|d,h=\"000000\"+i.toString(16),h=h.substr(h.length-6),f=\"0\"+pa(255*c).toString(16),f=f.substr(f.length-2),\"#\"+function(){switch(b.toLowerCase()){case\"rgba\":return h+f;case\"argb\":return f+h;default:return h}}()},j.hex=function(a){return C(a)},s.hex=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"hex\"]),function(){})},a.prototype.hex=function(a){return null==a&&(a=\"rgb\"),ca(this._rgb,a)},h.push({p:10,test:function(a){return 1===arguments.length&&\"string\"===ua(a)?\"hex\":void 0}}),F=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n;if(a=va(arguments),e=a[0],k=a[1],g=a[2],0===k)i=d=b=255*g;else{for(n=[0,0,0],c=[0,0,0],m=.5>g?g*(1+k):g+k-g*k,l=2*g-m,e/=360,n[0]=e+1/3,n[1]=e,n[2]=e-1/3,f=h=0;2>=h;f=++h)n[f]<0&&(n[f]+=1),n[f]>1&&(n[f]-=1),6*n[f]<1?c[f]=l+6*(m-l)*n[f]:2*n[f]<1?c[f]=m:3*n[f]<2?c[f]=l+(m-l)*(2/3-n[f])*6:c[f]=l;j=[pa(255*c[0]),pa(255*c[1]),pa(255*c[2])],i=j[0],d=j[1],b=j[2]}return a.length>3?[i,d,b,a[3]]:[i,d,b]},ea=function(a,b,c){var d,e,f,g,h;return void 0!==a&&a.length>=3&&(g=a,a=g[0],b=g[1],c=g[2]),a/=255,b/=255,c/=255,f=Math.min(a,b,c),W=Math.max(a,b,c),e=(W+f)/2,W===f?(h=0,d=Number.NaN):h=.5>e?(W-f)/(W+f):(W-f)/(2-W-f),a===W?d=(b-c)/(W-f):b===W?d=2+(c-a)/(W-f):c===W&&(d=4+(a-b)/(W-f)),d*=60,0>d&&(d+=360),[d,h,e]},s.hsl=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"hsl\"]),function(){})},j.hsl=F,a.prototype.hsl=function(){return ea(this._rgb)},G=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;if(a=va(arguments),e=a[0],p=a[1],r=a[2],r*=255,0===p)i=d=b=r;else switch(360===e&&(e=0),e>360&&(e-=360),0>e&&(e+=360),e/=60,f=B(e),c=e-f,g=r*(1-p),h=r*(1-p*c),q=r*(1-p*(1-c)),f){case 0:j=[r,q,g],i=j[0],d=j[1],b=j[2];break;case 1:k=[h,r,g],i=k[0],d=k[1],b=k[2];break;case 2:l=[g,r,q],i=l[0],d=l[1],b=l[2];break;case 3:m=[g,h,r],i=m[0],d=m[1],b=m[2];break;case 4:n=[q,g,r],i=n[0],d=n[1],b=n[2];break;case 5:o=[r,g,h],i=o[0],d=o[1],b=o[2]}return i=pa(i),d=pa(d),b=pa(b),[i,d,b,a.length>3?a[3]:1]},fa=function(){var a,b,c,d,e,f,g,h,i;return g=va(arguments),f=g[0],c=g[1],a=g[2],e=Math.min(f,c,a),W=Math.max(f,c,a),b=W-e,i=W/255,0===W?(d=Number.NaN,h=0):(h=b/W,f===W&&(d=(c-a)/b),c===W&&(d=2+(a-f)/b),a===W&&(d=4+(f-c)/b),d*=60,0>d&&(d+=360)),[d,h,i]},s.hsv=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"hsv\"]),function(){})},j.hsv=G,a.prototype.hsv=function(){return fa(this._rgb)},Z=function(a){var b,c,d;return\"number\"===ua(a)&&a>=0&&16777215>=a?(d=a>>16,c=a>>8&255,b=255&a,[d,c,b,1]):(console.warn(\"unknown num color: \"+a),[0,0,0,1])},ja=function(){var a,b,c,d;return d=va(arguments),c=d[0],b=d[1],a=d[2],(c<<16)+(b<<8)+a},s.num=function(b){return new a(b,\"num\")},a.prototype.num=function(a){return null==a&&(a=\"rgb\"),ja(this._rgb,a)},j.num=Z,h.push({p:10,test:function(a){return 1===arguments.length&&\"number\"===ua(a)&&a>=0&&16777215>=a?\"num\":void 0}}),x=function(a){var b,c,d,e,f,g,h,i;if(a=a.toLowerCase(),null!=s.colors&&s.colors[a])return C(s.colors[a]);if(f=a.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)){for(h=f.slice(1,4),e=g=0;2>=g;e=++g)h[e]=+h[e];h[3]=1}else if(f=a.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/))for(h=f.slice(1,5),e=i=0;3>=i;e=++i)h[e]=+h[e];else if(f=a.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)){for(h=f.slice(1,4),e=b=0;2>=b;e=++b)h[e]=pa(2.55*h[e]);h[3]=1}else if(f=a.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)){for(h=f.slice(1,5),e=c=0;2>=c;e=++c)h[e]=pa(2.55*h[e]);h[3]=+h[3]}else(f=a.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/))?(d=f.slice(1,4),d[1]*=.01,d[2]*=.01,h=F(d),h[3]=1):(f=a.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/))&&(d=f.slice(1,4),d[1]*=.01,d[2]*=.01,h=F(d),h[3]=+f[4]);return h},ba=function(a){var b;return b=a[3]<1?\"rgba\":\"rgb\",\"rgb\"===b?b+\"(\"+a.slice(0,3).map(pa).join(\",\")+\")\":\"rgba\"===b?b+\"(\"+a.slice(0,3).map(pa).join(\",\")+\",\"+a[3]+\")\":void 0},na=function(a){return pa(100*a)/100},E=function(a,b){var c;return c=1>b?\"hsla\":\"hsl\",a[0]=na(a[0]||0),a[1]=na(100*a[1])+\"%\",a[2]=na(100*a[2])+\"%\",\"hsla\"===c&&(a[3]=b),c+\"(\"+a.join(\",\")+\")\"},j.css=function(a){return x(a)},s.css=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"css\"]),function(){})},a.prototype.css=function(a){return null==a&&(a=\"rgb\"),\"rgb\"===a.slice(0,3)?ba(this._rgb):\"hsl\"===a.slice(0,3)?E(this.hsl(),this.alpha()):void 0},j.named=function(a){return C(wa[a])},h.push({p:20,test:function(a){return 1===arguments.length&&null!=wa[a]?\"named\":void 0}}),a.prototype.name=function(a){var b,c;arguments.length&&(wa[a]&&(this._rgb=C(wa[a])),this._rgb[3]=1),b=this.hex();for(c in wa)if(b===wa[c])return c;return b},P=function(){var a,c,d,e;return e=va(arguments),d=e[0],a=e[1],c=e[2],c*=b,[d,w(c)*a,ra(c)*a]},Q=function(){var a,b,c,d,e,f,g,h,i,j,k;return c=va(arguments),h=c[0],e=c[1],g=c[2],j=P(h,e,g),a=j[0],b=j[1],d=j[2],k=N(a,b,d),i=k[0],f=k[1],d=k[2],[S(i,0,255),S(f,0,255),S(d,0,255),c.length>3?c[3]:1]},M=function(){var a,b,c,d,e,g;return g=va(arguments),e=g[0],a=g[1],b=g[2],c=sa(a*a+b*b),d=(m(b,a)*f+360)%360,0===pa(1e4*c)&&(d=Number.NaN),[e,c,d]},ha=function(){var a,b,c,d,e,f,g;return f=va(arguments),e=f[0],c=f[1],b=f[2],g=ga(e,c,b),d=g[0],a=g[1],b=g[2],M(d,a,b)},s.lch=function(){var b;return b=va(arguments),new a(b,\"lch\")},s.hcl=function(){var b;return b=va(arguments),new a(b,\"hcl\")},j.lch=Q,j.hcl=function(){var a,b,c,d;return d=va(arguments),b=d[0],a=d[1],c=d[2],Q([c,a,b])},a.prototype.lch=function(){return ha(this._rgb)},a.prototype.hcl=function(){return ha(this._rgb).reverse()},aa=function(a){var b,c,d,e,f,g,h,i,j;return null==a&&(a=\"rgb\"),i=va(arguments),h=i[0],e=i[1],b=i[2],h/=255,e/=255,b/=255,f=1-Math.max(h,Math.max(e,b)),d=1>f?1/(1-f):0,c=(1-h-f)*d,g=(1-e-f)*d,j=(1-b-f)*d,[c,g,j,f]},u=function(){var a,b,c,d,e,f,g,h,i;return b=va(arguments),d=b[0],g=b[1],i=b[2],f=b[3],a=b.length>4?b[4]:1,1===f?[0,0,0,a]:(h=d>=1?0:pa(255*(1-d)*(1-f)),e=g>=1?0:pa(255*(1-g)*(1-f)),c=i>=1?0:pa(255*(1-i)*(1-f)),[h,e,c,a])},j.cmyk=function(){return u(va(arguments))},s.cmyk=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"cmyk\"]),function(){})},a.prototype.cmyk=function(){return aa(this._rgb)},j.gl=function(){var a,b,c,d,e;for(d=function(){var a,c;a=va(arguments),c=[];for(b in a)e=a[b],c.push(e);return c}.apply(this,arguments),a=c=0;2>=c;a=++c)d[a]*=255;return d},s.gl=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"gl\"]),function(){})},a.prototype.gl=function(){var a;return a=this._rgb,[a[0]/255,a[1]/255,a[2]/255,a[3]]},ia=function(a,b,c){var d;return d=va(arguments),a=d[0],b=d[1],c=d[2],a=U(a),b=U(b),c=U(c),.2126*a+.7152*b+.0722*c},U=function(a){return a/=255,.03928>=a?a/12.92:_((a+.055)/1.055,2.4)},k=[],H=function(a,b,c,d){var e,f,g,h;for(null==c&&(c=.5),null==d&&(d=\"rgb\"),\"object\"!==ua(a)&&(a=s(a)),\"object\"!==ua(b)&&(b=s(b)),g=0,f=k.length;f>g;g++)if(e=k[g],d===e[0]){h=e[1](a,b,c,d);break}if(null==h)throw\"color mode \"+d+\" is not supported\";return h.alpha(a.alpha()+c*(b.alpha()-a.alpha())),h},s.interpolate=H,a.prototype.interpolate=function(a,b,c){return H(this,a,b,c)},s.mix=H,a.prototype.mix=a.prototype.interpolate,L=function(b,c,d,e){var f,g;return f=b._rgb,g=c._rgb,new a(f[0]+d*(g[0]-f[0]),f[1]+d*(g[1]-f[1]),f[2]+d*(g[2]-f[2]),e)},k.push([\"rgb\",L]),a.prototype.luminance=function(a,b){var c,d,e,f;return null==b&&(b=\"rgb\"),arguments.length?(0===a?this._rgb=[0,0,0,this._rgb[3]]:1===a?this._rgb=[255,255,255,this._rgb[3]]:(d=1e-7,e=20,f=function(c,g){var h,i;return i=c.interpolate(g,.5,b),h=i.luminance(),Math.abs(a-h)<d||!e--?i:h>a?f(c,i):f(i,g)},c=ia(this._rgb),this._rgb=(c>a?f(s(\"black\"),this):f(this,s(\"white\"))).rgba()),this):ia(this._rgb)},ta=function(a){var b,c,d,e;return e=a/100,66>e?(d=255,c=-155.25485562709179-.44596950469579133*(c=e-2)+104.49216199393888*T(c),b=20>e?0:-254.76935184120902+.8274096064007395*(b=e-10)+115.67994401066147*T(b)):(d=351.97690566805693+.114206453784165*(d=e-55)-40.25366309332127*T(d),c=325.4494125711974+.07943456536662342*(c=e-50)-28.0852963507957*T(c),b=255),t([d,c,b])},ka=function(){var a,b,c,d,e,f,g,h,i;for(g=va(arguments),f=g[0],c=g[1],a=g[2],e=1e3,d=4e4,b=.4;d-e>b;)i=.5*(d+e),h=ta(i),h[2]/h[0]>=a/f?d=i:e=i;return pa(i)},s.temperature=s.kelvin=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"temperature\"]),function(){})},j.temperature=j.kelvin=j.K=ta,a.prototype.temperature=function(){return ka(this._rgb)},a.prototype.kelvin=a.prototype.temperature,s.contrast=function(b,c){var d,e,f,g;return(\"string\"===(f=ua(b))||\"number\"===f)&&(b=new a(b)),(\"string\"===(g=ua(c))||\"number\"===g)&&(c=new a(c)),d=b.luminance(),e=c.luminance(),d>e?(d+.05)/(e+.05):(e+.05)/(d+.05)},a.prototype.get=function(a){var b,c,d,e,f,g;return d=this,f=a.split(\".\"),e=f[0],b=f[1],g=d[e](),b?(c=e.indexOf(b),c>-1?g[c]:console.warn(\"unknown channel \"+b+\" in mode \"+e)):g},a.prototype.set=function(a,b){var c,d,e,f,g,h;if(e=this,g=a.split(\".\"),f=g[0],c=g[1],c)if(h=e[f](),d=f.indexOf(c),d>-1)if(\"string\"===ua(b))switch(b.charAt(0)){case\"+\":h[d]+=+b;break;case\"-\":h[d]+=+b;break;case\"*\":h[d]*=+b.substr(1);break;case\"/\":h[d]/=+b.substr(1);break;default:h[d]=+b}else h[d]=b;else console.warn(\"unknown channel \"+c+\" in mode \"+f);else h=b;return e._rgb=s(h,f).alpha(e.alpha())._rgb,e},a.prototype.darken=function(a){var b,d;return null==a&&(a=1),d=this,b=d.lab(),b[0]-=c.Kn*a,s.lab(b).alpha(d.alpha())},a.prototype.brighten=function(a){return null==a&&(a=1),this.darken(-a)},a.prototype.darker=a.prototype.darken,a.prototype.brighter=a.prototype.brighten,a.prototype.saturate=function(a){var b,d;return null==a&&(a=1),d=this,b=d.lch(),b[1]+=a*c.Kn,b[1]<0&&(b[1]=0),s.lch(b).alpha(d.alpha())},a.prototype.desaturate=function(a){return null==a&&(a=1),this.saturate(-a)},a.prototype.premultiply=function(){var a,b;return b=this.rgb(),a=this.alpha(),s(b[0]*a,b[1]*a,b[2]*a,a)},o=function(a,b,c){if(!o[c])throw\"unknown blend mode \"+c;return o[c](a,b)},p=function(a){return function(b,c){var d,e;return d=s(c).rgb(),e=s(b).rgb(),s(a(d,e),\"rgb\")}},A=function(a){return function(b,c){var d,e,f;for(f=[],d=e=0;3>=e;d=++e)f[d]=a(b[d],c[d]);return f}},Y=function(a,b){return a},X=function(a,b){return a*b/255},y=function(a,b){return a>b?b:a},R=function(a,b){return a>b?a:b},qa=function(a,b){return 255*(1-(1-a/255)*(1-b/255))},$=function(a,b){return 128>b?2*a*b/255:255*(1-2*(1-a/255)*(1-b/255))},r=function(a,b){return 255*(1-(1-b/255)/(a/255))},z=function(a,b){return 255===a?255:(a=255*(b/255)/(1-a/255),a>255?255:a)},o.normal=p(A(Y)),o.multiply=p(A(X)),o.screen=p(A(qa)),o.overlay=p(A($)),o.darken=p(A(y)),o.lighten=p(A(R)),o.dodge=p(A(z)),o.burn=p(A(r)),s.blend=o,s.analyze=function(a){var b,c,d,e;for(d={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},c=0,b=a.length;b>c;c++)e=a[c],null==e||isNaN(e)||(d.values.push(e),d.sum+=e,e<d.min&&(d.min=e),e>d.max&&(d.max=e),d.count+=1);return d.domain=[d.min,d.max],d.limits=function(a,b){return s.limits(d,a,b)},d},s.scale=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,t,u,v,w,x;return k=\"rgb\",l=s(\"#ccc\"),p=0,h=!1,g=[0,1],o=[],n=[0,0],c=!1,e=[],m=!1,j=0,i=1,f=!1,d={},w=function(a){var b,c,d,f,g,h,i;if(null==a&&(a=[\"#fff\",\"#000\"]),null!=a&&\"string\"===ua(a)&&null!=(null!=(f=s.brewer)?f[a]:void 0)&&(a=s.brewer[a]),\"array\"===ua(a)){for(a=a.slice(0),b=d=0,g=a.length-1;g>=0?g>=d:d>=g;b=g>=0?++d:--d)c=a[b],\"string\"===ua(c)&&(a[b]=s(c));for(o.length=0,b=i=0,h=a.length-1;h>=0?h>=i:i>=h;b=h>=0?++i:--i)o.push(b/(a.length-1))}return v(),e=a},t=function(a){var b,d;if(null!=c){for(d=c.length-1,b=0;d>b&&a>=c[b];)b++;return b-1}return 0},x=function(a){return a},q=function(a){var b,d,e,f,g;return g=a,c.length>2&&(f=c.length-1,b=t(a),e=c[0]+(c[1]-c[0])*(0+.5*p),d=c[f-1]+(c[f]-c[f-1])*(1-.5*p),g=j+(c[b]+.5*(c[b+1]-c[b])-e)/(d-e)*(i-j)),g},u=function(a,b){var f,g,h,m,p,q,r,u;if(null==b&&(b=!1),isNaN(a))return l;if(b?u=a:c&&c.length>2?(f=t(a),u=f/(c.length-2),u=n[0]+u*(1-n[0]-n[1])):i!==j?(u=(a-j)/(i-j),u=n[0]+u*(1-n[0]-n[1]),u=Math.min(1,Math.max(0,u))):u=1,b||(u=x(u)),m=Math.floor(1e4*u),d[m])g=d[m];else{if(\"array\"===ua(e))for(h=p=0,r=o.length-1;r>=0?r>=p:p>=r;h=r>=0?++p:--p){if(q=o[h],q>=u){g=e[h];break}if(u>=q&&h===o.length-1){g=e[h];break}if(u>q&&u<o[h+1]){u=(u-q)/(o[h+1]-q),g=s.interpolate(e[h],e[h+1],u,k);break}}else\"function\"===ua(e)&&(g=e(u));d[m]=g}return g},v=function(){return d={}},w(a),r=function(a){var b;return b=s(u(a)),m&&b[m]?b[m]():b},r.classes=function(a){var b;return null!=a?(\"array\"===ua(a)?(c=a,g=[a[0],a[a.length-1]]):(b=s.analyze(g),c=0===a?[b.min,b.max]:s.limits(b,\"e\",a)),r):c},r.domain=function(a){var b,c,d,f,h,k,l;if(!arguments.length)return g;if(j=a[0],i=a[a.length-1],o=[],d=e.length,a.length===d&&j!==i)for(h=0,f=a.length;f>h;h++)c=a[h],o.push((c-j)/(i-j));else for(b=l=0,k=d-1;k>=0?k>=l:l>=k;b=k>=0?++l:--l)o.push(b/(d-1));return g=[j,i],r},r.mode=function(a){return arguments.length?(k=a,v(),r):k},r.range=function(a,b){return w(a,b),r},r.out=function(a){return m=a,r},r.spread=function(a){return arguments.length?(p=a,r):p},r.correctLightness=function(a){return null==a&&(a=!0),f=a,v(),x=f?function(a){var b,c,d,e,f,g,h,i,j;for(b=u(0,!0).lab()[0],c=u(1,!0).lab()[0],h=b>c,d=u(a,!0).lab()[0],f=b+(c-b)*a,e=d-f,i=0,j=1,g=20;Math.abs(e)>.01&&g-->0;)!function(){return h&&(e*=-1),0>e?(i=a,a+=.5*(j-a)):(j=a,a+=.5*(i-a)),d=u(a,!0).lab()[0],e=d-f}();return a}:function(a){return a},r},r.padding=function(a){return null!=a?(\"number\"===ua(a)&&(a=[a,a]),n=a,r):n},r.colors=function(){var b,d,e,f,h,i,j,k,l;if(f=0,h=\"hex\",1===arguments.length&&(\"string\"===ua(arguments[0])?h=arguments[0]:f=arguments[0]),2===arguments.length&&(f=arguments[0],h=arguments[1]),f)return d=g[0],b=g[1]-d,function(){j=[];for(var a=0;f>=0?f>a:a>f;f>=0?a++:a--)j.push(a);return j}.apply(this).map(function(a){return r(d+a/(f-1)*b)[h]()});if(a=[],k=[],c&&c.length>2)for(e=l=1,i=c.length;i>=1?i>l:l>i;e=i>=1?++l:--l)k.push(.5*(c[e-1]+c[e]));else k=g;return k.map(function(a){return r(a)[h]()})},r},null==s.scales&&(s.scales={}),s.scales.cool=function(){return s.scale([s.hsl(180,1,.9),s.hsl(250,.7,.4)])},s.scales.hot=function(){return s.scale([\"#000\",\"#f00\",\"#ff0\",\"#fff\"],[0,.25,.75,1]).mode(\"rgb\")},s.analyze=function(a,b,c){var d,e,f,g,h,i,j;if(h={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},null==c&&(c=function(){return!0}),d=function(a){null==a||isNaN(a)||(h.values.push(a),h.sum+=a,a<h.min&&(h.min=a),a>h.max&&(h.max=a),h.count+=1)},j=function(a,e){return c(a,e)?d(null!=b&&\"function\"===ua(b)?b(a):null!=b&&\"string\"===ua(b)||\"number\"===ua(b)?a[b]:a):void 0},\"array\"===ua(a))for(g=0,f=a.length;f>g;g++)i=a[g],j(i);else for(e in a)i=a[e],j(i,e);return h.domain=[h.min,h.max],h.limits=function(a,b){return s.limits(h,a,b)},h},s.limits=function(a,b,c){var d,e,f,g,h,i,j,k,m,n,o,p,q,r,t,u,v,w,x,y,z,A,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,U,V,X,Y,Z,$,aa,ba,ca,da,ea,fa,ga,ha,ia,ja;if(null==b&&(b=\"equal\"),null==c&&(c=7),\"array\"===ua(a)&&(a=s.analyze(a)),E=a.min,W=a.max,fa=a.sum,ia=a.values.sort(function(a,b){return a-b}),C=[],\"c\"===b.substr(0,1)&&(C.push(E),C.push(W)),\"e\"===b.substr(0,1)){for(C.push(E),y=K=1,O=c-1;O>=1?O>=K:K>=O;y=O>=1?++K:--K)C.push(E+y/c*(W-E));C.push(W)}else if(\"l\"===b.substr(0,1)){if(0>=E)throw\"Logarithmic scales are only possible for values > 0\";for(F=Math.LOG10E*T(E),D=Math.LOG10E*T(W),C.push(E),y=ja=1,P=c-1;P>=1?P>=ja:ja>=P;y=P>=1?++ja:--ja)C.push(_(10,F+y/c*(D-F)));C.push(W)}else if(\"q\"===b.substr(0,1)){for(C.push(E),y=d=1,X=c-1;X>=1?X>=d:d>=X;y=X>=1?++d:--d)L=ia.length*y/c,M=B(L),M===L?C.push(ia[M]):(N=L-M,C.push(ia[M]*N+ia[M+1]*(1-N)));C.push(W)}else if(\"k\"===b.substr(0,1)){for(H=ia.length,r=new Array(H),w=new Array(c),ea=!0,I=0,u=null,u=[],u.push(E),y=e=1,Y=c-1;Y>=1?Y>=e:e>=Y;y=Y>=1?++e:--e)u.push(E+y/c*(W-E));for(u.push(W);ea;){for(z=f=0,Z=c-1;Z>=0?Z>=f:f>=Z;z=Z>=0?++f:--f)w[z]=0;for(y=g=0,$=H-1;$>=0?$>=g:g>=$;y=$>=0?++g:--g){for(ha=ia[y],G=Number.MAX_VALUE,z=h=0,aa=c-1;aa>=0?aa>=h:h>=aa;z=aa>=0?++h:--h)x=l(u[z]-ha),G>x&&(G=x,t=z);w[t]++,r[y]=t}for(J=new Array(c),z=i=0,ba=c-1;ba>=0?ba>=i:i>=ba;z=ba>=0?++i:--i)J[z]=null;for(y=j=0,ca=H-1;ca>=0?ca>=j:j>=ca;y=ca>=0?++j:--j)v=r[y],null===J[v]?J[v]=ia[y]:J[v]+=ia[y];for(z=k=0,da=c-1;da>=0?da>=k:k>=da;z=da>=0?++k:--k)J[z]*=1/w[z];for(ea=!1,z=m=0,Q=c-1;Q>=0?Q>=m:m>=Q;z=Q>=0?++m:--m)if(J[z]!==u[y]){ea=!0;break}u=J,I++,I>200&&(ea=!1)}for(A={},z=n=0,R=c-1;R>=0?R>=n:n>=R;z=R>=0?++n:--n)A[z]=[];for(y=o=0,S=H-1;S>=0?S>=o:o>=S;y=S>=0?++o:--o)v=r[y],A[v].push(ia[y]);for(ga=[],z=p=0,U=c-1;U>=0?U>=p:p>=U;z=U>=0?++p:--p)ga.push(A[z][0]),ga.push(A[z][A[z].length-1]);for(ga=ga.sort(function(a,b){return a-b}),C.push(ga[0]),y=q=1,V=ga.length-1;V>=q;y=q+=2)isNaN(ga[y])||C.push(ga[y])}return C},D=function(a,b,c){var d,f,h,i;return d=va(arguments),a=d[0],b=d[1],c=d[2],a/=360,1/3>a?(f=(1-b)/3,i=(1+b*w(g*a)/w(e-g*a))/3,h=1-(f+i)):2/3>a?(a-=1/3,i=(1-b)/3,h=(1+b*w(g*a)/w(e-g*a))/3,f=1-(i+h)):(a-=2/3,h=(1-b)/3,f=(1+b*w(g*a)/w(e-g*a))/3,i=1-(h+f)),i=S(c*i*3),h=S(c*h*3),f=S(c*f*3),[255*i,255*h,255*f,d.length>3?d[3]:1]},da=function(){var a,b,c,d,e,f,h,i;return h=va(arguments),f=h[0],b=h[1],a=h[2],g=2*Math.PI,f/=255,b/=255,a/=255,e=Math.min(f,b,a),d=(f+b+a)/3,i=1-e/d,0===i?c=0:(c=(f-b+(f-a))/2,c/=Math.sqrt((f-b)*(f-b)+(f-a)*(b-a)),c=Math.acos(c),a>b&&(c=g-c),c/=g),[360*c,i,d]},s.hsi=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"hsi\"]),function(){})},j.hsi=D,a.prototype.hsi=function(){return da(this._rgb)},I=function(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q;return\"hsl\"===d?(p=a.hsl(),q=b.hsl()):\"hsv\"===d?(p=a.hsv(),q=b.hsv()):\"hsi\"===d?(p=a.hsi(),q=b.hsi()):(\"lch\"===d||\"hcl\"===d)&&(d=\"hcl\",p=a.hcl(),q=b.hcl()),\"h\"===d.substr(0,1)&&(g=p[0],n=p[1],j=p[2],h=q[0],o=q[1],k=q[2]),isNaN(g)||isNaN(h)?isNaN(g)?isNaN(h)?f=Number.NaN:(f=h,1!==j&&0!==j||\"hsv\"===d||(m=o)):(f=g,1!==k&&0!==k||\"hsv\"===d||(m=n)):(e=h>g&&h-g>180?h-(g+360):g>h&&g-h>180?h+360-g:h-g,f=g+c*e),null==m&&(m=n+c*(o-n)),i=j+c*(k-j),l=s[d](f,m,i)},k=k.concat(function(){var a,b,c,d;for(c=[\"hsv\",\"hsl\",\"hsi\",\"hcl\",\"lch\"],d=[],b=0,a=c.length;a>b;b++)V=c[b],d.push([V,I]);return d}()),K=function(a,b,c,d){var e,f;return e=a.num(),f=b.num(),s.num(e+(f-e)*c,\"num\")},k.push([\"num\",K]),J=function(b,c,d,e){var f,g,h;return g=b.lab(),h=c.lab(),f=new a(g[0]+d*(h[0]-g[0]),g[1]+d*(h[1]-g[1]),g[2]+d*(h[2]-g[2]),e);\n},k.push([\"lab\",J])}).call(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/chroma.min.js\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 10\n ** module chunks = 0\n **/","var jsfeat=jsfeat||{REVISION:\"ALPHA\"};\n(function(f){var E=new Int32Array([-1,1,4,-1,4,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,8]),d=function(){return function(a){return a&65280}}(),g=function(){return function(a){return a&255}}(),a=function(){return function(a){return E[(a&65280)>>8]}}(),b=function(){return function(a,b){this.size=(a+7|0)&-8;\"undefined\"===typeof b?this.buffer=new ArrayBuffer(this.size):(this.buffer=b,this.size=b.length);this.u8=new Uint8Array(this.buffer);this.i32=new Int32Array(this.buffer);this.f32=new Float32Array(this.buffer);\nthis.f64=new Float64Array(this.buffer)}}(),h=function(){function h(a,b,c,m){this.type=d(c)|0;this.channel=g(c)|0;this.cols=a|0;this.rows=b|0;\"undefined\"===typeof m?this.allocate():(this.buffer=m,this.data=this.type&256?this.buffer.u8:this.type&512?this.buffer.i32:this.type&1024?this.buffer.f32:this.buffer.f64)}h.prototype.allocate=function(){delete this.data;delete this.buffer;this.buffer=new b(this.cols*a(this.type)*this.channel*this.rows);this.data=this.type&256?this.buffer.u8:this.type&512?this.buffer.i32:\nthis.type&1024?this.buffer.f32:this.buffer.f64};h.prototype.copy_to=function(a){a=a.data;for(var b=this.data,c=0,d=this.cols*this.rows*this.channel|0;c<d-4;c+=4)a[c]=b[c],a[c+1]=b[c+1],a[c+2]=b[c+2],a[c+3]=b[c+3];for(;c<d;++c)a[c]=b[c]};h.prototype.resize=function(a,b,c){\"undefined\"===typeof c&&(c=this.channel);a*c*b>this.rows*this.cols*this.channel?(this.cols=a,this.rows=b,this.channel=c,this.allocate()):(this.cols=a,this.rows=b,this.channel=c)};return h}();f.U8_t=256;f.S32_t=512;f.F32_t=1024;f.S64_t=\n2048;f.F64_t=4096;f.C1_t=1;f.C2_t=2;f.C3_t=3;f.C4_t=4;f.U8C1_t=257;f.U8C3_t=259;f.U8C4_t=260;f.F32C1_t=1025;f.F32C2_t=1026;f.S32C1_t=513;f.S32C2_t=514;f.EPSILON=1.192092896E-7;f.FLT_MIN=1E-37;f.BOX_BLUR_NOSCALE=1;f.SVD_U_T=1;f.SVD_V_T=2;f.get_data_type=d;f.get_channel=g;f.get_data_type_size=a;f.data_t=b;f.matrix_t=h})(jsfeat);\n(function(f){var E=function(){return{transpose:function(d,g){for(var a=0,b=0,h=g.rows,m=g.cols,k=0,p=0,c=0,f=g.data,y=d.data;a<h;p+=1,k+=m,a++)for(c=p,b=0;b<m;c+=h,b++)y[c]=f[k+b]},multiply:function(d,g,a){var b=0,h=0,m=0,k=0,p=0,c=0,f=0,y=0,q=g.cols,r=g.rows,t=a.cols;g=g.data;a=a.data;d=d.data;for(var z=0;b<r;k+=q,b++)for(h=f=0;h<t;y++,f++,h++){c=f;p=k;for(m=z=0;m<q;p++,c+=t,m++)z+=g[p]*a[c];d[y]=z}},multiply_ABt:function(d,g,a){var b=0,h=0,m=0,k=0,p=0,c=0,f=0,y=g.cols,q=g.rows,r=a.rows;g=g.data;\na=a.data;d=d.data;for(var t=0;b<q;k+=y,b++)for(h=c=0;h<r;f++,h++){p=k;for(m=t=0;m<y;p++,c++,m++)t+=g[p]*a[c];d[f]=t}},multiply_AtB:function(d,g,a){var b=0,h=0,m=0,k=0,p=0,c=0,f=0,y=0,q=g.cols,r=g.rows,t=a.cols;g=g.data;a=a.data;d=d.data;for(var z=0;b<q;k++,b++)for(h=f=0;h<t;y++,f++,h++){c=f;p=k;for(m=z=0;m<r;p+=q,c+=t,m++)z+=g[p]*a[c];d[y]=z}},invert_3x3:function(d,g){var a=d.data,b=g.data,h=a[4],m=a[8],k=a[5],f=a[7],c=a[0],J=c*h,y=c*k,q=a[3],r=a[1],t=q*r,z=a[2],N=q*z,a=a[6],O=a*r,F=a*z,D=1/(J*m-\ny*f-t*m+N*f+O*k-F*h);b[0]=(h*m-k*f)*D;b[1]=-(r*m-z*f)*D;b[2]=-(-r*k+z*h)*D;b[3]=-(q*m-k*a)*D;b[4]=(c*m-F)*D;b[5]=-(y-N)*D;b[6]=-(-q*f+h*a)*D;b[7]=-(c*f-O)*D;b[8]=(J-t)*D},mat3x3_determinant:function(d){d=d.data;return d[0]*d[4]*d[8]-d[0]*d[5]*d[7]-d[3]*d[1]*d[8]+d[3]*d[2]*d[7]+d[6]*d[1]*d[5]-d[6]*d[2]*d[4]},multiply_3x3:function(d,g,a){d=d.data;var b=g.data,h=a.data;a=b[0];g=b[1];var m=b[2],k=b[3],f=b[4],c=b[5],J=b[6],y=b[7],b=b[8],q=h[0],r=h[1],t=h[2],z=h[3],N=h[4],O=h[5],F=h[6],D=h[7],h=h[8];d[0]=\na*q+g*z+m*F;d[1]=a*r+g*N+m*D;d[2]=a*t+g*O+m*h;d[3]=k*q+f*z+c*F;d[4]=k*r+f*N+c*D;d[5]=k*t+f*O+c*h;d[6]=J*q+y*z+b*F;d[7]=J*r+y*N+b*D;d[8]=J*t+y*O+b*h},mean_rows:function(d){var g,a=0,b=d.rows,h=d.cols,m=d.data,f=Array(h);for(g=0;g<h;++g)f[g]=0;for(d=0;d<b;++d)for(g=0;g<h;++g,++a)f[g]+=m[a];for(g=0;g<h;++g)f[g]/=b;return f},mean_cols:function(d){var g,a=0,b=d.rows,h=d.cols,f=d.data,k=Array(b);for(g=0;g<b;++g)k[g]=0;for(d=0;d<h;++d)for(g=0;g<b;++g,++a)k[g]+=f[a];for(g=0;g<b;++g)k[g]/=h;return k},sub_rows:function(d,\ng){var a,b,h=0,f=d.rows,k=d.cols,p=d.data;for(a=0;a<f;++a)for(b=0;b<k;++b,++h)p[h]-=g[b]},sub_cols:function(d,g){var a,b,h=0,f=d.rows,k=d.cols,p=d.data;for(a=0;a<k;++a)for(b=0;b<f;++b,++h)p[h]-=g[b]},add_rows:function(d,g){var a,b,h=0,f=d.rows,k=d.cols,p=d.data;for(a=0;a<f;++a)for(b=0;b<k;++b,++h)p[h]+=g[b]},add_cols:function(d,g){var a,b,h=0,f=d.rows,k=d.cols,p=d.data;for(a=0;a<k;++a)for(b=0;b<f;++b,++h)p[h]+=g[b]}}}();f.matmath=E})(jsfeat);\n(function(f){var E=function(){var d=function(){function a(b){this.next=null;this.data=new jsfeat.data_t(b);this.size=this.data.size;this.buffer=this.data.buffer;this.u8=this.data.u8;this.i32=this.data.i32;this.f32=this.data.f32;this.f64=this.data.f64}a.prototype.resize=function(a){delete this.data;this.data=new jsfeat.data_t(a);this.size=this.data.size;this.buffer=this.data.buffer;this.u8=this.data.u8;this.i32=this.data.i32;this.f32=this.data.f32;this.f64=this.data.f64};return a}(),g,a,b=0;return{allocate:function(h,\nf){g=a=new d(f);for(var k=0;k<h;++k){var p=new d(f);a=a.next=p;b++}},get_buffer:function(a){var d=g;g=g.next;b--;a>d.size&&d.resize(a);return d},put_buffer:function(d){a=a.next=d;b++}}}();f.cache=E;E.allocate(30,2560)})(jsfeat);\n(function(f){var E=function(){var d=function(a,b,d,g){g=a[b];a[b]=a[d];a[d]=g},g=function(a,b){a=Math.abs(a);b=Math.abs(b);return a>b?(b/=a,a*Math.sqrt(1+b*b)):0<b?(a/=b,b*Math.sqrt(1+a*a)):0};return{svd_decompose:function(a,b,f,m,k){\"undefined\"===typeof k&&(k=0);var p=0,c=0,J=a.rows,y=a.cols,q=J,r=y,t=a.type|jsfeat.C1_t;q<r&&(p=1,c=q,q=r,r=c);var z=jsfeat.cache.get_buffer(q*q<<3),N=jsfeat.cache.get_buffer(r<<3),O=jsfeat.cache.get_buffer(r*r<<3),F=new jsfeat.matrix_t(q,q,t,z.data),D=new jsfeat.matrix_t(1,\nr,t,N.data),t=new jsfeat.matrix_t(r,r,t,O.data);if(0==p)jsfeat.matmath.transpose(F,a);else{for(c=0;c<y*J;c++)F.data[c]=a.data[c];for(;c<r*q;c++)F.data[c]=0}a=F.data;for(var c=q,J=D.data,u=t.data,E=r,H=q,I=r,T=q,U=2*jsfeat.EPSILON,V=jsfeat.FLT_MIN,l=0,x=0,e=0,P=0,W=Math.max(H,30),n=0,v=0,Q=v=n=0,w=0,C=0,G=0,s=0,B=0,A=0,K=w=e=w=0,L=s=0,R=4660,n=n=x=0,S=jsfeat.cache.get_buffer(I<<3),M=S.f64;l<I;l++){for(A=e=0;e<H;e++)G=a[l*c+e],A+=G*G;M[l]=A;if(u){for(e=0;e<I;e++)u[l*E+e]=0;u[l*E+l]=1}}for(;P<W;P++){for(l=\nQ=0;l<I-1;l++)for(x=l+1;x<I;x++){n=l*c|0;v=x*c|0;K=M[l];s=0;L=M[x];e=2;s+=a[n]*a[v];for(s+=a[n+1]*a[v+1];e<H;e++)s+=a[n+e]*a[v+e];if(!(Math.abs(s)<=U*Math.sqrt(K*L))){s*=2;w=K-L;e=g(s,w);0>w?(w=.5*(e-w),C=Math.sqrt(w/e),w=s/(e*C*2)):(w=Math.sqrt((e+w)/(2*e)),C=s/(e*w*2));L=K=0;e=2;s=w*a[n]+C*a[v];B=-C*a[n]+w*a[v];a[n]=s;a[v]=B;K+=s*s;L+=B*B;s=w*a[n+1]+C*a[v+1];B=-C*a[n+1]+w*a[v+1];a[n+1]=s;a[v+1]=B;K+=s*s;for(L+=B*B;e<H;e++)s=w*a[n+e]+C*a[v+e],B=-C*a[n+e]+w*a[v+e],a[n+e]=s,a[v+e]=B,K+=s*s,L+=B*B;\nM[l]=K;M[x]=L;Q=1;if(u)for(n=l*E|0,v=x*E|0,e=2,s=w*u[n]+C*u[v],B=-C*u[n]+w*u[v],u[n]=s,u[v]=B,s=w*u[n+1]+C*u[v+1],B=-C*u[n+1]+w*u[v+1],u[n+1]=s,u[v+1]=B;e<I;e++)s=w*u[n+e]+C*u[v+e],B=-C*u[n+e]+w*u[v+e],u[n+e]=s,u[v+e]=B}}if(0==Q)break}for(l=0;l<I;l++){for(A=e=0;e<H;e++)G=a[l*c+e],A+=G*G;M[l]=Math.sqrt(A)}for(l=0;l<I-1;l++){x=l;for(e=l+1;e<I;e++)M[x]<M[e]&&(x=e);if(l!=x&&(d(M,l,x,A),u)){for(e=0;e<H;e++)d(a,l*c+e,x*c+e,G);for(e=0;e<I;e++)d(u,l*E+e,x*E+e,G)}}for(l=0;l<I;l++)J[l]=M[l];if(u)for(l=0;l<\nT;l++){for(A=l<I?M[l]:0;A<=V;){n=1/H;for(e=0;e<H;e++)R=214013*R+2531011,x=0!=(R>>16&256)?n:-n,a[l*c+e]=x;for(P=0;2>P;P++)for(x=0;x<l;x++){for(e=A=0;e<H;e++)A+=a[l*c+e]*a[x*c+e];for(e=n=0;e<H;e++)G=a[l*c+e]-A*a[x*c+e],a[l*c+e]=G,n+=Math.abs(G);n=n?1/n:0;for(e=0;e<H;e++)a[l*c+e]*=n}for(e=A=0;e<H;e++)G=a[l*c+e],A+=G*G;A=Math.sqrt(A)}C=1/A;for(e=0;e<H;e++)a[l*c+e]*=C}jsfeat.cache.put_buffer(S);if(b){for(c=0;c<r;c++)b.data[c]=D.data[c];for(;c<y;c++)b.data[c]=0}if(0==p){if(f&&k&jsfeat.SVD_U_T)for(c=q*q;0<=\n--c;)f.data[c]=F.data[c];else f&&jsfeat.matmath.transpose(f,F);if(m&&k&jsfeat.SVD_V_T)for(c=r*r;0<=--c;)m.data[c]=t.data[c];else m&&jsfeat.matmath.transpose(m,t)}else{if(f&&k&jsfeat.SVD_U_T)for(c=r*r;0<=--c;)f.data[c]=t.data[c];else f&&jsfeat.matmath.transpose(f,t);if(m&&k&jsfeat.SVD_V_T)for(c=q*q;0<=--c;)m.data[c]=F.data[c];else m&&jsfeat.matmath.transpose(m,F)}jsfeat.cache.put_buffer(z);jsfeat.cache.put_buffer(N);jsfeat.cache.put_buffer(O)}}}();f.linalg=E})(jsfeat);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/svd.min.js\n ** module id = 11\n ** module chunks = 0\n **/","/*\n JS Signals <http://millermedeiros.github.com/js-signals/>\n Released under the MIT license\n Author: Miller Medeiros\n Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n*/\n(function(i){function h(a,b,c,d,e){this._listener=b;this._isOnce=c;this.context=d;this._signal=a;this._priority=e||0}function g(a,b){if(typeof a!==\"function\")throw Error(\"listener is a required param of {fn}() and should be a Function.\".replace(\"{fn}\",b));}function e(){this._bindings=[];this._prevParams=null;var a=this;this.dispatch=function(){e.prototype.dispatch.apply(a,arguments)}}h.prototype={active:!0,params:null,execute:function(a){var b;this.active&&this._listener&&(a=this.params?this.params.concat(a):\na,b=this._listener.apply(this.context,a),this._isOnce&&this.detach());return b},detach:function(){return this.isBound()?this._signal.remove(this._listener,this.context):null},isBound:function(){return!!this._signal&&!!this._listener},isOnce:function(){return this._isOnce},getListener:function(){return this._listener},getSignal:function(){return this._signal},_destroy:function(){delete this._signal;delete this._listener;delete this.context},toString:function(){return\"[SignalBinding isOnce:\"+this._isOnce+\n\", isBound:\"+this.isBound()+\", active:\"+this.active+\"]\"}};e.prototype={VERSION:\"1.0.0\",memorize:!1,_shouldPropagate:!0,active:!0,_registerListener:function(a,b,c,d){var e=this._indexOfListener(a,c);if(e!==-1){if(a=this._bindings[e],a.isOnce()!==b)throw Error(\"You cannot add\"+(b?\"\":\"Once\")+\"() then add\"+(!b?\"\":\"Once\")+\"() the same listener without removing the relationship first.\");}else a=new h(this,a,b,c,d),this._addBinding(a);this.memorize&&this._prevParams&&a.execute(this._prevParams);return a},\n_addBinding:function(a){var b=this._bindings.length;do--b;while(this._bindings[b]&&a._priority<=this._bindings[b]._priority);this._bindings.splice(b+1,0,a)},_indexOfListener:function(a,b){for(var c=this._bindings.length,d;c--;)if(d=this._bindings[c],d._listener===a&&d.context===b)return c;return-1},has:function(a,b){return this._indexOfListener(a,b)!==-1},add:function(a,b,c){g(a,\"add\");return this._registerListener(a,!1,b,c)},addOnce:function(a,b,c){g(a,\"addOnce\");return this._registerListener(a,\n!0,b,c)},remove:function(a,b){g(a,\"remove\");var c=this._indexOfListener(a,b);c!==-1&&(this._bindings[c]._destroy(),this._bindings.splice(c,1));return a},removeAll:function(){for(var a=this._bindings.length;a--;)this._bindings[a]._destroy();this._bindings.length=0},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=!1},dispatch:function(a){if(this.active){var b=Array.prototype.slice.call(arguments),c=this._bindings.length,d;if(this.memorize)this._prevParams=\nb;if(c){d=this._bindings.slice();this._shouldPropagate=!0;do c--;while(d[c]&&this._shouldPropagate&&d[c].execute(b)!==!1)}}},forget:function(){this._prevParams=null},dispose:function(){this.removeAll();delete this._bindings;delete this._prevParams},toString:function(){return\"[Signal active:\"+this.active+\" numListeners:\"+this.getNumListeners()+\"]\"}};var f=e;f.Signal=e;typeof define===\"function\"&&define.amd?define(function(){return f}):typeof module!==\"undefined\"&&module.exports?module.exports=f:i.signals=\nf})(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/signals.min.js\n ** module id = 12\n ** module chunks = 0\n **/","var decodeMsgpack=function(){\"use strict\";function r(r){function t(r){for(var t={},e=0;r>e;e++){var n=a();t[n]=a()}return t}function e(t){var e=r.subarray(i,i+t);return i+=t,e}function n(t){var e=r.subarray(i,i+t);i+=t;var n=65535;if(t>n){for(var u=[],a=0;a<e.length;a+=n)u.push(String.fromCharCode.apply(null,e.subarray(a,a+n)));return u.join(\"\")}return String.fromCharCode.apply(null,e)}function u(r){for(var t=new Array(r),e=0;r>e;e++)t[e]=a();return t}function a(){var a,s,g,U=r[i];if(0===(128&U))return i++,U;if(128===(240&U))return s=15&U,i++,t(s);if(144===(240&U))return s=15&U,i++,u(s);if(160===(224&U))return s=31&U,i++,n(s);if(224===(224&U))return a=c.getInt8(i),i++,a;switch(U){case 192:return i++,null;case 194:return i++,!1;case 195:return i++,!0;case 196:return s=c.getUint8(i+1),i+=2,e(s);case 197:return s=c.getUint16(i+1),i+=3,e(s);case 198:return s=c.getUint32(i+1),i+=5,e(s);case 199:return s=c.getUint8(i+1),g=c.getUint8(i+2),i+=3,[g,e(s)];case 200:return s=c.getUint16(i+1),g=c.getUint8(i+3),i+=4,[g,e(s)];case 201:return s=c.getUint32(i+1),g=c.getUint8(i+5),i+=6,[g,e(s)];case 202:return a=c.getFloat32(i+1),i+=5,a;case 203:return a=c.getFloat64(i+1),i+=9,a;case 204:return a=r[i+1],i+=2,a;case 205:return a=c.getUint16(i+1),i+=3,a;case 206:return a=c.getUint32(i+1),i+=5,a;case 207:return i+=9,0;case 208:return a=c.getInt8(i+1),i+=2,a;case 209:return a=c.getInt16(i+1),i+=3,a;case 210:return a=c.getInt32(i+1),i+=5,a;case 211:return i+=9,0;case 212:return g=c.getUint8(i+1),i+=2,[g,e(1)];case 213:return g=c.getUint8(i+1),i+=2,[g,e(2)];case 214:return g=c.getUint8(i+1),i+=2,[g,e(4)];case 215:return g=c.getUint8(i+1),i+=2,[g,e(8)];case 216:return g=c.getUint8(i+1),i+=2,[g,e(16)];case 217:return s=c.getUint8(i+1),i+=2,n(s);case 218:return s=c.getUint16(i+1),i+=3,n(s);case 219:return s=c.getUint32(i+1),i+=5,n(s);case 220:return s=c.getUint16(i+1),i+=3,u(s);case 221:return s=c.getUint32(i+1),i+=5,u(s);case 222:return s=c.getUint16(i+1),i+=3,t(s);case 223:return s=c.getUint32(i+1),i+=5,t(s)}throw new Error(\"Unknown type 0x\"+U.toString(16))}var i=0,c=new DataView(r.buffer);return a()}return r}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/msgpack-decode.js\n ** module id = 13\n ** module chunks = 0\n **/","var decodeMmtf=function(){\"use strict\";function r(r){return new Uint8Array(r.buffer,r.byteOffset,r.byteLength)}function t(r){return new Int8Array(r.buffer,r.byteOffset,r.byteLength)}function n(r,t){var n,e,o,i=(r.byteOffset,r.byteLength);for(t||(t=new Int16Array(i/2)),n=0,e=0,o=i/2;o>n;++n,e+=2)t[n]=r[e]<<8^r[e+1]<<0;return t}function e(r,t){var n,e,o,i=(r.byteOffset,r.byteLength);for(t||(t=new Int32Array(i/4)),n=0,e=0,o=i/4;o>n;++n,e+=4)t[n]=r[e]<<24^r[e+1]<<16^r[e+2]<<8^r[e+3]<<0;return t}function o(r){return new Int32Array(r.buffer,r.byteOffset,r.byteLength/4)}function i(r,t,n){var e=r.length,o=1/t;n||(n=new Float32Array(e));for(var i=0;e>i;++i)n[i]=r[i]*o;return n}function a(r,t){var n,e;if(!t){var o=0;for(n=0,e=r.length;e>n;n+=2)o+=r[n+1];t=new r.constructor(o)}var i=0;for(n=0,e=r.length;e>n;n+=2)for(var a=r[n],u=r[n+1],s=0;u>s;++s)t[i]=a,i+=1;return t}function u(r){for(var t=1,n=r.length;n>t;++t)r[t]+=r[t-1];return r}function s(r,t,n){var e=r.length/2+t.length;n||(n=new Int32Array(e));for(var o=0,i=0,a=0,u=r.length;u>a;a+=2){var s=r[a],f=r[a+1];n[o]=s,0!==a&&(n[o]+=n[o-1]),o+=1;for(var c=0;f>c;++c)n[o]=n[o-1]+t[i],o+=1,i+=1}return n}function f(r,t,a,u){var f=r.length/4/2+t.length/2;u||(u=new Float32Array(f));var c=o(u),d=s(e(r),n(t),c);return i(d,a,u)}function c(r,t,n){var u=n?o(n):void 0,s=a(e(r),u);return i(s,t,n)}function d(n,o){function i(r){return s?-1===s.indexOf(r):!0}o=o||{};var s=o.ignoreFields,d=(n.numBonds||0,n.numAtoms||0),l=n.groupTypeList.length/4,v=n.chainIdList.length/4,L=n.chainsPerModel.length,g={numGroups:l,numChains:v,numModels:L};[\"mmtfVersion\",\"mmtfProducer\",\"unitCell\",\"spaceGroup\",\"structureId\",\"title\",\"depositionDate\",\"releaseDate\",\"experimentalMethods\",\"resolution\",\"rFree\",\"rWork\",\"bioAssemblyList\",\"entityList\",\"groupList\",\"numBonds\",\"numAtoms\",\"groupsPerChain\",\"chainsPerModel\"].forEach(function(r){void 0!==n[r]&&(g[r]=n[r])});var y=\"bondAtomList\";n[y]&&i(y)&&(g[y]=e(n[y]));var h=\"bondOrderList\";n[h]&&i(h)&&(g[h]=r(n[h])),g.xCoordList=f(n.xCoordBig,n.xCoordSmall,1e3),g.yCoordList=f(n.yCoordBig,n.yCoordSmall,1e3),g.zCoordList=f(n.zCoordBig,n.zCoordSmall,1e3);var m=\"bFactorList\",b=\"bFactorBig\",p=\"bFactorSmall\";n[b]&&n[p]&&i(m)&&(g[m]=f(n[b],n[p],100));var A=\"atomIdList\";n[A]&&i(A)&&(g[A]=u(a(e(n[A]))));var C=\"altLocList\";n[C]&&i(C)&&(g[C]=a(e(n[C]),new Uint8Array(d)));var I=\"occupancyList\";n[I]&&i(I)&&(g[I]=c(n[I],100)),g.groupIdList=u(a(e(n.groupIdList))),g.groupTypeList=e(n.groupTypeList);var w=\"secStructList\";n[w]&&i(w)&&(g[w]=t(n[w]));var F=\"insCodeList\";n[F]&&i(F)&&(g[F]=a(e(n[F]),new Uint8Array(l)));var O=\"sequenceIndexList\";n[O]&&i(O)&&(g[O]=u(a(e(n[O])))),g.chainIdList=r(n.chainIdList);var x=\"chainNameList\";return n[x]&&i(x)&&(g[x]=r(n[x])),g}return d}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mmtf-decode.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * FastBitSet.js : a fast bit set implementation in JavaScript.\n * (c) the authors\n * Licensed under the Apache License, Version 2.0.\n *\n * Speed-optimized BitSet implementation for modern browsers and JavaScript engines.\n *\n * A BitSet is an ideal data structure to implement a Set when values being stored are\n * reasonably small integers. It can be orders of magnitude faster than a generic set implementation.\n * The FastBitSet implementation optimizes for speed, leveraging commonly available features\n * like typed arrays.\n *\n * Simple usage :\n *  var b = new TypedFastBitSet();// initially empty\n *         // will throw exception if typed arrays are not supported\n *  b.add(1);// add the value \"1\"\n *  b.has(1); // check that the value is present! (will return true)\n *  b.add(2);\n *  console.log(\"\"+b);// should display {1,2}\n *  b.add(10);\n *  b.array(); // would return [1,2,10]\n *\n *  var c = new TypedFastBitSet([1,2,3,10]); // create bitset initialized with values 1,2,3,10\n *  c.difference(b); // from c, remove elements that are in b\n *  var su = c.union_size(b);// compute the size of the union (bitsets are unchanged)\n * c.union(b); // c will contain all elements that are in c and b\n * var s1 = c.intersection_size(b);// compute the size of the intersection (bitsets are unchanged)\n * c.intersection(b); // c will only contain elements that are in both c and b\n * c = b.clone(); // create a (deep) copy of b and assign it to c.\n * c.equals(b); // check whether c and b are equal\n *\n *   See README.md file for a more complete description.\n *\n * You can install the library under node with the command line\n *   npm install fastbitset\n */\n'use strict';\n\n// you can provide an iterable\n// an exception is thrown if typed arrays are not supported\n// - added size argument, ASR\n// - added flip argument, ASR\nfunction TypedFastBitSet(size, flip) {\n  this.count = 0 | 0;\n  this.words = new Uint32Array(8);\n  this.resize(size);\n  if (flip) {\n    this.flip_all();\n  }\n}\n\n// Add the value (Set the bit at index to true)\nTypedFastBitSet.prototype.add = function(index) {\n  if ((this.count << 5) <= index) {\n    this.resize(index);\n  }\n  this.words[index >>> 5] |= 1 << index ;\n};\n\n// Add the value (Set the bit at index to true)\n// - unsafe because size is not checked, added by ASR\nTypedFastBitSet.prototype.add_unsafe = function(index) {\n  this.words[index >>> 5] |= 1 << index ;\n};\n\n// If the value was not in the set, add it, otherwise remove it (flip bit at index)\nTypedFastBitSet.prototype.flip = function(index) {\n  if ((this.count << 5) <= index) {\n    this.resize(index);\n  }\n  this.words[index >>> 5] ^= 1 << index ;\n};\n\n// If the value was not in the set, add it, otherwise remove it (flip bit at index)\n// - unsafe because size is not checked, added by ASR\nTypedFastBitSet.prototype.flip_unsafe = function(index) {\n  this.words[index >>> 5] ^= 1 << index ;\n};\n\n// Flip all bits, added by ASR\nTypedFastBitSet.prototype.flip_all = function() {\n  // FIXME sets values beyond this.length\n  var count = this.count;\n  var k = 0 | 0;\n  for (; k + 7 < count; k += 8) {\n    this.words[k    ] = ~this.words[k    ];\n    this.words[k + 1] = ~this.words[k + 1];\n    this.words[k + 2] = ~this.words[k + 2];\n    this.words[k + 3] = ~this.words[k + 3];\n    this.words[k + 4] = ~this.words[k + 4];\n    this.words[k + 5] = ~this.words[k + 5];\n    this.words[k + 6] = ~this.words[k + 6];\n    this.words[k + 7] = ~this.words[k + 7];\n  }\n  for (; k < count; ++k) {\n    this.words[k] = ~this.words[k];\n  }\n  return this;\n};\n\n// Set all bits to value, added by ASR\nTypedFastBitSet.prototype.set_all = function(value) {\n  if (this.length <= 0) return this;\n  this.set_range( 0, this.length-1, value );\n  return this;\n};\n\n// Set all bits in range to value, added by ASR\nTypedFastBitSet.prototype.set_range = function(from, to, value) {\n  // set complete words when applicable\n  value = value ? 0xFFFFFFFF : 0x00000000;\n  var wordStart = (from >>> 5) + 1;\n  var wordEnd = (to >>> 5) - 1;\n  var k = wordStart | 0;\n  for (; k + 7 < wordEnd; k += 8) {\n    this.words[k    ] = value;\n    this.words[k + 1] = value;\n    this.words[k + 2] = value;\n    this.words[k + 3] = value;\n    this.words[k + 4] = value;\n    this.words[k + 5] = value;\n    this.words[k + 6] = value;\n    this.words[k + 7] = value;\n  }\n  for (; k < wordEnd; ++k) {\n    this.words[k] = value;\n  }\n  // set parts of the range not spanning complete words\n  if (value){\n    for (var i = from, n = (wordStart << 5) + 1; i < n; ++i) {\n      this.words[i >>> 5] |= 1 << i ;\n    }\n    for (var i = (wordEnd << 5), n = to + 1; i < n; ++i) {\n      this.words[i >>> 5] |= 1 << i ;\n    }\n  }else{\n    for (var i = from, n = (wordStart << 5) + 1; i < n; ++i) {\n      this.words[i >>> 5] &= ~(1 << i);\n    }\n    for (var i = (wordEnd << 5), n = to + 1; i < n; ++i) {\n      this.words[i >>> 5] &= ~(1 << i);\n    }\n  }\n  return this;\n};\n\n// Remove all values, reset memory usage\nTypedFastBitSet.prototype.clear = function() {\n  this.count = 0 | 0;\n  this.length = 0 | 0;\n  this.words = new Uint32Array(count);\n  return this;\n};\n\n// Set the bit at index to false\nTypedFastBitSet.prototype.remove = function(index) {\n  if ((this.count << 5) <= index) {\n    this.resize(index);\n  }\n  this.words[index >>> 5] &= ~(1 << index);\n};\n\n// Set the bit at index to false\n// - unsafe because size is not checked, added by ASR\nTypedFastBitSet.prototype.remove_unsafe = function(index) {\n  this.words[index >>> 5] &= ~(1 << index);\n};\n\n// Return true if no bit is set\nTypedFastBitSet.prototype.isEmpty = function(index) {\n  var c = this.count;\n  for (var  i = 0; i < c; i++) {\n    if (this.words[i] !== 0) return false;\n  }\n  return true;\n};\n\n// Is the value contained in the set? Is the bit at index true or false? Returns a boolean\nTypedFastBitSet.prototype.has = function(index) {\n  return (this.words[index >>> 5] & (1 << index)) !== 0;\n};\n\n// Reduce the memory usage to a minimum\nTypedFastBitSet.prototype.trim = function(index) {\n  while (this.count > 0) {\n    if (this.words[this.count - 1] === 0)\n      this.count--;\n  }\n  this.words = this.words.slice(0,this.count);\n};\n\n// Resize the bitset so that we can write a value at index\nTypedFastBitSet.prototype.resize = function(index) {\n  this.length = index;\n  if ((this.count << 5) > index) {\n    return; //nothing to do\n  }\n  this.count = (index + 32) >>> 5;// just what is needed\n  if ((this.words.length << 5) <= index) {\n    var newwords = new Uint32Array(this.count << 1);\n    newwords.set(this.words);// hopefully, this copy is fast\n    this.words = newwords;\n  }\n};\n\n// fast function to compute the Hamming weight of a 32-bit unsigned integer\nTypedFastBitSet.prototype.hammingWeight = function(v) {\n  v -= ((v >>> 1) & 0x55555555);// works with signed or unsigned shifts\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n};\n\n\n// How many values stored in the set? How many set bits?\nTypedFastBitSet.prototype.size = function() {\n  var answer = 0;\n  var c = this.count;\n  for (var i = 0; i < c; i++) {\n    answer += this.hammingWeight(this.words[i] | 0);\n  }\n  return answer;\n};\n\n// How many bits are set in the given range of the set?\n// - added by ASR\nTypedFastBitSet.prototype.sizeRange = function(offset, count) {\n  var size = 0;\n  var end = offset + count;\n  this.forEach( function( index ){\n      if( index >= offset && index < end ) ++size;\n  } );\n  return size;\n};\n\n// Return an array with the set bit locations (values)\n// - use Uint32Array instead of Array, ASR\nTypedFastBitSet.prototype.array = function() {\n  var answer = new Uint32Array(this.size());\n  var pos = 0 | 0;\n  var c = this.count | 0;\n  for (var k = 0; k < c; ++k) {\n    var w =  this.words[k];\n    while (w != 0) {\n      var t = w & -w;\n      answer[pos++] = (k << 5) + this.hammingWeight((t - 1) | 0);\n      w ^= t;\n    }\n  }\n  return answer;\n};\n\n\n// Call fnc with the set bit locations (values)\n// - fixed method description, ASR\nTypedFastBitSet.prototype.forEach = function(fnc) {\n  var c = this.count | 0;\n  var i = 0 | 0;\n  for (var k = 0; k < c; ++k) {\n    var w = this.words[k];\n    while (w != 0) {\n      var t = w & -w;\n      var index = (k << 5) + this.hammingWeight((t - 1) | 0);\n      // FIXME workaround, it should not be required to check the length\n      if(index < this.length) fnc(index,i);\n      w ^= t;\n      i += 1;\n    }\n  }\n};\n\nTypedFastBitSet.forEach = function(fnc, bitmap1, bitmap2) {\n  var c = Math.min(bitmap1.count, bitmap2.count) | 0;\n  for (var k = 0; k < c; ++k) {\n    var w1 = bitmap1.words[k];\n    var w2 = bitmap2.words[k];\n    while (w1 != 0 && w2 != 0) {\n      var t1 = w1 & -w1;\n      var t2 = w2 & -w2;\n      var kShift = k << 5;\n      fnc(\n        kShift + bitmap1.hammingWeight((t1 - 1) | 0),\n        kShift + bitmap2.hammingWeight((t2 - 1) | 0)\n      );\n      w1 ^= t1;\n      w2 ^= t2;\n    }\n  }\n};\n\n// Creates a copy of this bitmap\nTypedFastBitSet.prototype.clone = function() {\n  var clone = Object.create(TypedFastBitSet.prototype);\n  clone.count = this.count;\n  clone.length = this.length;\n  clone.words = new Uint32Array(this.words);\n  return clone;\n};\n\n// Check if this bitset intersects with another one,\n// no bitmap is modified\nTypedFastBitSet.prototype.intersects = function(otherbitmap) {\n  var newcount = Math.min(this.count,otherbitmap.count);\n  for (var k = 0 | 0; k < newcount; ++k) {\n    if ((this.words[k] & otherbitmap.words[k]) !== 0) return true;\n  }\n  return false;\n};\n\n// Computes the intersection between this bitset and another one,\n// the current bitmap is modified  (and returned by the function)\nTypedFastBitSet.prototype.intersection = function(otherbitmap) {\n  var newcount = Math.min(this.count,otherbitmap.count);\n  var k = 0 | 0;\n  for (; k + 7 < newcount; k += 8) {\n    this.words[k    ] &= otherbitmap.words[k    ];\n    this.words[k + 1] &= otherbitmap.words[k + 1];\n    this.words[k + 2] &= otherbitmap.words[k + 2];\n    this.words[k + 3] &= otherbitmap.words[k + 3];\n    this.words[k + 4] &= otherbitmap.words[k + 4];\n    this.words[k + 5] &= otherbitmap.words[k + 5];\n    this.words[k + 6] &= otherbitmap.words[k + 6];\n    this.words[k + 7] &= otherbitmap.words[k + 7];\n  }\n  for (; k < newcount; ++k) {\n    this.words[k] &= otherbitmap.words[k];\n  }\n  var c = this.count;\n  for (var k = newcount; k < c; ++k) {\n    this.words[k] = 0;\n  }\n  this.count = newcount;\n  return this;\n};\n\n// Computes the size of the intersection between this bitset and another one\nTypedFastBitSet.prototype.intersection_size = function(otherbitmap) {\n  var newcount = Math.min(this.count,otherbitmap.count);\n  var answer = 0 | 0;\n  for (var k = 0 | 0; k < newcount; ++k) {\n    answer += this.hammingWeight(this.words[k] & otherbitmap.words[k]);\n  }\n  return answer;\n};\n\n// Computes the intersection between this bitset and another one,\n// a new bitmap is generated\nTypedFastBitSet.prototype.new_intersection = function(otherbitmap) {\n  var answer = Object.create(TypedFastBitSet.prototype);\n  answer.count = Math.min(this.count,otherbitmap.count);\n  answer.words = new Uint32Array(answer.count);\n  answer.length = Math.min(this.length,otherbitmap.length);\n  var c = answer.count;\n  for (var k = 0 | 0; k < c; ++k) {\n    answer.words[k] = this.words[k] & otherbitmap.words[k];\n  }\n  return answer;\n};\n\n// Computes the intersection between this bitset and another one,\n// the current bitmap is modified\nTypedFastBitSet.prototype.equals = function(otherbitmap) {\n  var mcount = Math.min(this.count , otherbitmap.count);\n  for (var k = 0 | 0; k < mcount; ++k) {\n    if (this.words[k] != otherbitmap.words[k]) return false;\n  }\n  if (this.count < otherbitmap.count) {\n    var c = otherbitmap.count;\n    for (var k = this.count; k < c; ++k) {\n      if (otherbitmap.words[k] != 0) return false;\n    }\n  } else if (otherbitmap.count < this.count) {\n    var c = this.count;\n    for (var k = otherbitmap.count; k < c; ++k) {\n      if (this.words[k] != 0) return false;\n    }\n  }\n  return true;\n};\n\n// Computes the difference between this bitset and another one,\n// the current bitset is modified (and returned by the function)\nTypedFastBitSet.prototype.difference = function(otherbitmap) {\n  var newcount = Math.min(this.count,otherbitmap.count);\n  var k = 0 | 0;\n  for (; k + 7 < newcount; k += 8) {\n    this.words[k    ] &= ~otherbitmap.words[k    ];\n    this.words[k + 1] &= ~otherbitmap.words[k + 1];\n    this.words[k + 2] &= ~otherbitmap.words[k + 2];\n    this.words[k + 3] &= ~otherbitmap.words[k + 3];\n    this.words[k + 4] &= ~otherbitmap.words[k + 4];\n    this.words[k + 5] &= ~otherbitmap.words[k + 5];\n    this.words[k + 6] &= ~otherbitmap.words[k + 6];\n    this.words[k + 7] &= ~otherbitmap.words[k + 7];\n  }\n  for (; k < newcount; ++k) {\n    this.words[k] &= ~otherbitmap.words[k];\n  }\n  return this;\n};\n\n// Computes the size of the difference between this bitset and another one\nTypedFastBitSet.prototype.difference_size = function(otherbitmap) {\n  var newcount = Math.min(this.count,otherbitmap.count);\n  var answer = 0 | 0;\n  var k = 0 | 0;\n  for (; k < newcount; ++k) {\n    answer += this.hammingWeight(this.words[k] & (~otherbitmap.words[k]));\n  }\n  var c = this.count;\n  for (; k < c; ++k) {\n    answer += this.hammingWeight(this.words[k]);\n  }\n  return answer;\n};\n\n// Returns a string representation\nTypedFastBitSet.prototype.toString = function() {\n  return '{' + this.array().join(',') + '}';\n};\n\n// Computes the union between this bitset and another one,\n// the current bitset is modified  (and returned by the function)\nTypedFastBitSet.prototype.union = function(otherbitmap) {\n  var mcount = Math.min(this.count,otherbitmap.count);\n  var k = 0 | 0;\n  for (; k + 7  < mcount; k += 8) {\n    this.words[k    ] |= otherbitmap.words[k    ];\n    this.words[k + 1] |= otherbitmap.words[k + 1];\n    this.words[k + 2] |= otherbitmap.words[k + 2];\n    this.words[k + 3] |= otherbitmap.words[k + 3];\n    this.words[k + 4] |= otherbitmap.words[k + 4];\n    this.words[k + 5] |= otherbitmap.words[k + 5];\n    this.words[k + 6] |= otherbitmap.words[k + 6];\n    this.words[k + 7] |= otherbitmap.words[k + 7];\n  }\n  for (; k < mcount; ++k) {\n    this.words[k] |= otherbitmap.words[k];\n  }\n  if (this.count < otherbitmap.count) {\n    this.resize((otherbitmap.count  << 5) - 1);\n    var c = otherbitmap.count;\n    for (var k = mcount; k < c; ++k) {\n      this.words[k] = otherbitmap.words[k];\n    }\n    this.count = otherbitmap.count;\n  }\n  return this;\n};\n\n// Computes the union between this bitset and another one,\n// a new bitmap is generated\nTypedFastBitSet.prototype.new_union = function(otherbitmap) {\n  var answer = Object.create(TypedFastBitSet.prototype);\n  answer.count = Math.max(this.count,otherbitmap.count);\n  answer.words = new Uint32Array(answer.count);\n  var mcount = Math.min(this.count,otherbitmap.count)\n  for (var k = 0; k < mcount; ++k) {\n      answer.words[k] = this.words[k] | otherbitmap.words[k];\n  }\n  var c = this.count;\n  for (var k = mcount; k < c; ++k) {\n      answer.words[k] = this.words[k] ;\n  }\n  var c2 = otherbitmap.count;\n  for (var k = mcount; k < c2; ++k) {\n      answer.words[k] = otherbitmap.words[k] ;\n  }\n  return answer;\n};\n\n// Computes the difference between this bitset and another one,\n// a new bitmap is generated\nTypedFastBitSet.prototype.new_difference = function(otherbitmap) {\n  return this.clone().difference(otherbitmap);// should be fast enough\n};\n\n// Computes the size union between this bitset and another one\nTypedFastBitSet.prototype.union_size = function(otherbitmap) {\n  var mcount = Math.min(this.count,otherbitmap.count);\n  var answer = 0 | 0;\n  for (var k = 0 | 0; k < mcount; ++k) {\n    answer += this.hammingWeight(this.words[k] | otherbitmap.words[k]);\n  }\n  if (this.count < otherbitmap.count) {\n    var c = otherbitmap.count;\n    for (var k = this.count ; k < c; ++k) {\n      answer += this.hammingWeight(otherbitmap.words[k] | 0);\n    }\n  } else {\n    var c = this.count;\n    for (var k = otherbitmap.count ; k < c; ++k) {\n      answer += this.hammingWeight(this.words[k] | 0);\n    }\n  }\n  return answer;\n};\n\n// Get transferable objects, added by ASR\nTypedFastBitSet.prototype.getTransferable = function() {\n  return [ this.words ];\n};\n\n// Serialize to JSON, added by ASR\nTypedFastBitSet.prototype.toJSON = function() {\n  return {\n    count: this.count,\n    length: this.length,\n    words: this.words\n  };\n};\n\n// De-serialize from JSON, added by ASR\nTypedFastBitSet.prototype.fromJSON = function(input) {\n  this.count = input.count;\n  this.length = input.length;\n  this.words = input.words;\n  return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/TypedFastBitSet.js\n ** module id = 15\n ** module chunks = 0\n **/","// File:js/ngl/shims.js\n\n/**\n * @file Shims\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n//////////////\n// Polyfills\n\n( function( global ) {\n\n    'use strict';\n\n    // Console-polyfill. MIT license.\n    // https://github.com/paulmillr/console-polyfill\n    // Make it safe to do console.log() always.\n\n    global.console = global.console || {};\n    var con = global.console;\n    var prop, method;\n    var empty = {};\n    var dummy = function(){};\n    var properties = 'memory'.split( ',' );\n    var methods = (\n        'assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n        'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n        'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn'\n    ).split(',');\n\n    while( prop = properties.pop() ) if( !con[ prop] ) con[ prop ] = empty;\n    while( method = methods.pop() ) if( !con[ method] ) con[ method ] = dummy;\n\n    // Using `this` for web workers while maintaining compatibility with browser\n    // targeted script loaders such as Browserify or Webpack where the only way to\n    // get to the global object is via `window`.\n\n} )( typeof window === 'undefined' ? this : window );\n\n\nif( typeof importScripts !== 'function' && !HTMLCanvasElement.prototype.toBlob ){\n\n    // http://code.google.com/p/chromium/issues/detail?id=67587#57\n\n    Object.defineProperty( HTMLCanvasElement.prototype, 'toBlob', {\n\n        value: function( callback, type, quality ){\n\n            var bin = window.atob( this.toDataURL( type, quality ).split( ',' )[ 1 ] ),\n                len = bin.length,\n                len32 = len >> 2,\n                a8 = new Uint8Array( len ),\n                a32 = new Uint32Array( a8.buffer, 0, len32 );\n\n            for( var i=0, j=0; i < len32; i++ ) {\n\n                a32[i] = bin.charCodeAt( j++ ) |\n                    bin.charCodeAt( j++ ) << 8 |\n                    bin.charCodeAt( j++ ) << 16 |\n                    bin.charCodeAt( j++ ) << 24;\n\n            }\n\n            var tailLength = len & 3;\n\n            while( tailLength-- ){\n\n                a8[ j ] = bin.charCodeAt( j++ );\n\n            }\n\n            callback( new Blob( [ a8 ], { 'type': type || 'image/png' } ) );\n\n        }\n\n    } );\n\n}\n\n\nif( !Number.isInteger ){\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n    Number.isInteger = function isInteger( nVal ){\n        return typeof nVal === \"number\" && isFinite( nVal ) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor( nVal ) === nVal;\n    };\n\n}\n\n\nif( !Number.isNaN ){\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n\n    Number.isNaN = function isNaN( value ){\n        return value !== value;\n    };\n\n}\n\n\nif( !Object.assign ){\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n    Object.defineProperty( Object, \"assign\", {\n\n        enumerable: false,\n        configurable: true,\n        writable: true,\n\n        value: function(target, firstSource) {\n\n            \"use strict\";\n            if (target === undefined || target === null)\n            throw new TypeError(\"Cannot convert first argument to object\");\n\n            var to = Object(target);\n\n            var hasPendingException = false;\n            var pendingException;\n\n            for (var i = 1; i < arguments.length; i++) {\n\n                var nextSource = arguments[i];\n                if (nextSource === undefined || nextSource === null)\n                    continue;\n\n                var keysArray = Object.keys(Object(nextSource));\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n\n                    var nextKey = keysArray[nextIndex];\n                    try {\n                        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                        if (desc !== undefined && desc.enumerable)\n                            to[nextKey] = nextSource[nextKey];\n                    } catch (e) {\n                        if (!hasPendingException) {\n                            hasPendingException = true;\n                            pendingException = e;\n                        }\n                    }\n\n                }\n\n                if (hasPendingException)\n                    throw pendingException;\n\n            }\n\n            return to;\n\n        }\n\n    } );\n\n}\n\n\nif (!String.prototype.startsWith) {\n\n    /*! https://mths.be/startswith v0.2.0 by @mathias */\n\n    (function() {\n        'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n        var defineProperty = (function() {\n            // IE 8 only supports `Object.defineProperty` on DOM elements\n            try {\n                var object = {};\n                var $defineProperty = Object.defineProperty;\n                var result = $defineProperty(object, object, object) && $defineProperty;\n            } catch(error) {}\n            return result;\n        }());\n        var toString = {}.toString;\n        var startsWith = function(search) {\n            if (this == null) {\n                throw TypeError();\n            }\n            var string = String(this);\n            if (search && toString.call(search) == '[object RegExp]') {\n                throw TypeError();\n            }\n            var stringLength = string.length;\n            var searchString = String(search);\n            var searchLength = searchString.length;\n            var position = arguments.length > 1 ? arguments[1] : undefined;\n            // `ToInteger`\n            var pos = position ? Number(position) : 0;\n            if (pos != pos) { // better `isNaN`\n                pos = 0;\n            }\n            var start = Math.min(Math.max(pos, 0), stringLength);\n            // Avoid the `indexOf` call if no match is possible\n            if (searchLength + start > stringLength) {\n                return false;\n            }\n            var index = -1;\n            while (++index < searchLength) {\n                if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        if (defineProperty) {\n            defineProperty(String.prototype, 'startsWith', {\n                'value': startsWith,\n                'configurable': true,\n                'writable': true\n            });\n        } else {\n            String.prototype.startsWith = startsWith;\n        }\n    }());\n\n}\n\n\nif (!String.prototype.endsWith) {\n  String.prototype.endsWith = function(searchString, position) {\n      var subjectString = this.toString();\n      if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n        position = subjectString.length;\n      }\n      position -= searchString.length;\n      var lastIndex = subjectString.indexOf(searchString, position);\n      return lastIndex !== -1 && lastIndex === position;\n  };\n}\n\n\nif( typeof importScripts !== 'function' ){\n\n    ( function() {\n\n        // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n        // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n        // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n\n        // MIT license\n\n        var lastTime = 0;\n        var vendors = [ 'ms', 'moz', 'webkit', 'o' ];\n\n        for( var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x ){\n\n            window.requestAnimationFrame = (\n                window[ vendors[ x ] + 'RequestAnimationFrame' ]\n            );\n\n            window.cancelAnimationFrame = (\n                window[ vendors[ x ] + 'CancelAnimationFrame' ] ||\n                window[ vendors[ x ] + 'CancelRequestAnimationFrame' ]\n            );\n\n        }\n\n        if( !window.requestAnimationFrame ){\n\n            window.requestAnimationFrame = function( callback, element ){\n\n                var currTime = new Date().getTime();\n                var timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\n\n                var id = window.setTimeout( function(){\n\n                    callback( currTime + timeToCall );\n\n                }, timeToCall );\n\n                lastTime = currTime + timeToCall;\n\n                return id;\n\n            };\n\n        }\n\n        if( !window.cancelAnimationFrame ){\n\n            window.cancelAnimationFrame = function( id ){\n                clearTimeout( id );\n            };\n\n        }\n\n    }() );\n\n}\n\n\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\n\n    // Missing in IE9-11.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n    Object.defineProperty( Function.prototype, 'name', {\n\n        get: function () {\n\n            return this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\n\n        }\n\n    } );\n\n}\n\n\nif ( self.performance === undefined ) {\n\n    self.performance = {};\n\n}\n\nif ( self.performance.now === undefined ) {\n\n    ( function () {\n\n        var start = Date.now();\n\n        self.performance.now = function () {\n\n            return Date.now() - start;\n\n        }\n\n    } )();\n\n}\n\n\n////////////////\n// Workarounds\n\nif( typeof importScripts !== 'function' ){\n\n    HTMLElement.prototype.getBoundingClientRect = function(){\n\n        // workaround for ie11 behavior with disconnected dom nodes\n\n        var _getBoundingClientRect = HTMLElement.prototype.getBoundingClientRect;\n\n        return function(){\n            try{\n                return _getBoundingClientRect.apply( this, arguments );\n            }catch( e ){\n                return {\n                    top: 0,\n                    left: 0,\n                    width: this.width,\n                    height: this.height\n                };\n            }\n        };\n\n    }();\n\n}\n\n\nif( typeof importScripts !== 'function' && WebGLRenderingContext ){\n\n    // wrap WebGL debug function used by three.js and\n    // ignore calls to them when the debug flag is not set\n\n    WebGLRenderingContext.prototype.getShaderParameter = function(){\n\n        var _getShaderParameter = WebGLRenderingContext.prototype.getShaderParameter;\n\n        return function(){\n\n            if( NGL.debug ){\n\n                return _getShaderParameter.apply( this, arguments );\n\n            }else{\n\n                return true;\n\n            }\n\n        }\n\n    }();\n\n    WebGLRenderingContext.prototype.getShaderInfoLog = function(){\n\n        var _getShaderInfoLog = WebGLRenderingContext.prototype.getShaderInfoLog;\n\n        return function(){\n\n            if( NGL.debug ){\n\n                return _getShaderInfoLog.apply( this, arguments );\n\n            }else{\n\n                return '';\n\n            }\n\n        }\n\n    }();\n\n    WebGLRenderingContext.prototype.getProgramParameter = function(){\n\n        var _getProgramParameter = WebGLRenderingContext.prototype.getProgramParameter;\n\n        return function( program, pname ){\n\n            if( NGL.debug || pname !== WebGLRenderingContext.prototype.LINK_STATUS ){\n\n                return _getProgramParameter.apply( this, arguments );\n\n            }else{\n\n                return true;\n\n            }\n\n        }\n\n    }();\n\n    WebGLRenderingContext.prototype.getProgramInfoLog = function(){\n\n        var _getProgramInfoLog = WebGLRenderingContext.prototype.getProgramInfoLog;\n\n        return function(){\n\n            if( NGL.debug ){\n\n                return _getProgramInfoLog.apply( this, arguments );\n\n            }else{\n\n                return '';\n\n            }\n\n        }\n\n    }();\n\n}\n\n// File:js/ngl/core.js\n\n/**\n * @file Core\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n////////\n// NGL\n\nvar NGL = {\n\n    REVISION: '0.7',\n    EPS: 0.0000001,\n    useWorker: true,\n    indexUint16: false,\n    debug: false,\n    develop: (\n        self.location.pathname.indexOf( \"core.js\" ) !== -1 ||\n        self.location.pathname.indexOf( \"dev.html\" ) !== -1\n    ),\n    mainScriptFilePath: \"../js/build/ngl.full.min.js\",\n    cssDirectory: \"../css/\",\n    assetsDirectory: \"../\",\n    documentationUrl: \"../doc/index.html\",\n\n    webglErrorMessage: \"<div style=\\\"display:flex; align-items:center; justify-content:center; height:100%;\\\"><p style=\\\"padding:15px; text-align:center;\\\">Your browser/graphics card does not seem to support <a target=\\\"_blank\\\" href=\\\"https://en.wikipedia.org/wiki/WebGL\\\">WebGL</a>.<br /><br />Find out how to get it <a target=\\\"_blank\\\" href=\\\"http://get.webgl.org/\\\">here</a>.</p></div>\"\n\n};\n\n\n// set default log handlers\nNGL.log = Function.prototype.bind.call( console.log, console );\nNGL.info = Function.prototype.bind.call( console.info, console );\nNGL.warn = Function.prototype.bind.call( console.warn, console );\nNGL.error = Function.prototype.bind.call( console.error, console );\nNGL.time = Function.prototype.bind.call( console.time, console );\nNGL.timeEnd = Function.prototype.bind.call( console.timeEnd, console );\n\n\nNGL.LeftMouseButton = 1;\nNGL.MiddleMouseButton = 2;\nNGL.RightMouseButton = 3;\n\n\nif( typeof importScripts === 'function' ){\n\n    if( NGL.develop ){\n\n        importScripts(\n\n            \"../three/three.js\",\n            \"../three/TypedArrayUtils.js\",\n            \"../three/controls/TrackballControls.js\",\n            \"../three/loaders/OBJLoader.js\",\n            \"../three/loaders/PLYLoader.js\",\n\n            \"../lib/promise.min.js\",\n            \"../lib/sprintf.min.js\",\n            \"../lib/pako_inflate.min.js\",\n            \"../lib/chroma.min.js\",\n            \"../lib/svd.js\",\n            \"../lib/signals.min.js\",\n            \"../lib/TypedFastBitSet.js\",\n            \"../lib/msgpack-decode.js\",\n            \"../lib/mmtf-decode.js\",\n\n            \"../ngl/shims.js\",\n            // \"../ngl/core.js\",\n            \"../ngl/worker.js\",\n            \"../ngl/utils.js\",\n            \"../ngl/proxy.js\",\n            \"../ngl/store.js\",\n            \"../ngl/symmetry.js\",\n            \"../ngl/alignment.js\",\n            \"../ngl/geometry.js\",\n            \"../ngl/selection.js\",\n            \"../ngl/superposition.js\",\n            \"../ngl/structure.js\",\n            \"../ngl/trajectory.js\",\n            \"../ngl/surface.js\",\n            \"../ngl/script.js\",\n            \"../ngl/streamer.js\",\n            \"../ngl/parser.js\",\n            \"../ngl/writer.js\",\n            \"../ngl/loader.js\",\n            \"../ngl/viewer.js\",\n            \"../ngl/buffer.js\",\n            \"../ngl/representation.js\",\n            \"../ngl/stage.js\"\n\n        );\n\n    }\n\n}\n\n\nNGL.GET = function( id ){\n\n    var a = new RegExp( id + \"=([^&#=]*)\" );\n    var m = a.exec( window.location.search );\n\n    if( m ){\n        return decodeURIComponent( m[1] );\n    }else{\n        return undefined;\n    }\n\n};\n\n\nNGL.boolean = function( value ){\n\n    if( !value ){\n        return false;\n    }\n\n    if( typeof value === \"string\" ){\n        return /^1|true|t|yes|y$/i.test( value );\n    }\n\n    return true;\n\n};\n\n\nif( typeof importScripts !== 'function' ){\n\n    ( function(){\n\n        var debug = NGL.GET( \"debug\" );\n        if( debug !== undefined ) NGL.debug = NGL.boolean( debug );\n\n    } )();\n\n}\n\n\n// Registry\n\nNGL.PluginRegistry = {\n\n    dict: {},\n\n    add: function( name, path ){\n        this.dict[ name ] = path;\n    },\n\n    get: function( name ){\n        if( name in this.dict ){\n            return this.dict[ name ];\n        }else{\n            throw \"NGL.PluginRegistry '\" + name + \"' not defined\";\n        }\n    },\n\n    get names(){\n        return Object.keys( this.dict );\n    },\n\n    get count(){\n        return this.names.length;\n    },\n\n    load: function( name, stage ){\n        var path = this.get( name );\n        stage.loadFile( path, { name: name + \" plugin\" } );\n    }\n\n};\n\n\nNGL.ExampleRegistry = {\n\n    dict: {},\n\n    add: function( name, fn ){\n        this.dict[ name ] = fn;\n    },\n\n    addDict: function( dict ){\n        Object.keys( dict ).forEach( function( name ){\n            this.add( name, dict[ name ] );\n        }.bind( this ) );\n    },\n\n    get: function( name ){\n        return this.dict[ name ];\n    },\n\n    get names(){\n        return Object.keys( this.dict );\n    },\n\n    get count(){\n        return this.names.length;\n    },\n\n    load: function( name, stage ){\n        var fn = this.get( name );\n        if( typeof fn === \"function\" ){\n            fn( stage );\n        }else{\n            NGL.warn( \"NGL.ExampleRegistry.load not available:\", name );\n        }\n    }\n\n};\n\n// File:js/ngl/worker.js\n\n/**\n * @file Worker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n// Worker\n\nNGL.WorkerRegistry = {\n\n    activeWorkerCount: 0,\n\n    funcDict: {},\n\n    add: function( name, func ){\n\n        NGL.WorkerRegistry.funcDict[ name ] = func;\n\n    },\n\n};\n\n\nNGL.Worker = function( name ){\n\n    var pending = 0;\n    var postCount = 0;\n    var onmessageDict = {};\n    var onerrorDict = {};\n\n    var worker = new Worker( NGL.mainScriptFilePath );\n\n    NGL.WorkerRegistry.activeWorkerCount += 1;\n\n    worker.onmessage = function( event ){\n\n        pending -= 1;\n        var postId = event.data.__postId;\n\n        NGL.timeEnd( \"NGL.Worker.postMessage \" + name + \" #\" + postId );\n\n        if( onmessageDict[ postId ] ){\n            onmessageDict[ postId ].call( worker, event );\n        }else{\n            // NGL.debug( \"No onmessage\", postId, name );\n        }\n\n        delete onmessageDict[ postId ];\n        delete onerrorDict[ postId ];\n\n    };\n\n    worker.onerror = function( event ){\n\n        pending -= 1;\n        var postId = event.data.__postId;\n\n        if( onerrorDict[ postId ] ){\n            onerrorDict[ postId ].call( worker, event );\n        }else{\n            NGL.error( \"NGL.Worker.onerror\", postId, name, event );\n        }\n\n        delete onmessageDict[ postId ];\n        delete onerrorDict[ postId ];\n\n    };\n\n    // API\n\n    this.name = name;\n\n    this.post = function( aMessage, transferList, onmessage, onerror ){\n\n        onmessageDict[ postCount ] = onmessage;\n        onerrorDict[ postCount ] = onerror;\n\n        aMessage = aMessage || {};\n        aMessage.__name = name;\n        aMessage.__postId = postCount;\n        aMessage.__debug = NGL.debug;\n\n        NGL.time( \"NGL.Worker.postMessage \" + name + \" #\" + postCount );\n\n        try{\n            worker.postMessage.call( worker, aMessage, transferList );\n        }catch( error ){\n            NGL.error( \"NGL.worker.post:\", error );\n            worker.postMessage.call( worker, aMessage );\n        }\n\n        pending += 1;\n        postCount += 1;\n\n        return this;\n\n    };\n\n    this.terminate = function(){\n\n        if( worker ){\n            worker.terminate();\n            NGL.WorkerRegistry.activeWorkerCount -= 1;\n        }else{\n            console.log( \"no worker to terminate\" );\n        }\n\n    };\n\n    Object.defineProperties( this, {\n        postCount: {\n            get: function(){ return postCount; }\n        },\n        pending: {\n            get: function(){ return pending; }\n        }\n    } );\n\n};\n\nNGL.Worker.prototype.constructor = NGL.Worker;\n\n\nNGL.WorkerPool = function( name, maxCount ){\n\n    maxCount = Math.min( 8, maxCount || 2 );\n\n    var pool = [];\n    var count = 0;\n\n    // API\n\n    this.name = name;\n\n    this.maxCount = maxCount;\n\n    this.post = function( aMessage, transferList, onmessage, onerror ){\n\n        var worker = this.getNextWorker();\n        worker.post( aMessage, transferList, onmessage, onerror );\n\n        return this;\n\n    };\n\n    this.terminate = function(){\n\n        pool.forEach( function( worker ){\n            worker.terminate();\n        } );\n\n    };\n\n    this.getNextWorker = function(){\n\n        var nextWorker;\n        var minPending = Infinity;\n\n        for( var i = 0; i < maxCount; ++i ){\n\n            if( i >= count ){\n\n                nextWorker = new NGL.Worker( name );\n                pool.push( nextWorker );\n                count += 1;\n                break;\n\n            }\n\n            var worker = pool[ i ];\n\n            if( worker.pending === 0 ){\n\n                minPending = worker.pending;\n                nextWorker = worker;\n                break;\n\n            }else if( worker.pending < minPending ){\n\n                minPending = worker.pending;\n                nextWorker = worker;\n\n            }\n\n        }\n\n        return nextWorker;\n\n    };\n\n    Object.defineProperties( this, {\n        count: {\n            get: function(){ return count; }\n        }\n    } );\n\n};\n\nNGL.WorkerPool.prototype.constructor = NGL.WorkerPool;\n\n\nif( typeof importScripts === 'function' ){\n\n    self.onmessage = function( e ){\n\n        var name = e.data.__name;\n        var postId = e.data.__postId;\n        NGL.debug = e.data.__debug;\n\n        if( name === undefined ){\n\n            NGL.error( \"message __name undefined\" );\n\n        }else if( NGL.WorkerRegistry.funcDict[ name ] === undefined ){\n\n            NGL.error( \"funcDict[ __name ] undefined\", name );\n\n        }else{\n\n            var callback = function( aMessage, transferList ){\n\n                aMessage = aMessage || {};\n                if( postId !== undefined ) aMessage.__postId = postId;\n\n                try{\n                    self.postMessage( aMessage, transferList );\n                }catch( error ){\n                    NGL.error( \"self.postMessage:\", error );\n                    self.postMessage( aMessage );\n                }\n\n            };\n\n            NGL.WorkerRegistry.funcDict[ name ]( e, callback );\n\n        }\n\n    }\n\n}\n\n// File:js/ngl/utils.js\n\n/**\n * @file Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nNGL.defaults = function( value, defaultValue ){\n\n    return value !== undefined ? value : defaultValue;\n\n};\n\n\nNGL.browser = function(){\n\n    var ua = navigator.userAgent;\n\n    if ( /Arora/i.test( ua ) ) {\n\n        return 'Arora';\n\n    } else if ( /Opera|OPR/.test( ua ) ) {\n\n        return 'Opera';\n\n    } else if ( /Chrome/i.test( ua ) ) {\n\n        return 'Chrome';\n\n    } else if ( /Epiphany/i.test( ua ) ) {\n\n        return 'Epiphany';\n\n    } else if ( /Firefox/i.test( ua ) ) {\n\n        return 'Firefox';\n\n    } else if ( /Mobile(\\/.*)? Safari/i.test( ua ) ) {\n\n        return 'Mobile Safari';\n\n    } else if ( /MSIE/i.test( ua ) ) {\n\n        return 'Internet Explorer';\n\n    } else if ( /Midori/i.test( ua ) ) {\n\n        return 'Midori';\n\n    } else if ( /Safari/i.test( ua ) ) {\n\n        return 'Safari';\n\n    }\n\n    return false;\n\n}();\n\n\nNGL.getAbsolutePath = function( relativePath ){\n\n    var loc = window.location;\n    var pn = loc.pathname;\n    var basePath = pn.substring( 0, pn.lastIndexOf(\"/\") + 1 );\n\n    return loc.origin + basePath + relativePath;\n\n};\n\n\nNGL.createObject = function( prototype, properties ){\n\n    var object = Object.create( prototype );\n\n    for( var key in properties ) {\n\n        if ( properties.hasOwnProperty( key ) ) {\n\n            object[ key ] = properties[ key ];\n\n        }\n\n    }\n\n    return object;\n\n};\n\n\nNGL.deepCopy = function( src ){\n\n    if( typeof src !== \"object\" ){\n        return src;\n    }\n\n    var dst = Array.isArray( src ) ? [] : {};\n\n    for( var key in src ){\n        dst[ key ] = NGL.deepCopy( src[ key ] );\n    }\n\n    return dst;\n\n}\n\n\nNGL.download = function( data, downloadName ){\n\n    if( !data ){\n        NGL.warn( \"NGL.download: no data given.\" );\n        return;\n    }\n\n    downloadName = downloadName || \"download\";\n\n    var a = document.createElement( 'a' );\n    a.style.display = \"hidden\";\n    document.body.appendChild( a );\n    if( data instanceof Blob ){\n        a.href = URL.createObjectURL( data );\n    }else{\n        a.href = data;\n    }\n    a.download = downloadName;\n    a.target = \"_blank\";\n    a.click();\n\n    document.body.removeChild( a );\n    if( data instanceof Blob ){\n        URL.revokeObjectURL( data );\n    }\n\n};\n\n\nNGL.submit = function( url, data, callback, onerror ){\n\n    if( data instanceof FormData ){\n\n        var xhr = new XMLHttpRequest();\n        xhr.open( \"POST\", url );\n\n        xhr.addEventListener( 'load', function ( event ) {\n\n            if ( xhr.status === 200 || xhr.status === 304 ) {\n\n                callback( xhr.response );\n\n            } else {\n\n                if( typeof onerror === \"function\" ){\n\n                    onerror( xhr.status );\n\n                }\n\n            }\n\n        }, false );\n\n        xhr.send( data );\n\n    }else{\n\n        NGL.warn( \"NGL.submit: type not supported.\", data  );\n\n    }\n\n};\n\n\nNGL.open = function( callback, extensionList ){\n\n    extensionList = extensionList || [ \"*\" ];\n\n    var fileInput = document.createElement(\"input\");\n    fileInput.type = \"file\";\n    fileInput.multiple = true;\n    fileInput.style.display = \"hidden\";\n    document.body.appendChild( fileInput );\n    fileInput.accept = \".\" + extensionList.join( \",.\" );\n    fileInput.addEventListener( 'change', function( e ){\n\n        callback( e.target.files );\n\n    }, false );\n\n    fileInput.click();\n\n};\n\n\nNGL.unicodeHelper = function(){\n\n    var replace_map = {\n        \"{alpha}\": \"\\u03B1\",\n        \"{beta}\": \"\\u03B2\",\n        \"{gamma}\": \"\\u03B3\",\n        \"{dot}\": \"\\u00B7\",\n        \"{bullet}\": \"\\u2022\",\n    }\n\n    var keys = Object.keys( replace_map ).join('|');\n\n    var rg = new RegExp( '(' + keys + ')', 'gi' );\n\n    return function( str ){\n\n        return str.replace(\n            rg, function( s, p1, p2, offset, sx ){\n                return replace_map[ String( s ) ];\n            }\n        );\n\n    };\n\n}();\n\n\nNGL.getFileInfo = function( file ){\n\n    var compressedExtList = [ \"gz\" ];\n\n    var path, compressed, protocol;\n\n    if( ( self.File && file instanceof File ) ||\n        ( self.Blob && file instanceof self.Blob )\n    ){\n        path = file.name || \"\";\n    }else{\n        path = file\n    }\n    var queryIndex = path.lastIndexOf( '?' );\n    path = path.substring( 0, queryIndex === -1 ? path.length : queryIndex );\n\n    var name = path.replace( /^.*[\\\\\\/]/, '' );\n    var base = name.substring( 0, name.lastIndexOf( '.' ) );\n\n    var nameSplit = name.split( '.' );\n    var ext = nameSplit.length > 1 ? nameSplit.pop().toLowerCase() : \"\";\n\n    var protocolMatch = path.match( /^(.+):\\/\\/(.+)$/ );\n    if( protocolMatch ){\n        protocol = protocolMatch[ 1 ].toLowerCase();\n        path = protocolMatch[ 2 ];\n    }\n\n    var dir = path.substring( 0, path.lastIndexOf( '/' ) + 1 );\n\n    if( compressedExtList.indexOf( ext ) !== -1 ){\n        compressed = ext;\n        var n = path.length - ext.length - 1;\n        ext = path.substr( 0, n ).split( '.' ).pop().toLowerCase();\n        var m = base.length - ext.length - 1;\n        base = base.substr( 0, m );\n    }else{\n        compressed = false;\n    }\n\n    return {\n        \"path\": path,\n        \"name\": name,\n        \"ext\": ext,\n        \"base\": base,\n        \"dir\": dir,\n        \"compressed\": compressed,\n        \"protocol\": protocol,\n        \"src\": file\n    };\n\n};\n\n\nNGL.fromJSON = function( input ){\n\n    return new NGL[ input.metadata.type ]().fromJSON( input );\n\n};\n\n\nNGL.throttle = function( func, wait, options ){\n\n    // from http://underscorejs.org/docs/underscore.html\n\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n\n    if( !options ) options = {};\n\n    var later = function(){\n        previous = options.leading === false ? 0 : Date.now();\n        timeout = null;\n        result = func.apply( context, args );\n        if( !timeout ) context = args = null;\n    };\n\n    return function(){\n\n        var now = Date.now();\n        if( !previous && options.leading === false ) previous = now;\n        var remaining = wait - ( now - previous );\n        context = this;\n        args = arguments;\n        if( remaining <= 0 || remaining > wait ){\n            if( timeout ){\n                clearTimeout( timeout );\n                timeout = null;\n            }\n            previous = now;\n            result = func.apply(context, args);\n            if( !timeout ) context = args = null;\n        }else if( !timeout && options.trailing !== false ){\n            timeout = setTimeout( later, remaining );\n        }\n\n        return result;\n\n    };\n\n};\n\n\nNGL.binarySearchIndexOf = function(){\n    function _compareFunction( elm1, elm2 ){\n        if( elm1 < elm2 ) return -1;\n        if( elm1 > elm2 ) return 1;\n        return 0;\n    }\n    return function( array, element, compareFunction ){\n        var low = 0;\n        var high = array.length - 1;\n        if( !compareFunction ) compareFunction = _compareFunction;\n        while( low <= high ){\n            var i = ( low + high ) >> 1;\n            var cmp = compareFunction( element, array[ i ] );\n            if( cmp > 0 ){\n                low = i + 1;\n            }else if( cmp < 0 ){\n                high = i - 1;\n            } else {\n                return i;\n            }\n        }\n        return -low - 1;\n    }\n}();\n\n\nNGL.dataURItoImage = function( dataURI ){\n\n    if( typeof importScripts !== 'function' ){\n        var img = document.createElement( \"img\" );\n        img.src = dataURI;\n        return img;\n    }\n\n};\n\n\nNGL.uniqueArray = function( array ){\n    return array.sort().filter( function( value, index, sorted ){\n        return ( index === 0 ) || ( value !== sorted[ index - 1 ] );\n    } );\n};\n\n\n// String/arraybuffer conversion\n\nNGL.Uint8ToString = function( u8a ){\n\n    var chunkSize = 0x7000;\n\n    if( u8a.length > chunkSize ){\n\n      var c = [];\n\n      for(var i = 0; i < u8a.length; i += chunkSize) {\n\n        c.push( String.fromCharCode.apply(\n          null, u8a.subarray( i, i + chunkSize )\n        ) );\n\n      }\n\n      return c.join(\"\");\n\n    }else{\n\n      return String.fromCharCode.apply( null, u8a );\n\n    }\n\n};\n\n\nNGL.Uint8ToLines = function( u8a, chunkSize, newline ){\n\n    NGL.time( \"NGL.Uint8ToLines\" );\n\n    chunkSize = chunkSize !== undefined ? chunkSize : 1024 * 1024 * 10;\n    newline = newline !== undefined ? newline : \"\\n\";\n\n    var partialLine = \"\";\n    var lines = [];\n\n    for( var i = 0; i < u8a.length; i += chunkSize ){\n\n        var str = NGL.Uint8ToString( u8a.subarray( i, i + chunkSize ) );\n        var idx = str.lastIndexOf( newline );\n\n        if( idx === -1 ){\n\n            partialLine += str;\n\n        }else{\n\n            var str2 = partialLine + str.substr( 0, idx );\n            lines = lines.concat( str2.split( newline ) );\n\n            if( idx === str.length - newline.length ){\n\n                partialLine = \"\";\n\n            }else{\n\n                partialLine = str.substr( idx + newline.length );\n\n            }\n\n        }\n\n    }\n\n    if( partialLine !== \"\" ){\n\n        lines.push( partialLine );\n\n    }\n\n    NGL.timeEnd( \"NGL.Uint8ToLines\" );\n\n    return lines;\n\n};\n\n\n// Decompress\n\nNGL.decompress = function( data ){\n\n    var decompressedData;\n\n    NGL.time( \"NGL.decompress\" );\n\n    if( data instanceof ArrayBuffer ){\n        data = new Uint8Array( data );\n    }\n\n    try{\n        decompressedData = pako.ungzip( data );\n    }catch( e ){\n        if( NGL.debug ) NGL.warn( e );\n        decompressedData = data;  // assume it is already uncompressed\n    }\n\n    NGL.timeEnd( \"NGL.decompress\" );\n\n    return decompressedData;\n\n};\n\n\n// Counter\n\nNGL.Counter = function(){\n\n    var SIGNALS = signals;\n\n    this.count = 0;\n\n    this.signals = {\n\n        countChanged: new SIGNALS.Signal(),\n\n    }\n\n};\n\nNGL.Counter.prototype = {\n\n    clear: function(){\n\n        this.change( -this.count );\n\n    },\n\n    change: function( delta ){\n\n        this.count += delta;\n        this.signals.countChanged.dispatch( delta, this.count );\n\n        if( this.count < 0 ){\n\n            NGL.warn( \"NGL.Counter.count below zero\", this.count );\n\n        }\n\n    },\n\n    increment: function(){\n\n        this.change( 1 );\n\n    },\n\n    decrement: function(){\n\n        this.change( -1 );\n\n    },\n\n    listen: function( counter ){\n\n        // incorporate changes of another counter\n\n        this.change( counter.count );\n\n        counter.signals.countChanged.add( function( delta, count ){\n\n            this.change( delta );\n\n        }.bind( this ) );\n\n    },\n\n    onZeroOnce: function( callback, context ){\n\n        if( this.count === 0 ){\n\n            callback.call( context, 0, 0 );\n\n        }else{\n\n            var fn = function(){\n\n                if( this.count === 0 ){\n\n                    this.signals.countChanged.remove( fn, this );\n\n                    callback.apply( context, arguments );\n\n                }\n\n            }\n\n            this.signals.countChanged.add( fn, this );\n\n        }\n\n    },\n\n    dispose: function(){\n\n        this.clear();\n\n    }\n\n};\n\n\n// Queue\n\nNGL.Queue = function( fn, argList ){\n\n    var queue = [];\n    var pending = false;\n\n    if( argList ){\n        for( var i = 0, il = argList.length; i < il; ++i ){\n            queue.push( argList[ i ] );\n        }\n        next();\n    }\n\n    function run( arg ){\n        fn( arg, next );\n    }\n\n    function next(){\n        var arg = queue.shift();\n        if( arg !== undefined ){\n            pending = true;\n            setTimeout( function(){ run( arg ); } );\n        }else{\n            pending = false;\n        }\n    }\n\n    // API\n\n    this.push = function( arg ){\n        queue.push( arg );\n        if( !pending ) next();\n    }\n\n    this.kill = function( arg ){\n        queue.length = 0;\n    };\n\n    this.length = function(){\n        return queue.length;\n    };\n\n};\n\n// File:js/ngl/proxy.js\n\n/**\n * @file Proxy\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n// from Jmol http://jmol.sourceforge.net/jscolors/ (or 0xFFFFFF)\nNGL.ElementColors = {\n    \"H\": 0xFFFFFF, \"HE\": 0xD9FFFF, \"LI\": 0xCC80FF, \"BE\": 0xC2FF00, \"B\": 0xFFB5B5,\n    \"C\": 0x909090, \"N\": 0x3050F8, \"O\": 0xFF0D0D, \"F\": 0x90E050, \"NE\": 0xB3E3F5,\n    \"NA\": 0xAB5CF2, \"MG\": 0x8AFF00, \"AL\": 0xBFA6A6, \"SI\": 0xF0C8A0, \"P\": 0xFF8000,\n    \"S\": 0xFFFF30, \"CL\": 0x1FF01F, \"AR\": 0x80D1E3, \"K\": 0x8F40D4, \"CA\": 0x3DFF00,\n    \"SC\": 0xE6E6E6, \"TI\": 0xBFC2C7, \"V\": 0xA6A6AB, \"CR\": 0x8A99C7, \"MN\": 0x9C7AC7,\n    \"FE\": 0xE06633, \"CO\": 0xF090A0, \"NI\": 0x50D050, \"CU\": 0xC88033, \"ZN\": 0x7D80B0,\n    \"GA\": 0xC28F8F, \"GE\": 0x668F8F, \"AS\": 0xBD80E3, \"SE\": 0xFFA100, \"BR\": 0xA62929,\n    \"KR\": 0x5CB8D1, \"RB\": 0x702EB0, \"SR\": 0x00FF00, \"Y\": 0x94FFFF, \"ZR\": 0x94E0E0,\n    \"NB\": 0x73C2C9, \"MO\": 0x54B5B5, \"TC\": 0x3B9E9E, \"RU\": 0x248F8F, \"RH\": 0x0A7D8C,\n    \"PD\": 0x006985, \"AG\": 0xC0C0C0, \"CD\": 0xFFD98F, \"IN\": 0xA67573, \"SN\": 0x668080,\n    \"SB\": 0x9E63B5, \"TE\": 0xD47A00, \"I\": 0x940094, \"XE\": 0x940094, \"CS\": 0x57178F,\n    \"BA\": 0x00C900, \"LA\": 0x70D4FF, \"CE\": 0xFFFFC7, \"PR\": 0xD9FFC7, \"ND\": 0xC7FFC7,\n    \"PM\": 0xA3FFC7, \"SM\": 0x8FFFC7, \"EU\": 0x61FFC7, \"GD\": 0x45FFC7, \"TB\": 0x30FFC7,\n    \"DY\": 0x1FFFC7, \"HO\": 0x00FF9C, \"ER\": 0x00E675, \"TM\": 0x00D452, \"YB\": 0x00BF38,\n    \"LU\": 0x00AB24, \"HF\": 0x4DC2FF, \"TA\": 0x4DA6FF, \"W\": 0x2194D6, \"RE\": 0x267DAB,\n    \"OS\": 0x266696, \"IR\": 0x175487, \"PT\": 0xD0D0E0, \"AU\": 0xFFD123, \"HG\": 0xB8B8D0,\n    \"TL\": 0xA6544D, \"PB\": 0x575961, \"BI\": 0x9E4FB5, \"PO\": 0xAB5C00, \"AT\": 0x754F45,\n    \"RN\": 0x428296, \"FR\": 0x420066, \"RA\": 0x007D00, \"AC\": 0x70ABFA, \"TH\": 0x00BAFF,\n    \"PA\": 0x00A1FF, \"U\": 0x008FFF, \"NP\": 0x0080FF, \"PU\": 0x006BFF, \"AM\": 0x545CF2,\n    \"CM\": 0x785CE3, \"BK\": 0x8A4FE3, \"CF\": 0xA136D4, \"ES\": 0xB31FD4, \"FM\": 0xB31FBA,\n    \"MD\": 0xB30DA6, \"NO\": 0xBD0D87, \"LR\": 0xC70066, \"RF\": 0xCC0059, \"DB\": 0xD1004F,\n    \"SG\": 0xD90045, \"BH\": 0xE00038, \"HS\": 0xE6002E, \"MT\": 0xEB0026, \"DS\": 0xFFFFFF,\n    \"RG\": 0xFFFFFF, \"CN\": 0xFFFFFF, \"UUT\": 0xFFFFFF, \"FL\": 0xFFFFFF, \"UUP\": 0xFFFFFF,\n    \"LV\": 0xFFFFFF, \"UUH\": 0xFFFFFF,\n\n    \"D\": 0xFFFFC0, \"T\": 0xFFFFA0,\n\n    \"\": 0xFFFFFF\n};\n\n\n// from Jmol http://jmol.sourceforge.net/jscolors/ (protein + shapely for nucleic)\n/*NGL._ResidueColors = {\n    \"ALA\": 0xC8C8C8,\n    \"ARG\": 0x145AFF,\n    \"ASN\": 0x00DCDC,\n    \"ASP\": 0xE60A0A,\n    \"CYS\": 0xE6E600,\n    \"GLN\": 0x00DCDC,\n    \"GLU\": 0xE60A0A,\n    \"GLY\": 0xEBEBEB,\n    \"HIS\": 0x8282D2,\n    \"ILE\": 0x0F820F,\n    \"LEU\": 0x0F820F,\n    \"LYS\": 0x145AFF,\n    \"MET\": 0xE6E600,\n    \"PHE\": 0x3232AA,\n    \"PRO\": 0xDC9682,\n    \"SER\": 0xFA9600,\n    \"THR\": 0xFA9600,\n    \"TRP\": 0xB45AB4,\n    \"TYR\": 0x3232AA,\n    \"VAL\": 0x0F820F,\n\n    \"ASX\": 0xFF69B4,\n    \"GLX\": 0xFF69B4,\n    \"ASH\": 0xFF69B4,\n    \"GLH\": 0xFF69B4,\n\n    \"A\": 0xA0A0FF,\n    \"G\": 0xFF7070,\n    \"I\": 0x80FFFF,\n    \"C\": 0xFF8C4B,\n    \"T\": 0xA0FFA0,\n    \"U\": 0xFF8080,\n\n    \"DA\": 0xA0A0FF,\n    \"DG\": 0xFF7070,\n    \"DI\": 0x80FFFF,\n    \"DC\": 0xFF8C4B,\n    \"DT\": 0xA0FFA0,\n    \"DU\": 0xFF8080,\n\n    \"\": 0xBEA06E\n};*/\nNGL.ResidueColors = {\n    \"ALA\": 0x8CFF8C,\n    \"ARG\": 0x00007C,\n    \"ASN\": 0xFF7C70,\n    \"ASP\": 0xA00042,\n    \"CYS\": 0xFFFF70,\n    \"GLN\": 0xFF4C4C,\n    \"GLU\": 0x660000,\n    \"GLY\": 0xFFFFFF,\n    \"HIS\": 0x7070FF,\n    \"ILE\": 0x004C00,\n    \"LEU\": 0x455E45,\n    \"LYS\": 0x4747B8,\n    \"MET\": 0xB8A042,\n    \"PHE\": 0x534C52,\n    \"PRO\": 0x525252,\n    \"SER\": 0xFF7042,\n    \"THR\": 0xB84C00,\n    \"TRP\": 0x4F4600,\n    \"TYR\": 0x8C704C,\n    \"VAL\": 0xFF8CFF,\n\n    \"ASX\": 0xFF00FF,\n    \"GLX\": 0xFF00FF,\n    \"ASH\": 0xFF00FF,\n    \"GLH\": 0xFF00FF,\n\n    \"A\": 0xA0A0FF,\n    \"G\": 0xFF7070,\n    \"I\": 0x80FFFF,\n    \"C\": 0xFF8C4B,\n    \"T\": 0xA0FFA0,\n    \"U\": 0xFF8080,\n\n    \"DA\": 0xA0A0FF,\n    \"DG\": 0xFF7070,\n    \"DI\": 0x80FFFF,\n    \"DC\": 0xFF8C4B,\n    \"DT\": 0xA0FFA0,\n    \"DU\": 0xFF8080,\n\n    \"\": 0xFF00FF\n};\n\n\n// from Jmol http://jmol.sourceforge.net/jscolors/ (shapely)\nNGL.StructureColors = {\n    \"alphaHelix\": 0xFF0080,\n    \"3_10Helix\": 0xA00080,\n    \"piHelix\": 0x600080,\n    \"betaStrand\": 0xFFC800,\n    \"betaTurn\": 0x6080FF,\n    \"coil\": 0xFFFFFF,\n\n    \"dna\": 0xAE00FE,\n    \"rna\": 0xFD0162,\n\n    \"carbohydrate\": 0xA6A6FA,\n\n    \"\": 0x808080\n}\n\n\n// PDB helix record encoding\nNGL.HelixTypes = {\n    1: \"h\",  // Right-handed alpha (default)\n    2: \"h\",  // Right-handed omega\n    3: \"i\",  // Right-handed pi\n    4: \"h\",  // Right-handed gamma\n    5: \"g\",  // Right-handed 310\n    6: \"h\",  // Left-handed alpha\n    7: \"h\",  // Left-handed omega\n    8: \"h\",  // Left-handed gamma\n    9: \"h\",  // 27 ribbon/helix\n    10: \"h\",  // Polyproline\n    \"\": \"h\",\n}\n\n\n// http://dx.doi.org/10.1021/jp8111556 (or 2.0)\nNGL.VdwRadii = {\n    \"H\": 1.1, \"HE\": 1.4, \"LI\": 1.81, \"BE\": 1.53, \"B\": 1.92, \"C\": 1.7,\n    \"N\": 1.55, \"O\": 1.52, \"F\": 1.47, \"NE\": 1.54, \"NA\": 2.27, \"MG\": 1.73, \"AL\": 1.84,\n    \"SI\": 2.1, \"P\": 1.8, \"S\": 1.8, \"CL\": 1.75, \"AR\": 1.88, \"K\": 2.75, \"CA\": 2.31,\n    \"SC\": 2.3, \"TI\": 2.15, \"V\": 2.05, \"CR\": 2.05, \"MN\": 2.05, \"FE\": 2.05, \"CO\": 2.0,\n    \"NI\": 2.0, \"CU\": 2.0, \"ZN\": 2.1, \"GA\": 1.87, \"GE\": 2.11, \"AS\": 1.85, \"SE\": 1.9,\n    \"BR\": 1.83, \"KR\": 2.02, \"RB\": 3.03, \"SR\": 2.49, \"Y\": 2.4, \"ZR\": 2.3, \"NB\": 2.15,\n    \"MO\": 2.1, \"TC\": 2.05, \"RU\": 2.05, \"RH\": 2.0, \"PD\": 2.05, \"AG\": 2.1, \"CD\": 2.2,\n    \"IN\": 2.2, \"SN\": 1.93, \"SB\": 2.17, \"TE\": 2.06, \"I\": 1.98, \"XE\": 2.16, \"CS\": 3.43,\n    \"BA\": 2.68, \"LA\": 2.5, \"CE\": 2.48, \"PR\": 2.47, \"ND\": 2.45, \"PM\": 2.43, \"SM\": 2.42,\n    \"EU\": 2.4, \"GD\": 2.38, \"TB\": 2.37, \"DY\": 2.35, \"HO\": 2.33, \"ER\": 2.32, \"TM\": 2.3,\n    \"YB\": 2.28, \"LU\": 2.27, \"HF\": 2.25, \"TA\": 2.2, \"W\": 2.1, \"RE\": 2.05, \"OS\": 2.0,\n    \"IR\": 2.0, \"PT\": 2.05, \"AU\": 2.1, \"HG\": 2.05, \"TL\": 1.96, \"PB\": 2.02, \"BI\": 2.07,\n    \"PO\": 1.97, \"AT\": 2.02, \"RN\": 2.2, \"FR\": 3.48, \"RA\": 2.83, \"AC\": 2.0, \"TH\": 2.4,\n    \"PA\": 2.0, \"U\": 2.3, \"NP\": 2.0, \"PU\": 2.0, \"AM\": 2.0, \"CM\": 2.0, \"BK\": 2.0,\n    \"CF\": 2.0, \"ES\": 2.0, \"FM\": 2.0, \"MD\": 2.0, \"NO\": 2.0, \"LR\": 2.0, \"RF\": 2.0,\n    \"DB\": 2.0, \"SG\": 2.0, \"BH\": 2.0, \"HS\": 2.0, \"MT\": 2.0, \"DS\": 2.0, \"RG\": 2.0,\n    \"CN\": 2.0, \"UUT\": 2.0, \"FL\": 2.0, \"UUP\": 2.0, \"LV\": 2.0, \"UUH\": 2.0,\n\n    \"\": 2.0\n};\n\n\n// http://dx.doi.org/10.1039/b801115j (or 1.6)\nNGL.CovalentRadii = {\n    \"H\": 0.31, \"HE\": 0.28, \"LI\": 1.28, \"BE\": 0.96, \"B\": 0.84, \"C\": 0.76,\n    \"N\": 0.71, \"O\": 0.66, \"F\": 0.57, \"NE\": 0.58, \"NA\": 1.66, \"MG\": 1.41, \"AL\": 1.21,\n    \"SI\": 1.11, \"P\": 1.07, \"S\": 1.05, \"CL\": 1.02, \"AR\": 1.06, \"K\": 2.03, \"CA\": 1.76,\n    \"SC\": 1.7, \"TI\": 1.6, \"V\": 1.53, \"CR\": 1.39, \"MN\": 1.39, \"FE\": 1.32, \"CO\": 1.26,\n    \"NI\": 1.24, \"CU\": 1.32, \"ZN\": 1.22, \"GA\": 1.22, \"GE\": 1.2, \"AS\": 1.19, \"SE\": 1.2,\n    \"BR\": 1.2, \"KR\": 1.16, \"RB\": 2.2, \"SR\": 1.95, \"Y\": 1.9, \"ZR\": 1.75, \"NB\": 1.64,\n    \"MO\": 1.54, \"TC\": 1.47, \"RU\": 1.46, \"RH\": 1.42, \"PD\": 1.39, \"AG\": 1.45, \"CD\": 1.44,\n    \"IN\": 1.42, \"SN\": 1.39, \"SB\": 1.39, \"TE\": 1.38, \"I\": 1.39, \"XE\": 1.4, \"CS\": 2.44,\n    \"BA\": 2.15, \"LA\": 2.07, \"CE\": 2.04, \"PR\": 2.03, \"ND\": 2.01, \"PM\": 1.99, \"SM\": 1.98,\n    \"EU\": 1.98, \"GD\": 1.96, \"TB\": 1.94, \"DY\": 1.92, \"HO\": 1.92, \"ER\": 1.89, \"TM\": 1.9,\n    \"YB\": 1.87, \"LU\": 1.87, \"HF\": 1.75, \"TA\": 1.7, \"W\": 1.62, \"RE\": 1.51, \"OS\": 1.44,\n    \"IR\": 1.41, \"PT\": 1.36, \"AU\": 1.36, \"HG\": 1.32, \"TL\": 1.45, \"PB\": 1.46, \"BI\": 1.48,\n    \"PO\": 1.4, \"AT\": 1.5, \"RN\": 1.5, \"FR\": 2.6, \"RA\": 2.21, \"AC\": 2.15, \"TH\": 2.06,\n    \"PA\": 2.0, \"U\": 1.96, \"NP\": 1.9, \"PU\": 1.87, \"AM\": 1.8, \"CM\": 1.69, \"BK\": 1.6,\n    \"CF\": 1.6, \"ES\": 1.6, \"FM\": 1.6, \"MD\": 1.6, \"NO\": 1.6, \"LR\": 1.6, \"RF\": 1.6,\n    \"DB\": 1.6, \"SG\": 1.6, \"BH\": 1.6, \"HS\": 1.6, \"MT\": 1.6, \"DS\": 1.6, \"RG\": 1.6,\n    \"CN\": 1.6, \"UUT\": 1.6, \"FL\": 1.6, \"UUP\": 1.6, \"LV\": 1.6, \"UUH\": 1.6,\n\n    \"\": 1.6\n};\n\n\n// Peter Rose (peter.rose@rcsb.org), private communication, average accross PDB\nNGL.ResidueRadii = {\n    \"2QY\": 6.58, \"CY0\": 11.98, \"2QZ\": 2.52, \"CY1\": 6.59, \"HHK\": 5.11, \"CXM\": 4.69, \"HHI\": 4.58, \"CY4\": 4.57,\n    \"S12\": 18.57, \"CY3\": 2.79, \"C5C\": 5.35, \"PFX\": 11.84, \"2R3\": 6.94, \"2R1\": 3.78, \"ILX\": 4.99, \"32S\": 5.68,\n    \"BTK\": 8.59, \"32T\": 5.72, \"FAK\": 9.8, \"B27\": 2.78, \"ILM\": 3.84, \"C4R\": 5.63, \"32L\": 6.75, \"SYS\": 3.01,\n    \"1MH\": 5.04, \"ILE\": 3.65, \"YNM\": 6.39, \"2RX\": 4.91, \"B3A\": 2.48, \"GEE\": 4.76, \"7MN\": 7.34, \"B3E\": 5.4,\n    \"ARG\": 6.33, \"200\": 6.89, \"HIP\": 5.47, \"HIA\": 4.64, \"B3K\": 5.89, \"HIC\": 5.76, \"B3L\": 4.96, \"B3M\": 5.07,\n    \"ARM\": 6.86, \"ARO\": 7.35, \"AR4\": 8.42, \"PG1\": 10.67, \"YOF\": 6.44, \"IML\": 3.74, \"SXE\": 6.65, \"HIQ\": 7.98,\n    \"PFF\": 6.31, \"HIS\": 4.52, \"0TD\": 3.62, \"C3Y\": 5.24, \"1OP\": 11.55, \"02Y\": 4.77, \"02V\": 4.83, \"ASB\": 5.59,\n    \"30V\": 8.53, \"S2P\": 4.81, \"ASP\": 3.55, \"ASN\": 3.54, \"2OR\": 6.91, \"QMM\": 6.13, \"2P0\": 8.52, \"ASL\": 5.36,\n    \"HFA\": 5.14, \"5PG\": 5.69, \"B3X\": 4.38, \"AS9\": 4.1, \"ARV\": 7.59, \"B3U\": 6.06, \"S2C\": 7.54, \"B3T\": 3.34,\n    \"175\": 5.64, \"GFT\": 8.18, \"HG7\": 6.8, \"B3Q\": 4.48, \"ASA\": 3.64, \"02K\": 2.94, \"B3Y\": 7.45, \"PHD\": 5.35,\n    \"C6C\": 6.42, \"BUC\": 5.8, \"HGL\": 8.07, \"PHE\": 5.06, \"03Y\": 2.6, \"PHA\": 5.11, \"OCY\": 5.0, \"4PH\": 6.79,\n    \"5OH\": 4.7, \"31Q\": 10.46, \"BTR\": 7.98, \"3PX\": 4.7, \"1PA\": 8.07, \"ASX\": 3.54, \"IOR\": 7.23, \"03E\": 3.38,\n    \"PHL\": 5.17, \"KWS\": 5.09, \"PHI\": 7.12, \"NAL\": 7.22, \"S1H\": 19.21, \"2ML\": 3.86, \"2MR\": 7.35, \"GHG\": 4.83,\n    \"TYY\": 6.54, \"2MT\": 3.67, \"56A\": 13.01, \"SVA\": 5.46, \"TYX\": 8.31, \"TYS\": 8.59, \"TYR\": 6.38, \"TYQ\": 6.43,\n    \"HLU\": 3.99, \"MYK\": 19.47, \"TYO\": 7.71, \"HLX\": 4.98, \"TYN\": 9.87, \"TYJ\": 6.25, \"TYI\": 6.49, \"LYH\": 5.13,\n    \"LYF\": 12.19, \"SUN\": 6.73, \"LYR\": 18.28, \"TYB\": 6.46, \"11W\": 14.39, \"LYS\": 5.54, \"LYN\": 4.8, \"11Q\": 4.85,\n    \"LYO\": 4.71, \"LYZ\": 1.76, \"TXY\": 6.44, \"MYN\": 4.71, \"TY5\": 10.6, \"HMR\": 5.09, \"01W\": 8.55, \"LYX\": 13.36,\n    \"TY8\": 7.22, \"TY2\": 6.49, \"KYN\": 6.18, \"KYQ\": 9.75, \"CZZ\": 5.14, \"IIL\": 3.81, \"HNC\": 10.41, \"OIC\": 4.62,\n    \"LVN\": 2.89, \"QIL\": 3.84, \"JJL\": 8.3, \"VAH\": 3.88, \"JJJ\": 7.5, \"JJK\": 7.43, \"VAD\": 2.56, \"CYW\": 4.65,\n    \"0QL\": 5.72, \"143\": 8.22, \"SVX\": 7.04, \"CYJ\": 11.64, \"SVY\": 7.1, \"SVZ\": 6.6, \"CYG\": 8.03, \"CYF\": 13.54,\n    \"SVV\": 5.09, \"GL3\": 2.72, \"8SP\": 14.26, \"CYS\": 2.78, \"004\": 4.33, \"CYR\": 10.33, \"PLJ\": 3.71, \"EXY\": 7.37,\n    \"HL2\": 3.75, \"A5N\": 5.21, \"CYQ\": 5.67, \"CZ2\": 5.16, \"LWY\": 4.12, \"PM3\": 8.78, \"OHS\": 6.98, \"OHI\": 5.35,\n    \"3TY\": 8.42, \"CYD\": 8.55, \"DYS\": 7.87, \"DAH\": 6.47, \"4IK\": 11.81, \"3EG\": 3.66, \"AYA\": 3.65, \"4IN\": 6.31,\n    \"DAB\": 3.48, \"4HT\": 6.03, \"RGL\": 7.03, \"DAM\": 2.49, \"NFA\": 5.04, \"WFP\": 6.07, \"2JC\": 2.97, \"HAR\": 7.55,\n    \"2JG\": 5.67, \"MH6\": 1.72, \"2JF\": 9.13, \"3FG\": 4.96, \"MGN\": 4.84, \"AZH\": 5.36, \"AZK\": 6.03, \"ZBZ\": 7.79,\n    \"TBG\": 2.58, \"VAL\": 2.51, \"MGG\": 7.34, \"AZS\": 5.61, \"FHL\": 9.75, \"2JH\": 4.56, \"IEL\": 7.07, \"FHO\": 6.75,\n    \"DA2\": 7.79, \"FH7\": 6.99, \"ME0\": 4.52, \"3GL\": 4.84, \"MDO\": 5.03, \"AZY\": 7.37, \"A8E\": 3.76, \"ZCL\": 6.71,\n    \"MDH\": 2.58, \"LA2\": 14.07, \"4FW\": 6.1, \"YCM\": 5.32, \"MDF\": 4.95, \"YCP\": 3.01, \"TEF\": 8.63, \"FGP\": 4.34,\n    \"UF0\": 19.72, \"XCN\": 4.57, \"FGL\": 2.56, \"MF3\": 6.37, \"MEQ\": 5.13, \"LAA\": 3.23, \"IGL\": 5.52, \"MET\": 4.49,\n    \"NIY\": 6.81, \"QCS\": 5.18, \"TCQ\": 8.56, \"MEN\": 4.33, \"4HL\": 8.79, \"MEA\": 4.95, \"EFC\": 5.28, \"LAL\": 2.41,\n    \"2HF\": 5.52, \"KBE\": 5.64, \"OCS\": 3.94, \"CAF\": 5.46, \"NC1\": 11.4, \"NBQ\": 9.82, \"CAB\": 4.19, \"MBQ\": 9.55,\n    \"193\": 7.38, \"192\": 2.44, \"0WZ\": 7.61, \"CAS\": 5.35, \"NB8\": 11.98, \"OBS\": 11.71, \"1AC\": 2.42, \"PCA\": 3.48,\n    \"MCL\": 9.73, \"LBY\": 7.75, \"GAU\": 4.67, \"PBF\": 9.75, \"MCG\": 6.46, \"DDE\": 6.86, \"19W\": 3.94, \"MD5\": 9.33,\n    \"MD6\": 6.44, \"MD3\": 8.41, \"MCS\": 7.56, \"OBF\": 3.64, \"UAL\": 4.68, \"PAT\": 6.05, \"IAM\": 8.88, \"PAQ\": 8.77,\n    \"FDL\": 9.49, \"NCB\": 3.45, \"LCK\": 9.81, \"DDZ\": 2.52, \"2FM\": 5.54, \"IAR\": 6.77, \"OAS\": 4.8, \"HBN\": 8.8,\n    \"TA4\": 5.55, \"1C3\": 7.43, \"ECX\": 5.51, \"PF5\": 6.28, \"RE3\": 5.29, \"FCL\": 6.25, \"ECC\": 4.79, \"LDH\": 7.06,\n    \"NCY\": 2.91, \"CCS\": 4.58, \"PEC\": 6.54, \"2CO\": 4.45, \"LE1\": 2.72, \"HCM\": 5.53, \"07O\": 8.05, \"HCL\": 4.96,\n    \"NEP\": 6.94, \"PE1\": 8.01, \"LEF\": 4.37, \"FC0\": 5.18, \"LED\": 4.34, \"HCS\": 4.09, \"DBU\": 2.49, \"RE0\": 5.53,\n    \"LEN\": 3.82, \"1E3\": 8.71, \"BB9\": 2.56, \"BB8\": 5.14, \"PCS\": 5.05, \"BB7\": 4.56, \"BB6\": 2.62, \"LEU\": 3.83,\n    \"DBZ\": 7.08, \"LET\": 11.29, \"DBY\": 6.46, \"ICY\": 7.76, \"MAA\": 2.4, \"CGA\": 7.91, \"5CS\": 8.34, \"UGY\": 3.7,\n    \"LGY\": 11.71, \"N10\": 8.96, \"AAR\": 6.39, \"FT6\": 7.5, \"MOD\": 12.62, \"5CW\": 7.21, \"PVH\": 4.58, \"BBC\": 6.42,\n    \"YYA\": 7.3, \"O12\": 14.08, \"NOT\": 7.15, \"KGC\": 9.88, \"MP4\": 5.86, \"0CS\": 4.07, \"MP8\": 3.75, \"VLL\": 2.54,\n    \"VLM\": 2.51, \"BCS\": 8.03, \"MNL\": 4.9, \"AA4\": 4.47, \"SAC\": 3.49, \"BCX\": 2.99, \"3CF\": 6.47, \"SAH\": 11.7,\n    \"NNH\": 6.86, \"CGU\": 4.71, \"SIB\": 12.41, \"TLY\": 8.78, \"SIC\": 4.81, \"VMS\": 8.82, \"TMD\": 6.76, \"MMO\": 6.53,\n    \"PXU\": 2.46, \"4AW\": 6.22, \"OTH\": 3.6, \"DLS\": 6.84, \"MME\": 4.99, \"DM0\": 6.99, \"0FL\": 2.76, \"SBL\": 8.96,\n    \"CDV\": 3.72, \"OTY\": 6.51, \"PYA\": 7.75, \"2AS\": 3.57, \"DMH\": 4.92, \"ELY\": 7.42, \"GVL\": 9.6, \"FVA\": 2.9,\n    \"SAR\": 2.48, \"4BF\": 6.92, \"EME\": 4.69, \"CDE\": 2.51, \"3AR\": 7.86, \"3AH\": 9.11, \"AC5\": 2.44, \"FTR\": 6.08,\n    \"MLL\": 3.76, \"NPH\": 11.66, \"NPI\": 6.9, \"DMT\": 6.67, \"PYX\": 11.3, \"MLE\": 3.87, \"PYL\": 9.67, \"ZZU\": 6.94,\n    \"H5M\": 3.61, \"SCH\": 4.46, \"DMK\": 3.52, \"FTY\": 9.07, \"2AG\": 3.7, \"ABA\": 2.55, \"ZZJ\": 2.44, \"MLZ\": 6.8,\n    \"MLY\": 6.88, \"KCX\": 7.28, \"ZZD\": 8.16, \"3A5\": 5.37, \"LHC\": 7.75, \"9AT\": 2.47, \"OZT\": 3.4, \"THO\": 2.62,\n    \"THR\": 2.5, \"DFI\": 3.93, \"MKD\": 6.42, \"4CY\": 4.6, \"SDP\": 6.07, \"DFO\": 3.94, \"0A0\": 3.45, \"4DB\": 9.73,\n    \"ML3\": 6.26, \"BG1\": 8.02, \"SD4\": 4.57, \"THC\": 3.8, \"SCS\": 5.48, \"TH5\": 4.65, \"BFD\": 5.33, \"AEI\": 6.34,\n    \"TH6\": 2.85, \"SCY\": 4.53, \"TIS\": 4.81, \"SEE\": 4.53, \"BHD\": 3.48, \"SEB\": 8.18, \"SEC\": 2.96, \"SEP\": 4.8,\n    \"CLH\": 7.13, \"TIH\": 5.02, \"CLG\": 13.62, \"SEN\": 6.43, \"XXA\": 7.34, \"SEL\": 2.46, \"SE7\": 4.19, \"4CF\": 7.72,\n    \"G8M\": 3.57, \"BH2\": 3.51, \"UN2\": 3.22, \"VR0\": 10.51, \"MK8\": 4.76, \"DHA\": 2.32, \"LMQ\": 4.69, \"SFE\": 5.01,\n    \"AHB\": 3.47, \"OXX\": 7.05, \"BIF\": 9.63, \"IZO\": 4.47, \"NMM\": 8.25, \"0BN\": 7.0, \"HZP\": 3.12, \"NMC\": 4.23,\n    \"DHL\": 2.69, \"9DS\": 9.29, \"SER\": 2.41, \"CHG\": 4.2, \"MIR\": 6.54, \"AGQ\": 7.79, \"SET\": 2.46, \"MIS\": 6.32,\n    \"4FB\": 3.08, \"0AR\": 8.46, \"LME\": 3.99, \"FZN\": 24.42, \"AGT\": 9.04, \"IYR\": 6.46, \"9DN\": 9.31, \"CHP\": 5.75,\n    \"UNK\": 1.64, \"XX1\": 9.92, \"AGM\": 6.57, \"0AH\": 5.78, \"LLP\": 10.22, \"0AF\": 6.72, \"4DP\": 9.28, \"HYP\": 2.25,\n    \"DIR\": 5.8, \"LLY\": 8.71, \"0AK\": 6.11, \"NLE\": 4.67, \"OYL\": 6.42, \"WVL\": 4.69, \"0A8\": 8.1, \"NLY\": 6.37,\n    \"MHO\": 4.89, \"VOL\": 2.55, \"0A1\": 7.1, \"MHL\": 3.92, \"NLP\": 4.81, \"NLQ\": 4.65, \"MHW\": 2.74, \"BIL\": 4.7,\n    \"NLO\": 4.8, \"MHU\": 7.51, \"XW1\": 9.36, \"LLO\": 10.13, \"SGB\": 6.88, \"MHV\": 3.6, \"MHS\": 4.51, \"0A9\": 5.17,\n    \"0LF\": 9.96, \"HT7\": 6.82, \"X2W\": 6.6, \"YPZ\": 9.38, \"I58\": 6.73, \"FLA\": 2.4, \"M0H\": 4.83, \"HSL\": 2.46,\n    \"FLE\": 6.17, \"KOR\": 10.1, \"1VR\": 3.89, \"HSO\": 4.56, \"TTS\": 9.41, \"RVX\": 7.01, \"TTQ\": 7.71, \"H14\": 5.27,\n    \"HTI\": 7.8, \"ONH\": 6.14, \"LP6\": 8.58, \"ONL\": 4.83, \"AHH\": 5.06, \"HS8\": 7.4, \"HS9\": 4.71, \"BL2\": 5.82,\n    \"AHP\": 5.26, \"6HN\": 7.34, \"HRP\": 5.46, \"POM\": 3.6, \"WPA\": 5.11, \"2ZC\": 4.29, \"CPC\": 2.65, \"AIB\": 2.4,\n    \"XSN\": 3.47, \"M2S\": 5.28, \"GND\": 6.67, \"GNC\": 4.6, \"MVA\": 2.56, \"OLZ\": 5.32, \"M2L\": 6.15, \"TRF\": 6.69,\n    \"NZH\": 7.66, \"SRZ\": 5.27, \"OLD\": 10.47, \"CME\": 5.86, \"CMH\": 5.3, \"ALA\": 2.38, \"TRQ\": 7.36, \"PPN\": 7.24,\n    \"TRP\": 6.07, \"TRO\": 5.82, \"TRN\": 5.95, \"NYS\": 8.1, \"ALC\": 5.26, \"U3X\": 11.7, \"HVA\": 2.58, \"TS9\": 3.92,\n    \"TRX\": 7.27, \"TRW\": 11.8, \"LPL\": 7.51, \"GMA\": 4.4, \"OMT\": 5.07, \"CMT\": 3.54, \"GME\": 4.66, \"NYB\": 6.07,\n    \"PR3\": 5.12, \"LPD\": 2.48, \"GLU\": 4.49, \"1X6\": 6.84, \"LPG\": 2.39, \"GLX\": 4.52, \"PR4\": 4.52, \"CML\": 6.16,\n    \"FME\": 4.52, \"HTR\": 6.48, \"PR7\": 4.66, \"Z3E\": 7.2, \"GLZ\": 2.39, \"BMT\": 6.37, \"WRP\": 8.16, \"GLY\": 2.37,\n    \"OMY\": 6.11, \"MTY\": 5.46, \"OMX\": 6.15, \"GLN\": 4.46, \"2XA\": 8.25, \"28X\": 7.84, \"7JA\": 9.46, \"FLT\": 9.65,\n    \"GLJ\": 3.7, \"OMH\": 5.26, \"TSY\": 4.26, \"PRV\": 4.28, \"CS4\": 11.21, \"DOA\": 12.33, \"23P\": 5.42, \"CS3\": 8.24,\n    \"6CL\": 6.47, \"PRR\": 5.58, \"KST\": 11.58, \"CS1\": 7.23, \"PRS\": 2.63, \"ZYJ\": 11.4, \"IT1\": 9.75, \"UU5\": 4.98,\n    \"ESB\": 6.69, \"UU4\": 2.49, \"ESC\": 5.65, \"LSO\": 10.58, \"ZYK\": 11.45, \"9NV\": 8.99, \"23F\": 5.27, \"ORN\": 4.25,\n    \"HOX\": 6.61, \"CSD\": 3.95, \"FP9\": 3.03, \"DO2\": 4.44, \"SLL\": 11.53, \"P3Q\": 9.54, \"ORQ\": 6.04, \"MSL\": 5.21,\n    \"DNP\": 2.45, \"CSB\": 3.51, \"WLU\": 4.24, \"CSA\": 5.7, \"MT2\": 5.51, \"CSO\": 3.53, \"TPO\": 4.73, \"MSP\": 13.11,\n    \"23S\": 6.09, \"MSO\": 4.96, \"PRO\": 2.41, \"TPL\": 5.41, \"DNS\": 8.79, \"CSK\": 3.91, \"Z70\": 7.4, \"CSJ\": 7.51,\n    \"DNW\": 7.97, \"PRK\": 9.15, \"GSU\": 11.81, \"LTA\": 6.57, \"HPE\": 6.63, \"TPQ\": 6.48, \"PRJ\": 5.26, \"PSW\": 4.65,\n    \"L3O\": 3.89, \"CSU\": 4.89, \"ALY\": 7.38, \"M3L\": 7.12, \"CSW\": 3.68, \"XPR\": 7.68, \"D4P\": 5.66, \"FOE\": 8.17,\n    \"SLZ\": 5.69, \"CSP\": 5.26, \"TQI\": 7.68, \"ALT\": 2.72, \"CSR\": 5.42, \"CSS\": 3.61, \"M3R\": 7.18, \"ALO\": 2.57,\n    \"R4K\": 4.67, \"SMF\": 9.0, \"MSA\": 2.73, \"SMC\": 3.39, \"CSX\": 3.47, \"SME\": 4.8, \"ETA\": 2.4, \"CSZ\": 3.6,\n    \"22G\": 8.8, \"MSE\": 4.62, \"ALN\": 6.16, \"PSH\": 7.26, \"CTE\": 7.27, \"DON\": 6.72, \"CTH\": 3.45, \"U2X\": 11.54,\n    \"6CW\": 7.56, \"TQZ\": 6.97, \"3YM\": 6.52, \"OSE\": 4.49, \"2VA\": 9.82, \"TQQ\": 7.76, \"NRG\": 8.35, \"BPE\": 7.24,\n    \"F2F\": 6.25, \"1TQ\": 8.58, \"I2M\": 3.13, \"NVA\": 3.76, \"R1A\": 8.2, \"QPA\": 6.95, \"C1X\": 11.63, \"FRD\": 5.05,\n    \"HR7\": 6.98, \"SNC\": 3.93, \"QPH\": 5.15, \"26B\": 8.39, \"DPQ\": 6.54, \"DPP\": 2.51, \"2TY\": 8.65, \"TNR\": 6.88,\n    \"PTH\": 8.35, \"DPL\": 3.58, \"APK\": 8.79, \"1TY\": 8.84, \"HRG\": 7.36, \"PTM\": 8.74, \"1U8\": 3.62, \"PTR\": 8.64,\n    \"LVG\": 3.01, \"6FL\": 4.85, \"SOC\": 4.05, \"KPI\": 9.79, \"IPG\": 2.91, \"P2Y\": 2.51, \"N2C\": 3.55, \"T0I\": 7.34,\n    \"MPH\": 5.29, \"R2T\": 4.71, \"TOX\": 6.78, \"P2Q\": 9.8, \"GPL\": 10.77, \"MPJ\": 5.07, \"F2Y\": 6.2, \"T11\": 8.58,\n    \"9NR\": 9.33, \"FPR\": 8.85, \"9NF\": 8.93, \"KPY\": 10.17, \"9NE\": 9.77, \"TOQ\": 7.5, \"MPQ\": 4.2, \"FPK\": 3.08,\n    \"HQA\": 7.25, \"SOY\": 10.94,\n\n    \"\": 5.0\n};\n\n\n// http://blanco.biomol.uci.edu/Whole_residue_HFscales.txt\nNGL.ResidueHydrophobicity = {\n    // AA  DGwif   DGwoct  Oct-IF\n    \"ALA\": [  0.17,  0.50,  0.33 ],\n    \"ARG\": [  0.81,  1.81,  1.00 ],\n    \"ASN\": [  0.42,  0.85,  0.43 ],\n    \"ASP\": [  1.23,  3.64,  2.41 ],\n    \"ASH\": [ -0.07,  0.43,  0.50 ],\n    \"CYS\": [ -0.24, -0.02,  0.22 ],\n    \"GLN\": [  0.58,  0.77,  0.19 ],\n    \"GLU\": [  2.02,  3.63,  1.61 ],\n    \"GLH\": [ -0.01,  0.11,  0.12 ],\n    \"GLY\": [  0.01,  1.15,  1.14 ],\n    // \"His+\": [  0.96,  2.33,  1.37 ],\n    \"HIS\": [  0.17,  0.11, -0.06 ],\n    \"ILE\": [ -0.31, -1.12, -0.81 ],\n    \"LEU\": [ -0.56, -1.25, -0.69 ],\n    \"LYS\": [  0.99,  2.80,  1.81 ],\n    \"MET\": [ -0.23, -0.67, -0.44 ],\n    \"PHE\": [ -1.13, -1.71, -0.58 ],\n    \"PRO\": [  0.45,  0.14, -0.31 ],\n    \"SER\": [  0.13,  0.46,  0.33 ],\n    \"THR\": [  0.14,  0.25,  0.11 ],\n    \"TRP\": [ -1.85, -2.09, -0.24 ],\n    \"TYR\": [ -0.94, -0.71,  0.23 ],\n    \"VAL\": [  0.07, -0.46, -0.53 ],\n\n    \"\": [ 0.00, 0.00, 0.00 ]\n};\n\n\nNGL.guessElement = function(){\n\n    var elm1 = [ \"H\", \"C\", \"O\", \"N\", \"S\", \"P\" ];\n    var elm2 = [ \"NA\", \"CL\" ];\n\n    return function( atomName ){\n\n        var at = atomName.trim().toUpperCase();\n        if( parseInt( at.charAt( 0 ) ) ) at = at.substr( 1 );\n        // parse again to check for a second integer\n        if( parseInt( at.charAt( 0 ) ) ) at = at.substr( 1 );\n        var n = at.length;\n\n        if( n===0 ) return \"\";\n\n        if( n===1 ) return at;\n\n        if( n===2 ){\n\n            if( elm2.indexOf( at )!==-1 ) return at;\n\n            if( elm1.indexOf( at[0] )!==-1 ) return at[0];\n\n        }\n\n        if( n>=3 ){\n\n            if( elm1.indexOf( at[0] )!==-1 ) return at[0];\n\n        }\n\n        return \"\";\n\n    };\n\n}();\n\n\n// molecule types\nNGL.UnknownType = 0;\nNGL.WaterType = 1;\nNGL.IonType = 2;\nNGL.ProteinType = 3;\nNGL.RnaType = 4;\nNGL.DnaType = 5;\n\n// backbone types\nNGL.UnknownBackboneType = 0;\nNGL.ProteinBackboneType = 1;\nNGL.RnaBackboneType = 2;\nNGL.DnaBackboneType = 3;\nNGL.CgProteinBackboneType = 4;\nNGL.CgRnaBackboneType = 5;\nNGL.CgDnaBackboneType = 6;\n\n\nNGL.AA1 = {\n    'HIS': 'H',\n    'ARG': 'R',\n    'LYS': 'K',\n    'ILE': 'I',\n    'PHE': 'F',\n    'LEU': 'L',\n    'TRP': 'W',\n    'ALA': 'A',\n    'MET': 'M',\n    'PRO': 'P',\n    'CYS': 'C',\n    'ASN': 'N',\n    'VAL': 'V',\n    'GLY': 'G',\n    'SER': 'S',\n    'GLN': 'Q',\n    'TYR': 'Y',\n    'ASP': 'D',\n    'GLU': 'E',\n    'THR': 'T',\n\n    'ASH': 'D',\n    'GLH': 'E',\n\n    'UNK': '',\n};\n\nNGL.AA3 = Object.keys( NGL.AA1 );\n\nNGL.RnaBases = [ \"A\", \"C\", \"T\", \"G\", \"U\" ];\n\nNGL.DnaBases = [ \"DA\", \"DC\", \"DT\", \"DG\", \"DU\", \"TCY\", \"MCY\", \"5CM\" ];\n\nNGL.PurinBases = [ \"A\", \"G\", \"DA\", \"DG\" ];\n\nNGL.WaterNames = [ \"SOL\", \"WAT\", \"HOH\", \"H2O\", \"W\", \"DOD\", \"D3O\" ];\n\nNGL.IonNames = [\n    \"3CO\", \"3NI\", \"4MO\", \"6MO\", \"AG\", \"AL\", \"AU\", \"AU3\", \"BA\", \"BR\", \"CA\",\n    \"CD\", \"CE\", \"CL\", \"CO\", \"CR\", \"CU\", \"CU1\", \"CU3\", \"F\", \"FE\", \"FE2\", \"GA\",\n    \"K\", \"LI\", \"MG\", \"MN\", \"MN3\", \"NA\", \"ND4\", \"NH4\", \"NI\", \"OH\", \"RB\", \"SR\",\n    \"V\", \"Y1\", \"YT3\", \"ZN\"\n];\n\n// ligands that are wrongly detected as protein or rna/dna based on atom names\nNGL.LigandNames = [ \"FOL\" ];\n\n\nNGL.ProteinBackboneAtoms = [\n    \"CA\", \"C\", \"N\", \"O\", \"O1\", \"O2\", \"OC1\", \"OC2\",\n    \"H\", \"H1\", \"H2\", \"H3\", \"HA\",\n    \"BB\"\n];\n\nNGL.NucleicBackboneAtoms = [\n    \"P\", \"O3'\", \"O5'\", \"C5'\", \"C4'\", \"C3'\", \"OP1\", \"OP2\",\n    \"O3*\", \"O5*\", \"C5*\", \"C4*\", \"C3*\"\n];\n\n\n//////////\n// Proxy\n\n\n\n//////////////\n// BondProxy\n\nNGL.BondProxy = function( structure, index ){\n\n    this.structure = structure;\n    this.bondStore = structure.bondStore;\n    this.index = index;\n\n};\n\nNGL.BondProxy.prototype = {\n\n    constructor: NGL.BondProxy,\n    type: \"BondProxy\",\n\n    structure: undefined,\n    bondStore: undefined,\n    index: undefined,\n\n    get atom1 () {\n        return this.structure.getAtomProxy( this.atomIndex1 );\n    },\n\n    get atom2 () {\n        return this.structure.getAtomProxy( this.atomIndex2 );\n    },\n\n    get atomIndex1 () {\n        return this.bondStore.atomIndex1[ this.index ];\n    },\n    set atomIndex1 ( value ) {\n        this.bondStore.atomIndex1[ this.index ] = value;\n    },\n\n    get atomIndex2 () {\n        return this.bondStore.atomIndex2[ this.index ];\n    },\n    set atomIndex2 ( value ) {\n        this.bondStore.atomIndex2[ this.index ] = value;\n    },\n\n    get bondOrder () {\n        return this.bondStore.bondOrder[ this.index ];\n    },\n    set bondOrder ( value ) {\n        this.bondStore.bondOrder[ this.index ] = value;\n    },\n\n    //\n\n    qualifiedName: function(){\n\n        return this.atomIndex1 + \"=\" + this.atomIndex2;\n\n    },\n\n    clone: function(){\n\n        return new this.constructor( this.structure, this.index );\n\n    },\n\n    toObject: function(){\n\n        return {\n            atomIndex1: this.atomIndex1,\n            atomIndex2: this.atomIndex2,\n            bondOrder: this.bondOrder\n        };\n\n    }\n\n};\n\n\n//////////////\n// AtomProxy\n\nNGL.AtomProxy = function( structure, index ){\n\n    this.structure = structure;\n    this.chainStore = structure.chainStore;\n    this.residueStore = structure.residueStore;\n    this.atomStore = structure.atomStore;\n    this.residueMap = structure.residueMap;\n    this.atomMap = structure.atomMap;\n    this.index = index;\n\n};\n\nNGL.AtomProxy.prototype = {\n\n    constructor: NGL.AtomProxy,\n    type: \"AtomProxy\",\n\n    structure: undefined,\n    chainStore: undefined,\n    residueStore: undefined,\n    atomStore: undefined,\n    index: undefined,\n\n    get modelIndex () {\n        return this.chainStore.modelIndex[ this.chainIndex ];\n    },\n    get chainIndex () {\n        return this.residueStore.chainIndex[ this.residueIndex ];\n    },\n    get residue () {\n        console.warn(\"residue\")\n        return this.structure.getResidueProxy( this.residueIndex, false );\n    },\n\n    get residueIndex () {\n        return this.atomStore.residueIndex[ this.index ];\n    },\n    set residueIndex ( value ) {\n        this.atomStore.residueIndex[ this.index ] = value;\n    },\n\n    //\n\n    get sstruc () {\n        return this.residueStore.getSstruc( this.residueIndex );\n    },\n    get inscode () {\n        return this.residueStore.getInscode( this.residueIndex );\n    },\n    get resno () {\n        return this.residueStore.resno[ this.residueIndex ];\n    },\n    get chainname () {\n        return this.chainStore.getChainname( this.chainIndex );\n    },\n\n    //\n\n    get residueType () {\n        return this.residueMap.get( this.residueStore.residueTypeId[ this.residueIndex ] );\n    },\n    get atomType () {\n        return  this.atomMap.get( this.atomStore.atomTypeId[ this.index ] );\n    },\n\n    //\n\n    get resname () {\n        return this.residueType.resname;\n    },\n    get hetero () {\n        return this.residueType.hetero;\n    },\n\n    //\n\n    get atomname () {\n        return this.atomType.atomname;\n    },\n    get element () {\n        return this.atomType.element;\n    },\n    get vdw () {\n        return this.atomType.vdw;\n    },\n    get covalent () {\n        return this.atomType.covalent;\n    },\n\n    //\n\n    get x () {\n        return this.atomStore.x[ this.index ];\n    },\n    set x ( value ) {\n        this.atomStore.x[ this.index ] = value;\n    },\n\n    get y () {\n        return this.atomStore.y[ this.index ];\n    },\n    set y ( value ) {\n        this.atomStore.y[ this.index ] = value;\n    },\n\n    get z () {\n        return this.atomStore.z[ this.index ];\n    },\n    set z ( value ) {\n        this.atomStore.z[ this.index ] = value;\n    },\n\n    get serial () {\n        return this.atomStore.serial[ this.index ];\n    },\n    set serial ( value ) {\n        this.atomStore.serial[ this.index ] = value;\n    },\n\n    get bfactor () {\n        return this.atomStore.bfactor[ this.index ];\n    },\n    set bfactor ( value ) {\n        this.atomStore.bfactor[ this.index ] = value;\n    },\n\n    get occupancy () {\n        return this.atomStore.occupancy[ this.index ];\n    },\n    set occupancy ( value ) {\n        this.atomStore.occupancy[ this.index ] = value;\n    },\n\n    // get bonds () {\n    //     return this.atomStore.bonds[ this.index ];\n    // },\n    // set bonds ( value ) {\n    //     this.atomStore.bonds[ this.index ] = value;\n    // },\n\n    get altloc () {\n        return this.atomStore.getAltloc( this.index );\n    },\n    set altloc ( value ) {\n        this.atomStore.setAltloc( this.index, value );\n    },\n\n    //\n\n    isBackbone: function(){\n        var backboneIndexList = this.residueType.backboneIndexList;\n        // console.log(backboneIndexList)\n        if( backboneIndexList.length > 0 ){\n            var atomOffset = this.residueStore.atomOffset[ this.residueIndex ];\n            return backboneIndexList.indexOf( this.index - atomOffset ) !== -1;\n        }else{\n            return false;\n        }\n    },\n\n    isPolymer: function(){\n        var moleculeType = this.residueType.moleculeType;\n        return (\n            moleculeType === NGL.ProteinType ||\n            moleculeType === NGL.RnaType ||\n            moleculeType === NGL.DnaType ||\n            moleculeType === NGL.CgType\n        );\n    },\n\n    isSidechain: function(){\n        return this.isPolymer() && !this.isBackbone();\n    },\n\n    isCg: function(){\n        var backboneType = this.residueType.backboneType;\n        return (\n            backboneType === NGL.CgProteinBackboneType ||\n            backboneType === NGL.CgRnaBackboneType ||\n            backboneType === NGL.CgDnaBackboneType\n        );\n    },\n\n    isHetero: function(){\n        return this.residueType.hetero === 1;\n    },\n\n    isProtein: function(){\n        return this.residueType.moleculeType === NGL.ProteinType;\n    },\n\n    isNucleic: function(){\n        var moleculeType = this.residueType.moleculeType;\n        return (\n            moleculeType === NGL.RnaType ||\n            moleculeType === NGL.DnaType\n        );\n    },\n\n    isRna: function(){\n        return this.residueType.moleculeType === NGL.RnaType;\n    },\n\n    isDna: function(){\n        return this.residueType.moleculeType === NGL.DnaType;\n    },\n\n    isWater: function(){\n        return this.residueType.moleculeType === NGL.WaterType;\n    },\n\n    isIon: function(){\n        return this.residueType.moleculeType === NGL.IonType;\n    },\n\n    distanceTo: function( atom ){\n        var taa = this.atomStore;\n        var aaa = atom.atomStore;\n        var ti = this.index;\n        var ai = atom.index;\n        var x = taa.x[ ti ] - aaa.x[ ai ];\n        var y = taa.y[ ti ] - aaa.y[ ai ];\n        var z = taa.z[ ti ] - aaa.z[ ai ];\n        var distSquared = x * x + y * y + z * z;\n        return Math.sqrt( distSquared );\n    },\n\n    connectedTo: function( atom ){\n\n        var taa = this.atomStore;\n        var aaa = atom.atomStore;\n        var ti = this.index;\n        var ai = atom.index;\n\n        if( taa.altloc && aaa.altloc ){\n            var ta = taa.altloc[ ti ];  // use Uint8 value to compare\n            var aa = aaa.altloc[ ai ];  // no need to convert to char\n            // 0 is the Null character, 32 is the space character\n            if( !( ta === 0 || aa === 0 || ta === 32 || aa === 32 || ( ta === aa ) ) ) return false;\n        }\n\n        var x = taa.x[ ti ] - aaa.x[ ai ];\n        var y = taa.y[ ti ] - aaa.y[ ai ];\n        var z = taa.z[ ti ] - aaa.z[ ai ];\n\n        var distSquared = x * x + y * y + z * z;\n\n        // if( this.residue.isCg() ) console.log( this.qualifiedName(), Math.sqrt( distSquared ), distSquared )\n        if( distSquared < 64.0 && this.isCg() ) return true;\n\n        if( isNaN( distSquared ) ) return false;\n\n        var d = this.covalent + atom.covalent;\n        var d1 = d + 0.3;\n        var d2 = d - 0.5;\n\n        return distSquared < ( d1 * d1 ) && distSquared > ( d2 * d2 );\n\n    },\n\n    positionFromArray: function( array, offset ){\n\n        if( offset === undefined ) offset = 0;\n\n        this.x = array[ offset + 0 ];\n        this.y = array[ offset + 1 ];\n        this.z = array[ offset + 2 ];\n\n        return this;\n\n    },\n\n    positionToArray: function( array, offset ){\n\n        if( array === undefined ) array = [];\n        if( offset === undefined ) offset = 0;\n\n        array[ offset + 0 ] = this.x;\n        array[ offset + 1 ] = this.y;\n        array[ offset + 2 ] = this.z;\n\n        return array;\n\n    },\n\n    positionToVector3: function( v ){\n\n        if( v === undefined ) v = new THREE.Vector3();\n\n        v.x = this.x;\n        v.y = this.y;\n        v.z = this.z;\n\n        return v;\n\n    },\n\n    positionFromVector3: function( v ){\n\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n\n        return this;\n\n    },\n\n    //\n\n    qualifiedName: function( noResname ){\n        var name = \"\";\n        if( this.resname && !noResname ) name += \"[\" + this.resname + \"]\";\n        if( this.resno !== undefined ) name += this.resno;\n        if( this.inscode ) name += \"^\" + this.inscode;\n        if( this.chainname ) name += \":\" + this.chainname;\n        if( this.atomname ) name += \".\" + this.atomname;\n        if( this.altloc ) name += \"%\" + this.altloc;\n        name += \"/\" + this.modelIndex;\n        return name;\n    },\n\n    clone: function(){\n\n        return new this.constructor( this.structure, this.index );\n\n    },\n\n    toObject: function(){\n\n        return {\n            index: this.index,\n            residueIndex: this.residueIndex,\n\n            atomno: this.atomno,\n            resname: this.resname,\n            x: this.x,\n            y: this.y,\n            z: this.z,\n            element: this.element,\n            chainname: this.chainname,\n            resno: this.resno,\n            serial: this.serial,\n            vdw: this.vdw,\n            covalent: this.covalent,\n            hetero: this.hetero,\n            bfactor: this.bfactor,\n            altloc: this.altloc,\n            atomname: this.atomname,\n            modelindex: this.modelindex\n        };\n\n    }\n\n};\n\n\n/////////////////\n// ResidueProxy\n\nNGL.Residue = {\n\n    atomnames: function(){\n\n        var atomnames = {};\n\n        atomnames[ NGL.ProteinBackboneType ] = {\n            trace: \"CA\",\n            direction1: \"C\",\n            direction2: [ \"O\", \"OC1\", \"O1\", \"OX1\" ],\n            backboneStart: \"N\",\n            backboneEnd: \"C\",\n        };\n\n        atomnames[ NGL.RnaBackboneType ] = {\n            trace: [ \"C4'\", \"C4*\" ],\n            direction1: [ \"C1'\", \"C1*\" ],\n            direction2: [ \"C3'\", \"C3*\" ],\n            backboneStart: \"P\",\n            backboneEnd: [ \"O3'\", \"O3*\" ]\n        };\n\n        atomnames[ NGL.DnaBackboneType ] = {\n            trace: [ \"C3'\", \"C3*\" ],\n            direction1: [ \"C2'\", \"C2*\" ],\n            direction2: [ \"O4'\", \"O4*\" ],\n            backboneStart: \"P\",\n            backboneEnd: [ \"O3'\", \"O3*\" ]\n        };\n\n        atomnames[ NGL.CgProteinBackboneType ] = {\n            trace: [ \"CA\", \"BB\" ],\n            backboneStart: [ \"CA\", \"BB\" ],\n            backboneEnd: [ \"CA\", \"BB\" ],\n        };\n\n        atomnames[ NGL.CgRnaBackboneType ] = {\n            trace: [ \"C4'\", \"C4*\", \"P\" ],\n            backboneStart: [ \"C4'\", \"C4*\", \"P\" ],\n            backboneEnd: [ \"C4'\", \"C4*\", \"P\" ],\n        };\n\n        atomnames[ NGL.CgDnaBackboneType ] = {\n            trace: [ \"C3'\", \"C3*\", \"C2'\", \"P\" ],  // C2' is used in martini ff\n            backboneStart: [ \"C3'\", \"C3*\", \"C2'\", \"P\" ],\n            backboneEnd: [ \"C3'\", \"C3*\", \"C2'\", \"P\" ],\n        };\n\n        atomnames[ NGL.UnknownBackboneType ] = {};\n\n        return atomnames;\n\n    }()\n\n};\n\n\nNGL.ResidueProxy = function( structure, index ){\n\n    this.structure = structure;\n    this.chainStore = structure.chainStore;\n    this.residueStore = structure.residueStore;\n    this.atomStore = structure.atomStore;\n    this.residueMap = structure.residueMap;\n    this.atomMap = structure.atomMap;\n    this.index = index;\n\n};\n\nNGL.ResidueProxy.prototype = {\n\n    constructor: NGL.ResidueProxy,\n    type: \"ResidueProxy\",\n\n    structure: undefined,\n    chainStore: undefined,\n    residueStore: undefined,\n    atomStore: undefined,\n    index: undefined,\n\n    get chain () {\n        return this.structure.getChainProxy( this.chainIndex );\n    },\n\n    get chainIndex () {\n        return this.residueStore.chainIndex[ this.index ];\n    },\n    set chainIndex ( value ) {\n        this.residueStore.chainIndex[ this.index ] = value;\n    },\n\n    get atomOffset () {\n        return this.residueStore.atomOffset[ this.index ];\n    },\n    set atomOffset ( value ) {\n        this.residueStore.atomOffset[ this.index ] = value;\n    },\n\n    get atomCount () {\n        return this.residueStore.atomCount[ this.index ];\n    },\n    set atomCount ( value ) {\n        this.residueStore.atomCount[ this.index ] = value;\n    },\n\n    //\n\n    get modelIndex () {\n        return this.chainStore.modelIndex[ this.chainIndex ];\n    },\n    get chainname () {\n        return this.chainStore.getChainname( this.chainIndex );\n    },\n\n    //\n\n    get resno () {\n        return this.residueStore.resno[ this.index ];\n    },\n    set resno ( value ) {\n        this.residueStore.resno[ this.index ] = value;\n    },\n\n    get sstruc () {\n        return this.residueStore.getSstruc( this.index );\n    },\n    set sstruc ( value ) {\n        this.residueStore.setSstruc( this.index, value );\n    },\n\n    get inscode () {\n        return this.residueStore.getInscode( this.index );\n    },\n    set inscode ( value ) {\n        this.residueStore.getInscode( this.index, value );\n    },\n\n    //\n\n    get residueType () {\n        return this.residueMap.get( this.residueStore.residueTypeId[ this.index ] );\n    },\n\n    get resname () {\n        return this.residueType.resname;\n    },\n    get hetero () {\n        return this.residueType.hetero;\n    },\n    get moleculeType () {\n        return this.residueType.moleculeType;\n    },\n    get backboneType () {\n        return this.residueType.backboneType;\n    },\n    get backboneStartType () {\n        return this.residueType.backboneStartType;\n    },\n    get backboneEndType () {\n        return this.residueType.backboneEndType;\n    },\n    get traceAtomIndex () {\n        return this.residueType.traceAtomIndex + this.atomOffset;\n    },\n    get direction1AtomIndex () {\n        return this.residueType.direction1AtomIndex + this.atomOffset;\n    },\n    get direction2AtomIndex () {\n        return this.residueType.direction2AtomIndex + this.atomOffset;\n    },\n    get backboneStartAtomIndex () {\n        return this.residueType.backboneStartAtomIndex + this.atomOffset;\n    },\n    get backboneEndAtomIndex () {\n        return this.residueType.backboneEndAtomIndex + this.atomOffset;\n    },\n    get rungEndAtomIndex () {\n        return this.residueType.rungEndAtomIndex + this.atomOffset;\n    },\n\n    //\n\n    eachAtom: function( callback, selection ){\n\n        var count = this.atomCount;\n        var offset = this.atomOffset;\n        var ap = this.structure._ap;\n        var end = offset + count;\n\n        if( selection && selection.atomOnlyTest ){\n            var atomOnlyTest = selection.atomOnlyTest;\n            for( var i = offset; i < end; ++i ){\n                ap.index = i;\n                if( atomOnlyTest( ap ) ) callback( ap );\n            }\n        }else{\n            for( var i = offset; i < end; ++i ){\n                ap.index = i;\n                callback( ap );\n            }\n        }\n\n    },\n\n    //\n\n    isProtein: function(){\n        return this.residueType.moleculeType === NGL.ProteinType;\n    },\n\n    isNucleic: function(){\n        var moleculeType = this.residueType.moleculeType;\n        return (\n            moleculeType === NGL.RnaType ||\n            moleculeType === NGL.DnaType\n        );\n    },\n\n    isRna: function(){\n        return this.residueType.moleculeType === NGL.RnaType;\n    },\n\n    isDna: function(){\n        return this.residueType.moleculeType === NGL.DnaType;\n    },\n\n    isCg: function(){\n        var backboneType = this.residueType.backboneType;\n        return (\n            backboneType === NGL.CgProteinBackboneType ||\n            backboneType === NGL.CgRnaBackboneType ||\n            backboneType === NGL.CgDnaBackboneType\n        );\n    },\n\n    isPolymer: function(){\n        var moleculeType = this.residueType.moleculeType;\n        return (\n            moleculeType === NGL.ProteinType ||\n            moleculeType === NGL.RnaType ||\n            moleculeType === NGL.DnaType\n        );\n    },\n\n    isHetero: function(){\n        return this.residueType.hetero === 1;\n    },\n\n    isWater: function(){\n        return this.residueType.moleculeType === NGL.WaterType;\n    },\n\n    isIon: function(){\n        return this.residueType.moleculeType === NGL.IonType;\n    },\n\n    getAtomType: function( index ){\n        return this.atomMap.get( this.atomStore.atomTypeId[ index ] );\n    },\n\n    getResname1: function(){\n        // FIXME nucleic support\n        return NGL.AA1[ this.resname.toUpperCase() ] || 'X';\n    },\n\n    getBackboneType: function( position ){\n        switch( position ){\n            case -1:\n                return this.residueType.backboneStartType;\n            case 1:\n                return this.residueType.backboneEndType;\n            default:\n                return this.residueType.backboneType;\n        }\n    },\n\n    getAtomIndexByName: function( atomname ){\n        return this.residueType.getAtomIndexByName( atomname );\n    },\n\n    getAtomByName: function( atomname ){\n        return this.residueType.getAtomByName( atomname );\n    },\n\n    hasAtomWithName: function( atomname ){\n        return this.residueType.hasAtomWithName( atomname );\n    },\n\n    getAtomnameList: function(){\n        console.warn(\"getAtomnameList\")\n        var n = this.atomCount;\n        var offset = this.atomOffset;\n        var list = new Array( n );\n        for( var i = 0; i < n; ++i ){\n            list[ i ] = this.getAtomType( offset + i ).atomname;\n        }\n        return list;\n    },\n\n    connectedTo: function( rNext ){\n        var bbAtomEnd = this.structure.getAtomProxy( this.backboneEndAtomIndex );\n        var bbAtomStart = this.structure.getAtomProxy( rNext.backboneStartAtomIndex );\n        if( bbAtomEnd && bbAtomStart ){\n            return bbAtomEnd.connectedTo( bbAtomStart );\n        }else{\n            return false;\n        }\n    },\n\n    getNextConnectedResidue: function(){\n        var rOffset = this.chainStore.residueOffset[ this.chainIndex ];\n        var rCount = this.chainStore.residueCount[ this.chainIndex ];\n        var nextIndex = this.index + 1;\n        if( nextIndex < rOffset + rCount ){\n            var rpNext = this.structure.getResidueProxy( nextIndex );\n            if( this.connectedTo( rpNext ) ){\n                return rpNext;\n            }\n        }else if( nextIndex === rOffset + rCount ){  // cyclic\n            var rpFirst = this.structure.getResidueProxy( rOffset );\n            if( this.connectedTo( rpFirst ) ){\n                return rpFirst;\n            }\n        }\n        return undefined;\n    },\n\n    getPreviousConnectedResidue: function( rp ){\n        var rOffset = this.chainStore.residueOffset[ this.chainIndex ];\n        var prevIndex = this.index - 1;\n        if( prevIndex >= rOffset ){\n            if( rp === undefined ) rp = this.structure.getResidueProxy();\n            rp.index = prevIndex;\n            if( rp.connectedTo( this ) ){\n                return rp;\n            }\n        }else if( prevIndex === rOffset - 1 ){  // cyclic\n            if( rp === undefined ) rp = this.structure.getResidueProxy();\n            var rCount = this.chainStore.residueCount[ this.chainIndex ];\n            rp.index = rOffset + rCount - 1;\n            if( rp.connectedTo( this ) ){\n                return rp;\n            }\n        }\n        return undefined;\n    },\n\n    getBonds: function(){\n        return this.residueType.getBonds( this );\n    },\n\n    //\n\n    qualifiedName: function( noResname ){\n        var name = \"\";\n        if( this.resname && !noResname ) name += \"[\" + this.resname + \"]\";\n        if( this.resno !== undefined ) name += this.resno;\n        if( this.inscode ) name += \"^\" + this.inscode;\n        if( this.chain ) name += \":\" + this.chainname;\n        name += \"/\" + this.modelIndex;\n        return name;\n    },\n\n    clone: function(){\n        return new this.constructor( this.structure, this.index );\n    },\n\n    toObject: function(){\n        return {\n            index: this.index,\n            chainIndex: this.chainIndex,\n            atomOffset: this.atomOffset,\n            atomCount: this.atomCount,\n\n            resno: this.resno,\n            resname: this.resname,\n            sstruc: this.sstruc\n        };\n    }\n\n};\n\n\n////////////\n// Polymer\n\nNGL.Polymer = function( structure, residueIndexStart, residueIndexEnd ){\n\n    this.structure = structure;\n    this.chainStore = structure.chainStore;\n    this.residueStore = structure.residueStore;\n    this.atomStore = structure.atomStore;\n\n    this.residueIndexStart = residueIndexStart;\n    this.residueIndexEnd = residueIndexEnd;\n    this.residueCount = residueIndexEnd - residueIndexStart + 1;\n\n    var rpStart = this.structure.getResidueProxy( this.residueIndexStart );\n    var rpEnd = this.structure.getResidueProxy( this.residueIndexEnd );\n    this.isPrevConnected = rpStart.getPreviousConnectedResidue() !== undefined;\n    var rpNext = rpEnd.getNextConnectedResidue();\n    this.isNextConnected = rpNext !== undefined;\n    this.isNextNextConnected = this.isNextConnected && rpNext.getNextConnectedResidue() !== undefined;\n    this.isCyclic = rpEnd.connectedTo( rpStart );\n\n    this.__residueProxy = this.structure.getResidueProxy();\n\n    // console.log( this.qualifiedName(), this );\n\n};\n\nNGL.Polymer.prototype = {\n\n    constructor: NGL.Polymer,\n    type: \"Polymer\",\n\n    structure: undefined,\n    residueStore: undefined,\n    atomStore: undefined,\n\n    residueIndexStart: undefined,\n    residueIndexEnd: undefined,\n    residueCount: undefined,\n\n    //\n\n    get chainIndex () {\n        return this.residueStore.chainIndex[ this.residueIndexStart ];\n    },\n    get modelIndex () {\n        return this.chainStore.modelIndex[ this.chainIndex ];\n    },\n\n    get chainname () {\n        return this.chainStore.getChainname( this.chainIndex );\n    },\n\n    //\n\n    isProtein: function(){\n        this.__residueProxy.index = this.residueIndexStart;\n        return this.__residueProxy.isProtein();\n    },\n\n    isCg: function(){\n        this.__residueProxy.index = this.residueIndexStart;\n        return this.__residueProxy.isCg();\n    },\n\n    isNucleic: function(){\n        this.__residueProxy.index = this.residueIndexStart;\n        return this.__residueProxy.isNucleic();\n    },\n\n    getMoleculeType: function(){\n        this.__residueProxy.index = this.residueIndexStart;\n        return this.__residueProxy.moleculeType;\n    },\n\n    getBackboneType: function( position ){\n        this.__residueProxy.index = this.residueIndexStart;\n        return this.__residueProxy.getBackboneType( position );\n    },\n\n    getAtomIndexByType: function( index, type ){\n\n        // TODO pre-calculate, add to residueStore???\n\n        if( this.isCyclic ){\n            if( index === -1 ){\n                index = this.residueCount - 1\n            }else if( index === this.residueCount ){\n                index = 0\n            }\n        }else{\n            if( index === -1 && !this.isPrevConnected ) index += 1;\n            if( index === this.residueCount && !this.isNextNextConnected ) index -= 1;\n            // if( index === this.residueCount - 1 && !this.isNextConnected ) index -= 1;\n        }\n\n        var rp = this.__residueProxy;\n        rp.index = this.residueIndexStart + index;\n        var aIndex;\n\n        switch( type ){\n            case \"trace\":\n                aIndex = rp.traceAtomIndex;\n                break;\n            case \"direction1\":\n                aIndex = rp.direction1AtomIndex;\n                break;\n            case \"direction2\":\n                aIndex = rp.direction2AtomIndex;\n                break;\n            default:\n                var ap = rp.getAtomByName( type );\n                aIndex = ap ? ap.index : undefined;\n        }\n\n        // if( !ap ){\n        //     console.log( this, type, rp.residueType )\n        //     // console.log( rp.qualifiedName(), rp.index, index, this.residueCount - 1 )\n        //     // rp.index = this.residueIndexStart;\n        //     // console.log( rp.qualifiedName(), this.residueIndexStart )\n        //     // rp.index = this.residueIndexEnd;\n        //     // console.log( rp.qualifiedName(), this.residueIndexEnd )\n        // }\n\n        return aIndex;\n\n    },\n\n    eachAtom: function( callback, selection ){\n\n        this.eachResidue( function( rp ){\n            rp.eachAtom( callback, selection );\n        }, selection );\n\n    },\n\n    eachAtomN: function( n, callback, type ){\n\n        var m = this.residueCount;\n\n        var array = new Array( n );\n        for( var i = 0; i < n; ++i ){\n            array[ i ] = this.structure.getAtomProxy( this.getAtomIndexByType( i, type ) );\n        }\n        callback.apply( this, array );\n\n        for( var j = n; j < m; ++j ){\n            for( var i = 1; i < n; ++i ){\n                array[ i - 1 ].index = array[ i ].index;\n            }\n            array[ n - 1 ].index = this.getAtomIndexByType( j, type );\n            callback.apply( this, array );\n        }\n\n    },\n\n    eachAtomN2: function( n, callback, type ){\n\n        // console.log(this.residueOffset,this.residueCount)\n\n        var offset = this.atomOffset;\n        var count = this.atomCount;\n        var end = offset + count;\n        if( count < n ) return;\n\n        var array = new Array( n );\n        for( var i = 0; i < n; ++i ){\n            array[ i ] = this.structure.getAtomProxy();\n        }\n        // console.log( array, offset, end, count )\n\n        var as = this.structure.atomSetCache[ \"__\" + type ];\n        if( as === undefined ){\n            NGL.warn( \"no precomputed atomSet for: \" + type );\n            as = this.structure.getAtomSet( false );\n            this.eachResidue( function( rp ){\n                var ap = rp.getAtomByName( type );\n                as.add_unsafe( ap.index );\n            } );\n        }\n        var j = 0;\n\n        as.forEach( function( index ){\n            if( index >= offset && index < end ){\n                for( var i = 1; i < n; ++i ){\n                    array[ i - 1 ].index = array[ i ].index;\n                }\n                array[ n - 1 ].index = index;\n                j += 1;\n                if( j >= n ){\n                    callback.apply( this, array );\n                }\n            }\n        } );\n\n    },\n\n    eachDirectionAtomsN: function( n, callback ){\n\n        var n2 = n * 2;\n        var offset = this.atomOffset;\n        var count = this.atomCount;\n        var end = offset + count;\n        if( count < n ) return;\n\n        var array = new Array( n2 );\n        for( var i = 0; i < n2; ++i ){\n            array[ i ] = this.structure.getAtomProxy();\n        }\n\n        var as1 = this.structure.atomSetCache[ \"__direction1\" ];\n        var as2 = this.structure.atomSetCache[ \"__direction2\" ];\n        if( as1 === undefined || as2 === undefined ){\n            NGL.error( \"no precomputed atomSet for direction1 or direction2\" );\n            return;\n        }\n        var j = 0;\n\n        TypedFastBitSet.forEach( function( index1, index2 ){\n            if( index1 >= offset && index1 < end && index2 >= offset && index2 < end ){\n                for( var i = 1; i < n; ++i ){\n                    array[ i - 1 ].index = array[ i ].index;\n                    array[ i - 1 + n ].index = array[ i + n ].index;\n                }\n                array[ n - 1 ].index = index1;\n                array[ n - 1 + n ].index = index2;\n                j += 1;\n                if( j >= n ){\n                    callback.apply( this, array );\n                }\n            }\n        }, as1, as2 );\n\n    },\n\n    eachResidue: function( callback ){\n\n        var rp = this.structure.getResidueProxy();\n        var n = this.residueCount;\n        var rStartIndex = this.residueIndexStart;\n\n        for( var i = 0; i < n; ++i ){\n            rp.index = rStartIndex + i;\n            callback( rp );\n        }\n\n    },\n\n    qualifiedName: function(){\n        var rpStart = this.structure.getResidueProxy( this.residueIndexStart );\n        var rpEnd = this.structure.getResidueProxy( this.residueIndexEnd );\n        return rpStart.qualifiedName() + \" - \" + rpEnd.qualifiedName();\n    }\n\n};\n\n\n///////////////\n// ChainProxy\n\nNGL.ChainProxy = function( structure, index ){\n\n    this.structure = structure;\n    this.chainStore = structure.chainStore;\n    this.residueStore = structure.residueStore;\n    this.index = index;\n\n};\n\nNGL.ChainProxy.prototype = {\n\n    constructor: NGL.ChainProxy,\n    type: \"ChainProxy\",\n\n    structure: undefined,\n    chainStore: undefined,\n    index: undefined,\n\n    get model () {\n        return this.structure.getModelProxy( this.modelIndex );\n    },\n\n    get modelIndex () {\n        return this.chainStore.modelIndex[ this.index ];\n    },\n    set modelIndex ( value ) {\n        this.chainStore.modelIndex[ this.index ] = value;\n    },\n\n    get residueOffset () {\n        return this.chainStore.residueOffset[ this.index ];\n    },\n    set residueOffset ( value ) {\n        this.chainStore.residueOffset[ this.index ] = value;\n    },\n\n    get residueCount () {\n        return this.chainStore.residueCount[ this.index ];\n    },\n    set residueCount ( value ) {\n        this.chainStore.residueCount[ this.index ] = value;\n    },\n\n    get residueEnd () {\n        return this.residueOffset + this.residueCount - 1;\n    },\n\n    get atomOffset () {\n        return this.residueStore.atomOffset[ this.residueOffset ];\n    },\n    get atomEnd () {\n        return (\n            this.residueStore.atomOffset[ this.residueEnd ] +\n            this.residueStore.atomCount[ this.residueEnd ] - 1\n        );\n    },\n    get atomCount () {\n        return this.atomEnd - this.atomOffset + 1;\n    },\n\n    //\n\n    get chainname () {\n        return this.chainStore.getChainname( this.index );\n    },\n    set chainname ( value ) {\n        this.chainStore.setChainname( this.index, value );\n    },\n\n    //\n\n    eachAtom: function( callback, selection ){\n\n        this.eachResidue( function( rp ){\n            rp.eachAtom( callback, selection )\n        }, selection );\n\n    },\n\n    eachResidue: function( callback, selection ){\n\n        var count = this.residueCount;\n        var offset = this.residueOffset;\n        var rp = this.structure._rp;\n        var end = offset + count;\n\n        if( selection && selection.test ){\n            var residueOnlyTest = selection.residueOnlyTest;\n            if( residueOnlyTest ){\n                for( var i = offset; i < end; ++i ){\n                    rp.index = i;\n                    if( residueOnlyTest( rp ) ){\n                        callback( rp, selection );\n                    }\n                }\n            }else{\n                for( var i = offset; i < end; ++i ){\n                    rp.index = i;\n                    callback( rp, selection );\n                }\n            }\n        }else{\n            for( var i = offset; i < end; ++i ){\n                rp.index = i;\n                callback( rp );\n            }\n        }\n\n    },\n\n    eachResidueN: function( n, callback ){\n\n        var count = this.residueCount;\n        var offset = this.residueOffset;\n        var end = offset + count;\n        if( count < n ) return;\n        var array = new Array( n );\n\n        for( var i = 0; i < n; ++i ){\n            array[ i ] = this.structure.getResidueProxy( offset + i );\n        }\n        callback.apply( this, array );\n\n        for( var j = offset + n; j < end; ++j ){\n            for( var i = 0; i < n; ++i ){\n                array[ i ].index += 1;\n            }\n            callback.apply( this, array );\n        }\n\n    },\n\n    eachPolymer: function( callback, selection ){\n\n        var rStartIndex, rNextIndex;\n        var test = selection ? selection.residueOnlyTest : undefined;\n        var structure = this.model.structure;\n\n        var count = this.residueCount;\n        var offset = this.residueOffset;\n        var end = offset + count;\n\n        var rp1 = this.structure.getResidueProxy();\n        var rp2 = this.structure.getResidueProxy( offset );\n\n        var ap1 = this.structure.getAtomProxy();\n        var ap2 = this.structure.getAtomProxy();\n\n        var first = true;\n\n        for( var i = offset + 1; i < end; ++i ){\n\n            rp1.index = rp2.index;\n            rp2.index = i;\n\n            if( first ){\n                rStartIndex = rp1.index;\n                first = false;\n            }\n            rNextIndex = rp2.index;\n\n            var bbType1 = first ? rp1.backboneEndType : rp1.backboneType;\n            var bbType2 = rp2.backboneType;\n\n            if( bbType1 !== NGL.UnknownBackboneType && bbType1 === bbType2 ){\n\n                ap1.index = rp1.backboneEndAtomIndex;\n                ap2.index = rp2.backboneStartAtomIndex;\n\n            }else{\n\n                if( bbType1 !== NGL.UnknownBackboneType ){\n                    if( rp1.index - rStartIndex > 1 ){\n                        // console.log(\"FOO1\",rStartIndex, rp1.index)\n                        callback( new NGL.Polymer( structure, rStartIndex, rp1.index ) );\n                    }\n                }\n\n                rStartIndex = rNextIndex;\n\n                continue;\n\n            }\n\n            if( !ap1 || !ap2 || !ap1.connectedTo( ap2 ) ||\n                ( test && ( !test( rp1 ) || !test( rp2 ) ) ) ){\n                if( rp1.index - rStartIndex > 1 ){\n                    // console.log(\"FOO2\",rStartIndex, rp1.index)\n                    callback( new NGL.Polymer( structure, rStartIndex, rp1.index ) );\n                }\n                rStartIndex = rNextIndex;\n\n            }\n\n        }\n\n        if( rNextIndex - rStartIndex > 1 ){\n            if( this.structure.getResidueProxy( rStartIndex ).backboneStartType ){\n                // console.log(\"FOO3\",rStartIndex, rNextIndex)\n                callback( new NGL.Polymer( structure, rStartIndex, rNextIndex ) );\n            }\n        }\n\n    },\n\n    //\n\n    qualifiedName: function(){\n        var name = \":\" + this.chainname + \"/\" + this.modelIndex;\n        return name;\n    },\n\n    clone: function(){\n\n        return new this.constructor( this.structure, this.index );\n\n    },\n\n    toObject: function(){\n\n        return {\n            index: this.index,\n            residueOffset: this.residueOffset,\n            residueCount: this.residueCount,\n\n            chainname: this.chainname\n        };\n\n    }\n\n};\n\n\n///////////////\n// ModelProxy\n\nNGL.ModelProxy = function( structure, index ){\n\n    this.structure = structure;\n    this.modelStore = structure.modelStore;\n    this.chainStore = structure.chainStore;\n    this.residueStore = structure.residueStore;\n    this.index = index;\n\n};\n\nNGL.ModelProxy.prototype = {\n\n    constructor: NGL.ModelProxy,\n    type: \"ModelProxy\",\n\n    structure: undefined,\n    modelStore: undefined,\n    index: undefined,\n\n    get chainOffset () {\n        return this.modelStore.chainOffset[ this.index ];\n    },\n    set chainOffset ( value ) {\n        this.modelStore.chainOffset[ this.index ] = value;\n    },\n\n    get chainCount () {\n        return this.modelStore.chainCount[ this.index ];\n    },\n    set chainCount ( value ) {\n        this.modelStore.chainCount[ this.index ] = value;\n    },\n\n    get residueOffset () {\n        return this.chainStore.residueOffset[ this.chainOffset ];\n    },\n    get atomOffset () {\n        return this.residueStore.atomOffset[ this.residueOffset ];\n    },\n\n    get chainEnd () {\n        return this.chainOffset + this.chainCount - 1;\n    },\n    get residueEnd () {\n        return (\n            this.chainStore.residueOffset[ this.chainEnd ] +\n            this.chainStore.residueCount[ this.chainEnd ] - 1\n        );\n    },\n    get atomEnd () {\n        return (\n            this.residueStore.atomOffset[ this.residueEnd ] +\n            this.residueStore.atomCount[ this.residueEnd ] - 1\n        );\n    },\n\n    get residueCount () {\n        return this.residueEnd - this.residueOffset + 1;\n    },\n    get atomCount () {\n        return this.atomEnd - this.atomOffset + 1;\n    },\n\n    //\n\n    eachAtom: function( callback, selection ){\n\n        this.eachChain( function( cp ){\n            cp.eachAtom( callback, selection )\n        }, selection );\n\n    },\n\n    eachResidue: function( callback, selection ){\n\n        var i, j, o, c, r;\n        var n = this.chainCount;\n\n        if( selection && selection.chainOnlyTest ){\n\n            var test = selection.chainOnlyTest;\n\n            for( i = 0; i < n; ++i ){\n\n                c = this.chains[ i ];\n                if( test( c ) ) c.eachResidue( callback, selection );\n\n                // if( !test( c ) ) continue;\n\n                // o = c.residueCount;\n\n                // var residueTest = selection.residueTest;\n\n                // for( j = 0; j < o; ++j ){\n\n                //     r = c.residues[ j ];\n                //     if( residueTest( r ) ) callback( r );\n\n                // }\n\n            }\n\n        }else{\n\n            for( i = 0; i < n; ++i ){\n\n                c = this.chains[ i ];\n                c.eachResidue( callback, selection );\n\n                // o = c.residueCount;\n\n                // for( j = 0; j < o; ++j ){\n\n                //     callback( c.residues[ j ] );\n\n                // }\n\n            }\n\n        }\n\n    },\n\n    eachPolymer: function( callback, selection ){\n\n        if( selection && selection.chainOnlyTest ){\n\n            var chainOnlyTest = selection.chainOnlyTest;\n\n            this.eachChain( function( cp ){\n                if( chainOnlyTest( cp ) ){\n                    cp.eachPolymer( callback, selection );\n                }\n            } );\n\n        }else{\n\n            this.eachChain( function( cp ){\n                cp.eachPolymer( callback, selection );\n            } );\n\n        }\n\n    },\n\n    eachChain: function( callback, selection ){\n\n        var count = this.chainCount;\n        var offset = this.chainOffset;\n        var cp = this.structure._cp;\n        var end = offset + count;\n\n        if( selection && selection.test ){\n            var chainOnlyTest = selection.chainOnlyTest;\n            if( chainOnlyTest ){\n                for( var i = offset; i < end; ++i ){\n                    cp.index = i;\n                    if( chainOnlyTest( cp ) ){\n                        callback( cp, selection );\n                    }\n                }\n            }else{\n                for( var i = offset; i < end; ++i ){\n                    cp.index = i;\n                    callback( cp, selection );\n                }\n            }\n        }else{\n            for( var i = offset; i < end; ++i ){\n                cp.index = i;\n                callback( cp );\n            }\n        }\n\n    },\n\n    //\n\n    qualifiedName: function(){\n        var name = \"/\" + this.index;\n        return name;\n    },\n\n    clone: function(){\n\n        return new this.constructor( this.structure, this.index );\n\n    },\n\n    toObject: function(){\n\n        return {\n            index: this.index,\n            chainOffset: this.chainOffset,\n            chainCount: this.chainCount,\n        };\n\n    }\n\n};\n\n\n///////////////\n// Type & Map\n\nNGL.AtomType = function( structure, atomname, element ){\n\n    this.structure = structure;\n\n    element = element || NGL.guessElement( atomname );\n\n    this.atomname = atomname;\n    this.element = element;\n    this.vdw = NGL.VdwRadii[ element ];\n    this.covalent = NGL.CovalentRadii[ element ];\n\n};\n\nNGL.AtomType.prototype = {\n\n    constructor: NGL.AtomType,\n    type: \"AtomType\",\n\n    atomname: undefined,\n    element: undefined,\n    vdw: undefined,\n    covalent: undefined,\n\n    toJSON: function(){\n        var output = {\n            atomname: this.atomname,\n            element: this.element,\n        };\n        return output;\n    }\n\n};\n\n\nNGL.AtomMap = function( structure ){\n\n    var idDict = {};\n    var typeList = [];\n\n    function getHash( atomname, element ){\n        return atomname + \"|\" + element;\n    }\n\n    function add( atomname, element ){\n        element = element || NGL.guessElement( atomname );\n        var hash = getHash( atomname, element );\n        var id = idDict[ hash ];\n        if( id === undefined ){\n            var atomType = new NGL.AtomType( structure, atomname, element );\n            id = typeList.length;\n            idDict[ hash ] = id;\n            typeList.push( atomType );\n        }\n        return id;\n    }\n\n    function get( id ){\n        return typeList[ id ];\n    }\n\n    // API\n\n    this.add = add;\n    this.get = get;\n\n    this.list = typeList;\n    this.dict = idDict;\n\n    this.toJSON = function(){\n        var output = {\n            metadata: {\n                version: 0.1,\n                type: 'AtomMap',\n                generator: 'AtomMapExporter'\n            },\n            idDict: idDict,\n            typeList: typeList.map( function( atomType ){\n                return atomType.toJSON();\n            } )\n        };\n        return output;\n    };\n\n    this.fromJSON = function( input ){\n        idDict = input.idDict;\n        typeList = input.typeList.map( function( input ){\n            return new NGL.AtomType( structure, input.atomname, input.element );\n        } );\n        this.list = typeList;\n        this.dict = idDict;\n    };\n\n}\n\n\nNGL.ResidueType = function( structure, resname, atomTypeIdList, hetero ){\n\n    this.structure = structure;\n\n    this.resname = resname;\n    this.atomTypeIdList = atomTypeIdList;\n    this.hetero = hetero ? 1 : 0;\n    this.atomCount = atomTypeIdList.length;\n\n    this.moleculeType = this.getMoleculeType();\n    this.backboneType = this.getBackboneType( 0 );\n    this.backboneEndType = this.getBackboneType( -1 );\n    this.backboneStartType = this.getBackboneType( 1 );\n    this.backboneIndexList = this.getBackboneIndexList();\n\n    //\n\n    var rAtomnames = NGL.Residue.atomnames;\n    var atomnames = rAtomnames[ this.backboneType ];\n    var atomnamesStart = rAtomnames[ this.backboneStartType ];\n    var atomnamesEnd = rAtomnames[ this.backboneEndType ];\n\n    var traceIndex = this.getAtomIndexByName( atomnames.trace );\n    this.traceAtomIndex = traceIndex !== undefined ? traceIndex : -1;\n\n    var dir1Index = this.getAtomIndexByName( atomnames.direction1 );\n    this.direction1AtomIndex = dir1Index !== undefined ? dir1Index : -1;\n\n    var dir2Index = this.getAtomIndexByName( atomnames.direction2 );\n    this.direction2AtomIndex = dir2Index !== undefined ? dir2Index : -1;\n\n    var bbStartIndex = this.getAtomIndexByName( atomnamesStart.backboneStart );\n    this.backboneStartAtomIndex = bbStartIndex !== undefined ? bbStartIndex : -1;\n\n    var bbEndIndex = this.getAtomIndexByName( atomnamesEnd.backboneEnd );\n    this.backboneEndAtomIndex = bbEndIndex !== undefined ? bbEndIndex : -1;\n\n    var rungEndIndex;\n    if( NGL.PurinBases.indexOf( resname ) !== -1 ){\n        rungEndIndex = this.getAtomIndexByName( \"N1\" );\n    }else{\n        rungEndIndex = this.getAtomIndexByName( \"N3\" );\n    }\n    this.rungEndAtomIndex = rungEndIndex !== undefined ? rungEndIndex : -1;\n\n};\n\nNGL.ResidueType.prototype = {\n\n    constructor: NGL.ResidueType,\n    type: \"ResidueType\",\n\n    resname: undefined,\n    atomTypeIdList: undefined,\n    atomCount: undefined,\n\n    getBackboneIndexList: function(){\n        var backboneIndexList = [];\n        var atomnameList;\n        switch( this.moleculeType ){\n            case NGL.ProteinType:\n                atomnameList = NGL.ProteinBackboneAtoms;\n                break;\n            case NGL.RnaType:\n            case NGL.DnaType:\n                atomnameList = NGL.NucleicBackboneAtoms;\n                break;\n            default:\n                return backboneIndexList;\n        }\n        var atomMap = this.structure.atomMap;\n        var atomTypeIdList = this.atomTypeIdList;\n        for( var i = 0, il = this.atomCount; i < il; ++i ){\n            var atomType = atomMap.get( atomTypeIdList[ i ] );\n            if( atomnameList.indexOf( atomType.atomname ) !== -1 ){\n                backboneIndexList.push( i );\n            }\n        }\n        return backboneIndexList;\n    },\n\n    getMoleculeType: function(){\n        if( this.isProtein() ){\n            return NGL.ProteinType;\n        }else if( this.isRna() ){\n            return NGL.RnaType;\n        }else if( this.isDna() ){\n            return NGL.DnaType;\n        }else if( this.isWater() ){\n            return NGL.WaterType;\n        }else if( this.isIon() ){\n            return NGL.IonType;\n        }else{\n            return NGL.UnknownType;\n        }\n    },\n\n    getBackboneType: function( position ){\n        if( this.hasProteinBackbone( position ) ){\n            return NGL.ProteinBackboneType;\n        }else if( this.hasRnaBackbone( position ) ){\n            return NGL.RnaBackboneType;\n        }else if( this.hasDnaBackbone( position ) ){\n            return NGL.DnaBackboneType;\n        }else if( this.hasCgProteinBackbone( position ) ){\n            return NGL.CgProteinBackboneType;\n        }else if( this.hasCgRnaBackbone( position ) ){\n            return NGL.CgRnaBackboneType;\n        }else if( this.hasCgDnaBackbone( position ) ){\n            return NGL.CgDnaBackboneType;\n        }else{\n            return NGL.UnknownBackboneType;\n        }\n    },\n\n    isProtein: function(){\n        return (\n            ( this.hasAtomWithName( \"CA\", \"C\", \"N\" ) &&\n                NGL.LigandNames.indexOf( this.resname ) === -1 ) ||\n            NGL.AA3.indexOf( this.resname ) !== -1\n        );\n    },\n\n    isCg: function(){\n        var backboneType = this.backboneType;\n        return (\n            backboneType === NGL.CgProteinBackboneType ||\n            backboneType === NGL.CgRnaBackboneType ||\n            backboneType === NGL.CgDnaBackboneType\n        );\n    },\n\n    isNucleic: function(){\n        return this.isRna() || this.isDna();\n    },\n\n    isRna: function(){\n        return (\n            ( this.hasAtomWithName( [ \"P\", \"O3'\", \"O3*\" ], [ \"C4'\", \"C4*\" ], [ \"O2'\", \"O2*\" ] ) &&\n                NGL.LigandNames.indexOf( this.resname ) === -1 ) ||\n            NGL.RnaBases.indexOf( this.resname ) !== -1\n        );\n    },\n\n    isDna: function(){\n        return (\n            ( this.hasAtomWithName( [ \"P\", \"O3'\", \"O3*\" ], [ \"C3'\", \"C3*\" ] ) &&\n                !this.hasAtomWithName( [ \"O2'\", \"O2*\" ] ) &&\n                NGL.LigandNames.indexOf( this.resname ) === -1 ) ||\n            NGL.DnaBases.indexOf( this.resname ) !== -1\n        );\n    },\n\n    isPolymer: function(){\n        return this.isProtein() || this.isNucleic();\n    },\n\n    isHetero: function(){\n        return this.hetero === 1;\n    },\n\n    isIon: function(){\n        return NGL.IonNames.indexOf( this.resname ) !== -1;\n    },\n\n    isWater: function(){\n        return NGL.WaterNames.indexOf( this.resname ) !== -1;\n    },\n\n    hasBackboneAtoms: function( position, type ){\n        var atomnames = NGL.Residue.atomnames[ type ];\n        if( position === -1 ){\n            return this.hasAtomWithName(\n                atomnames.trace,\n                atomnames.backboneEnd,\n                atomnames.direction1,\n                atomnames.direction2\n            );\n        }else if( position === 0 ){\n            return this.hasAtomWithName(\n                atomnames.trace,\n                atomnames.direction1,\n                atomnames.direction2\n            );\n        }else if( position === 1 ){\n            return this.hasAtomWithName(\n                atomnames.trace,\n                atomnames.backboneStart,\n                atomnames.direction1,\n                atomnames.direction2\n            );\n        }else{\n            return this.hasAtomWithName(\n                atomnames.trace,\n                atomnames.backboneStart,\n                atomnames.backboneEnd,\n                atomnames.direction1,\n                atomnames.direction2\n            );\n        }\n    },\n\n    hasProteinBackbone: function( position ){\n        return (\n            this.isProtein() &&\n            this.hasBackboneAtoms( position, NGL.ProteinBackboneType )\n        );\n    },\n\n    hasRnaBackbone: function( position ){\n        return (\n            this.isRna() &&\n            this.hasBackboneAtoms( position, NGL.RnaBackboneType )\n        );\n    },\n\n    hasDnaBackbone: function( position ){\n        return (\n            this.isDna() &&\n            this.hasBackboneAtoms( position, NGL.DnaBackboneType )\n        );\n    },\n\n    hasCgProteinBackbone: function( position ){\n        return (\n            this.isProtein() &&\n            this.hasBackboneAtoms( position, NGL.CgProteinBackboneType )\n        );\n    },\n\n    hasCgRnaBackbone: function( position ){\n        return (\n            this.isRna() &&\n            this.hasBackboneAtoms( position, NGL.CgRnaBackboneType )\n        );\n    },\n\n    hasCgDnaBackbone: function( position ){\n        return (\n            this.isDna() &&\n            this.hasBackboneAtoms( position, NGL.CgDnaBackboneType )\n        );\n    },\n\n    hasBackbone: function( position ){\n        return (\n            this.hasProteinBackbone( position ) ||\n            this.hasRnaBackbone( position ) ||\n            this.hasDnaBackbone( position ) ||\n            this.hasCgProteinBackbone( position ) ||\n            this.hasCgRnaBackbone( position ) ||\n            this.hasCgDnaBackbone( position )\n        );\n    },\n\n    getAtomIndexByName: function( atomname ){\n        var n = this.atomCount;\n        var atomMap = this.structure.atomMap;\n        var atomTypeIdList = this.atomTypeIdList;\n        if( Array.isArray( atomname ) ){\n            for( var i = 0; i < n; ++i ){\n                var index = atomTypeIdList[ i ];\n                if( atomname.indexOf( atomMap.get( index ).atomname ) !== -1 ){\n                    return i;\n                }\n            }\n        }else{\n            for( var i = 0; i < n; ++i ){\n                var index = atomTypeIdList[ i ];\n                if( atomname === atomMap.get( index ).atomname ){\n                    return i;\n                }\n            }\n        }\n        return undefined;\n    },\n\n    hasAtomWithName: function( atomname ){\n        var n = arguments.length;\n        for( var i = 0; i < n; ++i ){\n            if( arguments[ i ] === undefined ) continue;\n            if( this.getAtomIndexByName( arguments[ i ] ) === undefined ){\n                return false;\n            }\n        }\n        return true;\n    },\n\n    getBonds: function( r ){\n        if( !this.bonds ){\n            this.bonds = NGL.calculateResidueBonds( r );\n        }\n        return this.bonds;\n    },\n\n    toJSON: function(){\n        var output = {\n            resname: this.resname,\n            atomTypeIdList: this.atomTypeIdList,\n            hetero: this.hetero\n        };\n        return output;\n    }\n\n};\n\n\nNGL.ResidueMap = function( structure ){\n\n    var idDict = {};\n    var typeList = [];\n\n    function getHash( resname, atomTypeIdList, hetero ){\n        return resname + \"|\" + atomTypeIdList.join( \",\" ) + \"|\" + ( hetero ? 1 : 0 );\n    }\n\n    function add( resname, atomTypeIdList, hetero ){\n        var hash = getHash( resname, atomTypeIdList, hetero );\n        var id = idDict[ hash ];\n        if( id === undefined ){\n            var residueType = new NGL.ResidueType(\n                structure, resname, atomTypeIdList, hetero\n            );\n            id = typeList.length;\n            idDict[ hash ] = id;\n            typeList.push( residueType );\n        }\n        return id;\n    }\n\n    function get( id ){\n        return typeList[ id ];\n    }\n\n    // API\n\n    this.add = add;\n    this.get = get;\n\n    this.list = typeList;\n    this.dict = idDict;\n\n    this.toJSON = function(){\n        var output = {\n            metadata: {\n                version: 0.1,\n                type: 'ResidueMap',\n                generator: 'ResidueMapExporter'\n            },\n            idDict: idDict,\n            typeList: typeList.map( function( residueType ){\n                return residueType.toJSON();\n            } )\n        };\n        return output;\n    };\n\n    this.fromJSON = function( input ){\n        idDict = input.idDict;\n        typeList = input.typeList.map( function( input ){\n            return new NGL.ResidueType(\n                structure, input.resname, input.atomTypeIdList, input.hetero\n            );\n        } );\n        this.list = typeList;\n        this.dict = idDict;\n    };\n\n}\n\n// File:js/ngl/store.js\n\n/**\n * @file Store\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n//////////\n// Store\n\nNGL.Store = function( sizeOrObject ){\n\n    if( sizeOrObject === undefined ){\n\n        this.init( 0 );\n\n    }else if( Number.isInteger( sizeOrObject ) ){\n\n        this.init( sizeOrObject );\n\n    }else{\n\n        this.fromJSON( sizeOrObject );\n\n    }\n\n};\n\nNGL.Store.prototype = {\n\n    constructor: NGL.Store,\n\n    type: \"Store\",\n\n    init: function( size ){\n\n        this.length = size;\n        this.count = 0;\n\n        for( var i = 0, il = this.__fields.length; i < il; ++i ){\n\n            var name = this.__fields[ i ][ 0 ];\n            var itemSize = this.__fields[ i ][ 1 ];\n            var arrayType = this.__fields[ i ][ 2 ];\n            var arraySize = this.length * itemSize;\n\n            switch( arrayType ){\n\n                case \"int8\":\n                    this[ name ] = new Int8Array( arraySize );\n                    break;\n\n                case \"int16\":\n                    this[ name ] = new Int16Array( arraySize );\n                    break;\n\n                case \"int32\":\n                    this[ name ] = new Int32Array( arraySize );\n                    break;\n\n                case \"uint8\":\n                    this[ name ] = new Uint8Array( arraySize );\n                    break;\n\n                case \"uint16\":\n                    this[ name ] = new Uint16Array( arraySize );\n                    break;\n\n                case \"uint32\":\n                    this[ name ] = new Uint32Array( arraySize );\n                    break;\n\n                case \"float32\":\n                    this[ name ] = new Float32Array( arraySize );\n                    break;\n\n                default:\n                    NGL.warn( \"arrayType unknown: \" + arrayType );\n\n            }\n\n        }\n\n    },\n\n    resize: function( size ){\n\n        // NGL.time( \"NGL.Store.resize\" );\n\n        this.length = Math.round( size || 0 );\n        this.count = Math.min( this.count, this.length );\n\n        for( var i = 0, il = this.__fields.length; i < il; ++i ){\n\n            var name = this.__fields[ i ][ 0 ];\n            var itemSize = this.__fields[ i ][ 1 ];\n            var arraySize = this.length * itemSize;\n            var tmpArray = new this[ name ].constructor( arraySize );\n\n            if( this[ name ].length > arraySize ){\n                tmpArray.set( this[ name ].subarray( 0, arraySize ) );\n            }else{\n                tmpArray.set( this[ name ] );\n            }\n            this[ name ] = tmpArray;\n\n        }\n\n        // NGL.timeEnd( \"NGL.Store.resize\" );\n\n    },\n\n    growIfFull: function(){\n\n        if( this.count >= this.length ){\n            var size = Math.round( this.length * 1.5 );\n            this.resize( Math.max( 256, size ) );\n        }\n\n    },\n\n    copyFrom: function( other, thisOffset, otherOffset, length ){\n\n        for( var i = 0, il = this.__fields.length; i < il; ++i ){\n\n            var name = this.__fields[ i ][ 0 ];\n            var itemSize = this.__fields[ i ][ 1 ];\n            var thisField = this[ name ];\n            var otherField = other[ name ];\n\n            for( var j = 0; j < length; ++j ){\n                var thisIndex = itemSize * ( thisOffset + j );\n                var otherIndex = itemSize * ( otherOffset + j );\n                for( var k = 0; k < itemSize; ++k ){\n                    thisField[ thisIndex + k ] = otherField[ otherIndex + k ];\n                }\n            }\n\n        }\n\n    },\n\n    copyWithin: function( offsetTarget, offsetSource, length ){\n\n        for( var i = 0, il = this.__fields.length; i < il; ++i ){\n\n            var name = this.__fields[ i ][ 0 ];\n            var itemSize = this.__fields[ i ][ 1 ];\n            var thisField = this[ name ];\n\n            for( var j = 0; j < length; ++j ){\n                var targetIndex = itemSize * ( offsetTarget + j );\n                var sourceIndex = itemSize * ( offsetSource + j );\n                for( var k = 0; k < itemSize; ++k ){\n                    thisField[ targetIndex + k ] = thisField[ sourceIndex + k ];\n                }\n            }\n\n        }\n\n    },\n\n    sort: function( compareFunction ){\n\n        NGL.time( \"NGL.Store.sort\" );\n\n        var thisStore = this;\n        var tmpStore = new this.constructor( 1 );\n\n        function swap( index1, index2 ){\n            if( index1 === index2 ) return;\n            tmpStore.copyFrom( thisStore, 0, index1, 1 );\n            thisStore.copyWithin( index1, index2, 1 );\n            thisStore.copyFrom( tmpStore, index2, 0, 1 );\n        }\n\n        function quicksort( left, right ){\n            if( left < right ){\n                var pivot = Math.floor( ( left + right ) / 2 );\n                var left_new = left;\n                var right_new = right;\n                do{\n                    while( compareFunction( left_new, pivot ) < 0 ){\n                        left_new += 1;\n                    }\n                    while( compareFunction( right_new, pivot ) > 0 ){\n                        right_new -= 1;\n                    }\n                    if( left_new <= right_new ){\n                        if( left_new === pivot ){\n                            pivot = right_new;\n                        }else if( right_new === pivot ){\n                            pivot = left_new;\n                        }\n                        swap( left_new, right_new );\n                        left_new += 1;\n                        right_new -= 1;\n                    }\n                }while( left_new <= right_new );\n                quicksort( left, right_new );\n                quicksort( left_new, right );\n            }\n        }\n\n        quicksort( 0, this.count - 1 );\n\n        NGL.timeEnd( \"NGL.Store.sort\" );\n\n    },\n\n    toJSON: function(){\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: this.type,\n                generator: this.type + \"Exporter\"\n            },\n\n            length: this.length,\n            count: this.count,\n\n        };\n\n        for( var i = 0, il = this.__fields.length; i < il; ++i ){\n\n            var name = this.__fields[ i ][ 0 ];\n            output[ name ] = this[ name ];\n\n        }\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.length = input.length;\n        this.count = input.count;\n\n        for( var i = 0, il = this.__fields.length; i < il; ++i ){\n\n            var name = this.__fields[ i ][ 0 ];\n            this[ name ] = input[ name ];\n\n        }\n\n        return this;\n\n    },\n\n    getTransferable: function(){\n\n        var transferable = [];\n\n        for( var i = 0, il = this.__fields.length; i < il; ++i ){\n\n            var name = this.__fields[ i ][ 0 ];\n            transferable.push( this[ name ].buffer );\n\n        }\n\n        return transferable;\n\n    },\n\n    clear: function(){\n\n        this.count = 0;\n\n    },\n\n    dispose: function(){\n\n        delete this.length;\n        delete this.count;\n\n        for( var i = 0, il = this.__fields.length; i < il; ++i ){\n\n            var name = this.__fields[ i ][ 0 ];\n            delete this[ name ];\n\n        }\n\n    }\n\n};\n\n\n//////////////\n// BondStore\n\nNGL.BondStore = function( sizeOrObject ){\n\n    NGL.Store.call( this, sizeOrObject );\n\n};\n\nNGL.BondStore.prototype = NGL.createObject(\n\n    NGL.Store.prototype, {\n\n    constructor: NGL.BondStore,\n\n    type: \"BondStore\",\n\n    __fields: [\n\n        [ \"atomIndex1\", 1, \"int32\" ],\n        [ \"atomIndex2\", 1, \"int32\" ],\n        [ \"bondOrder\", 1, \"int8\" ],\n\n    ],\n\n    addBond: function( atom1, atom2, bondOrder ){\n\n        this.growIfFull();\n\n        var i = this.count;\n        this.atomIndex1[ i ] = atom1.index;\n        this.atomIndex2[ i ] = atom2.index;\n        this.bondOrder[ i ] = bondOrder;\n\n        this.count += 1;\n\n    },\n\n    addBondIfConnected: function( atom1, atom2, bondOrder ){\n\n        if( atom1.connectedTo( atom2 ) ){\n            this.addBond( atom1, atom2, bondOrder );\n            return true;\n        }\n\n        return false;\n\n    }\n\n} );\n\n\n//////////////\n// AtomStore\n\nNGL.AtomStore = function( sizeOrObject ){\n\n    NGL.Store.call( this, sizeOrObject );\n\n};\n\nNGL.AtomStore.prototype = NGL.createObject(\n\n    NGL.Store.prototype, {\n\n    constructor: NGL.AtomStore,\n\n    type: \"AtomStore\",\n\n    __fields: [\n\n        [ \"residueIndex\", 1, \"uint32\" ],\n        [ \"atomTypeId\", 1, \"uint16\" ],\n\n        [ \"x\", 1, \"float32\" ],\n        [ \"y\", 1, \"float32\" ],\n        [ \"z\", 1, \"float32\" ],\n        [ \"serial\", 1, \"int32\" ],\n        [ \"bfactor\", 1, \"float32\" ],\n        [ \"altloc\", 1, \"uint8\" ],\n        [ \"occupancy\", 1, \"float32\" ]\n\n    ],\n\n    setAltloc: function( i, str ){\n        this.altloc[ i ] = str.charCodeAt( 0 );\n    },\n\n    getAltloc: function( i ){\n        var code = this.altloc[ i ];\n        return code ? String.fromCharCode( code ) : \"\";\n    }\n\n} );\n\n\n/////////////////\n// ResidueStore\n\nNGL.ResidueStore = function( sizeOrObject ){\n\n    NGL.Store.call( this, sizeOrObject );\n\n};\n\nNGL.ResidueStore.prototype = NGL.createObject(\n\n    NGL.Store.prototype, {\n\n    constructor: NGL.ResidueStore,\n\n    type: \"ResidueStore\",\n\n    __fields: [\n\n        [ \"chainIndex\", 1, \"uint32\" ],\n        [ \"atomOffset\", 1, \"uint32\" ],\n        [ \"atomCount\", 1, \"uint16\" ],\n        [ \"residueTypeId\", 1, \"uint16\" ],\n\n        [ \"resno\", 1, \"int32\" ],\n        [ \"sstruc\", 1, \"uint8\" ],\n        [ \"inscode\", 1, \"uint8\" ]\n\n    ],\n\n    setSstruc: function( i, str ){\n        this.sstruc[ i ] = str.charCodeAt( 0 );\n    },\n\n    getSstruc: function( i ){\n        var code = this.sstruc[ i ];\n        return code ? String.fromCharCode( code ) : \"\";\n    },\n\n    setInscode: function( i, str ){\n        this.inscode[ i ] = str.charCodeAt( 0 );\n    },\n\n    getInscode: function( i ){\n        var code = this.inscode[ i ];\n        return code ? String.fromCharCode( code ) : \"\";\n    }\n\n} );\n\n\n///////////////\n// ChainStore\n\nNGL.ChainStore = function( sizeOrObject ){\n\n    NGL.Store.call( this, sizeOrObject );\n\n};\n\nNGL.ChainStore.prototype = NGL.createObject(\n\n    NGL.Store.prototype, {\n\n    constructor: NGL.ChainStore,\n\n    type: \"ChainStore\",\n\n    __fields: [\n\n        [ \"modelIndex\", 1, \"uint16\" ],\n        [ \"residueOffset\", 1, \"uint32\" ],\n        [ \"residueCount\", 1, \"uint32\" ],\n\n        [ \"chainname\", 4, \"uint8\" ]\n\n    ],\n\n    setChainname: function( i, str ){\n\n        var j = 4 * i;\n        this.chainname[ j ] = str.charCodeAt( 0 );\n        this.chainname[ j + 1 ] = str.charCodeAt( 1 );\n        this.chainname[ j + 2 ] = str.charCodeAt( 2 );\n        this.chainname[ j + 3 ] = str.charCodeAt( 3 );\n\n    },\n\n    getChainname: function( i ){\n\n        var chainname = \"\";\n        for( var k = 0; k < 4; ++k ){\n            var code = this.chainname[ 4 * i + k ];\n            if( code ){\n                chainname += String.fromCharCode( code );\n            }else{\n                break;\n            }\n        }\n        return chainname;\n\n    }\n\n} );\n\n\n///////////////\n// ModelStore\n\nNGL.ModelStore = function( sizeOrObject ){\n\n    NGL.Store.call( this, sizeOrObject );\n\n};\n\nNGL.ModelStore.prototype = NGL.createObject(\n\n    NGL.Store.prototype, {\n\n    constructor: NGL.ModelStore,\n\n    type: \"ModelStore\",\n\n    __fields: [\n\n        [ \"chainOffset\", 1, \"uint32\" ],\n        [ \"chainCount\", 1, \"uint32\" ]\n\n    ]\n\n} );\n\n// File:js/ngl/symmetry.js\n\n/**\n * @file Symmetry\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\nNGL.Unitcell = function( a, b, c, alpha, beta, gamma, spacegroup, cartToFrac ){\n\n    this.a = a || 1;\n    this.b = b || 1;\n    this.c = c || 1;\n\n    this.alpha = alpha || 90;\n    this.beta = beta || 90;\n    this.gamma = gamma || 90;\n\n    this.spacegroup = spacegroup || \"P 1\";\n\n    //\n\n    var alphaRad = THREE.Math.degToRad( this.alpha );\n    var betaRad = THREE.Math.degToRad( this.beta );\n    var gammaRad = THREE.Math.degToRad( this.gamma );\n    var cosAlpha = Math.cos( alphaRad );\n    var cosBeta = Math.cos( betaRad );\n    var cosGamma = Math.cos( gammaRad );\n    var sinAlpha = Math.sin( alphaRad );\n    var sinBeta = Math.sin( betaRad );\n    var sinGamma = Math.sin( gammaRad );\n\n    this.volume = (\n        this.a * this.b * this.c *\n        Math.sqrt(\n            1 - cosAlpha * cosAlpha - cosBeta * cosBeta - cosGamma * cosGamma +\n            2.0 * cosAlpha * cosBeta * cosGamma\n        )\n    );\n\n    //\n\n    if( cartToFrac === undefined ){\n\n        // https://github.com/biojava/biojava/blob/master/biojava-structure/src/main/java/org/biojava/nbio/structure/xtal/CrystalCell.java\n\n        var cStar = ( this.a * this.b * sinGamma ) / this.volume;\n        var cosAlphaStar = (\n            ( cosBeta * cosGamma - cosAlpha ) /\n            ( sinBeta * sinGamma )\n        );\n\n        this.fracToCart = new THREE.Matrix4().set(\n            this.a, 0, 0, 0,\n            this.b * cosGamma, this.b * sinGamma, 0, 0,\n            this.c * cosBeta, -this.c * sinBeta * cosAlphaStar, 1.0 / cStar, 0,\n            0, 0, 0, 1\n        ).transpose();\n        this.cartToFrac = new THREE.Matrix4().getInverse( this.fracToCart );\n\n    }else{\n\n        this.cartToFrac = cartToFrac;\n        this.fracToCart = new THREE.Matrix4().getInverse( this.cartToFrac );\n\n    }\n\n};\n\nNGL.Unitcell.prototype = {\n\n    toJSON: function(){\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: 'Unitcell',\n                generator: 'UnitcellExporter'\n            },\n\n            a: this.a,\n            b: this.b,\n            c: this.c,\n\n            alpha: this.alpha,\n            beta: this.beta,\n            gamma: this.gamma,\n\n            spacegroup: this.spacegroup,\n            volume: this.volume,\n\n            cartToFrac: this.cartToFrac.toArray(),\n            fracToCart: this.fracToCart.toArray(),\n\n        }\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.a = input.a;\n        this.b = input.b;\n        this.c = input.c;\n\n        this.alpha = input.alpha;\n        this.beta = input.beta;\n        this.gamma = input.gamma;\n\n        this.spacegroup = input.spacegroup;\n        this.volume = input.volume;\n\n        this.cartToFrac.fromArray( input.cartToFrac );\n        this.fracToCart.fromArray( input.fracToCart );\n\n        return this;\n\n    }\n\n};\n\n\nNGL.getSymmetryOperations = function( spacegroup ){\n\n    var symopList = NGL.SymOp[ spacegroup ];\n\n    var matrixDict = {};\n\n    if( symopList === undefined ){\n\n        console.warn(\n            \"NGL.getSymmetryOperations: spacegroup '\" +\n            spacegroup + \"' not found in symop library\"\n        );\n        return matrixDict;\n\n    }\n\n    var reInteger = /^[1-9]$/;\n\n    symopList.forEach( function( symop ){\n\n        var ls = symop.split( \",\" );\n\n        var row = 0;\n        var matrix = new THREE.Matrix4().set(\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 1\n        );\n        var me = matrix.elements;\n\n        matrixDict[ symop ] = matrix;\n\n        // console.log( \"symop\", ls )\n\n        ls.forEach( function( elm ){\n\n            // console.log( \"row\", row );\n\n            var negate = false;\n            var denominator = false;\n\n            for( var i = 0, n = elm.length; i < n; ++i ){\n\n                var c = elm[ i ];\n\n                if( c === \"-\" ){\n\n                    negate = true;\n\n                }else if( c === \"+\" ){\n\n                    negate = false;\n\n                }else if( c === \"/\" ){\n\n                    denominator = true;\n\n                }else if( c === \"X\" ){\n\n                    me[ 0 + row ] = negate ? -1 : 1;\n\n                }else if( c === \"Y\" ){\n\n                    me[ 4 + row ] = negate ? -1 : 1;\n\n                }else if( c === \"Z\" ){\n\n                    me[ 8 + row ] = negate ? -1 : 1;\n\n                }else if( reInteger.test( c ) ){\n\n                    var integer = parseInt( c );\n\n                    if( denominator ){\n\n                        me[ 12 + row ] /= integer;\n\n                    }else{\n\n                        me[ 12 + row ] = integer;\n\n                    }\n\n                }else{\n\n                    NGL.warn(\n                        \"NGL.getSymmetryOperations: unknown token \" +\n                        \"'\" + c + \"'\"\n                    );\n\n                }\n\n                // console.log( \"token\", c )\n\n            }\n\n            row += 1;\n\n        } );\n\n        // console.log( \"matrix\", me )\n\n    } );\n\n    return matrixDict;\n\n};\n\n// from CCP4 symop.lib\nNGL.SymOp = {\n    \"P 1\": [\n        \"X,Y,Z\"\n    ],\n    \"P -1\": [\n        \"X,Y,Z\",\n        \"-X,-Y,-Z\"\n    ],\n    \"P 1 2 1\": [\n        \"X,Y,Z\",\n        \"-X,Y,-Z\"\n    ],\n    \"P 1 21 1\": [\n        \"X,Y,Z\",\n        \"-X,Y+1/2,-Z\"\n    ],\n    \"C 1 2 1\": [\n        \"X,Y,Z\",\n        \"-X,Y,-Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2+Y,-Z\"\n    ],\n    \"P 1 m 1\": [\n        \"X,Y,Z\",\n        \"X,-Y,Z\"\n    ],\n    \"P 1 c 1\": [\n        \"X,Y,Z\",\n        \"X,-Y,1/2+Z\"\n    ],\n    \"C 1 m 1\": [\n        \"X,Y,Z\",\n        \"X,-Y,Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2+X,1/2-Y,Z\"\n    ],\n    \"C 1 c 1\": [\n        \"X,Y,Z\",\n        \"X,-Y,1/2+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2+X,1/2-Y,1/2+Z\"\n    ],\n    \"P 1 2/m 1\": [\n        \"X,Y,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"-X,-Y,-Z\"\n    ],\n    \"P 1 21/m 1\": [\n        \"X,Y,Z\",\n        \"-X,1/2+Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,1/2-Y,Z\"\n    ],\n    \"C 1 2/m 1\": [\n        \"X,Y,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2-X,1/2-Y,-Z\"\n    ],\n    \"P 1 2/c 1\": [\n        \"X,Y,Z\",\n        \"-X,Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,-Y,1/2+Z\"\n    ],\n    \"P 1 21/c 1\": [\n        \"X,Y,Z\",\n        \"-X,-Y,-Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\"\n    ],\n    \"C 1 2/c 1\": [\n        \"X,Y,Z\",\n        \"-X,Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\"\n    ],\n    \"P 2 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\"\n    ],\n    \"P 2 2 21\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,-Z\"\n    ],\n    \"P 21 21 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\"\n    ],\n    \"P 21 21 21\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\"\n    ],\n    \"C 2 2 21\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,-Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\"\n    ],\n    \"C 2 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\"\n    ],\n    \"F 2 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\"\n    ],\n    \"I 2 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y,-Z\",\n        \"-X,Y,-Z\",\n        \"X+1/2,Y+1/2,Z+1/2\",\n        \"-X+1/2,-Y+1/2,Z+1/2\",\n        \"X+1/2,-Y+1/2,-Z+1/2\",\n        \"-X+1/2,Y+1/2,-Z+1/2\"\n    ],\n    \"I 21 21 21\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,Z\",\n        \"1/2-X,Y,-Z\",\n        \"X,-Y,1/2-Z\"\n    ],\n    \"P m m 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\"\n    ],\n    \"P m c 21\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,Z\"\n    ],\n    \"P c c 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\"\n    ],\n    \"P m a 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2+X,-Y,Z\",\n        \"1/2-X,Y,Z\"\n    ],\n    \"P c a 21\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"1/2+X,-Y,Z\",\n        \"1/2-X,Y,1/2+Z\"\n    ],\n    \"P n c 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\"\n    ],\n    \"P m n 21\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"-X,Y,Z\"\n    ],\n    \"P b a 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"P n a 21\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"P n n 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"C m m 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"C m c 21\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"C c c 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"A m m 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\"\n    ],\n    \"A b m 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,1/2-Y,Z\",\n        \"-X,1/2+Y,Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\"\n    ],\n    \"A m a 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2+X,-Y,Z\",\n        \"1/2-X,Y,Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"A b a 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\"\n    ],\n    \"F m m 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"F d d 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/4+X,1/4-Y,1/4+Z\",\n        \"1/4-X,1/4+Y,1/4+Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"1/4+X,3/4-Y,3/4+Z\",\n        \"1/4-X,3/4+Y,3/4+Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"3/4+X,1/4-Y,3/4+Z\",\n        \"3/4-X,1/4+Y,3/4+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"3/4+X,3/4-Y,1/4+Z\",\n        \"3/4-X,3/4+Y,1/4+Z\"\n    ],\n    \"I m m 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"I b a 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\"\n    ],\n    \"I m a 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2+X,-Y,Z\",\n        \"1/2-X,Y,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\"\n    ],\n    \"P 2/m 2/m 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\"\n    ],\n    \"P 2/n 2/n 2/n\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"P 2/c 2/c 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\"\n    ],\n    \"P 2/b 2/a 2/n\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"P 21/m 2/m 2/a\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"1/2+X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"1/2-X,Y,Z\"\n    ],\n    \"P 2/n 21/n 2/a\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\"\n    ],\n    \"P 2/m 2/n 21/a\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"-X,Y,Z\"\n    ],\n    \"P 21/c 2/c 2/a\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,Z\",\n        \"-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\"\n    ],\n    \"P 21/b 21/a 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"P 21/c 21/c 2/n\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\"\n    ],\n    \"P 2/b 21/c 21/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,Z\"\n    ],\n    \"P 21/n 21/n 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"P 21/m 21/m 2/n\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,Y+1/2,-Z\",\n        \"X+1/2,1/2-Y,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"X+1/2,Y+1/2,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\"\n    ],\n    \"P 21/b 2/c 21/n\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-X,Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"X,-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"P 21/b 21/c 21/a\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"P 21/n 21/m 21/a\": [\n        \"X,Y,Z\",\n        \"-X+1/2,-Y,Z+1/2\",\n        \"-X,Y+1/2,-Z\",\n        \"X+1/2,-Y+1/2,-Z+1/2\",\n        \"-X,-Y,-Z\",\n        \"X+1/2,Y,-Z+1/2\",\n        \"X,-Y+1/2,Z\",\n        \"-X+1/2,Y+1/2,Z+1/2\"\n    ],\n    \"C 2/m 2/c 21/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,1/2-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"C 2/m 2/c 21/a\": [\n        \"X,Y,Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"C 2/m 2/m 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"C 2/c 2/c 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"C 2/m 2/m 2/a\": [\n        \"X,Y,Z\",\n        \"-X,1/2-Y,Z\",\n        \"-X,1/2+Y,-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,1/2+Y,-Z\",\n        \"X,1/2-Y,Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,-Y,Z\",\n        \"1/2-X,Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,Y,-Z\",\n        \"1/2+X,-Y,Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"C 2/c 2/c 2/a\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"-X,Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"-X,1/2-Y,1/2-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"X,-Y,-Z\",\n        \"1/2-X,-Y,1/2-Z\",\n        \"X,1/2+Y,1/2-Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\"\n    ],\n    \"F 2/m 2/m 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"-X,1/2-Y,1/2-Z\",\n        \"X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2-X,-Y,1/2-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\"\n    ],\n    \"F 2/d 2/d 2/d\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"1/4-X,1/4-Y,1/4-Z\",\n        \"1/4+X,1/4+Y,1/4-Z\",\n        \"1/4+X,1/4-Y,1/4+Z\",\n        \"1/4-X,1/4+Y,1/4+Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"1/4-X,3/4-Y,3/4-Z\",\n        \"1/4+X,3/4+Y,3/4-Z\",\n        \"1/4+X,3/4-Y,3/4+Z\",\n        \"1/4-X,3/4+Y,3/4+Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"3/4-X,1/4-Y,3/4-Z\",\n        \"3/4+X,1/4+Y,3/4-Z\",\n        \"3/4+X,1/4-Y,3/4+Z\",\n        \"3/4-X,1/4+Y,3/4+Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"3/4-X,3/4-Y,1/4-Z\",\n        \"3/4+X,3/4+Y,1/4-Z\",\n        \"3/4+X,3/4-Y,1/4+Z\",\n        \"3/4-X,3/4+Y,1/4+Z\"\n    ],\n    \"I 2/m 2/m 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"I 2/b 2/a 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,1/2-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\"\n    ],\n    \"I 21/b 21/c 21/a\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,Z\",\n        \"1/2-X,Y,-Z\",\n        \"X,-Y,1/2-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"X,1/2+Y,-Z\",\n        \"1/2+X,-Y,Z\",\n        \"-X,Y,1/2+Z\"\n    ],\n    \"I 21/m 21/m 21/a\": [\n        \"X,Y,Z\",\n        \"-X,1/2-Y,Z\",\n        \"-X,1/2+Y,-Z\",\n        \"X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,1/2+Y,-Z\",\n        \"X,1/2-Y,Z\",\n        \"-X,Y,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\"\n    ],\n    \"P 4\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\"\n    ],\n    \"P 41\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-Y,X,1/4+Z\",\n        \"Y,-X,3/4+Z\"\n    ],\n    \"P 42\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\"\n    ],\n    \"P 43\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-Y,X,3/4+Z\",\n        \"Y,-X,1/4+Z\"\n    ],\n    \"I 4\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\"\n    ],\n    \"I 41\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-Y,1/2+X,1/4+Z\",\n        \"1/2+Y,-X,3/4+Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,X,3/4+Z\",\n        \"Y,1/2-X,1/4+Z\"\n    ],\n    \"P -4\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\"\n    ],\n    \"I -4\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\"\n    ],\n    \"P 4/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\"\n    ],\n    \"P 42/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,1/2-Z\",\n        \"-Y,X,1/2-Z\"\n    ],\n    \"P 4/n\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,Z\",\n        \"1/2+Y,1/2-X,Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\"\n    ],\n    \"P 42/n\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\"\n    ],\n    \"I 4/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\"\n    ],\n    \"I 41/a\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-Y,1/2+X,1/4+Z\",\n        \"1/2+Y,-X,3/4+Z\",\n        \"-X,1/2-Y,1/4-Z\",\n        \"1/2+X,Y,3/4-Z\",\n        \"Y,-X,-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,X,3/4+Z\",\n        \"Y,1/2-X,1/4+Z\",\n        \"1/2-X,-Y,3/4-Z\",\n        \"X,1/2+Y,1/4-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"-Y,X,-Z\"\n    ],\n    \"P 4 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\"\n    ],\n    \"P 4 21 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,Z\",\n        \"1/2+Y,1/2-X,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\"\n    ],\n    \"P 41 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-Y,X,1/4+Z\",\n        \"Y,-X,3/4+Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,1/2-Z\",\n        \"Y,X,3/4-Z\",\n        \"-Y,-X,1/4-Z\"\n    ],\n    \"P 41 21 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/4+Z\",\n        \"1/2+Y,1/2-X,3/4+Z\",\n        \"1/2-X,1/2+Y,1/4-Z\",\n        \"1/2+X,1/2-Y,3/4-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,1/2-Z\"\n    ],\n    \"P 42 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\"\n    ],\n    \"P 42 21 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\"\n    ],\n    \"P 43 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-Y,X,3/4+Z\",\n        \"Y,-X,1/4+Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,1/2-Z\",\n        \"Y,X,1/4-Z\",\n        \"-Y,-X,3/4-Z\"\n    ],\n    \"P 43 21 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,3/4+Z\",\n        \"1/2+Y,1/2-X,1/4+Z\",\n        \"1/2-X,1/2+Y,3/4-Z\",\n        \"1/2+X,1/2-Y,1/4-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,1/2-Z\"\n    ],\n    \"I 4 2 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\"\n    ],\n    \"I 41 2 2\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-Y,1/2+X,1/4+Z\",\n        \"1/2+Y,-X,3/4+Z\",\n        \"1/2-X,Y,3/4-Z\",\n        \"X,1/2-Y,1/4-Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"-Y,-X,-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,X,3/4+Z\",\n        \"Y,1/2-X,1/4+Z\",\n        \"-X,1/2+Y,1/4-Z\",\n        \"1/2+X,-Y,3/4-Z\",\n        \"Y,X,-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\"\n    ],\n    \"P 4 m m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\"\n    ],\n    \"P 4 b m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\"\n    ],\n    \"P 42 c m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\"\n    ],\n    \"P 42 n m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\"\n    ],\n    \"P 4 c c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\"\n    ],\n    \"P 4 n c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"P 42 m c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\"\n    ],\n    \"P 42 b c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"I 4 m m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"I 4 c m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\"\n    ],\n    \"I 41 m d\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-Y,1/2+X,1/4+Z\",\n        \"1/2+Y,-X,3/4+Z\",\n        \"X,-Y,Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"-Y,1/2-X,1/4+Z\",\n        \"1/2+Y,X,3/4+Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,X,3/4+Z\",\n        \"Y,1/2-X,1/4+Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"-X,Y,Z\",\n        \"1/2-Y,-X,3/4+Z\",\n        \"Y,1/2+X,1/4+Z\"\n    ],\n    \"I 41 c d\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-Y,1/2+X,1/4+Z\",\n        \"1/2+Y,-X,3/4+Z\",\n        \"X,-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"-Y,1/2-X,3/4+Z\",\n        \"1/2+Y,X,1/4+Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,X,3/4+Z\",\n        \"Y,1/2-X,1/4+Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"-X,Y,1/2+Z\",\n        \"1/2-Y,-X,1/4+Z\",\n        \"Y,1/2+X,3/4+Z\"\n    ],\n    \"P -4 2 m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\"\n    ],\n    \"P -4 2 c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,1/2-Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\"\n    ],\n    \"P -4 21 m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\"\n    ],\n    \"P -4 21 c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"P -4 m 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\"\n    ],\n    \"P -4 c 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\"\n    ],\n    \"P -4 b 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2+Y,1/2+X,-Z\",\n        \"1/2-Y,1/2-X,-Z\"\n    ],\n    \"P -4 n 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\"\n    ],\n    \"I -4 m 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\"\n    ],\n    \"I -4 c 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2+Y,1/2+X,-Z\",\n        \"1/2-Y,1/2-X,-Z\"\n    ],\n    \"I -4 2 m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"I -4 2 d\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"1/2-X,Y,3/4-Z\",\n        \"1/2+X,-Y,3/4-Z\",\n        \"1/2-Y,-X,3/4+Z\",\n        \"1/2+Y,X,3/4+Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"-X,1/2+Y,1/4-Z\",\n        \"X,1/2-Y,1/4-Z\",\n        \"-Y,1/2-X,1/4+Z\",\n        \"Y,1/2+X,1/4+Z\"\n    ],\n    \"P 4/m 2/m 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\"\n    ],\n    \"P 4/m 2/c 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,1/2-Z\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\"\n    ],\n    \"P 4/n 2/b 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"1/2+Y,1/2-X,-Z\",\n        \"1/2-Y,1/2+X,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\"\n    ],\n    \"P 4/n 2/n 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"P 4/m 21/b 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Y,1/2+X,-Z\",\n        \"1/2-Y,1/2-X,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\"\n    ],\n    \"P 4/m 21/n 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"P 4/n 21/m 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,Z\",\n        \"1/2+Y,1/2-X,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\"\n    ],\n    \"P 4/n 2/c 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,Z\",\n        \"1/2+Y,1/2-X,Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"P 42/m 2/m 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,1/2-Z\",\n        \"-Y,X,1/2-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\"\n    ],\n    \"P 42/m 2/c 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,1/2-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,1/2-Z\",\n        \"-Y,X,1/2-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\"\n    ],\n    \"P 42/n 2/b 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,1/2-Z\",\n        \"1/2+Y,1/2+X,-Z\",\n        \"1/2-Y,1/2-X,-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\"\n    ],\n    \"P 42/n 2/n 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\"\n    ],\n    \"P 42/m 21/b 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,1/2+Z\",\n        \"Y,-X,1/2+Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,1/2-Z\",\n        \"-Y,X,1/2-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"P 42/m 21/n 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,X+1/2,Z+1/2\",\n        \"Y+1/2,1/2-X,Z+1/2\",\n        \"1/2-X,Y+1/2,1/2-Z\",\n        \"X+1/2,1/2-Y,1/2-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y+1/2,1/2-X,1/2-Z\",\n        \"1/2-Y,X+1/2,1/2-Z\",\n        \"X+1/2,1/2-Y,Z+1/2\",\n        \"1/2-X,Y+1/2,Z+1/2\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\"\n    ],\n    \"P 42/n 21/m 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"P 42/n 21/c 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\"\n    ],\n    \"I 4/m 2/m 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\"\n    ],\n    \"I 4/m 2/c 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-Y,X,Z\",\n        \"Y,-X,Z\",\n        \"-X,Y,1/2-Z\",\n        \"X,-Y,1/2-Z\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"-X,Y,1/2+Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Y,1/2+X,-Z\",\n        \"1/2-Y,1/2-X,-Z\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\"\n    ],\n    \"I 41/a 2/m 2/d\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-Y,1/2+X,1/4+Z\",\n        \"1/2+Y,-X,3/4+Z\",\n        \"1/2-X,Y,3/4-Z\",\n        \"X,1/2-Y,1/4-Z\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"-Y,-X,-Z\",\n        \"-X,1/2-Y,1/4-Z\",\n        \"1/2+X,Y,3/4-Z\",\n        \"Y,-X,-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"-X,Y,Z\",\n        \"1/2-Y,-X,3/4+Z\",\n        \"Y,1/2+X,1/4+Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,X,3/4+Z\",\n        \"Y,1/2-X,1/4+Z\",\n        \"-X,1/2+Y,1/4-Z\",\n        \"1/2+X,-Y,3/4-Z\",\n        \"Y,X,-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2-X,-Y,3/4-Z\",\n        \"X,1/2+Y,1/4-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"-Y,1/2-X,1/4+Z\",\n        \"1/2+Y,X,3/4+Z\"\n    ],\n    \"I 41/a 2/c 2/d\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"-Y,1/2+X,1/4+Z\",\n        \"1/2+Y,-X,3/4+Z\",\n        \"1/2-X,Y,1/4-Z\",\n        \"X,1/2-Y,3/4-Z\",\n        \"1/2+Y,1/2+X,-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"-X,1/2-Y,1/4-Z\",\n        \"1/2+X,Y,3/4-Z\",\n        \"Y,-X,-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"-X,Y,1/2+Z\",\n        \"1/2-Y,-X,1/4+Z\",\n        \"Y,1/2+X,3/4+Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-Y,X,3/4+Z\",\n        \"Y,1/2-X,1/4+Z\",\n        \"-X,1/2+Y,3/4-Z\",\n        \"1/2+X,-Y,1/4-Z\",\n        \"Y,X,1/2-Z\",\n        \"1/2-Y,1/2-X,-Z\",\n        \"1/2-X,-Y,3/4-Z\",\n        \"X,1/2+Y,1/4-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"-Y,X,-Z\",\n        \"X,-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"-Y,1/2-X,3/4+Z\",\n        \"1/2+Y,X,1/4+Z\"\n    ],\n    \"P 3\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\"\n    ],\n    \"P 31\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z+1/3\",\n        \"Y-X,-X,Z+2/3\"\n    ],\n    \"P 32\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z+2/3\",\n        \"Y-X,-X,Z+1/3\"\n    ],\n    \"H 3\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"X+2/3,Y+1/3,Z+1/3\",\n        \"-Y+2/3,X-Y+1/3,Z+1/3\",\n        \"Y-X+2/3,-X+1/3,Z+1/3\",\n        \"X+1/3,Y+2/3,Z+2/3\",\n        \"-Y+1/3,X-Y+2/3,Z+2/3\",\n        \"Y-X+1/3,-X+2/3,Z+2/3\"\n    ],\n    \"R 3\": [\n        \"X,Y,Z\",\n        \"Z,X,Y\",\n        \"Y,Z,X\"\n    ],\n    \"P -3\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\"\n    ],\n    \"H -3\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"2/3+X,1/3+Y,1/3+Z\",\n        \"2/3-Y,1/3+X-Y,1/3+Z\",\n        \"2/3+Y-X,1/3-X,1/3+Z\",\n        \"2/3-X,1/3-Y,1/3-Z\",\n        \"2/3+Y,1/3+Y-X,1/3-Z\",\n        \"2/3+X-Y,1/3+X,1/3-Z\",\n        \"1/3+X,2/3+Y,2/3+Z\",\n        \"1/3-Y,2/3+X-Y,2/3+Z\",\n        \"1/3+Y-X,2/3-X,2/3+Z\",\n        \"1/3-X,2/3-Y,2/3-Z\",\n        \"1/3+Y,2/3+Y-X,2/3-Z\",\n        \"1/3+X-Y,2/3+X,2/3-Z\"\n    ],\n    \"R -3\": [\n        \"X,Y,Z\",\n        \"Z,X,Y\",\n        \"Y,Z,X\",\n        \"-X,-Y,-Z\",\n        \"-Z,-X,-Y\",\n        \"-Y,-Z,-X\"\n    ],\n    \"P 3 1 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-Y,-X,-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,-Z\"\n    ],\n    \"P 3 2 1\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\"\n    ],\n    \"P 31 1 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,1/3+Z\",\n        \"Y-X,-X,2/3+Z\",\n        \"-Y,-X,2/3-Z\",\n        \"Y-X,Y,1/3-Z\",\n        \"X,X-Y,-Z\"\n    ],\n    \"P 31 2 1\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z+1/3\",\n        \"Y-X,-X,Z+2/3\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,2/3-Z\",\n        \"-X,Y-X,1/3-Z\"\n    ],\n    \"P 32 1 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,2/3+Z\",\n        \"Y-X,-X,1/3+Z\",\n        \"-Y,-X,1/3-Z\",\n        \"Y-X,Y,2/3-Z\",\n        \"X,X-Y,-Z\"\n    ],\n    \"P 32 2 1\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z+2/3\",\n        \"Y-X,-X,Z+1/3\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,1/3-Z\",\n        \"-X,Y-X,2/3-Z\"\n    ],\n    \"H 3 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"2/3+X,1/3+Y,1/3+Z\",\n        \"2/3-Y,1/3+X-Y,1/3+Z\",\n        \"2/3+Y-X,1/3-X,1/3+Z\",\n        \"2/3+Y,1/3+X,1/3-Z\",\n        \"2/3+X-Y,1/3-Y,1/3-Z\",\n        \"2/3-X,1/3+Y-X,1/3-Z\",\n        \"1/3+X,2/3+Y,2/3+Z\",\n        \"1/3-Y,2/3+X-Y,2/3+Z\",\n        \"1/3+Y-X,2/3-X,2/3+Z\",\n        \"1/3+Y,2/3+X,2/3-Z\",\n        \"1/3+X-Y,2/3-Y,2/3-Z\",\n        \"1/3-X,2/3+Y-X,2/3-Z\"\n    ],\n    \"R 3 2\": [\n        \"X,Y,Z\",\n        \"Z,X,Y\",\n        \"Y,Z,X\",\n        \"-Y,-X,-Z\",\n        \"-X,-Z,-Y\",\n        \"-Z,-Y,-X\"\n    ],\n    \"P 3 m 1\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\"\n    ],\n    \"P 3 1 m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"Y,X,Z\",\n        \"X-Y,-Y,Z\",\n        \"-X,Y-X,Z\"\n    ],\n    \"P 3 c 1\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\"\n    ],\n    \"P 3 1 c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"Y,X,1/2+Z\",\n        \"X-Y,-Y,1/2+Z\",\n        \"-X,Y-X,1/2+Z\"\n    ],\n    \"H 3 m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\",\n        \"2/3+X,1/3+Y,1/3+Z\",\n        \"2/3-Y,1/3+X-Y,1/3+Z\",\n        \"2/3+Y-X,1/3-X,1/3+Z\",\n        \"2/3-Y,1/3-X,1/3+Z\",\n        \"2/3+Y-X,1/3+Y,1/3+Z\",\n        \"2/3+X,1/3+X-Y,1/3+Z\",\n        \"1/3+X,2/3+Y,2/3+Z\",\n        \"1/3-Y,2/3+X-Y,2/3+Z\",\n        \"1/3+Y-X,2/3-X,2/3+Z\",\n        \"1/3-Y,2/3-X,2/3+Z\",\n        \"1/3+Y-X,2/3+Y,2/3+Z\",\n        \"1/3+X,2/3+X-Y,2/3+Z\"\n    ],\n    \"R 3 m\": [\n        \"X,Y,Z\",\n        \"Z,X,Y\",\n        \"Y,Z,X\",\n        \"Y,X,Z\",\n        \"X,Z,Y\",\n        \"Z,Y,X\"\n    ],\n    \"H 3 c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\",\n        \"2/3+X,1/3+Y,1/3+Z\",\n        \"2/3-Y,1/3+X-Y,1/3+Z\",\n        \"2/3+Y-X,1/3-X,1/3+Z\",\n        \"2/3-Y,1/3-X,5/6+Z\",\n        \"2/3+Y-X,1/3+Y,5/6+Z\",\n        \"2/3+X,1/3+X-Y,5/6+Z\",\n        \"1/3+X,2/3+Y,2/3+Z\",\n        \"1/3-Y,2/3+X-Y,2/3+Z\",\n        \"1/3+Y-X,2/3-X,2/3+Z\",\n        \"1/3-Y,2/3-X,1/6+Z\",\n        \"1/3+Y-X,2/3+Y,1/6+Z\",\n        \"1/3+X,2/3+X-Y,1/6+Z\"\n    ],\n    \"R 3 c\": [\n        \"X,Y,Z\",\n        \"Z,X,Y\",\n        \"Y,Z,X\",\n        \"Y+1/2,X+1/2,Z+1/2\",\n        \"X+1/2,Z+1/2,Y+1/2\",\n        \"Z+1/2,Y+1/2,X+1/2\"\n    ],\n    \"P -3 1 2/m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-Y,-X,-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"Y,X,Z\",\n        \"X-Y,-Y,Z\",\n        \"-X,Y-X,Z\"\n    ],\n    \"P -3 1 2/c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-Y,-X,1/2-Z\",\n        \"Y-X,Y,1/2-Z\",\n        \"X,X-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"Y,X,1/2+Z\",\n        \"X-Y,-Y,1/2+Z\",\n        \"-X,Y-X,1/2+Z\"\n    ],\n    \"P -3 2/m 1\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\"\n    ],\n    \"P -3 2/c 1\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"Y,X,1/2-Z\",\n        \"X-Y,-Y,1/2-Z\",\n        \"-X,Y-X,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\"\n    ],\n    \"H -3 2/m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\",\n        \"2/3+X,1/3+Y,1/3+Z\",\n        \"2/3-Y,1/3+X-Y,1/3+Z\",\n        \"2/3+Y-X,1/3-X,1/3+Z\",\n        \"2/3+Y,1/3+X,1/3-Z\",\n        \"2/3+X-Y,1/3-Y,1/3-Z\",\n        \"2/3-X,1/3+Y-X,1/3-Z\",\n        \"2/3-X,1/3-Y,1/3-Z\",\n        \"2/3+Y,1/3+Y-X,1/3-Z\",\n        \"2/3+X-Y,1/3+X,1/3-Z\",\n        \"2/3-Y,1/3-X,1/3+Z\",\n        \"2/3+Y-X,1/3+Y,1/3+Z\",\n        \"2/3+X,1/3+X-Y,1/3+Z\",\n        \"1/3+X,2/3+Y,2/3+Z\",\n        \"1/3-Y,2/3+X-Y,2/3+Z\",\n        \"1/3+Y-X,2/3-X,2/3+Z\",\n        \"1/3+Y,2/3+X,2/3-Z\",\n        \"1/3+X-Y,2/3-Y,2/3-Z\",\n        \"1/3-X,2/3+Y-X,2/3-Z\",\n        \"1/3-X,2/3-Y,2/3-Z\",\n        \"1/3+Y,2/3+Y-X,2/3-Z\",\n        \"1/3+X-Y,2/3+X,2/3-Z\",\n        \"1/3-Y,2/3-X,2/3+Z\",\n        \"1/3+Y-X,2/3+Y,2/3+Z\",\n        \"1/3+X,2/3+X-Y,2/3+Z\"\n    ],\n    \"R -3 2/m\": [\n        \"X,Y,Z\",\n        \"Z,X,Y\",\n        \"Y,Z,X\",\n        \"-Y,-X,-Z\",\n        \"-X,-Z,-Y\",\n        \"-Z,-Y,-X\",\n        \"-X,-Y,-Z\",\n        \"-Z,-X,-Y\",\n        \"-Y,-Z,-X\",\n        \"Y,X,Z\",\n        \"X,Z,Y\",\n        \"Z,Y,X\"\n    ],\n    \"H -3 2/c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"Y,X,1/2-Z\",\n        \"X-Y,-Y,1/2-Z\",\n        \"-X,Y-X,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\",\n        \"2/3+X,1/3+Y,1/3+Z\",\n        \"2/3-Y,1/3+X-Y,1/3+Z\",\n        \"2/3+Y-X,1/3-X,1/3+Z\",\n        \"2/3+Y,1/3+X,5/6-Z\",\n        \"2/3+X-Y,1/3-Y,5/6-Z\",\n        \"2/3-X,1/3+Y-X,5/6-Z\",\n        \"2/3-X,1/3-Y,1/3-Z\",\n        \"2/3+Y,1/3+Y-X,1/3-Z\",\n        \"2/3+X-Y,1/3+X,1/3-Z\",\n        \"2/3-Y,1/3-X,5/6+Z\",\n        \"2/3+Y-X,1/3+Y,5/6+Z\",\n        \"2/3+X,1/3+X-Y,5/6+Z\",\n        \"1/3+X,2/3+Y,2/3+Z\",\n        \"1/3-Y,2/3+X-Y,2/3+Z\",\n        \"1/3+Y-X,2/3-X,2/3+Z\",\n        \"1/3+Y,2/3+X,1/6-Z\",\n        \"1/3+X-Y,2/3-Y,1/6-Z\",\n        \"1/3-X,2/3+Y-X,1/6-Z\",\n        \"1/3-X,2/3-Y,2/3-Z\",\n        \"1/3+Y,2/3+Y-X,2/3-Z\",\n        \"1/3+X-Y,2/3+X,2/3-Z\",\n        \"1/3-Y,2/3-X,1/6+Z\",\n        \"1/3+Y-X,2/3+Y,1/6+Z\",\n        \"1/3+X,2/3+X-Y,1/6+Z\"\n    ],\n    \"R -3 2/c\": [\n        \"X,Y,Z\",\n        \"Z,X,Y\",\n        \"Y,Z,X\",\n        \"-Y+1/2,-X+1/2,-Z+1/2\",\n        \"-X+1/2,-Z+1/2,-Y+1/2\",\n        \"-Z+1/2,-Y+1/2,-X+1/2\",\n        \"-X,-Y,-Z\",\n        \"-Z,-X,-Y\",\n        \"-Y,-Z,-X\",\n        \"Y+1/2,X+1/2,Z+1/2\",\n        \"X+1/2,Z+1/2,Y+1/2\",\n        \"Z+1/2,Y+1/2,X+1/2\"\n    ],\n    \"P 6\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,Z\",\n        \"X-Y,X,Z\"\n    ],\n    \"P 61\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z+1/3\",\n        \"Y-X,-X,Z+2/3\",\n        \"-X,-Y,Z+1/2\",\n        \"Y,Y-X,Z+5/6\",\n        \"X-Y,X,Z+1/6\"\n    ],\n    \"P 65\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z+2/3\",\n        \"Y-X,-X,Z+1/3\",\n        \"-X,-Y,Z+1/2\",\n        \"Y,Y-X,Z+1/6\",\n        \"X-Y,X,Z+5/6\"\n    ],\n    \"P 62\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,2/3+Z\",\n        \"Y-X,-X,1/3+Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,2/3+Z\",\n        \"X-Y,X,1/3+Z\"\n    ],\n    \"P 64\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,1/3+Z\",\n        \"Y-X,-X,2/3+Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,1/3+Z\",\n        \"X-Y,X,2/3+Z\"\n    ],\n    \"P 63\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,1/2+Z\",\n        \"X-Y,X,1/2+Z\"\n    ],\n    \"P -6\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"X,Y,-Z\",\n        \"-Y,X-Y,-Z\",\n        \"Y-X,-X,-Z\"\n    ],\n    \"P 6/m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,Z\",\n        \"X-Y,X,Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"X,Y,-Z\",\n        \"-Y,X-Y,-Z\",\n        \"Y-X,-X,-Z\"\n    ],\n    \"P 63/m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,1/2+Z\",\n        \"X-Y,X,1/2+Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"X,Y,1/2-Z\",\n        \"-Y,X-Y,1/2-Z\",\n        \"Y-X,-X,1/2-Z\"\n    ],\n    \"P 6 2 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,Z\",\n        \"X-Y,X,Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,-Z\"\n    ],\n    \"P 61 2 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,1/3+Z\",\n        \"Y-X,-X,2/3+Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,5/6+Z\",\n        \"X-Y,X,1/6+Z\",\n        \"Y,X,1/3-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,2/3-Z\",\n        \"-Y,-X,5/6-Z\",\n        \"Y-X,Y,1/2-Z\",\n        \"X,X-Y,1/6-Z\"\n    ],\n    \"P 65 2 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,2/3+Z\",\n        \"Y-X,-X,1/3+Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,1/6+Z\",\n        \"X-Y,X,5/6+Z\",\n        \"Y,X,2/3-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,1/3-Z\",\n        \"-Y,-X,1/6-Z\",\n        \"Y-X,Y,1/2-Z\",\n        \"X,X-Y,5/6-Z\"\n    ],\n    \"P 62 2 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,2/3+Z\",\n        \"Y-X,-X,1/3+Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,2/3+Z\",\n        \"X-Y,X,1/3+Z\",\n        \"Y,X,2/3-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,1/3-Z\",\n        \"-Y,-X,2/3-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,1/3-Z\"\n    ],\n    \"P 64 2 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,1/3+Z\",\n        \"Y-X,-X,2/3+Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,1/3+Z\",\n        \"X-Y,X,2/3+Z\",\n        \"Y,X,1/3-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,2/3-Z\",\n        \"-Y,-X,1/3-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,2/3-Z\"\n    ],\n    \"P 63 2 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,1/2+Z\",\n        \"X-Y,X,1/2+Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"Y-X,Y,1/2-Z\",\n        \"X,X-Y,1/2-Z\"\n    ],\n    \"P 6 m m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,Z\",\n        \"X-Y,X,Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\",\n        \"Y,X,Z\",\n        \"X-Y,-Y,Z\",\n        \"-X,Y-X,Z\"\n    ],\n    \"P 6 c c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,Z\",\n        \"X-Y,X,Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\",\n        \"Y,X,1/2+Z\",\n        \"X-Y,-Y,1/2+Z\",\n        \"-X,Y-X,1/2+Z\"\n    ],\n    \"P 63 c m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,1/2+Z\",\n        \"X-Y,X,1/2+Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\",\n        \"Y,X,Z\",\n        \"X-Y,-Y,Z\",\n        \"-X,Y-X,Z\"\n    ],\n    \"P 63 m c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,1/2+Z\",\n        \"X-Y,X,1/2+Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\",\n        \"Y,X,1/2+Z\",\n        \"X-Y,-Y,1/2+Z\",\n        \"-X,Y-X,1/2+Z\"\n    ],\n    \"P -6 m 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"X,Y,-Z\",\n        \"-Y,X-Y,-Z\",\n        \"Y-X,-X,-Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\",\n        \"-Y,-X,-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,-Z\"\n    ],\n    \"P -6 c 2\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"X,Y,1/2-Z\",\n        \"-Y,X-Y,1/2-Z\",\n        \"Y-X,-X,1/2-Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\",\n        \"-Y,-X,-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,-Z\"\n    ],\n    \"P -6 2 m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"X,Y,-Z\",\n        \"-Y,X-Y,-Z\",\n        \"Y-X,-X,-Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"Y,X,Z\",\n        \"X-Y,-Y,Z\",\n        \"-X,Y-X,Z\"\n    ],\n    \"P -6 2 c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"X,Y,1/2-Z\",\n        \"-Y,X-Y,1/2-Z\",\n        \"Y-X,-X,1/2-Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"Y,X,1/2+Z\",\n        \"X-Y,-Y,1/2+Z\",\n        \"-X,Y-X,1/2+Z\"\n    ],\n    \"P 6/m 2/m 2/m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,Z\",\n        \"X-Y,X,Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"X,Y,-Z\",\n        \"Y-X,-X,-Z\",\n        \"-Y,X-Y,-Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\",\n        \"Y,X,Z\",\n        \"X-Y,-Y,Z\",\n        \"-X,Y-X,Z\"\n    ],\n    \"P 6/m 2/c 2/c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,Z\",\n        \"Y,Y-X,Z\",\n        \"X-Y,X,Z\",\n        \"Y,X,1/2-Z\",\n        \"X-Y,-Y,1/2-Z\",\n        \"-X,Y-X,1/2-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"Y-X,Y,1/2-Z\",\n        \"X,X-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"X,Y,-Z\",\n        \"Y-X,-X,-Z\",\n        \"-Y,X-Y,-Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\",\n        \"Y,X,1/2+Z\",\n        \"X-Y,-Y,1/2+Z\",\n        \"-X,Y-X,1/2+Z\"\n    ],\n    \"P 63/m 2/c 2/m\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,1/2+Z\",\n        \"X-Y,X,1/2+Z\",\n        \"Y,X,1/2-Z\",\n        \"X-Y,-Y,1/2-Z\",\n        \"-X,Y-X,1/2-Z\",\n        \"-Y,-X,-Z\",\n        \"Y-X,Y,-Z\",\n        \"X,X-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"X,Y,1/2-Z\",\n        \"Y-X,-X,1/2-Z\",\n        \"-Y,X-Y,1/2-Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y-X,Y,1/2+Z\",\n        \"X,X-Y,1/2+Z\",\n        \"Y,X,Z\",\n        \"X-Y,-Y,Z\",\n        \"-X,Y-X,Z\"\n    ],\n    \"P 63/m 2/m 2/c\": [\n        \"X,Y,Z\",\n        \"-Y,X-Y,Z\",\n        \"Y-X,-X,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"Y,Y-X,1/2+Z\",\n        \"X-Y,X,1/2+Z\",\n        \"Y,X,-Z\",\n        \"X-Y,-Y,-Z\",\n        \"-X,Y-X,-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"Y-X,Y,1/2-Z\",\n        \"X,X-Y,1/2-Z\",\n        \"-X,-Y,-Z\",\n        \"Y,Y-X,-Z\",\n        \"X-Y,X,-Z\",\n        \"X,Y,1/2-Z\",\n        \"Y-X,-X,1/2-Z\",\n        \"-Y,X-Y,1/2-Z\",\n        \"-Y,-X,Z\",\n        \"Y-X,Y,Z\",\n        \"X,X-Y,Z\",\n        \"Y,X,1/2+Z\",\n        \"X-Y,-Y,1/2+Z\",\n        \"-X,Y-X,1/2+Z\"\n    ],\n    \"P 2 3\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\"\n    ],\n    \"F 2 3\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,1/2-Z,X\"\n    ],\n    \"I 2 3\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2-X,1/2+Y\",\n        \"1/2-Z,1/2+X,1/2-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2-X\",\n        \"1/2-Y,1/2-Z,1/2+X\"\n    ],\n    \"P 21 3\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\"\n    ],\n    \"I 21 3\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,Z\",\n        \"1/2-X,Y,-Z\",\n        \"X,-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"Z,-X,1/2-Y\",\n        \"-Z,1/2-X,Y\",\n        \"1/2-Z,X,-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,Z,-X\",\n        \"Y,-Z,1/2-X\",\n        \"-Y,1/2-Z,X\"\n    ],\n    \"P 2/m -3\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Z,-X,-Y\",\n        \"-Z,X,Y\",\n        \"Z,X,-Y\",\n        \"Z,-X,Y\",\n        \"-Y,-Z,-X\",\n        \"Y,-Z,X\",\n        \"-Y,Z,X\",\n        \"Y,Z,-X\"\n    ],\n    \"P 2/n -3\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2+X,1/2-Y\",\n        \"1/2+Z,1/2-X,1/2+Y\",\n        \"1/2-Y,1/2-Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2+X\",\n        \"1/2+Y,1/2+Z,1/2-X\"\n    ],\n    \"F 2/m -3\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Z,-X,-Y\",\n        \"-Z,X,Y\",\n        \"Z,X,-Y\",\n        \"Z,-X,Y\",\n        \"-Y,-Z,-X\",\n        \"Y,-Z,X\",\n        \"-Y,Z,X\",\n        \"Y,Z,-X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"-X,1/2-Y,1/2-Z\",\n        \"X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\",\n        \"-Z,1/2-X,1/2-Y\",\n        \"-Z,1/2+X,1/2+Y\",\n        \"Z,1/2+X,1/2-Y\",\n        \"Z,1/2-X,1/2+Y\",\n        \"-Y,1/2-Z,1/2-X\",\n        \"Y,1/2-Z,1/2+X\",\n        \"-Y,1/2+Z,1/2+X\",\n        \"Y,1/2+Z,1/2-X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/2-X,-Y,1/2-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\",\n        \"1/2-Z,-X,1/2-Y\",\n        \"1/2-Z,X,1/2+Y\",\n        \"1/2+Z,X,1/2-Y\",\n        \"1/2+Z,-X,1/2+Y\",\n        \"1/2-Y,-Z,1/2-X\",\n        \"1/2+Y,-Z,1/2+X\",\n        \"1/2-Y,Z,1/2+X\",\n        \"1/2+Y,Z,1/2-X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Z,1/2-X,-Y\",\n        \"1/2-Z,1/2+X,Y\",\n        \"1/2+Z,1/2+X,-Y\",\n        \"1/2+Z,1/2-X,Y\",\n        \"1/2-Y,1/2-Z,-X\",\n        \"1/2+Y,1/2-Z,X\",\n        \"1/2-Y,1/2+Z,X\",\n        \"1/2+Y,1/2+Z,-X\"\n    ],\n    \"F 2/d -3\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/4-X,1/4-Y,1/4-Z\",\n        \"1/4+X,1/4+Y,1/4-Z\",\n        \"1/4+X,1/4-Y,1/4+Z\",\n        \"1/4-X,1/4+Y,1/4+Z\",\n        \"1/4-Z,1/4-X,1/4-Y\",\n        \"1/4-Z,1/4+X,1/4+Y\",\n        \"1/4+Z,1/4+X,1/4-Y\",\n        \"1/4+Z,1/4-X,1/4+Y\",\n        \"1/4-Y,1/4-Z,1/4-X\",\n        \"1/4+Y,1/4-Z,1/4+X\",\n        \"1/4-Y,1/4+Z,1/4+X\",\n        \"1/4+Y,1/4+Z,1/4-X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"1/4-X,3/4-Y,3/4-Z\",\n        \"1/4+X,3/4+Y,3/4-Z\",\n        \"1/4+X,3/4-Y,3/4+Z\",\n        \"1/4-X,3/4+Y,3/4+Z\",\n        \"1/4-Z,3/4-X,3/4-Y\",\n        \"1/4-Z,3/4+X,3/4+Y\",\n        \"1/4+Z,3/4+X,3/4-Y\",\n        \"1/4+Z,3/4-X,3/4+Y\",\n        \"1/4-Y,3/4-Z,3/4-X\",\n        \"1/4+Y,3/4-Z,3/4+X\",\n        \"1/4-Y,3/4+Z,3/4+X\",\n        \"1/4+Y,3/4+Z,3/4-X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"3/4-X,1/4-Y,3/4-Z\",\n        \"3/4+X,1/4+Y,3/4-Z\",\n        \"3/4+X,1/4-Y,3/4+Z\",\n        \"3/4-X,1/4+Y,3/4+Z\",\n        \"3/4-Z,1/4-X,3/4-Y\",\n        \"3/4-Z,1/4+X,3/4+Y\",\n        \"3/4+Z,1/4+X,3/4-Y\",\n        \"3/4+Z,1/4-X,3/4+Y\",\n        \"3/4-Y,1/4-Z,3/4-X\",\n        \"3/4+Y,1/4-Z,3/4+X\",\n        \"3/4-Y,1/4+Z,3/4+X\",\n        \"3/4+Y,1/4+Z,3/4-X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"3/4-X,3/4-Y,1/4-Z\",\n        \"3/4+X,3/4+Y,1/4-Z\",\n        \"3/4+X,3/4-Y,Z+1/4\",\n        \"3/4-X,3/4+Y,Z+1/4\",\n        \"3/4-Z,3/4-X,1/4-Y\",\n        \"3/4-Z,3/4+X,1/4+Y\",\n        \"3/4+Z,3/4+X,1/4-Y\",\n        \"3/4+Z,3/4-X,1/4+Y\",\n        \"3/4-Y,3/4-Z,1/4-X\",\n        \"3/4+Y,3/4-Z,1/4+X\",\n        \"3/4-Y,3/4+Z,1/4+X\",\n        \"3/4+Y,3/4+Z,1/4-X\"\n    ],\n    \"I 2/m -3\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Z,-X,-Y\",\n        \"-Z,X,Y\",\n        \"Z,X,-Y\",\n        \"Z,-X,Y\",\n        \"-Y,-Z,-X\",\n        \"Y,-Z,X\",\n        \"-Y,Z,X\",\n        \"Y,Z,-X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2-X,1/2+Y\",\n        \"1/2-Z,1/2+X,1/2-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2-X\",\n        \"1/2-Y,1/2-Z,1/2+X\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2+X,1/2-Y\",\n        \"1/2+Z,1/2-X,1/2+Y\",\n        \"1/2-Y,1/2-Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2+X\",\n        \"1/2+Y,1/2+Z,1/2-X\"\n    ],\n    \"P 21/a -3\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"-Z,-X,-Y\",\n        \"1/2-Z,1/2+X,Y\",\n        \"1/2+Z,X,1/2-Y\",\n        \"Z,1/2-X,1/2+Y\",\n        \"-Y,-Z,-X\",\n        \"Y,1/2-Z,1/2+X\",\n        \"1/2-Y,1/2+Z,X\",\n        \"1/2+Y,Z,1/2-X\"\n    ],\n    \"I 21/a -3\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"-Z,-X,-Y\",\n        \"1/2-Z,1/2+X,Y\",\n        \"1/2+Z,X,1/2-Y\",\n        \"Z,1/2-X,1/2+Y\",\n        \"-Y,-Z,-X\",\n        \"Y,1/2-Z,1/2+X\",\n        \"1/2-Y,1/2+Z,X\",\n        \"1/2+Y,Z,1/2-X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,Z\",\n        \"1/2-X,+Y,-Z\",\n        \"X,-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"Z,-X,1/2-Y\",\n        \"-Z,1/2-X,Y\",\n        \"1/2-Z,X,-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,Z,-X\",\n        \"Y,-Z,1/2-X\",\n        \"-Y,1/2-Z,X\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"X,1/2+Y,-Z\",\n        \"1/2+X,-Y,Z\",\n        \"-X,Y,1/2+Z\",\n        \"1/2-Z,1/2-X,1/2-Y\",\n        \"-Z,X,1/2+Y\",\n        \"Z,1/2+X,-Y\",\n        \"1/2+Z,-X,Y\",\n        \"1/2-Y,1/2-Z,1/2-X\",\n        \"1/2+Y,-Z,X\",\n        \"-Y,Z,1/2+X\",\n        \"Y,1/2+Z,-X\"\n    ],\n    \"P 4 3 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y,-X,Z\",\n        \"-Y,X,Z\",\n        \"X,Z,-Y\",\n        \"-X,Z,Y\",\n        \"-X,-Z,-Y\",\n        \"X,-Z,Y\",\n        \"Z,Y,-X\",\n        \"Z,-Y,X\",\n        \"-Z,Y,X\",\n        \"-Z,-Y,-X\"\n    ],\n    \"P 42 3 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2-Z,1/2+Y\",\n        \"1/2+Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2+X\",\n        \"1/2-Z,1/2-Y,1/2-X\"\n    ],\n    \"F 4 3 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y,-X,Z\",\n        \"-Y,X,Z\",\n        \"X,Z,-Y\",\n        \"-X,Z,Y\",\n        \"-X,-Z,-Y\",\n        \"X,-Z,Y\",\n        \"Z,Y,-X\",\n        \"Z,-Y,X\",\n        \"-Z,Y,X\",\n        \"-Z,-Y,-X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"Y,1/2+X,1/2-Z\",\n        \"-Y,1/2-X,1/2-Z\",\n        \"Y,1/2-X,1/2+Z\",\n        \"-Y,1/2+X,1/2+Z\",\n        \"X,1/2+Z,1/2-Y\",\n        \"-X,1/2+Z,1/2+Y\",\n        \"-X,1/2-Z,1/2-Y\",\n        \"X,1/2-Z,1/2+Y\",\n        \"Z,1/2+Y,1/2-X\",\n        \"Z,1/2-Y,1/2+X\",\n        \"-Z,1/2+Y,1/2+X\",\n        \"-Z,1/2-Y,1/2-X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/2+Y,X,1/2-Z\",\n        \"1/2-Y,-X,1/2-Z\",\n        \"1/2+Y,-X,1/2+Z\",\n        \"1/2-Y,X,1/2+Z\",\n        \"1/2+X,Z,1/2-Y\",\n        \"1/2-X,Z,1/2+Y\",\n        \"1/2-X,-Z,1/2-Y\",\n        \"1/2+X,-Z,1/2+Y\",\n        \"1/2+Z,Y,1/2-X\",\n        \"1/2+Z,-Y,1/2+X\",\n        \"1/2-Z,Y,1/2+X\",\n        \"1/2-Z,-Y,1/2-X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"1/2+Y,1/2+X,-Z\",\n        \"1/2-Y,1/2-X,-Z\",\n        \"1/2+Y,1/2-X,Z\",\n        \"1/2-Y,1/2+X,Z\",\n        \"1/2+X,1/2+Z,-Y\",\n        \"1/2-X,1/2+Z,Y\",\n        \"1/2-X,1/2-Z,-Y\",\n        \"1/2+X,1/2-Z,Y\",\n        \"1/2+Z,1/2+Y,-X\",\n        \"1/2+Z,1/2-Y,X\",\n        \"1/2-Z,1/2+Y,X\",\n        \"1/2-Z,1/2-Y,-X\"\n    ],\n    \"F 41 3 2\": [\n        \"X,Y,Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"Y,Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"3/4+Y,1/4+X,3/4-Z\",\n        \"1/4-Y,1/4-X,1/4-Z\",\n        \"1/4+Y,3/4-X,3/4+Z\",\n        \"3/4-Y,3/4+X,1/4+Z\",\n        \"3/4+X,1/4+Z,3/4-Y\",\n        \"3/4-X,3/4+Z,1/4+Y\",\n        \"1/4-X,1/4-Z,1/4-Y\",\n        \"1/4+X,3/4-Z,3/4+Y\",\n        \"3/4+Z,1/4+Y,3/4-X\",\n        \"1/4+Z,3/4-Y,3/4+X\",\n        \"3/4-Z,3/4+Y,1/4+X\",\n        \"1/4-Z,1/4-Y,1/4-X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"-Z,-X,Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"-Y,-Z,X\",\n        \"3/4+Y,3/4+X,1/4-Z\",\n        \"1/4-Y,3/4-X,3/4-Z\",\n        \"1/4+Y,1/4-X,1/4+Z\",\n        \"3/4-Y,1/4+X,3/4+Z\",\n        \"3/4+X,3/4+Z,1/4-Y\",\n        \"3/4-X,1/4+Z,3/4+Y\",\n        \"1/4-X,3/4-Z,3/4-Y\",\n        \"1/4+X,1/4-Z,1/4+Y\",\n        \"3/4+Z,3/4+Y,1/4-X\",\n        \"1/4+Z,1/4-Y,1/4+X\",\n        \"3/4-Z,1/4+Y,3/4+X\",\n        \"1/4-Z,3/4-Y,3/4-X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,-Y,-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"Z,-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"1/4+Y,1/4+X,1/4-Z\",\n        \"3/4-Y,1/4-X,3/4-Z\",\n        \"3/4+Y,3/4-X,1/4+Z\",\n        \"1/4-Y,3/4+X,3/4+Z\",\n        \"1/4+X,1/4+Z,1/4-Y\",\n        \"1/4-X,3/4+Z,3/4+Y\",\n        \"3/4-X,1/4-Z,3/4-Y\",\n        \"3/4+X,3/4-Z,1/4+Y\",\n        \"1/4+Z,1/4+Y,1/4-X\",\n        \"3/4+Z,3/4-Y,1/4+X\",\n        \"1/4-Z,3/4+Y,3/4+X\",\n        \"3/4-Z,1/4-Y,3/4-X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,Y,-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/4+Y,3/4+X,3/4-Z\",\n        \"3/4-Y,3/4-X,1/4-Z\",\n        \"3/4+Y,1/4-X,3/4+Z\",\n        \"1/4-Y,1/4+X,1/4+Z\",\n        \"1/4+X,3/4+Z,3/4-Y\",\n        \"1/4-X,1/4+Z,1/4+Y\",\n        \"3/4-X,3/4-Z,1/4-Y\",\n        \"3/4+X,1/4-Z,3/4+Y\",\n        \"1/4+Z,3/4+Y,3/4-X\",\n        \"3/4+Z,1/4-Y,3/4+X\",\n        \"1/4-Z,1/4+Y,1/4+X\",\n        \"3/4-Z,3/4-Y,1/4-X\"\n    ],\n    \"I 4 3 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y,-X,Z\",\n        \"-Y,X,Z\",\n        \"X,Z,-Y\",\n        \"-X,Z,Y\",\n        \"-X,-Z,-Y\",\n        \"X,-Z,Y\",\n        \"Z,Y,-X\",\n        \"Z,-Y,X\",\n        \"-Z,Y,X\",\n        \"-Z,-Y,-X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2-X,1/2+Y\",\n        \"1/2-Z,1/2+X,1/2-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2-X\",\n        \"1/2-Y,1/2-Z,1/2+X\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2-Z,1/2+Y\",\n        \"1/2+Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2+X\",\n        \"1/2-Z,1/2-Y,1/2-X\"\n    ],\n    \"P 43 3 2\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/4+Y,3/4+X,3/4-Z\",\n        \"1/4-Y,1/4-X,1/4-Z\",\n        \"3/4+Y,3/4-X,1/4+Z\",\n        \"3/4-Y,1/4+X,3/4+Z\",\n        \"1/4+X,3/4+Z,3/4-Y\",\n        \"3/4-X,1/4+Z,3/4+Y\",\n        \"1/4-X,1/4-Z,1/4-Y\",\n        \"3/4+X,3/4-Z,1/4+Y\",\n        \"1/4+Z,3/4+Y,3/4-X\",\n        \"3/4+Z,3/4-Y,1/4+X\",\n        \"3/4-Z,1/4+Y,3/4+X\",\n        \"1/4-Z,1/4-Y,1/4-X\"\n    ],\n    \"P 41 3 2\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"3/4+Y,1/4+X,1/4-Z\",\n        \"3/4-Y,3/4-X,3/4-Z\",\n        \"1/4+Y,1/4-X,3/4+Z\",\n        \"1/4-Y,3/4+X,1/4+Z\",\n        \"3/4+X,1/4+Z,1/4-Y\",\n        \"1/4-X,3/4+Z,1/4+Y\",\n        \"3/4-X,3/4-Z,3/4-Y\",\n        \"1/4+X,1/4-Z,3/4+Y\",\n        \"3/4+Z,1/4+Y,1/4-X\",\n        \"1/4+Z,1/4-Y,3/4+X\",\n        \"1/4-Z,3/4+Y,1/4+X\",\n        \"3/4-Z,3/4-Y,3/4-X\"\n    ],\n    \"I 41 3 2\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"3/4+Y,1/4+X,1/4-Z\",\n        \"3/4-Y,3/4-X,3/4-Z\",\n        \"1/4+Y,1/4-X,3/4+Z\",\n        \"1/4-Y,3/4+X,1/4+Z\",\n        \"3/4+X,1/4+Z,1/4-Y\",\n        \"1/4-X,3/4+Z,1/4+Y\",\n        \"3/4-X,3/4-Z,3/4-Y\",\n        \"1/4+X,1/4-Z,3/4+Y\",\n        \"3/4+Z,1/4+Y,1/4-X\",\n        \"1/4+Z,1/4-Y,3/4+X\",\n        \"1/4-Z,3/4+Y,1/4+X\",\n        \"3/4-Z,3/4-Y,3/4-X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,Z\",\n        \"1/2-X,Y,-Z\",\n        \"X,-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"Z,-X,1/2-Y\",\n        \"-Z,1/2-X,Y\",\n        \"1/2-Z,X,-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,Z,-X\",\n        \"Y,-Z,1/2-X\",\n        \"-Y,1/2-Z,X\",\n        \"1/4+Y,3/4+X,3/4-Z\",\n        \"1/4-Y,1/4-X,1/4-Z\",\n        \"3/4+Y,3/4-X,1/4+Z\",\n        \"3/4-Y,1/4+X,3/4+Z\",\n        \"1/4+X,3/4+Z,3/4-Y\",\n        \"3/4-X,1/4+Z,3/4+Y\",\n        \"1/4-X,1/4-Z,1/4-Y\",\n        \"3/4+X,3/4-Z,1/4+Y\",\n        \"1/4+Z,3/4+Y,3/4-X\",\n        \"3/4+Z,3/4-Y,1/4+X\",\n        \"3/4-Z,1/4+Y,3/4+X\",\n        \"1/4-Z,1/4-Y,1/4-X\"\n    ],\n    \"P -4 3 m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,Z\",\n        \"-Y,-X,Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,Z,Y\",\n        \"-X,Z,-Y\",\n        \"-X,-Z,Y\",\n        \"X,-Z,-Y\",\n        \"Z,Y,X\",\n        \"Z,-Y,-X\",\n        \"-Z,Y,-X\",\n        \"-Z,-Y,X\"\n    ],\n    \"F -4 3 m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,Z\",\n        \"-Y,-X,Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,Z,Y\",\n        \"-X,Z,-Y\",\n        \"-X,-Z,Y\",\n        \"X,-Z,-Y\",\n        \"Z,Y,X\",\n        \"Z,-Y,-X\",\n        \"-Z,Y,-X\",\n        \"-Z,-Y,X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"Y,1/2+X,1/2+Z\",\n        \"-Y,1/2-X,1/2+Z\",\n        \"Y,1/2-X,1/2-Z\",\n        \"-Y,1/2+X,1/2-Z\",\n        \"X,1/2+Z,1/2+Y\",\n        \"-X,1/2+Z,1/2-Y\",\n        \"-X,1/2-Z,1/2+Y\",\n        \"X,1/2-Z,1/2-Y\",\n        \"Z,1/2+Y,1/2+X\",\n        \"Z,1/2-Y,1/2-X\",\n        \"-Z,1/2+Y,1/2-X\",\n        \"-Z,1/2-Y,1/2+X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/2+Y,X,1/2+Z\",\n        \"1/2-Y,-X,1/2+Z\",\n        \"1/2+Y,-X,1/2-Z\",\n        \"1/2-Y,X,1/2-Z\",\n        \"1/2+X,Z,1/2+Y\",\n        \"1/2-X,Z,1/2-Y\",\n        \"1/2-X,-Z,1/2+Y\",\n        \"1/2+X,-Z,1/2-Y\",\n        \"1/2+Z,Y,1/2+X\",\n        \"1/2+Z,-Y,1/2-X\",\n        \"1/2-Z,Y,1/2-X\",\n        \"1/2-Z,-Y,1/2+X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"1/2+Y,1/2+X,Z\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2-X,-Z\",\n        \"1/2-Y,1/2+X,-Z\",\n        \"1/2+X,1/2+Z,Y\",\n        \"1/2-X,1/2+Z,-Y\",\n        \"1/2-X,1/2-Z,Y\",\n        \"1/2+X,1/2-Z,-Y\",\n        \"1/2+Z,1/2+Y,X\",\n        \"1/2+Z,1/2-Y,-X\",\n        \"1/2-Z,1/2+Y,-X\",\n        \"1/2-Z,1/2-Y,X\"\n    ],\n    \"I -4 3 m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,Z\",\n        \"-Y,-X,Z\",\n        \"Y,-X,-Z\",\n        \"-Y,X,-Z\",\n        \"X,Z,Y\",\n        \"-X,Z,-Y\",\n        \"-X,-Z,Y\",\n        \"X,-Z,-Y\",\n        \"Z,Y,X\",\n        \"Z,-Y,-X\",\n        \"-Z,Y,-X\",\n        \"-Z,-Y,X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2-X,1/2+Y\",\n        \"1/2-Z,1/2+X,1/2-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2-X\",\n        \"1/2-Y,1/2-Z,1/2+X\",\n        \"1/2+Y,1/2+X,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2-Z,1/2+Y\",\n        \"1/2+X,1/2-Z,1/2-Y\",\n        \"1/2+Z,1/2+Y,1/2+X\",\n        \"1/2+Z,1/2-Y,1/2-X\",\n        \"1/2-Z,1/2+Y,1/2-X\",\n        \"1/2-Z,1/2-Y,1/2+X\"\n    ],\n    \"P -4 3 n\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/2+Y,1/2+X,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2-Z,1/2+Y\",\n        \"1/2+X,1/2-Z,1/2-Y\",\n        \"1/2+Z,1/2+Y,1/2+X\",\n        \"1/2+Z,1/2-Y,1/2-X\",\n        \"1/2-Z,1/2+Y,1/2-X\",\n        \"1/2-Z,1/2-Y,1/2+X\"\n    ],\n    \"F -4 3 c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/2+Y,1/2+X,1/2+Z\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2-Z,1/2+Y\",\n        \"1/2+X,1/2-Z,1/2-Y\",\n        \"1/2+Z,1/2+Y,1/2+X\",\n        \"1/2+Z,1/2-Y,1/2-X\",\n        \"1/2-Z,1/2+Y,1/2-X\",\n        \"1/2-Z,1/2-Y,1/2+X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"1/2+Y,X,Z\",\n        \"1/2-Y,-X,Z\",\n        \"1/2+Y,-X,-Z\",\n        \"1/2-Y,X,-Z\",\n        \"1/2+X,Z,Y\",\n        \"1/2-X,Z,-Y\",\n        \"1/2-X,-Z,Y\",\n        \"1/2+X,-Z,-Y\",\n        \"1/2+Z,Y,X\",\n        \"1/2+Z,-Y,-X\",\n        \"1/2-Z,Y,-X\",\n        \"1/2-Z,-Y,X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"Y,1/2+X,Z\",\n        \"-Y,1/2-X,Z\",\n        \"Y,1/2-X,-Z\",\n        \"-Y,1/2+X,-Z\",\n        \"X,1/2+Z,Y\",\n        \"-X,1/2+Z,-Y\",\n        \"-X,1/2-Z,Y\",\n        \"X,1/2-Z,-Y\",\n        \"Z,1/2+Y,X\",\n        \"Z,1/2-Y,-X\",\n        \"-Z,1/2+Y,-X\",\n        \"-Z,1/2-Y,X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"Y,X,1/2+Z\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,-X,1/2-Z\",\n        \"-Y,X,1/2-Z\",\n        \"X,Z,1/2+Y\",\n        \"-X,Z,1/2-Y\",\n        \"-X,-Z,1/2+Y\",\n        \"X,-Z,1/2-Y\",\n        \"Z,Y,1/2+X\",\n        \"Z,-Y,1/2-X\",\n        \"-Z,Y,1/2-X\",\n        \"-Z,-Y,1/2+X\"\n    ],\n    \"I -4 3 d\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/4+Y,1/4+X,1/4+Z\",\n        \"1/4-Y,3/4-X,3/4+Z\",\n        \"3/4+Y,1/4-X,3/4-Z\",\n        \"3/4-Y,3/4+X,1/4-Z\",\n        \"1/4+X,1/4+Z,1/4+Y\",\n        \"3/4-X,3/4+Z,1/4-Y\",\n        \"1/4-X,3/4-Z,3/4+Y\",\n        \"3/4+X,1/4-Z,3/4-Y\",\n        \"1/4+Z,1/4+Y,1/4+X\",\n        \"3/4+Z,1/4-Y,3/4-X\",\n        \"3/4-Z,3/4+Y,1/4-X\",\n        \"1/4-Z,3/4-Y,3/4+X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,Z\",\n        \"1/2-X,Y,-Z\",\n        \"X,-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"Z,-X,1/2-Y\",\n        \"-Z,1/2-X,Y\",\n        \"1/2-Z,X,-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,Z,-X\",\n        \"Y,-Z,1/2-X\",\n        \"-Y,1/2-Z,X\",\n        \"3/4+Y,3/4+X,3/4+Z\",\n        \"3/4-Y,1/4-X,1/4+Z\",\n        \"1/4+Y,3/4-X,1/4-Z\",\n        \"1/4-Y,1/4+X,3/4-Z\",\n        \"3/4+X,3/4+Z,3/4+Y\",\n        \"1/4-X,1/4+Z,3/4-Y\",\n        \"3/4-X,1/4-Z,1/4+Y\",\n        \"1/4+X,3/4-Z,1/4-Y\",\n        \"3/4+Z,3/4+Y,3/4+X\",\n        \"1/4+Z,3/4-Y,1/4-X\",\n        \"1/4-Z,1/4+Y,3/4-X\",\n        \"3/4-Z,1/4-Y,1/4+X\"\n    ],\n    \"P 4/m -3 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y,-X,Z\",\n        \"-Y,X,Z\",\n        \"X,Z,-Y\",\n        \"-X,Z,Y\",\n        \"-X,-Z,-Y\",\n        \"X,-Z,Y\",\n        \"Z,Y,-X\",\n        \"Z,-Y,X\",\n        \"-Z,Y,X\",\n        \"-Z,-Y,-X\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Z,-X,-Y\",\n        \"-Z,X,Y\",\n        \"Z,X,-Y\",\n        \"Z,-X,Y\",\n        \"-Y,-Z,-X\",\n        \"Y,-Z,X\",\n        \"-Y,Z,X\",\n        \"Y,Z,-X\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"-X,-Z,Y\",\n        \"X,-Z,-Y\",\n        \"X,Z,Y\",\n        \"-X,Z,-Y\",\n        \"-Z,-Y,X\",\n        \"-Z,Y,-X\",\n        \"Z,-Y,-X\",\n        \"Z,Y,X\"\n    ],\n    \"P 4/n -3 2/n\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y,-X,Z\",\n        \"-Y,X,Z\",\n        \"X,Z,-Y\",\n        \"-X,Z,Y\",\n        \"-X,-Z,-Y\",\n        \"X,-Z,Y\",\n        \"Z,Y,-X\",\n        \"Z,-Y,X\",\n        \"-Z,Y,X\",\n        \"-Z,-Y,-X\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2+X,1/2-Y\",\n        \"1/2+Z,1/2-X,1/2+Y\",\n        \"1/2-Y,1/2-Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2+X\",\n        \"1/2+Y,1/2+Z,1/2-X\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-X,1/2-Z,1/2+Y\",\n        \"1/2+X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2+Z,1/2-Y\",\n        \"1/2-Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2-X\",\n        \"1/2+Z,1/2+Y,1/2+X\"\n    ],\n    \"P 42/m -3 2/n\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2-Z,1/2+Y\",\n        \"1/2+Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2+X\",\n        \"1/2-Z,1/2-Y,1/2-X\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Z,-X,-Y\",\n        \"-Z,X,Y\",\n        \"Z,X,-Y\",\n        \"Z,-X,Y\",\n        \"-Y,-Z,-X\",\n        \"Y,-Z,X\",\n        \"-Y,Z,X\",\n        \"Y,Z,-X\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-X,1/2-Z,1/2+Y\",\n        \"1/2+X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2+Z,1/2-Y\",\n        \"1/2-Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2-X\",\n        \"1/2+Z,1/2+Y,1/2+X\"\n    ],\n    \"P 42/n -3 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2-Z,1/2+Y\",\n        \"1/2+Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2+X\",\n        \"1/2-Z,1/2-Y,1/2-X\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2+X,1/2-Y\",\n        \"1/2+Z,1/2-X,1/2+Y\",\n        \"1/2-Y,1/2-Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2+X\",\n        \"1/2+Y,1/2+Z,1/2-X\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"-X,-Z,Y\",\n        \"X,-Z,-Y\",\n        \"X,Z,Y\",\n        \"-X,Z,-Y\",\n        \"-Z,-Y,X\",\n        \"-Z,Y,-X\",\n        \"Z,-Y,-X\",\n        \"Z,Y,X\"\n    ],\n    \"F 4/m -3 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y,-X,Z\",\n        \"-Y,X,Z\",\n        \"X,Z,-Y\",\n        \"-X,Z,Y\",\n        \"-X,-Z,-Y\",\n        \"X,-Z,Y\",\n        \"Z,Y,-X\",\n        \"Z,-Y,X\",\n        \"-Z,Y,X\",\n        \"-Z,-Y,-X\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Z,-X,-Y\",\n        \"-Z,X,Y\",\n        \"Z,X,-Y\",\n        \"Z,-X,Y\",\n        \"-Y,-Z,-X\",\n        \"Y,-Z,X\",\n        \"-Y,Z,X\",\n        \"Y,Z,-X\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"-X,-Z,Y\",\n        \"X,-Z,-Y\",\n        \"X,Z,Y\",\n        \"-X,Z,-Y\",\n        \"-Z,-Y,X\",\n        \"-Z,Y,-X\",\n        \"Z,-Y,-X\",\n        \"Z,Y,X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"Y,1/2+X,1/2-Z\",\n        \"-Y,1/2-X,1/2-Z\",\n        \"Y,1/2-X,1/2+Z\",\n        \"-Y,1/2+X,1/2+Z\",\n        \"X,1/2+Z,1/2-Y\",\n        \"-X,1/2+Z,1/2+Y\",\n        \"-X,1/2-Z,1/2-Y\",\n        \"X,1/2-Z,1/2+Y\",\n        \"Z,1/2+Y,1/2-X\",\n        \"Z,1/2-Y,1/2+X\",\n        \"-Z,1/2+Y,1/2+X\",\n        \"-Z,1/2-Y,1/2-X\",\n        \"-X,1/2-Y,1/2-Z\",\n        \"X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\",\n        \"-Z,1/2-X,1/2-Y\",\n        \"-Z,1/2+X,1/2+Y\",\n        \"Z,1/2+X,1/2-Y\",\n        \"Z,1/2-X,1/2+Y\",\n        \"-Y,1/2-Z,1/2-X\",\n        \"Y,1/2-Z,1/2+X\",\n        \"-Y,1/2+Z,1/2+X\",\n        \"Y,1/2+Z,1/2-X\",\n        \"-Y,1/2-X,1/2+Z\",\n        \"Y,1/2+X,1/2+Z\",\n        \"-Y,1/2+X,1/2-Z\",\n        \"Y,1/2-X,1/2-Z\",\n        \"-X,1/2-Z,1/2+Y\",\n        \"X,1/2-Z,1/2-Y\",\n        \"X,1/2+Z,1/2+Y\",\n        \"-X,1/2+Z,1/2-Y\",\n        \"-Z,1/2-Y,1/2+X\",\n        \"-Z,1/2+Y,1/2-X\",\n        \"Z,1/2-Y,1/2-X\",\n        \"Z,1/2+Y,1/2+X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/2+Y,X,1/2-Z\",\n        \"1/2-Y,-X,1/2-Z\",\n        \"1/2+Y,-X,1/2+Z\",\n        \"1/2-Y,X,1/2+Z\",\n        \"1/2+X,Z,1/2-Y\",\n        \"1/2-X,Z,1/2+Y\",\n        \"1/2-X,-Z,1/2-Y\",\n        \"1/2+X,-Z,1/2+Y\",\n        \"1/2+Z,Y,1/2-X\",\n        \"1/2+Z,-Y,1/2+X\",\n        \"1/2-Z,Y,1/2+X\",\n        \"1/2-Z,-Y,1/2-X\",\n        \"1/2-X,-Y,1/2-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\",\n        \"1/2-Z,-X,1/2-Y\",\n        \"1/2-Z,X,1/2+Y\",\n        \"1/2+Z,X,1/2-Y\",\n        \"1/2+Z,-X,1/2+Y\",\n        \"1/2-Y,-Z,1/2-X\",\n        \"1/2+Y,-Z,1/2+X\",\n        \"1/2-Y,Z,1/2+X\",\n        \"1/2+Y,Z,1/2-X\",\n        \"1/2-Y,-X,1/2+Z\",\n        \"1/2+Y,X,1/2+Z\",\n        \"1/2-Y,X,1/2-Z\",\n        \"1/2+Y,-X,1/2-Z\",\n        \"1/2-X,-Z,1/2+Y\",\n        \"1/2+X,-Z,1/2-Y\",\n        \"1/2+X,Z,1/2+Y\",\n        \"1/2-X,Z,1/2-Y\",\n        \"1/2-Z,-Y,1/2+X\",\n        \"1/2-Z,Y,1/2-X\",\n        \"1/2+Z,-Y,1/2-X\",\n        \"1/2+Z,Y,1/2+X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"1/2+Y,1/2+X,-Z\",\n        \"1/2-Y,1/2-X,-Z\",\n        \"1/2+Y,1/2-X,Z\",\n        \"1/2-Y,1/2+X,Z\",\n        \"1/2+X,1/2+Z,-Y\",\n        \"1/2-X,1/2+Z,Y\",\n        \"1/2-X,1/2-Z,-Y\",\n        \"1/2+X,1/2-Z,Y\",\n        \"1/2+Z,1/2+Y,-X\",\n        \"1/2+Z,1/2-Y,X\",\n        \"1/2-Z,1/2+Y,X\",\n        \"1/2-Z,1/2-Y,-X\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Z,1/2-X,-Y\",\n        \"1/2-Z,1/2+X,Y\",\n        \"1/2+Z,1/2+X,-Y\",\n        \"1/2+Z,1/2-X,Y\",\n        \"1/2-Y,1/2-Z,-X\",\n        \"1/2+Y,1/2-Z,X\",\n        \"1/2-Y,1/2+Z,X\",\n        \"1/2+Y,1/2+Z,-X\",\n        \"1/2-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,Z\",\n        \"1/2-Y,1/2+X,-Z\",\n        \"1/2+Y,1/2-X,-Z\",\n        \"1/2-X,1/2-Z,Y\",\n        \"1/2+X,1/2-Z,-Y\",\n        \"1/2+X,1/2+Z,Y\",\n        \"1/2-X,1/2+Z,-Y\",\n        \"1/2-Z,1/2-Y,X\",\n        \"1/2-Z,1/2+Y,-X\",\n        \"1/2+Z,1/2-Y,-X\",\n        \"1/2+Z,1/2+Y,X\"\n    ],\n    \"F 4/m -3 2/c\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2-Z,1/2+Y\",\n        \"1/2+Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2+X\",\n        \"1/2-Z,1/2-Y,1/2-X\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Z,-X,-Y\",\n        \"-Z,X,Y\",\n        \"Z,X,-Y\",\n        \"Z,-X,Y\",\n        \"-Y,-Z,-X\",\n        \"Y,-Z,X\",\n        \"-Y,Z,X\",\n        \"Y,Z,-X\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-X,1/2-Z,1/2+Y\",\n        \"1/2+X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2+Z,1/2-Y\",\n        \"1/2-Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2-X\",\n        \"1/2+Z,1/2+Y,1/2+X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"1/2+Y,X,-Z\",\n        \"1/2-Y,-X,-Z\",\n        \"1/2+Y,-X,Z\",\n        \"1/2-Y,X,Z\",\n        \"1/2+X,Z,-Y\",\n        \"1/2-X,Z,Y\",\n        \"1/2-X,-Z,-Y\",\n        \"1/2+X,-Z,Y\",\n        \"1/2+Z,Y,-X\",\n        \"1/2+Z,-Y,X\",\n        \"1/2-Z,Y,X\",\n        \"1/2-Z,-Y,-X\",\n        \"-X,1/2-Y,1/2-Z\",\n        \"X,1/2+Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2+Z\",\n        \"-Z,1/2-X,1/2-Y\",\n        \"-Z,1/2+X,1/2+Y\",\n        \"Z,1/2+X,1/2-Y\",\n        \"Z,1/2-X,1/2+Y\",\n        \"-Y,1/2-Z,1/2-X\",\n        \"Y,1/2-Z,1/2+X\",\n        \"-Y,1/2+Z,1/2+X\",\n        \"Y,1/2+Z,1/2-X\",\n        \"1/2-Y,-X,Z\",\n        \"1/2+Y,X,Z\",\n        \"1/2-Y,X,-Z\",\n        \"1/2+Y,-X,-Z\",\n        \"1/2-X,-Z,Y\",\n        \"1/2+X,-Z,-Y\",\n        \"1/2+X,Z,Y\",\n        \"1/2-X,Z,-Y\",\n        \"1/2-Z,-Y,X\",\n        \"1/2-Z,Y,-X\",\n        \"1/2+Z,-Y,-X\",\n        \"1/2+Z,Y,X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"Y,1/2+X,-Z\",\n        \"-Y,1/2-X,-Z\",\n        \"Y,1/2-X,Z\",\n        \"-Y,1/2+X,Z\",\n        \"X,1/2+Z,-Y\",\n        \"-X,1/2+Z,Y\",\n        \"-X,1/2-Z,-Y\",\n        \"X,1/2-Z,Y\",\n        \"Z,1/2+Y,-X\",\n        \"Z,1/2-Y,X\",\n        \"-Z,1/2+Y,X\",\n        \"-Z,1/2-Y,-X\",\n        \"1/2-X,-Y,1/2-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"1/2+X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2+Z\",\n        \"1/2-Z,-X,1/2-Y\",\n        \"1/2-Z,X,1/2+Y\",\n        \"1/2+Z,X,1/2-Y\",\n        \"1/2+Z,-X,1/2+Y\",\n        \"1/2-Y,-Z,1/2-X\",\n        \"1/2+Y,-Z,1/2+X\",\n        \"1/2-Y,Z,1/2+X\",\n        \"1/2+Y,Z,1/2-X\",\n        \"-Y,1/2-X,Z\",\n        \"Y,1/2+X,Z\",\n        \"-Y,1/2+X,-Z\",\n        \"Y,1/2-X,-Z\",\n        \"-X,1/2-Z,Y\",\n        \"X,1/2-Z,-Y\",\n        \"X,1/2+Z,Y\",\n        \"-X,1/2+Z,-Y\",\n        \"-Z,1/2-Y,X\",\n        \"-Z,1/2+Y,-X\",\n        \"Z,1/2-Y,-X\",\n        \"Z,1/2+Y,X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"Y,X,1/2-Z\",\n        \"-Y,-X,1/2-Z\",\n        \"Y,-X,1/2+Z\",\n        \"-Y,X,1/2+Z\",\n        \"X,Z,1/2-Y\",\n        \"-X,Z,1/2+Y\",\n        \"-X,-Z,1/2-Y\",\n        \"X,-Z,1/2+Y\",\n        \"Z,Y,1/2-X\",\n        \"Z,-Y,1/2+X\",\n        \"-Z,Y,1/2+X\",\n        \"-Z,-Y,1/2-X\",\n        \"1/2-X,1/2-Y,-Z\",\n        \"1/2+X,1/2+Y,-Z\",\n        \"1/2+X,1/2-Y,Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"1/2-Z,1/2-X,-Y\",\n        \"1/2-Z,1/2+X,Y\",\n        \"1/2+Z,1/2+X,-Y\",\n        \"1/2+Z,1/2-X,Y\",\n        \"1/2-Y,1/2-Z,-X\",\n        \"1/2+Y,1/2-Z,X\",\n        \"1/2-Y,1/2+Z,X\",\n        \"1/2+Y,1/2+Z,-X\",\n        \"-Y,-X,1/2+Z\",\n        \"Y,X,1/2+Z\",\n        \"-Y,X,1/2-Z\",\n        \"Y,-X,1/2-Z\",\n        \"-X,-Z,1/2+Y\",\n        \"X,-Z,1/2-Y\",\n        \"X,Z,1/2+Y\",\n        \"-X,Z,1/2-Y\",\n        \"-Z,-Y,1/2+X\",\n        \"-Z,Y,1/2-X\",\n        \"Z,-Y,1/2-X\",\n        \"Z,Y,1/2+X\"\n    ],\n    \"F 41/d -3 2/m\": [\n        \"X,Y,Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"Y,Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"3/4+Y,1/4+X,3/4-Z\",\n        \"1/4-Y,1/4-X,1/4-Z\",\n        \"1/4+Y,3/4-X,3/4+Z\",\n        \"3/4-Y,3/4+X,1/4+Z\",\n        \"3/4+X,1/4+Z,3/4-Y\",\n        \"3/4-X,3/4+Z,1/4+Y\",\n        \"1/4-X,1/4-Z,1/4-Y\",\n        \"1/4+X,3/4-Z,3/4+Y\",\n        \"3/4+Z,1/4+Y,3/4-X\",\n        \"1/4+Z,3/4-Y,3/4+X\",\n        \"3/4-Z,3/4+Y,1/4+X\",\n        \"1/4-Z,1/4-Y,1/4-X\",\n        \"1/4-X,1/4-Y,1/4-Z\",\n        \"1/4+X,3/4+Y,3/4-Z\",\n        \"3/4+X,3/4-Y,1/4+Z\",\n        \"3/4-X,1/4+Y,3/4+Z\",\n        \"1/4-Z,1/4-X,1/4-Y\",\n        \"3/4-Z,1/4+X,3/4+Y\",\n        \"1/4+Z,3/4+X,3/4-Y\",\n        \"3/4+Z,3/4-X,1/4+Y\",\n        \"1/4-Y,1/4-Z,1/4-X\",\n        \"3/4+Y,3/4-Z,1/4+X\",\n        \"3/4-Y,1/4+Z,3/4+X\",\n        \"1/4+Y,3/4+Z,3/4-X\",\n        \"1/2-Y,-X,1/2+Z\",\n        \"Y,X,Z\",\n        \"-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,-Z\",\n        \"1/2-X,-Z,1/2+Y\",\n        \"1/2+X,1/2-Z,-Y\",\n        \"X,Z,Y\",\n        \"-X,1/2+Z,1/2-Y\",\n        \"1/2-Z,-Y,1/2+X\",\n        \"-Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,-X\",\n        \"Z,Y,X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"-Z,-X,Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"-Y,-Z,X\",\n        \"3/4+Y,3/4+X,1/4-Z\",\n        \"1/4-Y,3/4-X,3/4-Z\",\n        \"1/4+Y,1/4-X,1/4+Z\",\n        \"3/4-Y,1/4+X,3/4+Z\",\n        \"3/4+X,3/4+Z,1/4-Y\",\n        \"3/4-X,1/4+Z,3/4+Y\",\n        \"1/4-X,3/4-Z,3/4-Y\",\n        \"1/4+X,1/4-Z,1/4+Y\",\n        \"3/4+Z,3/4+Y,1/4-X\",\n        \"1/4+Z,1/4-Y,1/4+X\",\n        \"3/4-Z,1/4+Y,3/4+X\",\n        \"1/4-Z,3/4-Y,3/4-X\",\n        \"1/4-X,3/4-Y,3/4-Z\",\n        \"1/4+X,1/4+Y,1/4-Z\",\n        \"3/4+X,1/4-Y,3/4+Z\",\n        \"3/4-X,3/4+Y,1/4+Z\",\n        \"1/4-Z,3/4-X,3/4-Y\",\n        \"3/4-Z,3/4+X,1/4+Y\",\n        \"1/4+Z,1/4+X,1/4-Y\",\n        \"3/4+Z,1/4-X,3/4+Y\",\n        \"1/4-Y,3/4-Z,3/4-X\",\n        \"3/4+Y,1/4-Z,3/4+X\",\n        \"3/4-Y,3/4+Z,1/4+X\",\n        \"1/4+Y,1/4+Z,1/4-X\",\n        \"1/2-Y,1/2-X,Z\",\n        \"Y,1/2+X,1/2+Z\",\n        \"-Y,X,-Z\",\n        \"1/2+Y,-X,1/2-Z\",\n        \"1/2-X,1/2-Z,Y\",\n        \"1/2+X,-Z,1/2-Y\",\n        \"X,1/2+Z,1/2+Y\",\n        \"-X,Z,-Y\",\n        \"1/2-Z,1/2-Y,X\",\n        \"-Z,Y,-X\",\n        \"1/2+Z,-Y,1/2-X\",\n        \"Z,1/2+Y,1/2+X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,-Y,-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"Z,-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"1/4+Y,1/4+X,1/4-Z\",\n        \"3/4-Y,1/4-X,3/4-Z\",\n        \"3/4+Y,3/4-X,1/4+Z\",\n        \"1/4-Y,3/4+X,3/4+Z\",\n        \"1/4+X,1/4+Z,1/4-Y\",\n        \"1/4-X,3/4+Z,3/4+Y\",\n        \"3/4-X,1/4-Z,3/4-Y\",\n        \"3/4+X,3/4-Z,1/4+Y\",\n        \"1/4+Z,1/4+Y,1/4-X\",\n        \"3/4+Z,3/4-Y,1/4+X\",\n        \"1/4-Z,3/4+Y,3/4+X\",\n        \"3/4-Z,1/4-Y,3/4-X\",\n        \"3/4-X,1/4-Y,3/4-Z\",\n        \"3/4+X,3/4+Y,1/4-Z\",\n        \"1/4+X,3/4-Y,3/4+Z\",\n        \"1/4-X,1/4+Y,1/4+Z\",\n        \"3/4-Z,1/4-X,3/4-Y\",\n        \"1/4-Z,1/4+X,1/4+Y\",\n        \"3/4+Z,3/4+X,1/4-Y\",\n        \"1/4+Z,3/4-X,3/4+Y\",\n        \"3/4-Y,1/4-Z,3/4-X\",\n        \"1/4+Y,3/4-Z,3/4+X\",\n        \"1/4-Y,1/4+Z,1/4+X\",\n        \"3/4+Y,3/4+Z,1/4-X\",\n        \"-Y,-X,Z\",\n        \"1/2+Y,X,1/2+Z\",\n        \"1/2-Y,1/2+X,-Z\",\n        \"Y,1/2-X,1/2-Z\",\n        \"-X,-Z,Y\",\n        \"X,1/2-Z,1/2-Y\",\n        \"1/2+X,Z,1/2+Y\",\n        \"1/2-X,1/2+Z,-Y\",\n        \"-Z,-Y,X\",\n        \"1/2-Z,1/2+Y,-X\",\n        \"Z,1/2-Y,1/2-X\",\n        \"1/2+Z,Y,1/2+X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,Y,-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/4+Y,3/4+X,3/4-Z\",\n        \"3/4-Y,3/4-X,1/4-Z\",\n        \"3/4+Y,1/4-X,3/4+Z\",\n        \"1/4-Y,1/4+X,1/4+Z\",\n        \"1/4+X,3/4+Z,3/4-Y\",\n        \"1/4-X,1/4+Z,1/4+Y\",\n        \"3/4-X,3/4-Z,1/4-Y\",\n        \"3/4+X,1/4-Z,3/4+Y\",\n        \"1/4+Z,3/4+Y,3/4-X\",\n        \"3/4+Z,1/4-Y,3/4+X\",\n        \"1/4-Z,1/4+Y,1/4+X\",\n        \"3/4-Z,3/4-Y,1/4-X\",\n        \"3/4-X,3/4-Y,1/4-Z\",\n        \"3/4+X,1/4+Y,3/4-Z\",\n        \"1/4+X,1/4-Y,1/4+Z\",\n        \"1/4-X,3/4+Y,3/4+Z\",\n        \"3/4-Z,3/4-X,1/4-Y\",\n        \"1/4-Z,3/4+X,3/4+Y\",\n        \"3/4+Z,1/4+X,3/4-Y\",\n        \"1/4+Z,1/4-X,1/4+Y\",\n        \"3/4-Y,3/4-Z,1/4-X\",\n        \"1/4+Y,1/4-Z,1/4+X\",\n        \"1/4-Y,3/4+Z,3/4+X\",\n        \"3/4+Y,1/4+Z,3/4-X\",\n        \"-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,Z\",\n        \"1/2-Y,X,1/2-Z\",\n        \"Y,-X,-Z\",\n        \"-X,1/2-Z,1/2+Y\",\n        \"X,-Z,-Y\",\n        \"1/2+X,1/2+Z,Y\",\n        \"1/2-X,Z,1/2-Y\",\n        \"-Z,1/2-Y,1/2+X\",\n        \"1/2-Z,Y,1/2-X\",\n        \"Z,-Y,-X\",\n        \"1/2+Z,1/2+Y,X\"\n    ],\n    \"F 41/d -3 2/c\": [\n        \"X,Y,Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,-X,1/2-Y\",\n        \"-Z,1/2-X,1/2+Y\",\n        \"1/2-Z,1/2+X,-Y\",\n        \"Y,Z,X\",\n        \"1/2-Y,1/2+Z,-X\",\n        \"1/2+Y,-Z,1/2-X\",\n        \"-Y,1/2-Z,1/2+X\",\n        \"3/4+Y,1/4+X,3/4-Z\",\n        \"1/4-Y,1/4-X,1/4-Z\",\n        \"1/4+Y,3/4-X,3/4+Z\",\n        \"3/4-Y,3/4+X,1/4+Z\",\n        \"3/4+X,1/4+Z,3/4-Y\",\n        \"3/4-X,3/4+Z,1/4+Y\",\n        \"1/4-X,1/4-Z,1/4-Y\",\n        \"1/4+X,3/4-Z,3/4+Y\",\n        \"3/4+Z,1/4+Y,3/4-X\",\n        \"1/4+Z,3/4-Y,3/4+X\",\n        \"3/4-Z,3/4+Y,1/4+X\",\n        \"1/4-Z,1/4-Y,1/4-X\",\n        \"3/4-X,3/4-Y,3/4-Z\",\n        \"3/4+X,1/4+Y,1/4-Z\",\n        \"1/4+X,1/4-Y,3/4+Z\",\n        \"1/4-X,3/4+Y,1/4+Z\",\n        \"3/4-Z,3/4-X,3/4-Y\",\n        \"1/4-Z,3/4+X,1/4+Y\",\n        \"3/4+Z,1/4+X,1/4-Y\",\n        \"1/4+Z,1/4-X,3/4+Y\",\n        \"3/4-Y,3/4-Z,3/4-X\",\n        \"1/4+Y,1/4-Z,3/4+X\",\n        \"1/4-Y,3/4+Z,1/4+X\",\n        \"3/4+Y,1/4+Z,1/4-X\",\n        \"-Y,1/2-X,Z\",\n        \"1/2+Y,1/2+X,1/2+Z\",\n        \"1/2-Y,X,-Z\",\n        \"Y,-X,1/2-Z\",\n        \"-X,1/2-Z,Y\",\n        \"X,-Z,1/2-Y\",\n        \"1/2+X,1/2+Z,1/2+Y\",\n        \"1/2-X,Z,-Y\",\n        \"-Z,1/2-Y,X\",\n        \"1/2-Z,Y,-X\",\n        \"Z,-Y,1/2-X\",\n        \"1/2+Z,1/2+Y,1/2+X\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,-Y,Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"-Z,-X,Y\",\n        \"1/2-Z,X,1/2-Y\",\n        \"Y,1/2+Z,1/2+X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"-Y,-Z,X\",\n        \"3/4+Y,3/4+X,1/4-Z\",\n        \"1/4-Y,3/4-X,3/4-Z\",\n        \"1/4+Y,1/4-X,1/4+Z\",\n        \"3/4-Y,1/4+X,3/4+Z\",\n        \"3/4+X,3/4+Z,1/4-Y\",\n        \"3/4-X,1/4+Z,3/4+Y\",\n        \"1/4-X,3/4-Z,3/4-Y\",\n        \"1/4+X,1/4-Z,1/4+Y\",\n        \"3/4+Z,3/4+Y,1/4-X\",\n        \"1/4+Z,1/4-Y,1/4+X\",\n        \"3/4-Z,1/4+Y,3/4+X\",\n        \"1/4-Z,3/4-Y,3/4-X\",\n        \"3/4-X,1/4-Y,1/4-Z\",\n        \"3/4+X,3/4+Y,3/4-Z\",\n        \"1/4+X,3/4-Y,1/4+Z\",\n        \"1/4-X,1/4+Y,3/4+Z\",\n        \"3/4-Z,1/4-X,1/4-Y\",\n        \"1/4-Z,1/4+X,3/4+Y\",\n        \"3/4+Z,3/4+X,3/4-Y\",\n        \"1/4+Z,3/4-X,1/4+Y\",\n        \"3/4-Y,1/4-Z,1/4-X\",\n        \"1/4+Y,3/4-Z,1/4+X\",\n        \"1/4-Y,1/4+Z,3/4+X\",\n        \"3/4+Y,3/4+Z,3/4-X\",\n        \"-Y,-X,1/2+Z\",\n        \"1/2+Y,X,Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"Y,1/2-X,-Z\",\n        \"-X,-Z,1/2+Y\",\n        \"X,1/2-Z,-Y\",\n        \"1/2+X,Z,Y\",\n        \"1/2-X,1/2+Z,1/2-Y\",\n        \"-Z,-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2-X\",\n        \"Z,1/2-Y,-X\",\n        \"1/2+Z,Y,X\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"X,-Y,-Z\",\n        \"1/2+Z,X,1/2+Y\",\n        \"Z,-X,-Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"1/2+Y,Z,1/2+X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"Y,-Z,-X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"1/4+Y,1/4+X,1/4-Z\",\n        \"3/4-Y,1/4-X,3/4-Z\",\n        \"3/4+Y,3/4-X,1/4+Z\",\n        \"1/4-Y,3/4+X,3/4+Z\",\n        \"1/4+X,1/4+Z,1/4-Y\",\n        \"1/4-X,3/4+Z,3/4+Y\",\n        \"3/4-X,1/4-Z,3/4-Y\",\n        \"3/4+X,3/4-Z,1/4+Y\",\n        \"1/4+Z,1/4+Y,1/4-X\",\n        \"3/4+Z,3/4-Y,1/4+X\",\n        \"1/4-Z,3/4+Y,3/4+X\",\n        \"3/4-Z,1/4-Y,3/4-X\",\n        \"1/4-X,3/4-Y,1/4-Z\",\n        \"1/4+X,1/4+Y,3/4-Z\",\n        \"3/4+X,1/4-Y,1/4+Z\",\n        \"3/4-X,3/4+Y,3/4+Z\",\n        \"1/4-Z,3/4-X,1/4-Y\",\n        \"3/4-Z,3/4+X,3/4+Y\",\n        \"1/4+Z,1/4+X,3/4-Y\",\n        \"3/4+Z,1/4-X,1/4+Y\",\n        \"1/4-Y,3/4-Z,1/4-X\",\n        \"3/4+Y,1/4-Z,1/4+X\",\n        \"3/4-Y,3/4+Z,3/4+X\",\n        \"1/4+Y,1/4+Z,3/4-X\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"Y,1/2+X,Z\",\n        \"-Y,X,1/2-Z\",\n        \"1/2+Y,-X,-Z\",\n        \"1/2-X,1/2-Z,1/2+Y\",\n        \"1/2+X,-Z,-Y\",\n        \"X,1/2+Z,Y\",\n        \"-X,Z,1/2-Y\",\n        \"1/2-Z,1/2-Y,1/2+X\",\n        \"-Z,Y,1/2-X\",\n        \"1/2+Z,-Y,-X\",\n        \"Z,1/2+Y,X\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,Y,-Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,X,-Y\",\n        \"1/2+Y,1/2+Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"1/4+Y,3/4+X,3/4-Z\",\n        \"3/4-Y,3/4-X,1/4-Z\",\n        \"3/4+Y,1/4-X,3/4+Z\",\n        \"1/4-Y,1/4+X,1/4+Z\",\n        \"1/4+X,3/4+Z,3/4-Y\",\n        \"1/4-X,1/4+Z,1/4+Y\",\n        \"3/4-X,3/4-Z,1/4-Y\",\n        \"3/4+X,1/4-Z,3/4+Y\",\n        \"1/4+Z,3/4+Y,3/4-X\",\n        \"3/4+Z,1/4-Y,3/4+X\",\n        \"1/4-Z,1/4+Y,1/4+X\",\n        \"3/4-Z,3/4-Y,1/4-X\",\n        \"1/4-X,1/4-Y,3/4-Z\",\n        \"1/4+X,3/4+Y,1/4-Z\",\n        \"3/4+X,3/4-Y,3/4+Z\",\n        \"3/4-X,1/4+Y,1/4+Z\",\n        \"1/4-Z,1/4-X,3/4-Y\",\n        \"3/4-Z,1/4+X,1/4+Y\",\n        \"1/4+Z,3/4+X,1/4-Y\",\n        \"3/4+Z,3/4-X,3/4+Y\",\n        \"1/4-Y,1/4-Z,3/4-X\",\n        \"3/4+Y,3/4-Z,3/4+X\",\n        \"3/4-Y,1/4+Z,1/4+X\",\n        \"1/4+Y,3/4+Z,1/4-X\",\n        \"1/2-Y,-X,Z\",\n        \"Y,X,1/2+Z\",\n        \"-Y,1/2+X,-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-X,-Z,Y\",\n        \"1/2+X,1/2-Z,1/2-Y\",\n        \"X,Z,1/2+Y\",\n        \"-X,1/2+Z,-Y\",\n        \"1/2-Z,-Y,X\",\n        \"-Z,1/2+Y,-X\",\n        \"1/2+Z,1/2-Y,1/2-X\",\n        \"Z,Y,1/2+X\"\n    ],\n    \"I 4/m -3 2/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,-Y,-Z\",\n        \"Z,X,Y\",\n        \"Z,-X,-Y\",\n        \"-Z,-X,Y\",\n        \"-Z,X,-Y\",\n        \"Y,Z,X\",\n        \"-Y,Z,-X\",\n        \"Y,-Z,-X\",\n        \"-Y,-Z,X\",\n        \"Y,X,-Z\",\n        \"-Y,-X,-Z\",\n        \"Y,-X,Z\",\n        \"-Y,X,Z\",\n        \"X,Z,-Y\",\n        \"-X,Z,Y\",\n        \"-X,-Z,-Y\",\n        \"X,-Z,Y\",\n        \"Z,Y,-X\",\n        \"Z,-Y,X\",\n        \"-Z,Y,X\",\n        \"-Z,-Y,-X\",\n        \"-X,-Y,-Z\",\n        \"X,Y,-Z\",\n        \"X,-Y,Z\",\n        \"-X,Y,Z\",\n        \"-Z,-X,-Y\",\n        \"-Z,X,Y\",\n        \"Z,X,-Y\",\n        \"Z,-X,Y\",\n        \"-Y,-Z,-X\",\n        \"Y,-Z,X\",\n        \"-Y,Z,X\",\n        \"Y,Z,-X\",\n        \"-Y,-X,Z\",\n        \"Y,X,Z\",\n        \"-Y,X,-Z\",\n        \"Y,-X,-Z\",\n        \"-X,-Z,Y\",\n        \"X,-Z,-Y\",\n        \"X,Z,Y\",\n        \"-X,Z,-Y\",\n        \"-Z,-Y,X\",\n        \"-Z,Y,-X\",\n        \"Z,-Y,-X\",\n        \"Z,Y,X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2-X,1/2+Y\",\n        \"1/2-Z,1/2+X,1/2-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2-X\",\n        \"1/2-Y,1/2-Z,1/2+X\",\n        \"1/2+Y,1/2+X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2+Z\",\n        \"1/2+X,1/2+Z,1/2-Y\",\n        \"1/2-X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2-Z,1/2+Y\",\n        \"1/2+Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2+X\",\n        \"1/2-Z,1/2-Y,1/2-X\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,1/2+Z\",\n        \"1/2-Z,1/2-X,1/2-Y\",\n        \"1/2-Z,1/2+X,1/2+Y\",\n        \"1/2+Z,1/2+X,1/2-Y\",\n        \"1/2+Z,1/2-X,1/2+Y\",\n        \"1/2-Y,1/2-Z,1/2-X\",\n        \"1/2+Y,1/2-Z,1/2+X\",\n        \"1/2-Y,1/2+Z,1/2+X\",\n        \"1/2+Y,1/2+Z,1/2-X\",\n        \"1/2-Y,1/2-X,1/2+Z\",\n        \"1/2+Y,1/2+X,1/2+Z\",\n        \"1/2-Y,1/2+X,1/2-Z\",\n        \"1/2+Y,1/2-X,1/2-Z\",\n        \"1/2-X,1/2-Z,1/2+Y\",\n        \"1/2+X,1/2-Z,1/2-Y\",\n        \"1/2+X,1/2+Z,1/2+Y\",\n        \"1/2-X,1/2+Z,1/2-Y\",\n        \"1/2-Z,1/2-Y,1/2+X\",\n        \"1/2-Z,1/2+Y,1/2-X\",\n        \"1/2+Z,1/2-Y,1/2-X\",\n        \"1/2+Z,1/2+Y,1/2+X\"\n    ],\n    \"I 41/a -3 2/d\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"Z,X,Y\",\n        \"1/2+Z,1/2-X,-Y\",\n        \"1/2-Z,-X,1/2+Y\",\n        \"-Z,1/2+X,1/2-Y\",\n        \"Y,Z,X\",\n        \"-Y,1/2+Z,1/2-X\",\n        \"1/2+Y,1/2-Z,-X\",\n        \"1/2-Y,-Z,1/2+X\",\n        \"3/4+Y,1/4+X,1/4-Z\",\n        \"3/4-Y,3/4-X,3/4-Z\",\n        \"1/4+Y,1/4-X,3/4+Z\",\n        \"1/4-Y,3/4+X,1/4+Z\",\n        \"3/4+X,1/4+Z,1/4-Y\",\n        \"1/4-X,3/4+Z,1/4+Y\",\n        \"3/4-X,3/4-Z,3/4-Y\",\n        \"1/4+X,1/4-Z,3/4+Y\",\n        \"3/4+Z,1/4+Y,1/4-X\",\n        \"1/4+Z,1/4-Y,3/4+X\",\n        \"1/4-Z,3/4+Y,1/4+X\",\n        \"3/4-Z,3/4-Y,3/4-X\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"X,1/2-Y,1/2+Z\",\n        \"1/2-X,1/2+Y,Z\",\n        \"-Z,-X,-Y\",\n        \"1/2-Z,1/2+X,Y\",\n        \"1/2+Z,X,1/2-Y\",\n        \"Z,1/2-X,1/2+Y\",\n        \"-Y,-Z,-X\",\n        \"Y,1/2-Z,1/2+X\",\n        \"1/2-Y,1/2+Z,X\",\n        \"1/2+Y,Z,1/2-X\",\n        \"1/4-Y,3/4-X,3/4+Z\",\n        \"1/4+Y,1/4+X,1/4+Z\",\n        \"3/4-Y,3/4+X,1/4-Z\",\n        \"3/4+Y,1/4-X,3/4-Z\",\n        \"1/4-X,3/4-Z,3/4+Y\",\n        \"3/4+X,1/4-Z,3/4-Y\",\n        \"1/4+X,1/4+Z,1/4+Y\",\n        \"3/4-X,3/4+Z,1/4-Y\",\n        \"1/4-Z,3/4-Y,3/4+X\",\n        \"3/4-Z,3/4+Y,1/4-X\",\n        \"3/4+Z,1/4-Y,3/4-X\",\n        \"1/4+Z,1/4+Y,1/4+X\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,1/2-Y,Z\",\n        \"1/2-X,Y,-Z\",\n        \"X,-Y,1/2-Z\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"Z,-X,1/2-Y\",\n        \"-Z,1/2-X,Y\",\n        \"1/2-Z,X,-Y\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"1/2-Y,Z,-X\",\n        \"Y,-Z,1/2-X\",\n        \"-Y,1/2-Z,X\",\n        \"1/4+Y,3/4+X,3/4-Z\",\n        \"1/4-Y,1/4-X,1/4-Z\",\n        \"3/4+Y,3/4-X,1/4+Z\",\n        \"3/4-Y,1/4+X,3/4+Z\",\n        \"1/4+X,3/4+Z,3/4-Y\",\n        \"3/4-X,1/4+Z,3/4+Y\",\n        \"1/4-X,1/4-Z,1/4-Y\",\n        \"3/4+X,3/4-Z,1/4+Y\",\n        \"1/4+Z,3/4+Y,3/4-X\",\n        \"3/4+Z,3/4-Y,1/4+X\",\n        \"3/4-Z,1/4+Y,3/4+X\",\n        \"1/4-Z,1/4-Y,1/4-X\",\n        \"1/2-X,1/2-Y,1/2-Z\",\n        \"X,1/2+Y,-Z\",\n        \"1/2+X,-Y,Z\",\n        \"-X,Y,1/2+Z\",\n        \"1/2-Z,1/2-X,1/2-Y\",\n        \"-Z,X,1/2+Y\",\n        \"Z,1/2+X,-Y\",\n        \"1/2+Z,-X,Y\",\n        \"1/2-Y,1/2-Z,1/2-X\",\n        \"1/2+Y,-Z,X\",\n        \"-Y,Z,1/2+X\",\n        \"Y,1/2+Z,-X\",\n        \"3/4-Y,1/4-X,1/4+Z\",\n        \"3/4+Y,3/4+X,3/4+Z\",\n        \"1/4-Y,1/4+X,3/4-Z\",\n        \"1/4+Y,3/4-X,1/4-Z\",\n        \"3/4-X,1/4-Z,1/4+Y\",\n        \"1/4+X,3/4-Z,1/4-Y\",\n        \"3/4+X,3/4+Z,3/4+Y\",\n        \"1/4-X,1/4+Z,3/4-Y\",\n        \"3/4-Z,1/4-Y,1/4+X\",\n        \"1/4-Z,1/4+Y,3/4-X\",\n        \"1/4+Z,3/4-Y,1/4-X\",\n        \"3/4+Z,3/4+Y,3/4+X\"\n    ],\n    \"P 1 1 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\"\n    ],\n    \"P 1 1 21\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\"\n    ],\n    \"B 1 1 2\": [\n        \"X,Y,Z\",\n        \"-X,-Y,Z\",\n        \"1/2+X,+Y,1/2+Z\",\n        \"1/2-X,-Y,1/2+Z\"\n    ],\n    \"A 1 2 1\": [\n        \"X,Y,Z\",\n        \"-X,Y,-Z\",\n        \"X,1/2+Y,1/2+Z\",\n        \"-X,1/2+Y,1/2-Z\"\n    ],\n    \"C 1 21 1\": [\n        \"X,Y,Z\",\n        \"-X,1/2+Y,-Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"1/2-X,Y,-Z\"\n    ],\n    \"I 1 2 1\": [\n        \"X,Y,Z\",\n        \"-X,Y,-Z\",\n        \"X+1/2,Y+1/2,Z+1/2\",\n        \"-X+1/2,Y+1/2,-Z+1/2\"\n    ],\n    \"I 1 21 1\": [\n        \"X,Y,Z\",\n        \"-X,1/2+Y,-Z\",\n        \"X+1/2,Y+1/2,Z+1/2\",\n        \"-X+1/2,Y,1/2-Z\"\n    ],\n    \"P 1 1 m\": [\n        \"X,Y,Z\",\n        \"X,Y,-Z\"\n    ],\n    \"P 1 1 b\": [\n        \"X,Y,Z\",\n        \"X,1/2+Y,-Z\"\n    ],\n    \"B 1 1 m\": [\n        \"X,Y,Z\",\n        \"X,Y,-Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2+X,Y,1/2-Z\"\n    ],\n    \"B 1 1 b\": [\n        \"X,Y,Z\",\n        \"X,1/2+Y,-Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2+X,1/2+Y,1/2-Z\"\n    ],\n    \"P 1 1 2/m\": [\n        \"X,Y,Z\",\n        \"X,Y,-Z\",\n        \"-X,-Y,Z\",\n        \"-X,-Y,-Z\"\n    ],\n    \"P 1 1 21/m\": [\n        \"X,Y,Z\",\n        \"-X,-Y,1/2+Z\",\n        \"-X,-Y,-Z\",\n        \"X,Y,1/2-Z\"\n    ],\n    \"B 1 1 2/m\": [\n        \"X,Y,Z\",\n        \"X,Y,-Z\",\n        \"-X,-Y,Z\",\n        \"-X,-Y,-Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2+X,Y,1/2-Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2-X,-Y,1/2-Z\"\n    ],\n    \"P 1 1 2/b\": [\n        \"X,Y,Z\",\n        \"-X,1/2-Y,Z\",\n        \"-X,-Y,-Z\",\n        \"X,1/2+Y,-Z\"\n    ],\n    \"P 1 1 21/b\": [\n        \"X,Y,Z\",\n        \"-X,-Y,-Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"X,1/2+Y,1/2-Z\"\n    ],\n    \"B 1 1 2/b\": [\n        \"X,Y,Z\",\n        \"-X,1/2-Y,Z\",\n        \"-X,-Y,-Z\",\n        \"X,1/2+Y,-Z\",\n        \"1/2+X,Y,1/2+Z\",\n        \"1/2-X,1/2-Y,1/2+Z\",\n        \"1/2-X,-Y,1/2-Z\",\n        \"1/2+X,1/2+Y,1/2-Z\"\n    ],\n    \"P 21 2 2\": [\n        \"X,Y,Z\",\n        \"-X,Y,-Z\",\n        \"1/2+X,-Y,-Z\",\n        \"1/2-X,-Y,Z\"\n    ],\n    \"P 2 21 2\": [\n        \"X,Y,Z\",\n        \"X,1/2-Y,-Z\",\n        \"-X,1/2+Y,-Z\",\n        \"-X,-Y,Z\"\n    ],\n    \"P 21 21 2 (a)\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"X+1/2,-Y,-Z\",\n        \"-X,Y+1/2,-Z\"\n    ],\n    \"P 21 2 21\": [\n        \"X,Y,Z\",\n        \"-X,Y,-Z\",\n        \"1/2+X,-Y,1/2-Z\",\n        \"1/2-X,-Y,1/2+Z\"\n    ],\n    \"P 2 21 21\": [\n        \"X,Y,Z\",\n        \"X,-Y,-Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"-X,1/2-Y,1/2+Z\"\n    ],\n    \"C 2 2 21a)\": [\n        \"X,Y,Z\",\n        \"1/2-X,-Y,1/2+Z\",\n        \"1/2+X,1/2-Y,-Z\",\n        \"-X,1/2+Y,1/2-Z\",\n        \"1/2+X,1/2+Y,Z\",\n        \"-X,1/2-Y,1/2+Z\",\n        \"X,-Y,-Z\",\n        \"1/2-X,Y,1/2-Z\"\n    ],\n    \"C 2 2 2a\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"X+1/2,-Y,-Z\",\n        \"-X,Y+1/2,-Z\",\n        \"1/2+ X,1/2+Y,Z\",\n        \"-X,-Y,Z\",\n        \"X,1/2-Y,-Z\",\n        \"1/2-X,Y,-Z\"\n    ],\n    \"F 2 2 2a\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"X+1/2,-Y,-Z\",\n        \"-X,Y+1/2,-Z\",\n        \"X,Y+1/2,Z+1/2\",\n        \"1/2-X,-Y,Z+1/2\",\n        \"X+1/2,-Y+1/2,-Z+1/2\",\n        \"-X,Y,-Z+1/2\",\n        \"X+1/2,Y,Z+1/2\",\n        \"-X,1/2-Y,Z+1/2\",\n        \"X,-Y,-Z+1/2\",\n        \"-X+1/2,Y+1/2,-Z+1/2\",\n        \"X+1/2,Y+1/2,Z\",\n        \"-X,-Y,Z\",\n        \"X,-Y+1/2,-Z\",\n        \"-X+1/2,Y,-Z\"\n    ],\n    \"I 2 2 2a\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"X+1/2,-Y,-Z\",\n        \"-X,Y+1/2,-Z\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,1/2+Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"X,1/2-Y,1/2-Z\"\n    ],\n    \"P 21/m 21/m 2/n a\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"-X,1/2+Y,-Z\",\n        \"1/2+X,-Y,-Z\",\n        \"-X,-Y,-Z\",\n        \"X+1/2,Y+1/2,-Z\",\n        \"X,1/2-Y,Z\",\n        \"1/2-X,Y,Z\"\n    ],\n    \"P 42 21 2a\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"-Y,X+1/2,1/2+Z\",\n        \"Y+1/2,-X,1/2+Z\",\n        \"-X,Y+1/2,-Z\",\n        \"X+1/2,-Y,-Z\",\n        \"Y,X,1/2-Z\",\n        \"1/2-Y,1/2-X,1/2-Z\"\n    ],\n    \"I 2 3a\": [\n        \"X,Y,Z\",\n        \"1/2-X,1/2-Y,Z\",\n        \"X+1/2,-Y,-Z\",\n        \"-X,Y+1/2,-Z\",\n        \"Y,Z,X\",\n        \"1/2-Y,1/2-Z,X\",\n        \"Y+1/2,-Z,-X\",\n        \"-Y,Z+1/2,-X\",\n        \"Z,X,Y\",\n        \"1/2-Z,1/2-X,Y\",\n        \"Z+1/2,-X,-Y\",\n        \"-Z,X+1/2,-Y\",\n        \"1/2+X,1/2+Y,1/2+Z\",\n        \"-X,-Y,1/2+Z\",\n        \"X,1/2-Y,1/2-Z\",\n        \"1/2-X,Y,1/2-Z\",\n        \"1/2+Y,1/2+Z,1/2+X\",\n        \"-Y,-Z,1/2+X\",\n        \"Y,1/2-Z,1/2-X\",\n        \"1/2-Y,Z,1/2-X\",\n        \"1/2+Z,1/2+X,1/2+Y\",\n        \"-Z,-X,1/2+Y\",\n        \"Z,1/2-X,1/2-Y\",\n        \"1/2-Z,X,1/2-Y\"\n    ]\n};\n\n// File:js/ngl/alignment.js\n\n/**\n * @file Alignment\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n//////////////\n// Alignment\n\nNGL.SubstitutionMatrices = function(){\n\n    var blosum62x = [\n        [4,0,-2,-1,-2,0,-2,-1,-1,-1,-1,-2,-1,-1,-1,1,0,0,-3,-2],        // A\n        [0,9,-3,-4,-2,-3,-3,-1,-3,-1,-1,-3,-3,-3,-3,-1,-1,-1,-2,-2],    // C\n        [-2,-3,6,2,-3,-1,-1,-3,-1,-4,-3,1,-1,0,-2,0,-1,-3,-4,-3],       // D\n        [-1,-4,2,5,-3,-2,0,-3,1,-3,-2,0,-1,2,0,0,-1,-2,-3,-2],          // E\n        [-2,-2,-3,-3,6,-3,-1,0,-3,0,0,-3,-4,-3,-3,-2,-2,-1,1,3],        // F\n        [0,-3,-1,-2,-3,6,-2,-4,-2,-4,-3,0,-2,-2,-2,0,-2,-3,-2,-3],      // G\n        [-2,-3,-1,0,-1,-2,8,-3,-1,-3,-2,1,-2,0,0,-1,-2,-3,-2,2],        // H\n        [-1,-1,-3,-3,0,-4,-3,4,-3,2,1,-3,-3,-3,-3,-2,-1,3,-3,-1],       // I\n        [-1,-3,-1,1,-3,-2,-1,-3,5,-2,-1,0,-1,1,2,0,-1,-2,-3,-2],        // K\n        [-1,-1,-4,-3,0,-4,-3,2,-2,4,2,-3,-3,-2,-2,-2,-1,1,-2,-1],       // L\n        [-1,-1,-3,-2,0,-3,-2,1,-1,2,5,-2,-2,0,-1,-1,-1,1,-1,-1],        // M\n        [-2,-3,1,0,-3,0,1,-3,0,-3,-2,6,-2,0,0,1,0,-3,-4,-2],            // N\n        [-1,-3,-1,-1,-4,-2,-2,-3,-1,-3,-2,-2,7,-1,-2,-1,-1,-2,-4,-3],   // P\n        [-1,-3,0,2,-3,-2,0,-3,1,-2,0,0,-1,5,1,0,-1,-2,-2,-1],           // Q\n        [-1,-3,-2,0,-3,-2,0,-3,2,-2,-1,0,-2,1,5,-1,-1,-3,-3,-2],        // R\n        [1,-1,0,0,-2,0,-1,-2,0,-2,-1,1,-1,0,-1,4,1,-2,-3,-2],           // S\n        [0,-1,-1,-1,-2,-2,-2,-1,-1,-1,-1,0,-1,-1,-1,1,5,0,-2,-2],       // T\n        [0,-1,-3,-2,-1,-3,-3,3,-2,1,1,-3,-2,-2,-3,-2,0,4,-3,-1],        // V\n        [-3,-2,-4,-3,1,-2,-2,-3,-3,-2,-1,-4,-4,-2,-3,-3,-2,-3,11,2],    // W\n        [-2,-2,-3,-2,3,-3,2,-1,-2,-1,-1,-2,-3,-1,-2,-2,-2,-1,2,7]       // Y\n    ];\n\n    var blosum62 = [\n        //A  R  N  D  C  Q  E  G  H  I  L  K  M  F  P  S  T  W  Y  V  B  Z  X\n        [ 4,-1,-2,-2, 0,-1,-1, 0,-2,-1,-1,-1,-1,-2,-1, 1, 0,-3,-2, 0,-2,-1, 0], // A\n        [-1, 5, 0,-2,-3, 1, 0,-2, 0,-3,-2, 2,-1,-3,-2,-1,-1,-3,-2,-3,-1, 0,-1], // R\n        [-2, 0, 6, 1,-3, 0, 0, 0, 1,-3,-3, 0,-2,-3,-2, 1, 0,-4,-2,-3, 3, 0,-1], // N\n        [-2,-2, 1, 6,-3, 0, 2,-1,-1,-3,-4,-1,-3,-3,-1, 0,-1,-4,-3,-3, 4, 1,-1], // D\n        [ 0,-3,-3,-3, 9,-3,-4,-3,-3,-1,-1,-3,-1,-2,-3,-1,-1,-2,-2,-1,-3,-3,-2], // C\n        [-1, 1, 0, 0,-3, 5, 2,-2, 0,-3,-2, 1, 0,-3,-1, 0,-1,-2,-1,-2, 0, 3,-1], // Q\n        [-1, 0, 0, 2,-4, 2, 5,-2, 0,-3,-3, 1,-2,-3,-1, 0,-1,-3,-2,-2, 1, 4,-1], // E\n        [ 0,-2, 0,-1,-3,-2,-2, 6,-2,-4,-4,-2,-3,-3,-2, 0,-2,-2,-3,-3,-1,-2,-1], // G\n        [-2, 0, 1,-1,-3, 0, 0,-2, 8,-3,-3,-1,-2,-1,-2,-1,-2,-2, 2,-3, 0, 0,-1], // H\n        [-1,-3,-3,-3,-1,-3,-3,-4,-3, 4, 2,-3, 1, 0,-3,-2,-1,-3,-1, 3,-3,-3,-1], // I\n        [-1,-2,-3,-4,-1,-2,-3,-4,-3, 2, 4,-2, 2, 0,-3,-2,-1,-2,-1, 1,-4,-3,-1], // L\n        [-1, 2, 0,-1,-3, 1, 1,-2,-1,-3,-2, 5,-1,-3,-1, 0,-1,-3,-2,-2, 0, 1,-1], // K\n        [-1,-1,-2,-3,-1, 0,-2,-3,-2, 1, 2,-1, 5, 0,-2,-1,-1,-1,-1, 1,-3,-1,-1], // M\n        [-2,-3,-3,-3,-2,-3,-3,-3,-1, 0, 0,-3, 0, 6,-4,-2,-2, 1, 3,-1,-3,-3,-1], // F\n        [-1,-2,-2,-1,-3,-1,-1,-2,-2,-3,-3,-1,-2,-4, 7,-1,-1,-4,-3,-2,-2,-1,-2], // P\n        [ 1,-1, 1, 0,-1, 0, 0, 0,-1,-2,-2, 0,-1,-2,-1, 4, 1,-3,-2,-2, 0, 0, 0], // S\n        [ 0,-1, 0,-1,-1,-1,-1,-2,-2,-1,-1,-1,-1,-2,-1, 1, 5,-2,-2, 0,-1,-1, 0], // T\n        [-3,-3,-4,-4,-2,-2,-3,-2,-2,-3,-2,-3,-1, 1,-4,-3,-2,11, 2,-3,-4,-3,-2], // W\n        [-2,-2,-2,-3,-2,-1,-2,-3, 2,-1,-1,-2,-1, 3,-3,-2,-2, 2, 7,-1,-3,-2,-1], // Y\n        [ 0,-3,-3,-3,-1,-2,-2,-3,-3, 3, 1,-2, 1,-1,-2,-2, 0,-3,-1, 4,-3,-2,-1], // V\n        [-2,-1, 3, 4,-3, 0, 1,-1, 0,-3,-4, 0,-3,-3,-2, 0,-1,-4,-3,-3, 4, 1,-1], // B\n        [-1, 0, 0, 1,-3, 3, 4,-2, 0,-3,-3, 1,-1,-3,-1, 0,-1,-3,-2,-2, 1, 4,-1], // Z\n        [ 0,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2, 0, 0,-2,-1,-1,-1,-1,-1]  // X\n    ];\n\n    var nucleotides = 'ACTG';\n\n    var aminoacidsX = 'ACDEFGHIKLMNPQRSTVWY';\n\n    var aminoacids = 'ARNDCQEGHILKMFPSTWYVBZ?';\n\n    function prepareMatrix( cellNames, mat ){\n\n        var j;\n        var i = 0;\n        var matDict = {};\n\n        mat.forEach( function( row ){\n\n            j = 0;\n            var rowDict = {};\n\n            row.forEach( function( elm ){\n\n                rowDict[ cellNames[ j++ ] ] = elm;\n\n            } );\n\n            matDict[ cellNames[ i++ ] ] = rowDict;\n\n        } );\n\n        return matDict;\n\n    }\n\n    return {\n\n        blosum62: prepareMatrix( aminoacids, blosum62 ),\n\n        blosum62x: prepareMatrix( aminoacidsX, blosum62x ),\n\n    };\n\n}();\n\n\nNGL.Alignment = function( seq1, seq2, gapPenalty, gapExtensionPenalty, substMatrix ){\n\n    // TODO try encoding seqs as integers and use array subst matrix, maybe faster\n\n    this.seq1 = seq1;\n    this.seq2 = seq2;\n\n    this.gapPenalty = gapPenalty || -10;\n    this.gapExtensionPenalty = gapExtensionPenalty || -1;\n    this.substMatrix = substMatrix || \"blosum62\";\n\n    if( this.substMatrix ){\n        this.substMatrix = NGL.SubstitutionMatrices[ this.substMatrix ];\n    }\n\n};\n\nNGL.Alignment.prototype = {\n\n    constructor: NGL.Alignment,\n\n    initMatrices: function(){\n\n        this.n = this.seq1.length;\n        this.m = this.seq2.length;\n\n        // NGL.log(this.n, this.m);\n\n        this.score = undefined;\n        this.ali = '';\n\n        this.S = [];\n        this.V = [];\n        this.H = [];\n\n        for( var i = 0; i <= this.n; ++i ){\n\n            this.S[ i ] = [];\n            this.V[ i ] = [];\n            this.H[ i ] = [];\n\n            for( var j = 0; j <= this.m; ++j ){\n\n                this.S[ i ][ j ] = 0;\n                this.V[ i ][ j ] = 0;\n                this.H[ i ][ j ] = 0;\n\n            }\n\n        }\n\n        for( var i = 0; i <= this.n; ++i ){\n\n            this.S[ i ][ 0 ] = this.gap( 0 );\n            this.H[ i ][ 0 ] = -Infinity;\n\n        }\n\n        for( var j = 0; j <= this.m; ++j ){\n\n            this.S[ 0 ][ j ] = this.gap( 0 );\n            this.V[ 0 ][ j ] = -Infinity;\n\n        }\n\n        this.S[ 0 ][ 0 ] = 0;\n\n        // NGL.log(this.S, this.V, this.H);\n\n    },\n\n    gap: function( len ){\n\n        return this.gapPenalty + len * this.gapExtensionPenalty;\n\n    },\n\n    makeScoreFn: function(){\n\n        var seq1 = this.seq1;\n        var seq2 = this.seq2;\n\n        var substMatrix = this.substMatrix;\n\n        var c1, c2;\n\n        if( substMatrix ){\n\n            return function( i, j ){\n\n                c1 = seq1[ i ];\n                c2 = seq2[ j ];\n\n                try{\n\n                    return substMatrix[ c1 ][ c2 ];\n\n                }catch( e ){\n\n                    return -4;\n\n                }\n\n            }\n\n        } else {\n\n            NGL.warn('NGL.Alignment: no subst matrix');\n\n            return function( i, j ){\n\n                c1 = seq1[ i ];\n                c2 = seq2[ j ];\n\n                return c1 === c2 ? 5 : -3;\n\n            }\n\n        }\n\n    },\n\n    calc: function(){\n\n        NGL.time( \"NGL.Alignment.calc\" );\n\n        this.initMatrices();\n\n        var gap0 = this.gap(0);\n        var scoreFn = this.makeScoreFn();\n        var gapExtensionPenalty = this.gapExtensionPenalty;\n\n        var V = this.V;\n        var H = this.H;\n        var S = this.S;\n\n        var n = this.n;\n        var m = this.m;\n\n        var Vi1, Si1, Vi, Hi, Si;\n\n        var i, j;\n\n        for( i = 1; i <= n; ++i ){\n\n            Si1 = S[ i - 1 ];\n            Vi1 = V[ i - 1 ];\n\n            Vi = V[ i ];\n            Hi = H[ i ];\n            Si = S[ i ];\n\n            for( j = 1; j <= m; ++j ){\n\n                Vi[j] = Math.max(\n                    Si1[ j ] + gap0,\n                    Vi1[ j ] + gapExtensionPenalty\n                );\n\n                Hi[j] = Math.max(\n                    Si[ j - 1 ] + gap0,\n                    Hi[ j - 1 ] + gapExtensionPenalty\n                );\n\n                Si[j] = Math.max(\n                    Si1[ j - 1 ] + scoreFn( i - 1, j - 1 ), // match\n                    Vi[ j ], //del\n                    Hi[ j ]  // ins\n                );\n\n            }\n\n        }\n\n        NGL.timeEnd( \"NGL.Alignment.calc\" );\n\n        // NGL.log(this.S, this.V, this.H);\n\n    },\n\n    trace: function(){\n\n        // NGL.time( \"NGL.Alignment.trace\" );\n\n        this.ali1 = '';\n        this.ali2 = '';\n\n        var scoreFn = this.makeScoreFn();\n\n        var i = this.n;\n        var j = this.m;\n        var mat = \"S\";\n\n        if( this.S[i][j] >= this.V[i][j] && this.S[i][j] >= this.V[i][j] ){\n            mat = \"S\";\n            this.score = this.S[i][j];\n        }else if( this.V[i][j] >= this.H[i][j] ){\n            mat = \"V\";\n            this.score = this.V[i][j];\n        }else{\n            mat = \"H\";\n            this.score = this.H[i][j];\n        }\n\n        // NGL.log(\"NGL.Alignment: SCORE\", this.score);\n        // NGL.log(\"NGL.Alignment: S, V, H\", this.S[i][j], this.V[i][j], this.H[i][j]);\n\n        while( i > 0 && j > 0 ){\n\n            if( mat==\"S\" ){\n\n                if( this.S[i][j]==this.S[i-1][j-1] + scoreFn(i-1, j-1) ){\n                    this.ali1 = this.seq1[i-1] + this.ali1;\n                    this.ali2 = this.seq2[j-1] + this.ali2;\n                    --i;\n                    --j;\n                    mat = \"S\";\n                }else if( this.S[i][j]==this.V[i][j] ){\n                    mat = \"V\";\n                }else if( this.S[i][j]==this.H[i][j] ){\n                    mat = \"H\";\n                }else{\n                    NGL.error('NGL.Alignment: S');\n                    --i;\n                    --j;\n                }\n\n            }else if( mat==\"V\" ){\n\n                if( this.V[i][j]==this.V[i-1][j] + this.gapExtensionPenalty ){\n                    this.ali1 = this.seq1[i-1] + this.ali1;\n                    this.ali2 = '-' + this.ali2;\n                    --i;\n                    mat = \"V\";\n                }else if( this.V[i][j]==this.S[i-1][j] + this.gap(0) ){\n                    this.ali1 = this.seq1[i-1] + this.ali1;\n                    this.ali2 = '-' + this.ali2;\n                    --i;\n                    mat = \"S\";\n                }else{\n                    NGL.error('NGL.Alignment: V');\n                    --i;\n                }\n\n            }else if( mat==\"H\" ){\n\n                if( this.H[i][j] == this.H[i][j-1] + this.gapExtensionPenalty ){\n                    this.ali1 = '-' + this.ali1;\n                    this.ali2 = this.seq2[j-1] + this.ali2;\n                    --j;\n                    mat = \"H\";\n                }else if( this.H[i][j] == this.S[i][j-1] + this.gap(0) ){\n                    this.ali1 = '-' + this.ali1;\n                    this.ali2 = this.seq2[j-1] + this.ali2;\n                    --j;\n                    mat = \"S\";\n                }else{\n                    NGL.error('NGL.Alignment: H');\n                    --j;\n                }\n\n            }else{\n\n                NGL.error('NGL.Alignment: no matrix');\n\n            }\n\n        }\n\n        while( i > 0 ){\n\n            this.ali1 = this.seq1[ i - 1 ] + this.ali1;\n            this.ali2 = '-' + this.ali2;\n            --i;\n\n        }\n\n        while( j > 0 ){\n\n            this.ali1 = '-' + this.ali1;\n            this.ali2 = this.seq2[ j - 1 ] + this.ali2;\n            --j;\n\n        }\n\n        // NGL.timeEnd( \"NGL.Alignment.trace\" );\n\n        // NGL.log([this.ali1, this.ali2]);\n\n    }\n\n};\n\n// File:js/ngl/geometry.js\n\n/**\n * @file Geometry\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n/////////////////\n// Interpolator\n\nNGL.Interpolator = function( m, tension ){\n\n    var dt = 1.0 / m;\n    var delta = 0.0001;\n\n    var vec1 = new THREE.Vector3();\n    var vec2 = new THREE.Vector3();\n\n    function interpolate( p0, p1, p2, p3, t ) {\n        var v0 = ( p2 - p0 ) * tension;\n        var v1 = ( p3 - p1 ) * tension;\n        var t2 = t * t;\n        var t3 = t * t2;\n        return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 +\n               ( -3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 +\n               v0 * t + p1;\n    }\n\n    function interpolateToArr( v0, v1, v2, v3, t, arr, offset ){\n        arr[ offset + 0 ] = interpolate( v0.x, v1.x, v2.x, v3.x, t );\n        arr[ offset + 1 ] = interpolate( v0.y, v1.y, v2.y, v3.y, t );\n        arr[ offset + 2 ] = interpolate( v0.z, v1.z, v2.z, v3.z, t );\n    }\n\n    function interpolateToVec( v0, v1, v2, v3, t, vec ){\n        vec.x = interpolate( v0.x, v1.x, v2.x, v3.x, t );\n        vec.y = interpolate( v0.y, v1.y, v2.y, v3.y, t );\n        vec.z = interpolate( v0.z, v1.z, v2.z, v3.z, t );\n    }\n\n    function interpolatePosition( v0, v1, v2, v3, pos, offset ){\n        for( var j = 0; j < m; ++j ){\n            var l = offset + j * 3;\n            var d = dt * j;\n            interpolateToArr( v0, v1, v2, v3, d, pos, l );\n        }\n    }\n\n    function interpolateTangent( v0, v1, v2, v3, tan, offset ){\n        for( var j = 0; j < m; ++j ){\n            var d = dt * j;\n            var d1 = d - delta;\n            var d2 = d + delta;\n            var l = offset + j * 3;\n            // capping as a precation\n            if ( d1 < 0 ) d1 = 0;\n            if ( d2 > 1 ) d2 = 1;\n            //\n            interpolateToVec( v0, v1, v2, v3, d1, vec1 );\n            interpolateToVec( v0, v1, v2, v3, d2, vec2 );\n            //\n            vec2.sub( vec1 ).normalize();\n            vec2.toArray( tan, l );\n        }\n    }\n\n    function vectorSubdivide( interpolationFn, iterator, array, offset, isCyclic ){\n        var v0;\n        var v1 = iterator.next();\n        var v2 = iterator.next();\n        var v3 = iterator.next();\n        //\n        var n = iterator.size;\n        var n1 = n - 1;\n        var k = offset || 0;\n        for( var i = 0; i < n1; ++i ){\n            v0 = v1;\n            v1 = v2;\n            v2 = v3;\n            v3 = iterator.next();\n            interpolationFn( v0, v1, v2, v3, array, k );\n            k += 3 * m;\n        }\n        if( isCyclic ){\n            v0 = iterator.get( n - 2 );\n            v1 = iterator.get( n - 1 );\n            v2 = iterator.get( 0 );\n            v3 = iterator.get( 1 );\n            interpolationFn( v0, v1, v2, v3, array, k );\n            k += 3 * m;\n        }\n    }\n\n    //\n\n    this.getPosition = function( iterator, array, offset, isCyclic ){\n        iterator.reset();\n        vectorSubdivide(\n            interpolatePosition, iterator, array, offset, isCyclic\n        );\n        var n1 = iterator.size - 1;\n        var k = n1 * m * 3;\n        if( isCyclic ) k += m * 3;\n        var v = iterator.get( isCyclic ? 0 : n1 );\n        array[ k     ] = v.x;\n        array[ k + 1 ] = v.y;\n        array[ k + 2 ] = v.z;\n    }\n\n    this.getTangent = function( iterator, array, offset, isCyclic ){\n        iterator.reset();\n        vectorSubdivide(\n            interpolateTangent, iterator, array, offset, isCyclic\n        );\n        var n1 = iterator.size - 1;\n        var k = n1 * m * 3;\n        if( isCyclic ) k += m * 3;\n        NGL.Utils.copyArray( array, array, k - 3, k, 3 );\n    }\n\n    //\n\n    var vDir = new THREE.Vector3();\n    var vTan = new THREE.Vector3();\n    var vNorm = new THREE.Vector3();\n    var vBin = new THREE.Vector3();\n\n    var m2 = Math.ceil( m / 2 );\n\n    function interpolateNormalDir( u0, u1, u2, u3, v0, v1, v2, v3, tan, norm, bin, offset, shift ){\n        for( var j = 0; j < m; ++j ){\n            var l = offset + j * 3;\n            if( shift ) l += m2 * 3;\n            var d = dt * j;\n            interpolateToVec( u0, u1, u2, u3, d, vec1 );\n            interpolateToVec( v0, v1, v2, v3, d, vec2 );\n            vDir.subVectors( vec2, vec1 ).normalize();\n            vTan.fromArray( tan, l );\n            vBin.crossVectors( vDir, vTan ).normalize();\n            vBin.toArray( bin, l );\n            vNorm.crossVectors( vTan, vBin ).normalize();\n            vNorm.toArray( norm, l );\n        }\n    }\n\n    function interpolateNormal( vDir, tan, norm, bin, offset ){\n        for( var j = 0; j < m; ++j ){\n            var l = offset + j * 3;\n            vDir.copy( vNorm );\n            vTan.fromArray( tan, l );\n            vBin.crossVectors( vDir, vTan ).normalize();\n            vBin.toArray( bin, l );\n            vNorm.crossVectors( vTan, vBin ).normalize();\n            vNorm.toArray( norm, l );\n        }\n    }\n\n    this.getNormal = function( size, tan, norm, bin, offset, isCyclic, shift ){\n        vNorm.set( 0, 0, 1 );\n        var n = size;\n        var n1 = n - 1;\n        var k = offset || 0;\n        for( var i = 0; i < n1; ++i ){\n            interpolateNormal( vDir, tan, norm, bin, k );\n            k += 3 * m;\n        }\n        if( isCyclic ){\n            interpolateNormal( vDir, tan, norm, bin, k );\n            k += 3 * m;\n        }\n        vBin.toArray( bin, k );\n        vNorm.toArray( norm, k );\n    };\n\n    this.getNormalDir = function( iterDir1, iterDir2, tan, norm, bin, offset, isCyclic, shift ){\n        iterDir1.reset();\n        iterDir2.reset();\n        //\n        var vSub1 = new THREE.Vector3();\n        var vSub2 = new THREE.Vector3();\n        var vSub3 = new THREE.Vector3();\n        var vSub4 = new THREE.Vector3();\n        //\n        var d1v1 = new THREE.Vector3();\n        var d1v2 = new THREE.Vector3().copy( iterDir1.next() );\n        var d1v3 = new THREE.Vector3().copy( iterDir1.next() );\n        var d1v4 = new THREE.Vector3().copy( iterDir1.next() );\n        var d2v1 = new THREE.Vector3();\n        var d2v2 = new THREE.Vector3().copy( iterDir2.next() );\n        var d2v3 = new THREE.Vector3().copy( iterDir2.next() );\n        var d2v4 = new THREE.Vector3().copy( iterDir2.next() );\n        //\n        vNorm.set( 0, 0, 1 );\n        var n = iterDir1.size;\n        var n1 = n - 1;\n        var k = offset || 0;\n        for( var i = 0; i < n1; ++i ){\n            d1v1.copy( d1v2 );\n            d1v2.copy( d1v3 );\n            d1v3.copy( d1v4 );\n            d1v4.copy( iterDir1.next() );\n            d2v1.copy( d2v2 );\n            d2v2.copy( d2v3 );\n            d2v3.copy( d2v4 );\n            d2v4.copy( iterDir2.next() );\n            //\n            if( i === 0 ){\n                vSub1.subVectors( d2v1, d1v1 );\n                vSub2.subVectors( d2v2, d1v2 );\n                if( vSub1.dot( vSub2 ) < 0 ){\n                    vSub2.multiplyScalar( -1 );\n                    d2v2.addVectors( d1v2, vSub2 );\n                }\n                vSub3.subVectors( d2v3, d1v3 );\n                if( vSub2.dot( vSub3 ) < 0 ){\n                    vSub3.multiplyScalar( -1 );\n                    d2v3.addVectors( d1v3, vSub3 );\n                }\n            }else{\n                vSub3.copy( vSub4 );\n            }\n            vSub4.subVectors( d2v4, d1v4 );\n            if( vSub3.dot( vSub4 ) < 0 ){\n                vSub4.multiplyScalar( -1 );\n                d2v4.addVectors( d1v4, vSub4 );\n            }\n            interpolateNormalDir(\n                d1v1, d1v2, d1v3, d1v4,\n                d2v1, d2v2, d2v3, d2v4,\n                tan, norm, bin, k, shift\n            );\n            k += 3 * m;\n        }\n        if( isCyclic ){\n            d1v1.copy( iterDir1.get( n - 2 ) );\n            d1v2.copy( iterDir1.get( n - 1 ) );\n            d1v3.copy( iterDir1.get( 0 ) );\n            d1v4.copy( iterDir1.get( 1 ) );\n            d2v1.copy( iterDir2.get( n - 2 ) );\n            d2v2.copy( iterDir2.get( n - 1 ) );\n            d2v3.copy( iterDir2.get( 0 ) );\n            d2v4.copy( iterDir2.get( 1 ) );\n            //\n            vSub3.copy( vSub4 );\n            vSub4.subVectors( d2v4, d1v4 );\n            if( vSub3.dot( vSub4 ) < 0 ){\n                vSub4.multiplyScalar( -1 );\n                d2v4.addVectors( d1v4, vSub4 );\n            }\n            interpolateNormalDir(\n                d1v1, d1v2, d1v3, d1v4,\n                d2v1, d2v2, d2v3, d2v4,\n                tan, norm, bin, k, shift\n            );\n            k += 3 * m;\n        }\n        if( shift ){\n            // FIXME shift requires data from one more preceeding residue\n            vBin.fromArray( bin, m2 * 3 );\n            vNorm.fromArray( norm, m2 * 3 );\n            for( var j = 0; j < m2; ++j ){\n                vBin.toArray( bin, j * 3 );\n                vNorm.toArray( norm, j * 3 );\n            }\n        }else{\n            vBin.toArray( bin, k );\n            vNorm.toArray( norm, k );\n        }\n    };\n\n    //\n\n    function interpolateColor( item1, item2, colFn, pcolFn, col, pcol, offset ){\n        for( var j = 0; j < m2; ++j ){\n            var l = offset + j * 3;\n            colFn( item1, col, l );  // itemColorToArray\n            pcolFn( item1, pcol, l );  // itemPickingColorToArray\n        }\n        for( var j = m2; j < m; ++j ){\n            var l = offset + j * 3;\n            colFn( item2, col, l );  // itemColorToArray\n            pcolFn( item2, pcol, l );  // itemPickingColorToArray\n        }\n    }\n\n    this.getColor = function( iterator, colFn, pcolFn, col, pcol, offset, isCyclic ){\n        iterator.reset();\n        var i0 = iterator.next();  // first element not needed, replaced in the loop\n        var i1 = iterator.next();\n        //\n        var n = iterator.size;\n        var n1 = n - 1;\n        var k = offset || 0;\n        for( var i = 0; i < n1; ++i ){\n            i0 = i1;\n            i1 = iterator.next();\n            interpolateColor( i0, i1, colFn, pcolFn, col, pcol, k );\n            k += 3 * m;\n        }\n        if( isCyclic ){\n            i0 = iterator.get( n - 1 );\n            i1 = iterator.get( 0 );\n            interpolateColor( i0, i1, colFn, pcolFn, col, pcol, k );\n            k += 3 * m;\n        }\n        //\n        col[ k     ] = col[ k - 3 ];\n        col[ k + 1 ] = col[ k - 2 ];\n        col[ k + 2 ] = col[ k - 1 ];\n        pcol[ k     ] = pcol[ k - 3 ];\n        pcol[ k + 1 ] = pcol[ k - 2 ];\n        pcol[ k + 2 ] = pcol[ k - 1 ];\n    }\n\n    //\n\n    function interpolateSize( item1, item2, sizeFn, size, offset ){\n        var s1 = sizeFn( item1 );\n        var s2 = sizeFn( item2 );\n        for( var j = 0; j < m; ++j ){\n            // linear interpolation\n            var t = j / m;\n            size[ offset + j ] = ( 1 - t ) * s1 + t * s2;\n        }\n    }\n\n    this.getSize = function( iterator, sizeFn, size, offset, isCyclic ){\n        iterator.reset();\n        var i0 = iterator.next();  // first element not needed, replaced in the loop\n        var i1 = iterator.next();\n        //\n        var n = iterator.size;\n        var n1 = n - 1;\n        var k = offset || 0;\n        for( var i = 0; i < n1; ++i ){\n            i0 = i1;\n            i1 = iterator.next();\n            interpolateSize( i0, i1, sizeFn, size, k );\n            k += m;\n        }\n        if( isCyclic ){\n            i0 = iterator.get( n - 1 );\n            i1 = iterator.get( 0 );\n            interpolateSize( i0, i1, sizeFn, size, k );\n            k += m;\n        }\n        //\n        size[ k ] = size[ k - 1 ];\n    }\n\n};\n\n\n///////////\n// Spline\n\nNGL.Spline = function( polymer, params ){\n\n    this.polymer = polymer;\n    this.size = polymer.residueCount;\n\n    var p = params || {};\n    this.directional = p.directional || false;\n    this.positionIterator = p.positionIterator || false\n    this.subdiv = p.subdiv || 1;\n    this.smoothSheet = p.smoothSheet || false;\n\n    if( isNaN( p.tension ) ){\n        this.tension = this.polymer.isNucleic() ? 0.5 : 0.9;\n    }else{\n        this.tension = p.tension || 0.5;\n    }\n\n    this.interpolator = new NGL.Interpolator( this.subdiv, this.tension );\n\n};\n\nNGL.Spline.prototype = {\n\n    constructor: NGL.Spline,\n\n    getAtomIterator: function( type, smooth ){\n\n        var polymer = this.polymer;\n        var structure = polymer.structure;\n        var n = polymer.residueCount;\n\n        var i = 0;\n        var j = -1;\n\n        var cache = [\n            structure.getAtomProxy(),\n            structure.getAtomProxy(),\n            structure.getAtomProxy(),\n            structure.getAtomProxy()\n        ];\n\n        var cache2 = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3()\n        ];\n\n        function next(){\n            var atomProxy = this.get( j );\n            j += 1;\n            return atomProxy;\n        }\n\n        var apPrev = structure.getAtomProxy();\n        var apNext = structure.getAtomProxy();\n\n        function get( idx ){\n            var atomProxy = cache[ i % 4 ];\n            atomProxy.index = polymer.getAtomIndexByType( idx, type );\n            if( smooth && idx > 0 && idx < n && atomProxy.sstruc === \"e\" ){\n                var vec = cache2[ i % 4 ];\n                apPrev.index = polymer.getAtomIndexByType( idx + 1, type );\n                apNext.index = polymer.getAtomIndexByType( idx - 1, type );\n                vec.addVectors( apPrev, apNext )\n                    .add( atomProxy ).add( atomProxy )\n                    .multiplyScalar( 0.25 );\n                i += 1;\n                return vec;\n            }\n            i += 1;\n            return atomProxy;\n        }\n\n        function reset(){\n            i = 0;\n            j = -1;\n        }\n\n        return {\n            size: n,\n            next: next,\n            get: get,\n            reset: reset\n        };\n\n    },\n\n    getSubdividedColor: function( params ){\n\n        var m = this.subdiv;\n        var polymer = this.polymer;\n        var n = polymer.residueCount;\n        var n1 = n - 1;\n        var nCol = n1 * m * 3 + 3;\n        if( polymer.isCyclic ) nCol += m * 3;\n\n        var col = new Float32Array( nCol );\n        var pcol = new Float32Array( nCol );\n        var iterator = this.getAtomIterator( \"trace\" );\n\n        var p = params || {};\n        p.structure = polymer.structure;\n\n        var colorMaker = NGL.ColorMakerRegistry.getScheme( p );\n        var pickingColorMaker = NGL.ColorMakerRegistry.getPickingScheme( p );\n\n        function colFn( item, array, offset ){\n            colorMaker.atomColorToArray( item, array, offset );\n        }\n\n        function pcolFn( item, array, offset ){\n            pickingColorMaker.atomColorToArray( item, array, offset );\n        }\n\n        this.interpolator.getColor(\n            iterator, colFn, pcolFn, col, pcol, 0, polymer.isCyclic\n        );\n\n        return {\n            \"color\": col,\n            \"pickingColor\": pcol\n        };\n\n    },\n\n    getSubdividedPosition: function(){\n\n        var pos = this.getPosition();\n\n        return {\n            \"position\": pos\n        }\n\n    },\n\n    getSubdividedOrientation: function(){\n\n        var tan = this.getTangent();\n        var normals = this.getNormals( tan );\n\n        return {\n            \"tangent\": tan,\n            \"normal\": normals.normal,\n            \"binormal\": normals.binormal\n        }\n\n    },\n\n    getSubdividedSize: function( type, scale ){\n\n        var m = this.subdiv;\n        var polymer = this.polymer;\n        var n = polymer.residueCount;\n        var n1 = n - 1;\n        var nSize = n1 * m + 1;\n        if( polymer.isCyclic ) nSize += m;\n\n        var size = new Float32Array( nSize );\n        var iterator = this.getAtomIterator( \"trace\" );\n\n        var radiusFactory = new NGL.RadiusFactory( type, scale );\n\n        function sizeFn( item ){\n            return radiusFactory.atomRadius( item );\n        }\n\n        this.interpolator.getSize(\n            iterator, sizeFn, size, 0, polymer.isCyclic\n        );\n\n        return {\n            \"size\": size\n        };\n\n    },\n\n    getPosition: function(){\n\n        var m = this.subdiv;\n        var polymer = this.polymer;\n        var n = polymer.residueCount;\n        var n1 = n - 1;\n        var nPos = n1 * m * 3 + 3\n        if( polymer.isCyclic ) nPos += m * 3;\n\n        var pos = new Float32Array( nPos );\n        var iterator = this.positionIterator || this.getAtomIterator( \"trace\", this.smoothSheet );\n\n        this.interpolator.getPosition(\n            iterator, pos, 0, polymer.isCyclic\n        );\n\n        return pos;\n\n    },\n\n    getTangent: function(){\n\n        var m = this.subdiv;\n        var polymer = this.polymer;\n        var n = this.size;\n        var n1 = n - 1;\n        var nTan = n1 * m * 3 + 3\n        if( polymer.isCyclic ) nTan += m * 3;\n\n        var tan = new Float32Array( nTan );\n        var iterator = this.positionIterator || this.getAtomIterator( \"trace\", this.smoothSheet );\n\n        this.interpolator.getTangent(\n            iterator, tan, 0, polymer.isCyclic\n        );\n\n        return tan;\n\n    },\n\n    getNormals: function( tan ){\n\n        var m = this.subdiv;\n        var polymer = this.polymer;\n        var isProtein = polymer.isProtein();\n        var n = this.size;\n        var n1 = n - 1;\n        var nNorm = n1 * m * 3 + 3\n        if( polymer.isCyclic ) nNorm += m * 3;\n\n        var norm = new Float32Array( nNorm );\n        var bin = new Float32Array( nNorm );\n\n        if( this.directional && !this.polymer.isCg() ){\n            var iterDir1 = this.getAtomIterator( \"direction1\" );\n            var iterDir2 = this.getAtomIterator( \"direction2\" );\n            this.interpolator.getNormalDir(\n                iterDir1, iterDir2, tan, norm, bin, 0, polymer.isCyclic, isProtein\n            );\n        }else{\n            this.interpolator.getNormal(\n                n, tan, norm, bin, 0, polymer.isCyclic, isProtein\n            );\n        }\n\n        return {\n            \"normal\": norm,\n            \"binormal\": bin\n        }\n\n    }\n\n};\n\n\n////////////////\n// Helixorient\n\nNGL.Helixorient = function( polymer ){\n\n    this.polymer = polymer;\n\n    this.size = polymer.residueCount;\n\n};\n\nNGL.Helixorient.prototype = {\n\n    constructor: NGL.Helixorient,\n\n    getCenterIterator: function( smooth ){\n\n        var center = this.getPosition().center;\n        var n = center.length / 3;\n\n        var i = 0;\n        var j = -1;\n\n        var cache = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3()\n        ];\n\n        function next(){\n            var vector = this.get( j );\n            j += 1;\n            return vector;\n        }\n\n        function get( idx ){\n            idx = Math.min( n - 1, Math.max( 0, idx ) );\n            var v = cache[ i % 4 ];\n            var idx3 = 3 * idx;\n            v.fromArray( center, idx3 );\n            if( smooth ){\n                var l, k, t;\n                var w = Math.min( smooth, idx, n - idx - 1 );\n                for( k = 1; k <= w; ++k ){\n                    l = k * 3;\n                    t = ( w + 1 - k ) / ( w + 1 );\n                    v.x += t * center[ idx3 - l + 0 ] + t * center[ idx3 + l + 0 ];\n                    v.y += t * center[ idx3 - l + 1 ] + t * center[ idx3 + l + 1 ];\n                    v.z += t * center[ idx3 - l + 2 ] + t * center[ idx3 + l + 2 ];\n                }\n                v.x /= w + 1;\n                v.y /= w + 1;\n                v.z /= w + 1;\n            }\n            i += 1;\n            return v;\n        }\n\n        function reset(){\n            i = 0;\n            j = -1;\n        }\n\n        return {\n            size: n,\n            next: next,\n            get: get,\n            reset: reset\n        };\n\n    },\n\n    getColor: function( params ){\n\n        var polymer = this.polymer;\n        var structure = polymer.structure;\n        var n = polymer.residueCount;\n        var residueIndexStart = polymer.residueIndexStart;\n\n        var col = new Float32Array( n * 3 );\n        var pcol = new Float32Array( n * 3 );\n\n        var p = params || {};\n        p.structure = structure;\n\n        var colorMaker = NGL.ColorMakerRegistry.getScheme( p );\n        var pickingColorMaker = NGL.ColorMakerRegistry.getPickingScheme( p );\n\n        var rp = structure.getResidueProxy();\n        var ap = structure.getAtomProxy();\n\n        for( var i = 0; i < n; ++i ){\n\n            rp.index = residueIndexStart + i;\n            ap.index = rp.traceAtomIndex;\n\n            var i3 = i * 3;\n            colorMaker.atomColorToArray( ap, col, i3 );\n            pickingColorMaker.atomColorToArray( ap, pcol, i3 );\n\n        }\n\n        return {\n            \"color\": col,\n            \"pickingColor\": pcol\n        };\n\n    },\n\n    getSize: function( type, scale ){\n\n        var polymer = this.polymer;\n        var structure = polymer.structure;\n        var n = polymer.residueCount;\n        var residueIndexStart = polymer.residueIndexStart;\n\n        var size = new Float32Array( n );\n        var radiusFactory = new NGL.RadiusFactory( type, scale );\n\n        var rp = structure.getResidueProxy();\n        var ap = structure.getAtomProxy();\n\n        for( var i = 0; i < n; ++i ){\n\n            rp.index = residueIndexStart + i;\n            ap.index = rp.traceAtomIndex;\n            size[ i ] = radiusFactory.atomRadius( ap );\n\n        }\n\n        return {\n            \"size\": size\n        };\n\n    },\n\n    getPosition: function(){\n\n        var polymer = this.polymer;\n        var structure = polymer.structure;\n        var n = polymer.residueCount;\n        var n3 = n - 3;\n\n        var center = new Float32Array( 3 * n );\n        var axis = new Float32Array( 3 * n );\n        var diff = new Float32Array( n );\n        var radius = new Float32Array( n );\n        var rise = new Float32Array( n );\n        var twist = new Float32Array( n );\n        var resdir = new Float32Array( 3 * n );\n\n        var tmp, j;\n        var diff13Length, diff24Length;\n\n        var r12 = new THREE.Vector3();\n        var r23 = new THREE.Vector3();\n        var r34 = new THREE.Vector3();\n\n        var diff13 = new THREE.Vector3();\n        var diff24 = new THREE.Vector3();\n\n        var v1 = new THREE.Vector3();\n        var v2 = new THREE.Vector3();\n\n        var _axis = new THREE.Vector3();\n        var _prevAxis = new THREE.Vector3();\n\n        var _resdir = new THREE.Vector3();\n        var _crossdir = new THREE.Vector3();\n        var _center = new THREE.Vector3( 0, 0, 0 );\n\n        var type = \"trace\";\n        var a1 = structure.getAtomProxy();\n        var a2 = structure.getAtomProxy( polymer.getAtomIndexByType( 0, type ) );\n        var a3 = structure.getAtomProxy( polymer.getAtomIndexByType( 1, type ) );\n        var a4 = structure.getAtomProxy( polymer.getAtomIndexByType( 2, type ) );\n\n        for( var i = 0; i < n3; ++i ){\n\n            a1.index = a2.index;\n            a2.index = a3.index;\n            a3.index = a4.index;\n            a4.index = polymer.getAtomIndexByType( i + 3, type );\n\n            j = 3 * i;\n\n            // ported from GROMACS src/tools/gmx_helixorient.c\n\n            r12.subVectors( a2, a1 );\n            r23.subVectors( a3, a2 );\n            r34.subVectors( a4, a3 );\n\n            diff13.subVectors( r12, r23 );\n            diff24.subVectors( r23, r34 );\n\n            _axis.crossVectors( diff13, diff24 ).normalize();\n            _axis.toArray( axis, j );\n\n            if( i > 0 ){\n                diff[ i ] = _axis.angleTo( _prevAxis );\n            }\n\n            tmp = Math.cos( diff13.angleTo( diff24 ) );\n            twist[ i ] = 180.0 / Math.PI * Math.acos( tmp );\n\n            diff13Length = diff13.length();\n            diff24Length = diff24.length();\n\n            radius[ i ] = (\n                Math.sqrt( diff24Length * diff13Length ) /\n                // clamp, to avoid instabilities for when\n                // angle between diff13 and diff24 is near 0\n                Math.max( 2.0, 2.0 * ( 1.0 - tmp ) )\n            );\n\n            rise[ i ] = Math.abs( r23.dot( _axis ) );\n\n            //\n\n            v1.copy( diff13 ).multiplyScalar( radius[ i ] / diff13Length );\n            v2.copy( diff24 ).multiplyScalar( radius[ i ] / diff24Length );\n\n            v1.subVectors( a2, v1 );\n            v2.subVectors( a3, v2 );\n\n            v1.toArray( center, j + 3 );\n            v2.toArray( center, j + 6 );\n\n            //\n\n            _resdir.subVectors( a1, _center );\n            _resdir.toArray( resdir, j );\n\n            _prevAxis.copy( _axis );\n            _center.copy( v1 );\n\n        }\n\n        //\n\n        // calc axis as dir of second and third center pos\n        // project first traceAtom onto axis to get first center pos\n        v1.fromArray( center, 3 );\n        v2.fromArray( center, 6 );\n        _axis.subVectors( v1, v2 ).normalize();\n        // _center.copy( res[ 0 ].getTraceAtom() );\n        a1.index = polymer.getAtomIndexByType( 0, type );\n        _center.copy( a1 );\n        v1 = NGL.Utils.pointVectorIntersection( _center, v1, _axis );\n        v1.toArray( center, 0 );\n\n        // calc first resdir\n        _resdir.subVectors( _center, v1 );\n        _resdir.toArray( resdir, 0 );\n\n        // calc axis as dir of n-1 and n-2 center pos\n        // project last traceAtom onto axis to get last center pos\n        v1.fromArray( center, 3 * n - 6 );\n        v2.fromArray( center, 3 * n - 9 );\n        _axis.subVectors( v1, v2 ).normalize();\n        // _center.copy( res[ n - 1 ].getTraceAtom() );\n        a1.index = polymer.getAtomIndexByType( n - 1, type );\n        _center.copy( a1 );\n        v1 = NGL.Utils.pointVectorIntersection( _center, v1, _axis );\n        v1.toArray( center, 3 * n - 3 );\n\n        // calc last three resdir\n        for( var i = n - 3; i < n; ++i ){\n\n            v1.fromArray( center, 3 * i );\n            // _center.copy( res[ i ].getTraceAtom() );\n            a1.index = polymer.getAtomIndexByType( i, type );\n            _center.copy( a1 );\n\n            _resdir.subVectors( _center, v1 );\n            _resdir.toArray( resdir, 3 * i );\n\n        }\n\n        // average measures to define them on the residues\n\n        var resRadius = new Float32Array( n );\n        var resTwist = new Float32Array( n );\n        var resRise = new Float32Array( n );\n        var resBending = new Float32Array( n );\n\n        resRadius[ 1 ] = radius[ 0 ];\n        resTwist[ 1 ] = twist[ 0 ];\n        resRise[ 1 ] = radius[ 0 ];\n\n        for( var i = 2; i < n - 2; ++i ){\n\n            resRadius[ i ] = 0.5 * ( radius[ i - 2 ] + radius[ i - 1 ] );\n            resTwist[ i ] = 0.5 * ( twist[ i - 2 ] + twist[ i - 1 ] );\n            resRise[ i ] = 0.5 * ( rise[ i - 2 ] + rise[ i - 1 ] );\n\n            v1.fromArray( axis, 3 * ( i - 2 ) );\n            v2.fromArray( axis, 3 * ( i - 1 ) );\n            resBending[ i ] = 180.0 / Math.PI * Math.acos( Math.cos( v1.angleTo( v2 ) ) );\n\n        }\n\n        resRadius[ n - 2 ] = radius[ n - 4 ];\n        resTwist[ n - 2 ] = twist[ n - 4 ];\n        resRise[ n - 2 ] = rise[ n - 4 ];\n\n        // average helix axes to define them on the residues\n\n        var resAxis = new Float32Array( 3 * n );\n\n        NGL.Utils.copyArray( axis, resAxis, 0, 0, 3 );\n        NGL.Utils.copyArray( axis, resAxis, 0, 3, 3 );\n\n        for( var i = 2; i < n - 2; ++i ){\n\n            v1.fromArray( axis, 3 * ( i - 2 ) );\n            v2.fromArray( axis, 3 * ( i - 1 ) );\n\n            _axis.addVectors( v2, v1 ).multiplyScalar( 0.5 ).normalize();\n            _axis.toArray( resAxis, 3 * i );\n\n        }\n\n        NGL.Utils.copyArray( axis, resAxis, 3 * n - 12, 3 * n - 6, 3 );\n        NGL.Utils.copyArray( axis, resAxis, 3 * n - 12, 3 * n - 3, 3 );\n\n        return {\n            \"center\": center,\n            \"axis\": resAxis,\n            \"bending\": resBending,\n            \"radius\": resRadius,\n            \"rise\": resRise,\n            \"twist\": resTwist,\n            \"resdir\": resdir,\n        };\n\n    }\n\n};\n\n\n////////////////\n// Helixbundle\n\nNGL.Helixbundle = function( polymer ){\n\n    this.polymer = polymer;\n\n    this.helixorient = new NGL.Helixorient( polymer );\n    this.position = this.helixorient.getPosition();\n\n};\n\nNGL.Helixbundle.prototype = {\n\n    constructor: NGL.Helixbundle,\n\n    getAxis: function( localAngle, centerDist, ssBorder, colorParams, radius, scale ){\n\n        localAngle = localAngle || 30;\n        centerDist = centerDist || 2.5;\n        ssBorder = ssBorder === undefined ? false : ssBorder;\n\n        var polymer = this.polymer;\n        var structure = polymer.structure;\n        var n = polymer.residueCount;\n        var residueIndexStart = polymer.residueIndexStart;\n\n        var pos = this.position;\n\n        var cp = colorParams || {};\n        cp.structure = structure;\n\n        var colorMaker = NGL.ColorMakerRegistry.getScheme( cp );\n        var pickingColorMaker = NGL.ColorMakerRegistry.getPickingScheme( cp );\n\n        var radiusFactory = new NGL.RadiusFactory( radius, scale );\n\n        var j = 0;\n        var k = 0;\n\n        var axis = [];\n        var center = [];\n        var beg = [];\n        var end = [];\n        var col = [];\n        var pcol = [];\n        var size = [];\n        var residueOffset = [];\n        var residueCount = [];\n\n        var tmpAxis = [];\n        var tmpCenter = [];\n\n        var _axis, _center\n        var _beg = new THREE.Vector3();\n        var _end = new THREE.Vector3();\n\n        var rp1 = structure.getResidueProxy();\n        var rp2 = structure.getResidueProxy();\n        var ap = structure.getAtomProxy();\n\n        var c1 = new THREE.Vector3();\n        var c2 = new THREE.Vector3();\n\n        var split = false;\n\n        for( var i = 0; i < n; ++i ){\n\n            rp1.index = residueIndexStart + i;\n            c1.fromArray( pos.center, i * 3 );\n\n            if( i === n - 1 ){\n                split = true;\n            }else{\n\n                rp2.index = residueIndexStart + i + 1;\n                c2.fromArray( pos.center, i * 3 + 3 );\n\n                if( ssBorder && rp1.sstruc !== rp2.sstruc ){\n                    split = true;\n                }else if( c1.distanceTo( c2 ) > centerDist ){\n                    split = true;\n                }else if( pos.bending[ i ] > localAngle ){\n                    split = true;\n                }\n\n            }\n\n            if( split ){\n\n                if( i - j < 4 ){\n                    j = i;\n                    split = false;\n                    continue;\n                }\n\n                ap.index = rp1.traceAtomIndex;\n\n                // ignore first and last axis\n                tmpAxis = pos.axis.subarray( j * 3 + 3, i * 3 );\n                tmpCenter = pos.center.subarray( j * 3, i * 3 + 3 );\n\n                _axis = NGL.Utils.calculateMeanVector3( tmpAxis ).normalize();\n                _center = NGL.Utils.calculateMeanVector3( tmpCenter );\n\n                _beg.fromArray( tmpCenter );\n                _beg = NGL.Utils.pointVectorIntersection( _beg, _center, _axis );\n\n                _end.fromArray( tmpCenter, tmpCenter.length - 3 );\n                _end = NGL.Utils.pointVectorIntersection( _end, _center, _axis );\n\n                _axis.subVectors( _end, _beg );\n\n                _axis.toArray( axis, k );\n                _center.toArray( center, k );\n                _beg.toArray( beg, k );\n                _end.toArray( end, k );\n\n                colorMaker.atomColorToArray( ap, col, k );\n                pickingColorMaker.atomColorToArray( ap, pcol, k );\n\n                size.push( radiusFactory.atomRadius( ap ) );\n\n                residueOffset.push( residueIndexStart + j );\n                residueCount.push( residueIndexStart + i + 1 - j );\n\n                k += 3;\n                j = i;\n                split = false;\n\n            }\n\n        }\n\n        return {\n            \"axis\": new Float32Array( axis ),\n            \"center\": new Float32Array( center ),\n            \"begin\": new Float32Array( beg ),\n            \"end\": new Float32Array( end ),\n            \"color\": new Float32Array( col ),\n            \"pickingColor\": new Float32Array( pcol ),\n            \"size\": new Float32Array( size ),\n            \"residueOffset\": residueOffset,\n            \"residueCount\": residueCount\n        };\n\n    }\n\n};\n\n\n///////////\n// Kdtree\n\nNGL.Kdtree = function( entity, useSquaredDist ){\n\n    if( NGL.debug ) NGL.time( \"NGL.Kdtree build\" );\n\n    if( useSquaredDist ){\n\n        var metric = function( a, b ){\n            var dx = a[0] - b[0];\n            var dy = a[1] - b[1];\n            var dz = a[2] - b[2];\n            return dx*dx + dy*dy + dz*dz;\n        };\n\n    }else{\n\n        var metric = function( a, b ){\n            var dx = a[0] - b[0];\n            var dy = a[1] - b[1];\n            var dz = a[2] - b[2];\n            return Math.sqrt( dx*dx + dy*dy + dz*dz );\n        };\n\n    }\n\n    var points = new Float32Array( entity.atomCount * 4 );\n    var i = 0;\n\n    var eachFnName = entity.eachSelectedAtom ? \"eachSelectedAtom\" : \"eachAtom\";\n\n    entity[ eachFnName ]( function( ap ){\n        points[ i + 0 ] = ap.x;\n        points[ i + 1 ] = ap.y;\n        points[ i + 2 ] = ap.z;\n        points[ i + 3 ] = ap.index;\n        i += 4;\n    } );\n\n    this.points = points;\n    this.kdtree = new THREE.TypedArrayUtils.Kdtree( points, metric, 4, 3 );\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.Kdtree build\" );\n\n};\n\nNGL.Kdtree.prototype = {\n\n    nearest: function(){\n\n        var pointArray = new Float32Array( 3 );\n\n        return function( point, maxNodes, maxDistance ){\n\n            // NGL.time( \"NGL.Kdtree nearest\" );\n\n            if( point instanceof THREE.Vector3 ){\n\n                point.toArray( pointArray );\n\n            }else if( point instanceof NGL.AtomProxy ){\n\n                point.positionToArray( pointArray );\n\n            }\n\n            var nodeList = this.kdtree.nearest(\n                pointArray, maxNodes, maxDistance\n            );\n\n            var points = this.points;\n            var resultList = [];\n\n            for( var i = 0, n = nodeList.length; i < n; ++i ){\n\n                var d = nodeList[ i ];\n                var node = d[ 0 ];\n                var dist = d[ 1 ];\n\n                resultList.push( {\n                    index: points[ node.pos + 3 ],\n                    distance: dist\n                } );\n\n            }\n\n            // NGL.timeEnd( \"NGL.Kdtree nearest\" );\n\n            return resultList;\n\n        };\n\n    }()\n\n};\n\n\n////////////\n// Contact\n\nNGL.Contact = function( sview1, sview2 ){\n\n    this.sview1 = sview1;\n    this.sview2 = sview2;\n\n    // this.kdtree1 = new NGL.Kdtree( sview1 );\n    this.kdtree2 = new NGL.Kdtree( sview2 );\n\n}\n\nNGL.Contact.prototype = {\n\n    within: function( maxDistance, minDistance ){\n\n        NGL.time( \"NGL.Contact within\" );\n\n        var kdtree1 = this.kdtree1;\n        var kdtree2 = this.kdtree2;\n\n        var ap2 = this.sview1.getAtomProxy();\n        var atomSet = this.sview1.getAtomSet( false );\n        var bondStore = new NGL.BondStore();\n\n        this.sview1.eachSelectedAtom( function( ap1 ){\n\n            var found = false;\n            var contacts = kdtree2.nearest(\n                ap1, Infinity, maxDistance\n            );\n\n            for( var j = 0, m = contacts.length; j < m; ++j ){\n\n                var d = contacts[ j ];\n                ap2.index = d.index;\n\n                if( ap1.residueIndex !== ap2.residueIndex &&\n                    ( !minDistance || d.distance > minDistance ) ){\n                    found = true;\n                    atomSet.add_unsafe( ap2.index );\n                    bondStore.addBond( ap1, ap2, 1 );\n                }\n\n            }\n\n            if( found ){\n                atomSet.add_unsafe( ap1.index );\n            }\n\n        } );\n\n        var bondSet = new TypedFastBitSet( bondStore.count );\n        bondSet.set_all( true );\n\n        NGL.timeEnd( \"NGL.Contact within\" );\n\n        return {\n            atomSet: atomSet,\n            bondSet: bondSet,\n            bondStore: bondStore\n        };\n\n    }\n\n}\n\n\nNGL.polarContacts = function( structure, maxDistance, maxAngle ){\n\n    maxDistance = maxDistance || 3.5;\n    maxAngle = maxAngle || 40;\n\n    var donorSelection = new NGL.Selection(\n        \"( ARG and ( .NE or .NH1 or .NH2 ) ) or \" +\n        \"( ASP and .ND2 ) or \" +\n        \"( GLN and .NE2 ) or \" +\n        \"( HIS and ( .ND1 or .NE2 ) ) or \" +\n        \"( LYS and .NZ ) or \" +\n        \"( SER and .OG ) or \" +\n        \"( THR and .OG1 ) or \" +\n        \"( TRP and .NE1 ) or \" +\n        \"( TYR and .OH ) or \" +\n        \"( PROTEIN and .N )\"\n    );\n\n    var acceptorSelection = new NGL.Selection(\n        \"( ASN and .OD1 ) or \" +\n        \"( ASP and ( OD1 or .OD2 ) ) or \" +\n        \"( GLN and .OE1 ) or \" +\n        \"( GLU and ( .OE1 or .OE2 ) ) or \" +\n        \"( HIS and ( .ND1 or .NE2 ) ) or \" +\n        \"( SER and .OG ) or \" +\n        \"( THR and .OG1 ) or \" +\n        \"( TYR and .OH ) or \" +\n        \"( PROTEIN and .O )\"\n    );\n\n    var donorView = structure.getView( donorSelection );\n    var acceptorView = structure.getView( acceptorSelection );\n\n    var contact = new NGL.Contact( donorView, acceptorView );\n    var data = contact.within( maxDistance );\n    var bondStore = data.bondStore;\n\n    var ap1 = structure.getAtomProxy();\n    var ap2 = structure.getAtomProxy();\n    var atomCA = structure.getAtomProxy();\n    var atomC = structure.getAtomProxy();\n    var rp = structure.getResidueProxy();\n    var rpPrev = structure.getResidueProxy();\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n\n    var checkAngle = function( atom1, atom2, oName, cName ){\n\n        var atomO, atomN;\n\n        if( atom1.atomname === oName ){\n            atomO = atom1;\n            atomN = atom2;\n        }else{\n            atomO = atom2;\n            atomN = atom1;\n        }\n\n        rp.index = atomO.residueIndex;\n        var atomC = rp.getAtomIndexByName( cName ) + rp.atomOffset;\n\n        v1.subVectors( atomC, atomO );\n        v2.subVectors( atomC, atomN );\n\n        return THREE.Math.radToDeg( v1.angleTo( v2 ) ) < maxAngle;\n\n    }\n\n    for( var i = 0, il = bondStore.count; i < il; ++i ){\n\n        ap1.index = bondStore.atomIndex1[ i ];\n        ap2.index = bondStore.atomIndex2[ i ];\n\n        if( ( ap1.atomname === \"O\" && ap2.atomname === \"N\" ) ||\n            ( ap1.atomname === \"N\" && ap2.atomname === \"O\" )\n        ){\n\n            // ignore backbone to backbone contacts\n            data.bondSet.flip_unsafe( i );\n            continue;\n\n        }else if( ap1.atomname === \"N\" || ap2.atomname === \"N\" ){\n\n            var atomN, atomX;\n\n            if( ap1.atomname === \"N\" ){\n                atomN = ap1;\n                atomX = ap2;\n            }else{\n                atomN = ap2;\n                atomX = ap1;\n            }\n\n            rp.index = atomN.residueIndex;\n            atomCA.index = rp.getAtomIndexByName( \"CA\" ) + rp.atomOffset;\n            if( atomCA.index === undefined ) continue;\n\n            var prevRes = rp.getPreviousConnectedResidue( rpPrev );\n            if( prevRes === undefined ) continue;\n\n            atomC.index = prevRes.getAtomIndexByName( \"C\" ) + prevRes.atomOffset;\n            if( atomC.index === undefined ) continue;\n\n            v1.subVectors( atomN, atomC );\n            v2.subVectors( atomN, atomCA );\n            v1.add( v2 ).multiplyScalar( 0.5 );\n            v2.subVectors( atomX, atomN );\n\n            if( THREE.Math.radToDeg( v1.angleTo( v2 ) ) > maxAngle ){\n                data.bondSet.flip_unsafe( i );\n            }\n\n        }else if(\n            ( ap1.atomname === \"OH\" && ap1.resname === \"TYR\" ) ||\n            ( ap2.atomname === \"OH\" && ap2.resname === \"TYR\" )\n        ){\n\n            if( !checkAngle( ap1, ap2, \"OH\", \"CZ\" ) ){\n                data.bondSet.flip_unsafe( i );\n            }\n\n        }\n\n    }\n\n    return {\n        atomSet: data.atomSet,\n        bondSet: data.bondSet,\n        bondStore: data.bondStore\n    };\n\n}\n\n\nNGL.polarBackboneContacts = function( structure, maxDistance, maxAngle ){\n\n    maxDistance = maxDistance || 3.5;\n    maxAngle = maxAngle || 40;\n\n    var donorSelection = new NGL.Selection(\n        \"( PROTEIN and .N )\"\n    );\n\n    var acceptorSelection = new NGL.Selection(\n        \"( PROTEIN and .O )\"\n    );\n\n    var donorView = structure.getView( donorSelection );\n    var acceptorView = structure.getView( acceptorSelection );\n\n    var contact = new NGL.Contact( donorView, acceptorView );\n    var data = contact.within( maxDistance );\n    var bondStore = data.bondStore;\n\n    var ap1 = structure.getAtomProxy();\n    var ap2 = structure.getAtomProxy();\n    var atomCA = structure.getAtomProxy();\n    var atomC = structure.getAtomProxy();\n    var rp = structure.getResidueProxy();\n    var rpPrev = structure.getResidueProxy();\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n\n    for( var i = 0, il = bondStore.count; i < il; ++i ){\n\n        ap1.index = bondStore.atomIndex1[ i ];\n        ap2.index = bondStore.atomIndex2[ i ];\n\n        var atomN, atomO;\n\n        if( ap1.atomname === \"N\" ){\n            atomN = ap1;\n            atomO = ap2;\n        }else{\n            atomN = ap2;\n            atomO = ap1;\n        }\n\n        rp.index = atomN.residueIndex;\n\n        atomCA.index = rp.getAtomIndexByName( \"CA\" ) + rp.atomOffset;\n        if( atomCA.index === undefined ) continue;\n\n        var prevRes = rp.getPreviousConnectedResidue( rpPrev );\n        if( prevRes === undefined ) continue;\n\n        atomC.index = prevRes.getAtomIndexByName( \"C\" ) + prevRes.atomOffset;\n        if( atomC.index === undefined ) continue;\n\n        v1.subVectors( atomN, atomC );\n        v2.subVectors( atomN, atomCA );\n        v1.add( v2 ).multiplyScalar( 0.5 );\n        v2.subVectors( atomO, atomN );\n\n        // NGL.log( THREE.Math.radToDeg( v1.angleTo( v2 ) ) );\n\n        if( THREE.Math.radToDeg( v1.angleTo( v2 ) ) > maxAngle ){\n            data.bondSet.flip_unsafe( i );\n        }\n\n    }\n\n    return {\n        atomSet: data.atomSet,\n        bondSet: data.bondSet,\n        bondStore: data.bondStore\n    };\n\n}\n\n// File:js/ngl/selection.js\n\n/**\n * @file Selection\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n//////////////\n// Selection\n\nNGL.Selection = function( string ){\n\n    var SIGNALS = signals;\n\n    this.signals = {\n        stringChanged: new SIGNALS.Signal(),\n    };\n\n    this.setString( string );\n\n};\n\n\nNGL.Selection.Keywords = {\n    \"PROTEIN\": 1,\n    \"NUCLEIC\": 2,\n    \"RNA\": 3,\n    \"DNA\": 4,\n    \"POLYMER\": 5,\n    \"WATER\": 6,\n    \"HELIX\": 7,\n    \"SHEET\": 8,\n    \"BACKBONE\": 9,\n    \"SIDECHAIN\": 10,\n    \"ALL\": 11,\n    \"HETERO\": 12,\n    \"ION\": 13\n};\n\n\nNGL.Selection.prototype = {\n\n    constructor: NGL.Selection,\n\n    setString: function( string, silent ){\n\n        if( string === undefined ) string = this.string || \"\";\n        if( string === this.string ) return;\n\n        //\n\n        try{\n            this.parse( string );\n        }catch( e ){\n            // NGL.error( e.stack );\n            this.selection = { \"error\": e.message };\n        }\n\n        this.string = string;\n\n        this.test = this.makeAtomTest();\n        this.residueTest = this.makeResidueTest();\n        this.chainTest = this.makeChainTest();\n        this.modelTest = this.makeModelTest();\n\n        this.atomOnlyTest = this.makeAtomTest( true );\n        this.residueOnlyTest = this.makeResidueTest( true );\n        this.chainOnlyTest = this.makeChainTest( true )\n        this.modelOnlyTest = this.makeModelTest( true );\n\n        if( !silent ){\n            this.signals.stringChanged.dispatch( this.string );\n        }\n\n    },\n\n    parse: function( string ){\n\n        this.selection = {\n            operator: undefined,\n            rules: []\n        };\n\n        if( !string ) return;\n\n        var scope = this;\n\n        var kwd = NGL.Selection.Keywords;\n        var selection = this.selection;\n        var selectionStack = [];\n        var newSelection, oldSelection;\n        var andContext = null;\n\n        string = string.replace( /\\(/g, ' ( ' ).replace( /\\)/g, ' ) ' ).trim();\n        if( string.charAt( 0 ) === \"(\" && string.substr( -1 ) === \")\" ){\n            string = string.slice( 1, -1 ).trim();\n        }\n        var chunks = string.split( /\\s+/ );\n\n        // NGL.log( string, chunks )\n\n        var all = [ \"*\", \"\", \"ALL\" ];\n\n        var c, sele, i, error, not;\n        var atomname, chain, resno, resname, model, resi, altloc, inscode;\n        var j = 0;\n\n        var createNewContext = function( operator ){\n\n            newSelection = {\n                operator: operator,\n                rules: []\n            };\n            if( selection === undefined ){\n                selection = newSelection;\n                scope.selection = newSelection;\n            }else{\n                selection.rules.push( newSelection );\n                selectionStack.push( selection );\n                selection = newSelection;\n            }\n            j = 0;\n\n        }\n\n        var getPrevContext = function( operator ){\n\n            oldSelection = selection;\n            selection = selectionStack.pop();\n            if( selection === undefined ){\n                createNewContext( operator );\n                pushRule( oldSelection );\n            }else{\n                j = selection.rules.length;\n            }\n\n        }\n\n        var pushRule = function( rule ){\n\n            selection.rules.push( rule );\n            j += 1;\n\n        }\n\n        for( i = 0; i < chunks.length; ++i ){\n\n            c = chunks[ i ];\n\n            // handle parens\n\n            if( c === \"(\" ){\n\n                // NGL.log( \"(\" );\n\n                not = false;\n                createNewContext();\n                continue;\n\n            }else if( c === \")\" ){\n\n                // NGL.log( \")\" );\n\n                getPrevContext();\n                if( selection.negate ){\n                    getPrevContext();\n                }\n                continue;\n\n            }\n\n            // leave 'not' context\n\n            if( not > 0 ){\n\n                if( c.toUpperCase() === \"NOT\" ){\n\n                    not = 1;\n\n                }else if( not === 1 ){\n\n                    not = 2;\n\n                }else if( not === 2 ){\n\n                    not = false;\n                    getPrevContext();\n\n                }else{\n\n                    throw new Error( \"something went wrong with 'not'\" );\n\n                }\n\n            }\n\n            // handle logic operators\n\n            if( c.toUpperCase() === \"AND\" ){\n\n                // NGL.log( \"AND\" );\n\n                if( selection.operator === \"OR\" ){\n                    var lastRule = selection.rules.pop();\n                    createNewContext( \"AND\" );\n                    pushRule( lastRule );\n                }else{\n                    selection.operator = \"AND\";\n                }\n                continue;\n\n            }else if( c.toUpperCase() === \"OR\" ){\n\n                // NGL.log( \"OR\" );\n\n                if( selection.operator === \"AND\" ){\n                    getPrevContext( \"OR\" );\n                }else{\n                    selection.operator = \"OR\";\n                }\n                continue;\n\n            }else if( c.toUpperCase() === \"NOT\" ){\n\n                // NGL.log( \"NOT\", j );\n\n                not = 1;\n                createNewContext();\n                selection.negate = true;\n                continue;\n\n            }else{\n\n                // NGL.log( \"chunk\", c, j, selection );\n\n            }\n\n            // handle keyword attributes\n\n            sele = {};\n\n            if( c.toUpperCase() === \"HETERO\" ){\n                sele.keyword = kwd.HETERO;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"WATER\" ){\n                sele.keyword = kwd.WATER;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"PROTEIN\" ){\n                sele.keyword = kwd.PROTEIN;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"NUCLEIC\" ){\n                sele.keyword = kwd.NUCLEIC;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"RNA\" ){\n                sele.keyword = kwd.RNA;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"DNA\" ){\n                sele.keyword = kwd.DNA;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"POLYMER\" ){\n                sele.keyword = kwd.POLYMER;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"ION\" ){\n                sele.keyword = kwd.ION;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"HYDROGEN\" ){\n                sele.element = \"H\";\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"SMALL\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"GLY\" },\n                        { resname: \"ALA\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"NUCLEOPHILIC\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"SER\" },\n                        { resname: \"THR\" },\n                        { resname: \"CYS\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"HYDROPHOBIC\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"VAL\" },\n                        { resname: \"LEU\" },\n                        { resname: \"ILE\" },\n                        { resname: \"MET\" },\n                        { resname: \"PRO\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"AROMATIC\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"PHE\" },\n                        { resname: \"TYR\" },\n                        { resname: \"TRP\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"AMIDE\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"ASN\" },\n                        { resname: \"GLN\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"ACIDIC\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"ASP\" },\n                        { resname: \"GLU\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"BASIC\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"HIS\" },\n                        { resname: \"LYS\" },\n                        { resname: \"ARG\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"CHARGED\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"ASP\" },\n                        { resname: \"GLU\" },\n                        { resname: \"HIS\" },\n                        { resname: \"LYS\" },\n                        { resname: \"ARG\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"POLAR\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"ASP\" },\n                        { resname: \"GLU\" },\n                        { resname: \"HIS\" },\n                        { resname: \"LYS\" },\n                        { resname: \"ARG\" },\n                        { resname: \"ASN\" },\n                        { resname: \"GLN\" },\n                        { resname: \"SER\" },\n                        { resname: \"THR\" },\n                        { resname: \"TYR\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"NONPOLAR\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { resname: \"ALA\" },\n                        { resname: \"CYS\" },\n                        { resname: \"GLY\" },\n                        { resname: \"ILE\" },\n                        { resname: \"LEU\" },\n                        { resname: \"MET\" },\n                        { resname: \"PHE\" },\n                        { resname: \"PRO\" },\n                        { resname: \"VAL\" },\n                        { resname: \"TRP\" }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"HELIX\" ){\n                sele.keyword = kwd.HELIX;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"SHEET\" ){\n                sele.keyword = kwd.SHEET;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"TURN\" ){\n                sele = {\n                    operator: \"AND\",\n                    rules: [\n                        {\n                            operator: \"OR\",\n                            negate: true,\n                            rules: [\n                                { keyword: kwd.HELIX },\n                                { keyword: kwd.SHEET }\n                            ]\n                        },\n                        {\n                            operator: \"OR\",\n                            rules: [\n                                { keyword: kwd.PROTEIN },\n                                { sstruc: \"s\" },\n                                { sstruc: \"t\" },\n                                { sstruc: \"l\" }\n                            ]\n                        }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"BACKBONE\" ){\n                sele.keyword = kwd.BACKBONE;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"SIDECHAIN\" ){\n                sele.keyword = kwd.SIDECHAIN;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.toUpperCase() === \"SIDECHAINATTACHED\" ){\n                sele = {\n                    operator: \"OR\",\n                    rules: [\n                        { keyword: kwd.SIDECHAIN },\n                        {\n                            operator: \"AND\",\n                            negate: false,\n                            rules: [\n                                { keyword: kwd.PROTEIN },\n                                {\n                                    operator: \"OR\",\n                                    negate: false,\n                                    rules: [\n                                        { atomname: \"CA\" },\n                                        { atomname: \"BB\" }\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            operator: \"AND\",\n                            negate: false,\n                            rules: [\n                                { resname: \"PRO\" },\n                                { atomname: \"N\" }\n                            ]\n                        },\n                        {\n                            operator: \"AND\",\n                            negate: false,\n                            rules: [\n                                { keyword: kwd.NUCLEIC },\n                                {\n                                    operator: \"OR\",\n                                    negate: true,\n                                    rules: [\n                                        { atomname: \"P\" },\n                                        { atomname: \"OP1\" },\n                                        { atomname: \"OP2\" },\n                                        { atomname: \"O3'\" },\n                                        { atomname: \"O3*\" },\n                                        { atomname: \"O5'\" },\n                                        { atomname: \"O5*\" },\n                                        { atomname: \"C5'\" },\n                                        { atomname: \"C5*\" }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                };\n                pushRule( sele );\n                continue;\n            }\n\n            if( all.indexOf( c.toUpperCase() )!==-1 ){\n                sele.keyword = kwd.ALL;\n                pushRule( sele );\n                continue;\n            }\n\n            // handle atom expressions\n\n            if( c.charAt( 0 ) === \"@\" ){\n                var indexList = c.substr( 1 ).split( \",\" );\n                for( var k = 0, kl = indexList.length; k < kl; ++k ){\n                    indexList[ k ] = parseInt( indexList[ k ] );\n                }\n                indexList.sort( function( a, b ){ return a - b; } );\n                sele.atomindex = indexList;\n                pushRule( sele );\n                continue;\n            }\n\n            if( c.charAt( 0 ) === \"#\" ){\n                sele.element = c.substr( 1 ).toUpperCase();\n                pushRule( sele );\n                continue;\n            }\n\n            if( c[0] === \"[\" && c[c.length-1] === \"]\" ){\n                sele.resname = c.substr( 1, c.length-2 ).toUpperCase();\n                pushRule( sele );\n                continue;\n            }else if( ( c.length >= 1 && c.length <= 4 ) &&\n                    c[0] !== \"^\" && c[0] !== \":\" && c[0] !== \".\" && c[0] !== \"%\" && c[0] !== \"/\" &&\n                    isNaN( parseInt( c ) ) ){\n\n                sele.resname = c.toUpperCase();\n                pushRule( sele );\n                continue;\n            }\n\n            // there must be only one constraint per rule\n            // otherwise a test quickly becomes not applicable\n            // e.g. chainTest for chainname when resno is present too\n\n            sele = {\n                operator: \"AND\",\n                rules: []\n            };\n\n            model = c.split(\"/\");\n            if( model.length > 1 && model[1] ){\n                if( isNaN( parseInt( model[1] ) ) ){\n                    throw new Error( \"model must be an integer\" );\n                }\n                sele.rules.push( {\n                    model: parseInt( model[1] )\n                } );\n            }\n\n            altloc = model[0].split(\"%\");\n            if( altloc.length > 1 ){\n                sele.rules.push( {\n                    altloc: altloc[1]\n                } );\n            }\n\n            atomname = altloc[0].split(\".\");\n            if( atomname.length > 1 && atomname[1] ){\n                if( atomname[1].length > 4 ){\n                    throw new Error( \"atomname must be one to four characters\" );\n                }\n                sele.rules.push( {\n                    atomname: atomname[1].substring( 0, 4 ).toUpperCase()\n                } );\n            }\n\n            chain = atomname[0].split(\":\");\n            if( chain.length > 1 && chain[1] ){\n                sele.rules.push( {\n                    chainname: chain[1]\n                } );\n            }\n\n            inscode = chain[0].split(\"^\");\n            if( inscode.length > 1 ){\n                sele.rules.push( {\n                    inscode: inscode[1]\n                } );\n            }\n\n            if( inscode[0] ){\n                resi = inscode[0].split(\"-\");\n                if( resi.length === 1 ){\n                    resi = parseInt( resi[0] );\n                    if( isNaN( resi ) ){\n                        throw new Error( \"resi must be an integer\" );\n                    }\n                    sele.rules.push( {\n                        resno: resi\n                    } );\n                }else if( resi.length === 2 ){\n                    sele.rules.push( {\n                        resno: [ parseInt( resi[0] ), parseInt( resi[1] ) ]\n                    } );\n                }else{\n                    throw new Error( \"resi range must contain one '-'\" );\n                }\n            }\n\n            // round up\n\n            if( sele.rules.length === 1 ){\n                pushRule( sele.rules[ 0 ] );\n            }else if( sele.rules.length > 1 ){\n                pushRule( sele );\n            }else{\n                throw new Error( \"empty selection chunk\" );\n            }\n\n        }\n\n        // cleanup\n\n        if( this.selection.operator === undefined &&\n                this.selection.rules.length === 1 &&\n                this.selection.rules[ 0 ].hasOwnProperty( \"operator\" ) ){\n\n            this.selection = this.selection.rules[ 0 ];\n\n        }\n\n    },\n\n    _makeTest: function( fn, selection ){\n\n        if( selection === undefined ) selection = this.selection;\n        if( selection === null ) return false;\n        if( selection.error ) return false;\n\n        var n = selection.rules.length;\n        if( n === 0 ) return false;\n\n        var t = selection.negate ? false : true;\n        var f = selection.negate ? true : false;\n        var k = NGL.Selection.Keywords;\n\n        var s, and, ret, na;\n        var subTests = [];\n\n        for( var i = 0; i < n; ++i ){\n            s = selection.rules[ i ];\n            if( s.hasOwnProperty( \"operator\" ) ){\n                subTests[ i ] = this._makeTest( fn, s );\n            }\n        }\n\n        // ( x and y ) can short circuit on false\n        // ( x or y ) can short circuit on true\n        // not ( x and y )\n\n        return function( entity ){\n\n            and = selection.operator === \"AND\";\n            na = false;\n\n            for( var i = 0; i < n; ++i ){\n\n                s = selection.rules[ i ];\n\n                if( s.hasOwnProperty( \"operator\" ) ){\n\n                    if( subTests[ i ] ){\n                        ret = subTests[ i ]( entity );\n                    }else{\n                        ret = -1;\n                    }\n\n                    if( ret === -1 ){\n                        // return -1;\n                        na = true;\n                        continue;\n                    }else if( ret === true){\n                        if( and ){ continue; }else{ return t; }\n                    }else{\n                        if( and ){ return f; }else{ continue; }\n                    }\n\n                }else{\n\n                    if( s.keyword===k.ALL ){\n                        if( and ){ continue; }else{ return t; }\n                    }\n\n                    ret = fn( entity, s );\n\n                    // console.log( entity.qualifiedName(), ret, s, selection.negate, \"t\", t, \"f\", f )\n\n                    if( ret === -1 ){\n                        // return -1;\n                        na = true;\n                        continue;\n                    }else if( ret === true){\n                        if( and ){ continue; }else{ return t; }\n                    }else{\n                        if( and ){ return f; }else{ continue; }\n                    }\n\n                }\n\n            }\n\n            if( na ){\n                return -1;\n            }else{\n                if( and ){ return t; }else{ return f; }\n            }\n\n        }\n\n    },\n\n    _filter: function( fn, selection ){\n\n        if( selection === undefined ) selection = this.selection;\n        if( selection.error ) return selection;\n\n        var n = selection.rules.length;\n        if( n === 0 ) return selection;\n\n        var filtered = {\n            operator: selection.operator,\n            rules: []\n        };\n        if( selection.hasOwnProperty( \"negate\" ) ){\n            filtered.negate = selection.negate;\n        }\n\n        for( var i = 0; i < n; ++i ){\n\n            var s = selection.rules[ i ];\n            if( s.hasOwnProperty( \"operator\" ) ){\n                var fs = this._filter( fn, s );\n                if( fs !== null ) filtered.rules.push( fs );\n            }else if( !fn( s ) ){\n                filtered.rules.push( s );\n            }\n\n        }\n\n        if( filtered.rules.length > 0 ){\n\n            // TODO maybe the filtered rules could be returned\n            // in some case, but the way how tests are applied\n            // e.g. when traversing a structure would also need\n            // to change\n            return selection;\n            // return filtered;\n\n        }else{\n\n            return null;\n\n        }\n\n    },\n\n    makeAtomTest: function( atomOnly ){\n\n        var helixTypes = [ \"h\", \"g\", \"i\" ];\n        var sheetTypes = [ \"e\", \"b\" ];\n        var kwd = NGL.Selection.Keywords;\n\n        var selection;\n\n        if( atomOnly ){\n\n            // console.log( this.selection )\n\n            selection = this._filter( function( s ){\n                if( s.keyword!==undefined &&\n                        s.keyword!==kwd.BACKBONE && s.keyword!==kwd.SIDECHAIN\n                ) return true;\n                if( s.model!==undefined ) return true;\n                if( s.chainname!==undefined ) return true;\n                if( s.resname!==undefined ) return true;\n                if( s.resno!==undefined ) return true;\n                if( s.sstruc!==undefined ) return true;\n                return false;\n            } );\n\n        }else{\n\n            selection = this.selection;\n\n        }\n\n        var fn = function( a, s ){\n\n            // returning -1 means the rule is not applicable\n            if( s.atomname===undefined && s.element===undefined &&\n                    s.altloc===undefined && s.atomindex===undefined &&\n                    // s.keyword!==kwd.BACKBONE && s.keyword!==kwd.SIDECHAIN &&\n                    s.keyword===undefined && s.inscode===undefined &&\n                    s.resname===undefined && s.sstruc===undefined &&\n                    s.resno===undefined && s.chainname===undefined &&\n                    s.model===undefined\n            ) return -1;\n\n            if( s.keyword!==undefined ){\n                if( s.keyword===kwd.BACKBONE && !a.isBackbone() ) return false;\n                if( s.keyword===kwd.SIDECHAIN && !a.isSidechain() ) return false;\n\n                if( s.keyword===kwd.HETERO && !a.isHetero() ) return false;\n                if( s.keyword===kwd.PROTEIN && !a.isProtein() ) return false;\n                if( s.keyword===kwd.NUCLEIC && !a.isNucleic() ) return false;\n                if( s.keyword===kwd.RNA && !a.isRna() ) return false;\n                if( s.keyword===kwd.DNA && !a.isDna() ) return false;\n                if( s.keyword===kwd.POLYMER && !a.isPolymer() ) return false;\n                if( s.keyword===kwd.WATER && !a.isWater() ) return false;\n                if( s.keyword===kwd.HELIX && helixTypes.indexOf( a.sstruc )===-1 ) return false;\n                if( s.keyword===kwd.SHEET && sheetTypes.indexOf( a.sstruc )===-1 ) return false;\n                if( s.keyword===kwd.ION && !a.isIon() ) return false;\n            }\n\n            if( s.atomname!==undefined && s.atomname!==a.atomname ) return false;\n            if( s.element!==undefined && s.element!==a.element ) return false;\n            if( s.altloc!==undefined && s.altloc!==a.altloc ) return false;\n\n            if( s.atomindex!==undefined &&\n                    NGL.binarySearchIndexOf( s.atomindex, a.index ) < 0\n            ) return false;\n\n            if( s.resname!==undefined && s.resname!==a.resname ) return false;\n            if( s.sstruc!==undefined && s.sstruc!==a.sstruc ) return false;\n            if( s.resno!==undefined ){\n                if( Array.isArray( s.resno ) && s.resno.length===2 ){\n                    if( s.resno[0]>a.resno || s.resno[1]<a.resno ) return false;\n                }else{\n                    if( s.resno!==a.resno ) return false;\n                }\n            }\n            if( s.inscode!==undefined && s.inscode!==a.inscode ) return false;\n\n            if( s.chainname!==undefined && s.chainname!==a.chainname ) return false;\n            if( s.model!==undefined && s.model!==a.modelIndex ) return false;\n\n            return true;\n\n        }\n\n        return this._makeTest( fn, selection );\n\n    },\n\n    makeResidueTest: function( residueOnly ){\n\n        var helixTypes = [ \"h\", \"g\", \"i\" ];\n        var sheetTypes = [ \"e\", \"b\" ];\n        var kwd = NGL.Selection.Keywords;\n\n        var selection;\n\n        if( residueOnly ){\n\n            // console.log( this.selection )\n\n            selection = this._filter( function( s ){\n                if( s.keyword===kwd.BACKBONE || s.keyword===kwd.SIDECHAIN ) return true;\n                if( s.model!==undefined ) return true;\n                if( s.chainname!==undefined ) return true;\n                if( s.atomname!==undefined ) return true;\n                if( s.element!==undefined ) return true;\n                if( s.altloc!==undefined ) return true;\n                if( s.atomindex!==undefined ) return true;\n                return false;\n            } );\n\n        }else{\n\n            selection = this.selection;\n\n        }\n\n        var fn = function( r, s ){\n\n            // returning -1 means the rule is not applicable\n            if( s.resname===undefined && s.resno===undefined && s.inscode===undefined &&\n                    s.sstruc===undefined && s.model===undefined && s.chainname===undefined &&\n                    ( s.keyword===undefined || s.keyword===kwd.BACKBONE || s.keyword===kwd.SIDECHAIN )\n            ) return -1;\n\n            if( s.keyword!==undefined ){\n                if( s.keyword===kwd.HETERO && !r.isHetero() ) return false;\n                if( s.keyword===kwd.PROTEIN && !r.isProtein() ) return false;\n                if( s.keyword===kwd.NUCLEIC && !r.isNucleic() ) return false;\n                if( s.keyword===kwd.RNA && !r.isRna() ) return false;\n                if( s.keyword===kwd.DNA && !r.isDna() ) return false;\n                if( s.keyword===kwd.POLYMER && !r.isPolymer() ) return false;\n                if( s.keyword===kwd.WATER && !r.isWater() ) return false;\n                if( s.keyword===kwd.HELIX && helixTypes.indexOf( r.sstruc )===-1 ) return false;\n                if( s.keyword===kwd.SHEET && sheetTypes.indexOf( r.sstruc )===-1 ) return false;\n                if( s.keyword===kwd.ION && !r.isIon() ) return false;\n            }\n\n            if( s.resname!==undefined && s.resname!==r.resname ) return false;\n            if( s.sstruc!==undefined && s.sstruc!==r.sstruc ) return false;\n            if( s.resno!==undefined ){\n                if( Array.isArray( s.resno ) && s.resno.length===2 ){\n                    if( s.resno[0]>r.resno || s.resno[1]<r.resno ) return false;\n                }else{\n                    if( s.resno!==r.resno ) return false;\n                }\n            }\n            if( s.inscode!==undefined && s.inscode!==r.inscode ) return false;\n\n            if( s.chainname!==undefined && s.chainname!==r.chainname ) return false;\n            if( s.model!==undefined && s.model!==r.modelIndex ) return false;\n\n            return true;\n\n        }\n\n        return this._makeTest( fn, selection );\n\n    },\n\n    makeChainTest: function( chainOnly ){\n\n        var selection;\n\n        if( chainOnly ){\n\n            // console.log( this.selection )\n\n            selection = this._filter( function( s ){\n                if( s.keyword!==undefined ) return true;\n                // if( s.model!==undefined ) return true;\n                if( s.resname!==undefined ) return true;\n                if( s.resno!==undefined ) return true;\n                if( s.atomname!==undefined ) return true;\n                if( s.element!==undefined ) return true;\n                if( s.altloc!==undefined ) return true;\n                if( s.sstruc!==undefined ) return true;\n                if( s.inscode!==undefined ) return true;\n                if( s.atomindex!==undefined ) return true;\n                return false;\n            } );\n\n        }else{\n\n            selection = this.selection;\n\n        }\n\n        var fn = function( c, s ){\n\n            // returning -1 means the rule is not applicable\n            if( s.chainname===undefined && s.model===undefined ) return -1;\n\n            if( s.chainname!==undefined && s.chainname!==c.chainname ) return false;\n\n            if( s.model!==undefined && s.model!==c.modelIndex ) return false;\n\n            return true;\n\n        }\n\n        return this._makeTest( fn, selection );\n\n    },\n\n    makeModelTest: function( modelOnly ){\n\n        var selection;\n\n        if( modelOnly ){\n\n            // console.log( this.selection )\n\n            selection = this._filter( function( s ){\n                if( s.keyword!==undefined ) return true;\n                if( s.chainname!==undefined ) return true;\n                if( s.resname!==undefined ) return true;\n                if( s.resno!==undefined ) return true;\n                if( s.atomname!==undefined ) return true;\n                if( s.element!==undefined ) return true;\n                if( s.altloc!==undefined ) return true;\n                if( s.sstruc!==undefined ) return true;\n                if( s.inscode!==undefined ) return true;\n                if( s.atomindex!==undefined ) return true;\n                return false;\n            } );\n\n        }else{\n\n            selection = this.selection;\n\n        }\n\n        var fn = function( m, s ){\n\n            // returning -1 means the rule is not applicable\n            if( s.model===undefined ) return -1;\n\n            if( s.model!==undefined && s.model!==m.index ) return false;\n\n            return true;\n\n        }\n\n        return this._makeTest( fn, selection );\n\n    }\n\n};\n\n// File:js/ngl/superposition.js\n\n/**\n * @file Superposition\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n/////////\n// Math\n\nNGL.Matrix = function( columns, rows ){\n\n    var dtype = jsfeat.F32_t | jsfeat.C1_t;\n\n    return new jsfeat.matrix_t( columns, rows, dtype );\n\n};\n\n\n//////////////////\n// Superposition\n\nNGL.Superposition = function( atoms1, atoms2 ){\n\n    // allocate & init data structures\n\n    var n;\n    if( typeof atoms1.eachSelectedAtom === \"function\" ){\n        n = atoms1.atomCount;\n    }else if( atoms1 instanceof Float32Array ){\n        n = atoms1.length / 3;\n    }\n\n    var coords1 = new NGL.Matrix( 3, n );\n    var coords2 = new NGL.Matrix( 3, n );\n\n    this.coords1t = new NGL.Matrix( n, 3 );\n    this.coords2t = new NGL.Matrix( n, 3 );\n\n    this.A = new NGL.Matrix( 3, 3 );\n    this.W = new NGL.Matrix( 1, 3 );\n    this.U = new NGL.Matrix( 3, 3 );\n    this.V = new NGL.Matrix( 3, 3 );\n    this.VH = new NGL.Matrix( 3, 3 );\n    this.R = new NGL.Matrix( 3, 3 );\n\n    this.tmp = new NGL.Matrix( 3, 3 );\n    this.c = new NGL.Matrix( 3, 3 );\n    this.c.data.set([ 1, 0, 0, 0, 1, 0, 0, 0, -1 ]);\n\n    // prep coords\n\n    this.prepCoords( atoms1, coords1 );\n    this.prepCoords( atoms2, coords2 );\n\n    // superpose\n\n    this._superpose( coords1, coords2 );\n\n};\n\nNGL.Superposition.prototype = {\n\n    constructor: NGL.Superposition,\n\n    _superpose: function( coords1, coords2 ){\n\n        // NGL.time( \"superpose\" );\n\n        this.mean1 = jsfeat.matmath.mean_rows( coords1 );\n        this.mean2 = jsfeat.matmath.mean_rows( coords2 );\n\n        jsfeat.matmath.sub_rows( coords1, this.mean1 );\n        jsfeat.matmath.sub_rows( coords2, this.mean2 );\n\n        jsfeat.matmath.transpose( this.coords1t, coords1 );\n        jsfeat.matmath.transpose( this.coords2t, coords2 );\n\n        jsfeat.matmath.multiply_ABt( this.A, this.coords2t, this.coords1t );\n\n        var svd = jsfeat.linalg.svd_decompose(\n            this.A, this.W, this.U, this.V\n        );\n\n        jsfeat.matmath.invert_3x3( this.V, this.VH );\n        jsfeat.matmath.multiply_3x3( this.R, this.U, this.VH );\n\n        if( jsfeat.matmath.mat3x3_determinant( this.R ) < 0.0 ){\n\n            NGL.log( \"R not a right handed system\" );\n\n            jsfeat.matmath.multiply_3x3( this.tmp, this.c, this.VH );\n            jsfeat.matmath.multiply_3x3( this.R, this.U, this.tmp );\n\n        }\n\n        // NGL.timeEnd( \"superpose\" );\n\n    },\n\n    prepCoords: function( atoms, coords ){\n\n        var i = 0;\n        var cd = coords.data;\n\n        if( typeof atoms.eachSelectedAtom === \"function\" ){\n\n            atoms.eachSelectedAtom( function( a ){\n\n                cd[ i + 0 ] = a.x;\n                cd[ i + 1 ] = a.y;\n                cd[ i + 2 ] = a.z;\n\n                i += 3;\n\n            } );\n\n        }else if( atoms instanceof Float32Array ){\n\n            cd.set( atoms );\n\n        }else{\n\n            NGL.warn( \"prepCoords: input type unknown\" );\n\n        }\n\n    },\n\n    transform: function( atoms ){\n\n        // allocate data structures\n\n        var n;\n        if( typeof atoms.eachSelectedAtom === \"function\" ){\n            n = atoms.atomCount;\n        }else if( atoms instanceof Float32Array ){\n            n = atoms.length / 3;\n        }\n\n        var coords = new NGL.Matrix( 3, n );\n        var tmp = new NGL.Matrix( n, 3 );\n\n        // prep coords\n\n        this.prepCoords( atoms, coords );\n\n        // do transform\n\n        jsfeat.matmath.sub_rows( coords, this.mean1 );\n        jsfeat.matmath.multiply_ABt( tmp, this.R, coords );\n        jsfeat.matmath.transpose( coords, tmp );\n        jsfeat.matmath.add_rows( coords, this.mean2 );\n\n        var i = 0;\n        var cd = coords.data;\n\n        if( typeof atoms.eachSelectedAtom === \"function\" ){\n\n            atoms.eachSelectedAtom( function( a ){\n\n                a.x = cd[ i + 0 ];\n                a.y = cd[ i + 1 ];\n                a.z = cd[ i + 2 ];\n\n                i += 3;\n\n            } );\n\n        }else if( atoms instanceof Float32Array ){\n\n            atoms.set( cd.subarray( 0, n * 3 ) );\n\n        }else{\n\n            NGL.warn( \"transform: input type unknown\" );\n\n        }\n\n    }\n\n};\n\n\nNGL.superpose = function( s1, s2, align, sele1, sele2, xsele1, xsele2 ){\n\n    align = align || false;\n    sele1 = sele1 || \"\";\n    sele2 = sele2 || \"\";\n    xsele1 = xsele1 || \"\";\n    xsele2 = xsele2 || \"\";\n\n    var atoms1, atoms2;\n\n    if( align ){\n\n        var _s1 = s1;\n        var _s2 = s2;\n\n        if( sele1 && sele2 ){\n            _s1 = new NGL.StructureSubset( s1, new NGL.Selection( sele1 ) );\n            _s2 = new NGL.StructureSubset( s2, new NGL.Selection( sele2 ) );\n        }\n\n        var seq1 = _s1.getSequence();\n        var seq2 = _s2.getSequence();\n\n        // NGL.log( seq1.join(\"\") );\n        // NGL.log( seq2.join(\"\") );\n\n        var ali = new NGL.Alignment( seq1.join(\"\"), seq2.join(\"\") );\n\n        ali.calc();\n        ali.trace();\n\n        // NGL.log( \"superpose alignment score\", ali.score );\n\n        // NGL.log( ali.ali1 );\n        // NGL.log( ali.ali2 );\n\n        var l, _i, _j, x, y;\n        var i = 0;\n        var j = 0;\n        var n = ali.ali1.length;\n        var aliIdx1 = [];\n        var aliIdx2 = [];\n\n        for( l = 0; l < n; ++l ){\n\n            x = ali.ali1[ l ];\n            y = ali.ali2[ l ];\n\n            _i = 0;\n            _j = 0;\n\n            if( x === \"-\" ){\n                aliIdx2[ j ] = false;\n            }else{\n                aliIdx2[ j ] = true;\n                _i = 1;\n            }\n\n            if( y === \"-\" ){\n                aliIdx1[ i ] = false;\n            }else{\n                aliIdx1[ i ] = true;\n                _j = 1;\n            }\n\n            i += _i;\n            j += _j;\n\n        }\n\n        // NGL.log( i, j );\n\n        // NGL.log( aliIdx1 );\n        // NGL.log( aliIdx2 );\n\n        atoms1 = new NGL.AtomSet();\n        atoms2 = new NGL.AtomSet();\n\n        i = 0;\n        _s1.eachResidue( function( r ){\n\n            if( !r.getResname1() || !r.getAtomByName( \"CA\" ) ) return;\n\n            if( aliIdx1[ i ] ){\n                atoms1.addAtom( r.getAtomByName( \"CA\" ) );\n            }\n            i += 1;\n\n        } );\n\n        i = 0;\n        _s2.eachResidue( function( r ){\n\n            if( !r.getResname1() || !r.getAtomByName( \"CA\" ) ) return;\n\n            if( aliIdx2[ i ] ){\n                atoms2.addAtom( r.getAtomByName( \"CA\" ) );\n            }\n            i += 1;\n\n        } );\n\n    }else{\n\n        atoms1 = new NGL.AtomSet(\n            s1, new NGL.Selection( sele1 + \" and .CA\" )\n        );\n        atoms2 = new NGL.AtomSet(\n            s2, new NGL.Selection( sele2 + \" and .CA\" )\n        );\n\n    }\n\n    if( xsele1 && xsele2 ){\n\n        var _atoms1 = new NGL.AtomSet();\n        var _atoms2 = new NGL.AtomSet();\n\n        var xselection1 = new NGL.Selection( xsele1 );\n        var xselection2 = new NGL.Selection( xsele2 );\n\n        var test1 = xselection1.test;\n        var test2 = xselection2.test;\n\n        var i, a1, a2;\n        var n = atoms1.atomCount;\n\n        for( i = 0; i < n; ++i ){\n\n            a1 = atoms1.atoms[ i ];\n            a2 = atoms2.atoms[ i ];\n\n            if( test1( a1 ) && test2( a2 ) ){\n\n                _atoms1.addAtom( a1 );\n                _atoms2.addAtom( a2 );\n\n                // NGL.log( a1.qualifiedName(), a2.qualifiedName() )\n\n            }\n\n        }\n\n        atoms1 = _atoms1;\n        atoms2 = _atoms2;\n\n    }\n\n    var superpose = new NGL.Superposition( atoms1, atoms2 );\n\n    var atoms = new NGL.AtomSet( s1, new NGL.Selection( \"*\" ) );\n    superpose.transform( atoms );\n\n    s1.center = s1.atomCenter();\n\n}\n\n// File:js/ngl/structure.js\n\n/**\n * @file Structure\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n////////////\n// GidPool\n\nNGL.GidPool = {\n\n    // REMEMBER not synced with worker\n\n    nextGid: 1,\n\n    objectList: [],\n\n    rangeList: [],\n\n    getBaseObject: function( object ){\n\n        if( object.type === \"StructureView\" ){\n            object = object.getStructure();\n        }\n\n        return object;\n\n    },\n\n    addObject: function( object ){\n\n        object = this.getBaseObject( object );\n\n        NGL.GidPool.objectList.push( object );\n        NGL.GidPool.rangeList.push( NGL.GidPool.allocateGidRange( object ) );\n\n        return NGL.GidPool;\n\n    },\n\n    removeObject: function( object ){\n\n        object = this.getBaseObject( object );\n\n        var idx = NGL.GidPool.objectList.indexOf( object );\n\n        if( idx !== -1 ){\n\n            NGL.GidPool.objectList.splice( idx, 1 );\n            NGL.GidPool.rangeList.splice( idx, 1 );\n\n            if( NGL.GidPool.objectList.length === 0 ){\n                NGL.GidPool.nextGid = 1;\n            }\n\n        }\n\n        return NGL.GidPool;\n\n    },\n\n    updateObject: function( object, silent ){\n\n        object = this.getBaseObject( object );\n\n        var idx = NGL.GidPool.objectList.indexOf( object );\n\n        if( idx !== -1 ){\n\n            var range = NGL.GidPool.rangeList[ idx ];\n\n            if( range[1] === NGL.GidPool.nextGid ){\n                var count = NGL.GidPool.getGidCount( object );\n                NGL.GidPool.nextGid += count - ( range[1] - range[0] );\n                range[ 1 ] = NGL.GidPool.nextGid;\n            }else{\n                NGL.GidPool.rangeList[ idx ] = NGL.GidPool.allocateGidRange( object );\n            }\n\n        }else{\n\n            if( !silent ){\n                NGL.warn( \"NGL.GidPool.updateObject: object not found.\" );\n            }\n\n        }\n\n        return NGL.GidPool;\n\n    },\n\n    getGidCount: function( object ){\n\n        object = this.getBaseObject( object );\n\n        var count = 0;\n\n        if( object.type === \"Structure\" ){\n            count = (\n                object.atomStore.count +\n                object.bondStore.count +\n                object.backboneBondStore.count +\n                object.rungBondStore.count\n            );\n        }else if( object.type === \"Volume\" ){\n            count = object.__data.length;\n        }else{\n            NGL.warn( \"NGL.GidPool.getGidCount: unknown object type\" );\n        }\n\n        return count;\n\n    },\n\n    allocateGidRange: function( object ){\n\n        object = this.getBaseObject( object );\n\n        var firstGid = NGL.GidPool.nextGid;\n\n        NGL.GidPool.nextGid += NGL.GidPool.getGidCount( object );\n\n        if( NGL.GidPool.nextGid > Math.pow( 2, 24 ) ){\n            NGL.error( \"NGL.GidPool.allocateGidRange: GidPool overflown\" );\n        }\n\n        return [ firstGid, NGL.GidPool.nextGid ];\n\n    },\n\n    freeGidRange: function( object ){\n\n        object = this.getBaseObject( object );\n        // TODO\n\n    },\n\n    getNextGid: function(){\n\n        return NGL.GidPool.nextGid++;\n\n    },\n\n    getGid: function( object, offset ){\n\n        object = this.getBaseObject( object );\n        offset = offset || 0;\n\n        var gid = 0;\n        var idx = NGL.GidPool.objectList.indexOf( object );\n\n        if( idx !== -1 ){\n\n            var range = NGL.GidPool.rangeList[ idx ];\n            var first = range[ 0 ];\n\n            gid = first + offset;\n\n        }else{\n\n            NGL.warn( \"NGL.GidPool.getGid: object not found.\" );\n\n        }\n\n        return gid;\n\n    },\n\n    getByGid: function( gid ){\n\n        var entity;\n\n        NGL.GidPool.objectList.forEach( function( o, i ){\n\n            var range = NGL.GidPool.rangeList[ i ];\n            if( gid < range[ 0 ] || gid >= range[ 1 ] ){\n                return;\n            }\n            var offset = gid - range[ 0 ];\n\n            if( o.type === \"Structure\" ){\n\n                if( offset <= o.atomStore.count ){\n\n                    entity = o.getAtomProxy( offset );\n\n                }else if( offset <= o.atomStore.count + o.bondStore.count ){\n\n                    offset -= o.atomStore.count\n                    entity = o.getBondProxy( offset );\n\n                }else if( offset <= o.atomStore.count + o.bondStore.count + o.backboneBondStore.count ){\n\n                    offset -= ( o.atomStore.count + o.bondStore.count );\n                    entity = o.getBondProxy( offset );\n                    entity.bondStore = o.backboneBondStore;\n\n                }else if( offset <= o.atomStore.count + o.bondStore.count + o.backboneBondStore.count + o.rungBondStore.count ){\n\n                    offset -= ( o.atomStore.count + o.bondStore.count + o.backboneBondStore.count );\n                    entity = o.getBondProxy( offset );\n                    entity.bondStore = o.rungBondStore;\n\n                }else{\n\n                    NGL.warn( \"NGL.GidPool.getByGid: invalid Structure gid\", gid );\n\n                }\n\n            }else if( o.type === \"Volume\" ){\n\n                entity = {\n                    volume: o,\n                    index: offset,\n                    value: o.data[ offset ],\n                    x: o.dataPosition[ offset * 3 ],\n                    y: o.dataPosition[ offset * 3 + 1 ],\n                    z: o.dataPosition[ offset * 3 + 2 ],\n                };\n\n            }else{\n\n                NGL.warn( \"NGL.GidPool.getByGid: unknown object type for gid\", gid );\n\n            }\n\n        } );\n\n        return entity;\n\n    }\n\n}\n\n\n///////////////\n// ColorMaker\n\nNGL.ColorMakerRegistry = {\n\n    signals: {\n\n        // typesChanged: new signals.Signal(),\n\n    },\n\n    scales: {\n\n        \"\": \"\",\n\n        // Sequential\n        \"OrRd\": \"[S] Orange-Red\",\n        \"PuBu\": \"[S] Purple-Blue\",\n        \"BuPu\": \"[S] Blue-Purple\",\n        \"Oranges\": \"[S] Oranges\",\n        \"BuGn\": \"[S] Blue-Green\",\n        \"YlOrBr\": \"[S] Yellow-Orange-Brown\",\n        \"YlGn\": \"[S] Yellow-Green\",\n        \"Reds\": \"[S] Reds\",\n        \"RdPu\": \"[S] Red-Purple\",\n        \"Greens\": \"[S] Greens\",\n        \"YlGnBu\": \"[S] Yellow-Green-Blue\",\n        \"Purples\": \"[S] Purples\",\n        \"GnBu\": \"[S] Green-Blue\",\n        \"Greys\": \"[S] Greys\",\n        \"YlOrRd\": \"[S] Yellow-Orange-Red\",\n        \"PuRd\": \"[S] Purple-Red\",\n        \"Blues\": \"[S] Blues\",\n        \"PuBuGn\": \"[S] Purple-Blue-Green\",\n\n        // Diverging\n        \"Spectral\": \"[D] Spectral\",\n        \"RdYlGn\": \"[D] Red-Yellow-Green\",\n        \"RdBu\": \"[D] Red-Blue\",\n        \"PiYG\": \"[D] Pink-Yellowgreen\",\n        \"PRGn\": \"[D] Purplered-Green\",\n        \"RdYlBu\": \"[D] Red-Yellow-Blue\",\n        \"BrBG\": \"[D] Brown-Bluegreen\",\n        \"RdGy\": \"[D] Red-Grey\",\n        \"PuOr\": \"[D] Purple-Orange\",\n\n        // Qualitative\n        \"Set1\": \"[Q] Set1\",\n        \"Set2\": \"[Q] Set2\",\n        \"Set3\": \"[Q] Set3\",\n        \"Dark2\": \"[Q] Dark2\",\n        \"Paired\": \"[Q] Paired\",\n        \"Pastel1\": \"[Q] Pastel1\",\n        \"Pastel2\": \"[Q] Pastel2\",\n        \"Accent\": \"[Q] Accent\",\n\n        // Other\n        \"roygb\": \"[?] Rainbow\",\n        \"rwb\": \"[?] Red-White-Blue\",\n\n    },\n\n    modes: {\n\n        \"\": \"\",\n\n        \"rgb\": \"Red Green Blue\",\n        \"hsv\": \"Hue Saturation Value\",\n        \"hsl\": \"Hue Saturation Lightness\",\n        \"hsi\": \"Hue Saturation Intensity\",\n        \"lab\": \"CIE L*a*b*\",\n        \"hcl\": \"Hue Chroma Lightness\"\n\n    },\n\n    types: {},\n\n    userSchemes: {},\n\n    getScheme: function( params ){\n\n        var p = params || {};\n\n        var id = p.scheme || \"\";\n\n        var schemeClass;\n\n        if( id in NGL.ColorMakerRegistry.types ){\n\n            schemeClass = NGL.ColorMakerRegistry.types[ id ];\n\n        }else if( id in NGL.ColorMakerRegistry.userSchemes ){\n\n            schemeClass = NGL.ColorMakerRegistry.userSchemes[ id ];\n\n        }else{\n\n            schemeClass = NGL.ColorMaker;\n\n        }\n\n        return new schemeClass( params );\n\n    },\n\n    getPickingScheme: function( params ){\n\n        var p = Object.assign( params || {} );\n        p.scheme = \"picking\";\n\n        return NGL.ColorMakerRegistry.getScheme( p );\n\n    },\n\n    getTypes: function(){\n\n        var types = {};\n\n        Object.keys( NGL.ColorMakerRegistry.types ).forEach( function( k ){\n            // NGL.ColorMakerRegistry.types[ k ]\n            types[ k ] = k;\n        } );\n\n        Object.keys( NGL.ColorMakerRegistry.userSchemes ).forEach( function( k ){\n            types[ k ] = k.split( \"|\" )[ 1 ];\n        } );\n\n        return types;\n\n    },\n\n    getScales: function(){\n\n        return NGL.ColorMakerRegistry.scales;\n\n    },\n\n    getModes: function(){\n\n        return NGL.ColorMakerRegistry.modes;\n\n    },\n\n    addScheme: function( scheme, label ){\n\n        if( !( scheme instanceof NGL.ColorMaker ) ){\n\n            scheme = NGL.ColorMakerRegistry.createScheme( scheme, label );\n\n        }\n\n        label = label || \"\";\n        var id = \"\" + THREE.Math.generateUUID() + \"|\" + label;\n\n        NGL.ColorMakerRegistry.userSchemes[ id ] = scheme;\n        // NGL.ColorMakerRegistry.signals.typesChanged.dispatch();\n\n        return id;\n\n    },\n\n    removeScheme: function( id ){\n\n        delete NGL.ColorMakerRegistry.userSchemes[ id ];\n        // NGL.ColorMakerRegistry.signals.typesChanged.dispatch();\n\n    },\n\n    createScheme: function( constructor, label ){\n\n        var ColorMaker = function( params ){\n\n            NGL.ColorMaker.call( this, params );\n\n            this.label = label || \"\";\n\n            constructor.call( this, params );\n\n        }\n\n        ColorMaker.prototype = NGL.ColorMaker.prototype;\n\n        ColorMaker.prototype.constructor = ColorMaker;\n\n        return ColorMaker;\n\n    },\n\n    addSelectionScheme: function( pairList, label ){\n\n        return NGL.ColorMakerRegistry.addScheme( function( params ){\n\n            var colorList = [];\n            var selectionList = [];\n\n            pairList.forEach( function( pair ){\n\n                colorList.push( new THREE.Color( pair[ 0 ] ).getHex() );\n                selectionList.push( new NGL.Selection( pair[ 1 ] ) );\n\n            } );\n\n            var n = pairList.length;\n\n            this.atomColor = function( a ){\n\n                for( var i = 0; i < n; ++i ){\n\n                    if( selectionList[ i ].test( a ) ){\n\n                        return colorList[ i ];\n\n                    }\n\n                }\n\n                return 0xFFFFFF;\n\n            };\n\n        }, label );\n\n    }\n\n}\n\n\nNGL.ColorMaker = function( params ){\n\n    var p = params || {};\n\n    this.scale = p.scale || \"uniform\";\n    this.mode = p.mode || \"hcl\";\n    this.domain = p.domain || [ 0, 1 ];\n    this.value = new THREE.Color( p.value || 0xFFFFFF ).getHex();\n\n    this.structure = p.structure;\n    this.volume = p.volume;\n    this.surface = p.surface;\n\n    if( this.structure ){\n        this.atomProxy = this.structure.getAtomProxy();\n    }\n\n};\n\nNGL.ColorMaker.prototype = {\n\n    constructor: NGL.ColorMaker,\n\n    getScale: function( params ){\n\n        var p = params || {};\n\n        var scale = p.scale || this.scale;\n        if( scale === \"rainbow\" || scale === \"roygb\" ){\n            scale = [ \"red\", \"orange\", \"yellow\", \"green\", \"blue\" ];\n        }else if( scale === \"rwb\" ){\n            scale = [ \"red\", \"white\", \"blue\" ];\n        }\n\n        return chroma\n            .scale( scale )\n            .mode( p.mode || this.mode )\n            .domain( p.domain || this.domain )\n            .out( \"num\" );\n\n    },\n\n    colorToArray: function( color, array, offset ){\n\n        if( array === undefined ) array = [];\n        if( offset === undefined ) offset = 0;\n\n        array[ offset + 0 ] = ( color >> 16 & 255 ) / 255;\n        array[ offset + 1 ] = ( color >> 8 & 255 ) / 255;\n        array[ offset + 2 ] = ( color & 255 ) / 255;\n\n        return array;\n\n    },\n\n    atomColor: function( a ){\n\n        return 0xFFFFFF;\n\n    },\n\n    atomColorToArray: function( a, array, offset ){\n\n        return this.colorToArray(\n            this.atomColor( a ), array, offset\n        );\n\n    },\n\n    bondColor: function( b, fromTo ){\n\n        this.atomProxy.index = fromTo ? b.atomIndex1 : b.atomIndex2;\n        return this.atomColor( this.atomProxy );\n\n    },\n\n    bondColorToArray: function( b, fromTo, array, offset ){\n\n        return this.colorToArray(\n            this.bondColor( b, fromTo ), array, offset\n        );\n\n    },\n\n    volumeColor: function( i ){\n\n        return 0xFFFFFF;\n\n    },\n\n    volumeColorToArray: function( i, array, offset ){\n\n        return this.colorToArray(\n            this.volumeColor( i ), array, offset\n        );\n\n    },\n\n    positionColor: function( v ){\n\n        return 0xFFFFFF;\n\n    },\n\n    positionColorToArray: function( v, array, offset ){\n\n        return this.colorToArray(\n            this.positionColor( v ), array, offset\n        );\n\n    }\n\n};\n\n\nNGL.VolumeColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    var valueScale = this.getScale();\n    var volume = this.volume;\n    var inverseMatrix = volume.inverseMatrix;\n    var data = volume.__data;\n    var nx = volume.nx;\n    var ny = volume.ny;\n    var nz = volume.nz;\n    var vec = new THREE.Vector3();\n\n    this.positionColor = function( v ){\n\n        vec.copy( v );\n        vec.applyMatrix4( inverseMatrix );\n        vec.round();\n\n        var index = ( ( ( ( vec.z * ny ) + vec.y ) * nx ) + vec.x );\n\n        return valueScale( data[ index ] );\n\n    };\n\n};\n\nNGL.VolumeColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.VolumeColorMaker.prototype.constructor = NGL.VolumeColorMaker;\n\n\nNGL.ValueColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    var valueScale = this.getScale();\n\n    this.volumeColor = function( i ){\n\n        return valueScale( this.volume.data[ i ] );\n\n    };\n\n};\n\nNGL.ValueColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.ValueColorMaker.prototype.constructor = NGL.ValueColorMaker;\n\n\nNGL.PickingColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    var offset;\n    if( this.structure ){\n        offset = this.structure.atomStore.count;\n        if( params.backbone ){\n            offset += this.structure.bondStore.count;\n        }else if( params.rung ){\n            offset += this.structure.bondStore.count;\n            offset += this.structure.backboneBondStore.count;\n        }\n    }\n\n    this.atomColor = function( a ){\n\n        return NGL.GidPool.getGid( this.structure, a.index );\n\n    };\n\n    this.bondColor = function( b, fromTo ){\n\n        return NGL.GidPool.getGid( this.structure, offset + b.index );\n\n    };\n\n    this.volumeColor = function( i ){\n\n        return NGL.GidPool.getGid( this.volume, i );\n\n    };\n\n};\n\nNGL.PickingColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.PickingColorMaker.prototype.constructor = NGL.PickingColorMaker;\n\n\nNGL.RandomColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    this.atomColor = function( a ){\n\n        return Math.random() * 0xFFFFFF;\n\n    };\n\n};\n\nNGL.RandomColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.RandomColorMaker.prototype.constructor = NGL.RandomColorMaker;\n\n\nNGL.UniformColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    var color = this.value;\n\n    this.atomColor = function(){\n\n        return color;\n\n    };\n\n    this.bondColor = function(){\n\n        return color;\n\n    };\n\n    this.valueColor = function(){\n\n        return color;\n\n    };\n\n};\n\nNGL.UniformColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.UniformColorMaker.prototype.constructor = NGL.UniformColorMaker;\n\n\nNGL.AtomindexColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    if( !params.scale ){\n        this.scale = \"roygb\";\n    }\n    if( !params.domain ){\n\n        var scalePerModel = {};\n\n        this.structure.eachModel( function( mp ){\n            this.domain = [ mp.atomOffset, mp.atomEnd ];\n            scalePerModel[ mp.index ] = this.getScale();\n        }.bind( this ) );\n\n        this.atomColor = function( a ){\n            return scalePerModel[ a.modelIndex ]( a.index );\n        };\n\n    }else{\n\n        var atomindexScale = this.getScale();\n\n        this.atomColor = function( a ){\n            return atomindexScale( a.index );\n        };\n\n    }\n\n};\n\nNGL.AtomindexColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.AtomindexColorMaker.prototype.constructor = NGL.AtomindexColorMaker;\n\n\nNGL.ResidueindexColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    if( !params.scale ){\n        this.scale = \"roygb\";\n    }\n    if( !params.domain ){\n        this.domain = [ 0, this.structure.residueStore.count ];\n    }\n    var residueindexScale = this.getScale();\n\n    this.atomColor = function( a ){\n        return residueindexScale( a.residueIndex );\n    };\n\n};\n\nNGL.ResidueindexColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.ResidueindexColorMaker.prototype.constructor = NGL.ResidueindexColorMaker;\n\n\nNGL.ChainindexColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    if( !params.scale ){\n        this.scale = \"Spectral\";\n    }\n    if( !params.domain ){\n        this.domain = [ 0, this.structure.chainStore.count ];\n    }\n    var chainindexScale = this.getScale();\n\n    this.atomColor = function( a ){\n        return chainindexScale( a.chainIndex );\n    };\n\n};\n\nNGL.ChainindexColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.ChainindexColorMaker.prototype.constructor = NGL.ChainindexColorMaker;\n\n\nNGL.ModelindexColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    if( !params.scale ){\n        this.scale = \"roygb\";\n    }\n    if( !params.domain ){\n        this.domain = [ 0, this.structure.modelStore.count ];\n    }\n    var modelindexScale = this.getScale();\n\n    this.atomColor = function( a ){\n        return modelindexScale( a.modelIndex );\n    };\n\n};\n\nNGL.ModelindexColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.ModelindexColorMaker.prototype.constructor = NGL.ModelindexColorMaker;\n\n\nNGL.SstrucColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    var strucColors = NGL.StructureColors;\n    var defaultStrucColor = NGL.StructureColors[\"\"];\n    var rp = this.structure.getResidueProxy();\n\n    this.atomColor = function( ap ){\n\n        var sstruc = ap.sstruc;\n\n        if( sstruc === \"h\" ){\n            return strucColors[ \"alphaHelix\" ];\n        }else if( sstruc === \"g\" ){\n            return strucColors[ \"3_10Helix\" ];\n        }else if( sstruc === \"i\" ){\n            return strucColors[ \"piHelix\" ];\n        }else if( sstruc === \"e\" || sstruc === \"b\" ){\n            return strucColors[ \"betaStrand\" ];\n        }else{\n            rp.index = ap.residueIndex;\n            if( rp.isNucleic() ){\n                return strucColors[ \"dna\" ];\n            }else if( rp.isProtein() || sstruc === \"s\" || sstruc === \"t\" || sstruc === \"l\" ){\n                return strucColors[ \"coil\" ];\n            }else{\n                return defaultStrucColor;\n            }\n        }\n\n    };\n\n};\n\nNGL.SstrucColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.SstrucColorMaker.prototype.constructor = NGL.SstrucColorMaker;\n\n\nNGL.ElementColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    var elemColors = NGL.ElementColors;\n    var defaultElemColor = NGL.ElementColors[\"\"];\n    var colorValue = this.value;\n    if( params.value === undefined ){\n        colorValue = NGL.ElementColors[ \"C\" ];\n    }\n\n    this.atomColor = function( a ){\n\n        var element = a.element;\n\n        if( element === \"C\" ){\n            return colorValue;\n        }else{\n            return elemColors[ element ] || defaultElemColor;\n        }\n\n    };\n\n};\n\nNGL.ElementColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.ElementColorMaker.prototype.constructor = NGL.ElementColorMaker;\n\n\nNGL.ResnameColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    var resColors = NGL.ResidueColors;\n    var defaultResColor = NGL.ResidueColors[\"\"];\n\n    this.atomColor = function( a ){\n\n        return resColors[ a.resname ] || defaultResColor;\n\n    };\n\n};\n\nNGL.ResnameColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.ResnameColorMaker.prototype.constructor = NGL.ResnameColorMaker;\n\n\nNGL.BfactorColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    if( !params.scale ){\n        this.scale = \"OrRd\";\n    }\n\n    if( !params.domain ){\n\n        var selection;\n        var min = Infinity;\n        var max = -Infinity;\n\n        if( params.sele ){\n            selection = new NGL.Selection( params.sele );\n        }\n\n        this.structure.eachSelectedAtom( function( a ){\n            var bfactor = a.bfactor;\n            min = Math.min( min, bfactor );\n            max = Math.max( max, bfactor );\n        }, selection );\n\n        this.domain = [ min, max ];\n\n    }\n\n    var bfactorScale = this.getScale();\n\n    this.atomColor = function( a ){\n\n        return bfactorScale( a.bfactor );\n\n    };\n\n};\n\nNGL.BfactorColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.BfactorColorMaker.prototype.constructor = NGL.BfactorColorMaker;\n\n\nNGL.OccupancyColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    if( !params.scale ){\n        this.scale = \"PuBu\";\n    }\n\n    if( !params.domain ){\n        this.domain = [ 0.0, 1.0 ];\n    }\n\n    var occupancyScale = this.getScale();\n\n    this.atomColor = function( a ){\n        return occupancyScale( a.occupancy );\n    };\n\n};\n\nNGL.OccupancyColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.OccupancyColorMaker.prototype.constructor = NGL.OccupancyColorMaker;\n\n\nNGL.HydrophobicityColorMaker = function( params ){\n\n    NGL.ColorMaker.call( this, params );\n\n    if( !params.scale ){\n        this.scale = \"RdYlGn\";\n    }\n\n    var idx = 0;  // 0: DGwif, 1: DGwoct, 2: Oct-IF\n\n    var resHF = {};\n    for( var name in NGL.ResidueHydrophobicity ){\n        resHF[ name ] = NGL.ResidueHydrophobicity[ name ][ idx ];\n    }\n    var defaultResHF = resHF[\"\"];\n\n    if( !params.domain ){\n\n        var val;\n        var min = Infinity;\n        var max = -Infinity;\n\n        for( var name in resHF ){\n\n            val = resHF[ name ];\n            min = Math.min( min, val );\n            max = Math.max( max, val );\n\n        }\n\n        this.domain = [ min, 0, max ];\n\n    }\n\n    var hfScale = this.getScale();\n\n    this.atomColor = function( a ){\n\n        return hfScale( resHF[ a.resname ] || defaultResHF );\n\n    };\n\n};\n\nNGL.HydrophobicityColorMaker.prototype = NGL.ColorMaker.prototype;\n\nNGL.HydrophobicityColorMaker.prototype.constructor = NGL.HydrophobicityColorMaker;\n\n\nNGL.ColorMakerRegistry.types = {\n\n    \"\": NGL.ColorMaker,\n    \"picking\": NGL.PickingColorMaker,\n    \"random\": NGL.RandomColorMaker,\n    \"uniform\": NGL.UniformColorMaker,\n    \"atomindex\": NGL.AtomindexColorMaker,\n    \"residueindex\": NGL.ResidueindexColorMaker,\n    \"chainindex\": NGL.ChainindexColorMaker,\n    \"modelindex\": NGL.ModelindexColorMaker,\n    \"sstruc\": NGL.SstrucColorMaker,\n    \"element\": NGL.ElementColorMaker,\n    \"resname\": NGL.ResnameColorMaker,\n    \"bfactor\": NGL.BfactorColorMaker,\n    \"hydrophobicity\": NGL.HydrophobicityColorMaker,\n    \"value\": NGL.ValueColorMaker,\n    \"volume\": NGL.VolumeColorMaker,\n    \"occupancy\": NGL.OccupancyColorMaker\n\n};\n\n\n////////////\n// Factory\n\nNGL.RadiusFactory = function( type, scale ){\n\n    this.type = type;\n    this.scale = scale || 1.0;\n\n    this.max = 10;\n\n};\n\nNGL.RadiusFactory.types = {\n\n    \"\": \"\",\n    \"vdw\": \"by vdW radius\",\n    \"covalent\": \"by covalent radius\",\n    \"sstruc\": \"by secondary structure\",\n    \"bfactor\": \"by bfactor\",\n    \"size\": \"size\"\n\n};\n\nNGL.RadiusFactory.prototype = {\n\n    constructor: NGL.RadiusFactory,\n\n    atomRadius: function( a ){\n\n        var type = this.type;\n        var scale = this.scale;\n        var vdwRadii = NGL.VdwRadii;\n        var covalentRadii = NGL.CovalentRadii;\n\n        var defaultVdwRadius = NGL.VdwRadii[\"\"];\n        var defaultCovalentRadius = NGL.CovalentRadii[\"\"];\n        var defaultBfactor = 1;\n\n        var nucleic = [ \"C3'\", \"C3*\", \"C4'\", \"C4*\", \"P\" ];\n\n        var r;\n\n        switch( type ){\n\n            case \"vdw\":\n\n                r = vdwRadii[ a.element ] || defaultVdwRadius;\n                break;\n\n            case \"covalent\":\n\n                r = covalentRadii[ a.element ] || defaultCovalentRadius;\n                break;\n\n            case \"bfactor\":\n\n                r = a.bfactor || defaultBfactor;\n                break;\n\n            case \"sstruc\":\n\n                var sstruc = a.sstruc;\n                if( sstruc === \"h\" ){\n                    r = 0.25;\n                }else if( sstruc === \"g\" ){\n                    r = 0.25;\n                }else if( sstruc === \"i\" ){\n                    r = 0.25;\n                }else if( sstruc === \"e\" ){\n                    r = 0.25;\n                }else if( sstruc === \"b\" ){\n                    r = 0.25;\n                }else if( nucleic.indexOf( a.atomname ) !== -1 ){\n                    r = 0.4;\n                }else{\n                    r = 0.1;\n                }\n                break;\n\n            default:\n\n                r = type || 1.0;\n                break;\n\n        }\n\n        return Math.min( r * scale, this.max );\n\n    }\n\n};\n\n\nNGL.LabelFactory = function( type, text ){\n\n    this.type = type;\n    this.text = text || {};\n\n};\n\nNGL.LabelFactory.types = {\n\n    \"\": \"\",\n    \"atomname\": \"atom name\",\n    \"atomindex\": \"atom index\",\n    \"atom\": \"atom name + index\",\n    \"resname\": \"residue name\",\n    \"resno\": \"residue no\",\n    \"res\": \"residue name + no\",\n    \"text\": \"text\"\n\n};\n\nNGL.LabelFactory.prototype = {\n\n    constructor: NGL.LabelFactory,\n\n    atomLabel: function( a ){\n\n        var type = this.type;\n\n        var l;\n\n        switch( type ){\n\n            case \"atomname\":\n                l = a.atomname;\n                break;\n\n            case \"atomindex\":\n                l = \"\" + a.index;\n                break;\n\n            case \"atom\":\n                l = a.atomname + \"|\" + a.index;\n                break;\n\n            case \"resname\":\n                l = a.resname;\n                break;\n\n            case \"resno\":\n                l = \"\" + a.resno;\n                break;\n\n            case \"res\":\n                l = ( NGL.AA1[ a.resname.toUpperCase() ] || '' ) + a.resno;\n                break;\n\n            case \"text\":\n                l = this.text[ a.index ];\n                break;\n\n            default:\n                l = a.qualifiedName();\n                break;\n\n        }\n\n        return l === undefined ? '' : l;\n\n    }\n\n};\n\n\n//////////////\n// Structure\n\nNGL.Structure = function( name, path ){\n\n    var SIGNALS = signals;\n    this.signals = {\n        refreshed: new SIGNALS.Signal(),\n    };\n\n    this.name = name;\n    this.path = path;\n    this.title = \"\";\n    this.id = \"\";\n\n    this.atomSetCache = {};\n    this.atomSetDict = {};\n    this.biomolDict = {};\n    this.helices = [];\n    this.sheets = [];\n    this.unitcell = undefined;\n    this.selection = undefined;\n\n    this.frames = [];\n    this.boxes = [];\n\n    this.bondStore = new NGL.BondStore( 0 );\n    this.backboneBondStore = new NGL.BondStore( 0 );\n    this.rungBondStore = new NGL.BondStore( 0 );\n    this.atomStore = new NGL.AtomStore( 0 );\n    this.residueStore = new NGL.ResidueStore( 0 );\n    this.chainStore = new NGL.ChainStore( 0 );\n    this.modelStore = new NGL.ModelStore( 0 );\n\n    this.atomMap = new NGL.AtomMap( this );\n    this.residueMap = new NGL.ResidueMap( this );\n\n    this.atomSet = this.getAtomSet( this.selection );\n    this.bondSet = this.getBondSet();\n\n    this.center = new THREE.Vector3();\n    this.boundingBox = new THREE.Box3();\n\n    NGL.GidPool.addObject( this );\n\n    this._ap = this.getAtomProxy();\n    this._rp = this.getResidueProxy();\n    this._cp = this.getChainProxy();\n\n};\n\nNGL.Structure.prototype = {\n\n    constructor: NGL.Structure,\n    type: \"Structure\",\n\n    refresh: function(){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.refresh\" );\n\n        this.atomSetCache = {};\n\n        this.atomSet = this.getAtomSet2( this.selection );\n        this.bondSet = this.getBondSet();\n\n        for( var name in this.atomSetDict ){\n            var as = this.atomSetDict[ name ];\n            var as2 = this.getAtomSet2( false );\n            this.atomSetCache[ \"__\" + name ] = as2.intersection( as );\n        }\n\n        this.boundingBox = this.getBoundingBox();\n        this.center = this.boundingBox.center();\n\n        NGL.GidPool.updateObject( this );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.refresh\" );\n\n        this.signals.refreshed.dispatch();\n\n    },\n\n    getBondProxy: function( index ){\n\n        return new NGL.BondProxy( this, index );\n\n    },\n\n    getAtomProxy: function( index, tmp ){\n\n        if( tmp ){\n            if( this.__tmpAtomProxy === undefined ){\n                this.__tmpAtomProxy = new NGL.AtomProxy( this, index );\n            }\n            return this.__tmpAtomProxy;\n        }else{\n            return new NGL.AtomProxy( this, index );\n        }\n\n    },\n\n    getResidueProxy: function( index, tmp ){\n\n        if( tmp ){\n            if( this.__tmpResidueProxy === undefined ){\n                this.__tmpResidueProxy = new NGL.ResidueProxy( this, index );\n            }\n            return this.__tmpResidueProxy;\n        }else{\n            return new NGL.ResidueProxy( this, index );\n        }\n\n    },\n\n    getChainProxy: function( index ){\n\n        return new NGL.ChainProxy( this, index );\n\n    },\n\n    getModelProxy: function( index ){\n\n        return new NGL.ModelProxy( this, index );\n\n    },\n\n    getBondSet: function( selection ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.getBondSet\" );\n\n        var n = this.bondStore.count;\n        var bs = new TypedFastBitSet( n );\n        var as = this.atomSet;\n\n        if( as ){\n\n            var bp = this.getBondProxy();\n\n            for( var i = 0; i < n; ++i ){\n                bp.index = i;\n                if( as.has( bp.atomIndex1 ) && as.has( bp.atomIndex2 ) ){\n                    bs.add_unsafe( bp.index );\n                }\n            }\n\n        }else{\n\n            bs.set_all( true );\n\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.getBondSet\" );\n\n        return bs;\n\n    },\n\n    getBackboneBondSet: function( selection ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.getBackboneBondSet\" );\n\n        var n = this.backboneBondStore.count;\n        var bs = new TypedFastBitSet( n );\n        var as = this.atomSetCache[ \"__backbone\" ];\n\n        if( as ){\n\n            var bp = this.getBondProxy();\n            bp.bondStore = this.backboneBondStore;\n\n            for( var i = 0; i < n; ++i ){\n                bp.index = i;\n                if( as.has( bp.atomIndex1 ) && as.has( bp.atomIndex2 ) ){\n                    bs.add_unsafe( bp.index );\n                }\n            }\n\n        }else{\n\n            bs.set_all( true );\n\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.getBackboneBondSet\" );\n\n        return bs;\n\n    },\n\n    getRungBondSet: function( selection ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.getRungBondSet\" );\n\n        var n = this.rungBondStore.count;\n        var bs = new TypedFastBitSet( n );\n        var as = this.atomSetCache[ \"__rung\" ];\n\n        if( as ){\n\n            var bp = this.getBondProxy();\n            bp.bondStore = this.rungBondStore;\n\n            for( var i = 0; i < n; ++i ){\n                bp.index = i;\n                if( as.has( bp.atomIndex1 ) && as.has( bp.atomIndex2 ) ){\n                    bs.add_unsafe( bp.index );\n                }\n            }\n\n        }else{\n\n            bs.set_all( true );\n\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.getRungBondSet\" );\n\n        return bs;\n\n    },\n\n    getAtomSet: function( selection ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.getAtomSet\" );\n\n        var as;\n        var n = this.atomStore.count;\n\n        if( selection === false ){\n\n            as = new TypedFastBitSet( n );\n\n        }else if( selection === true ){\n\n            as = new TypedFastBitSet( n );\n            as.set_all( true );\n\n        }else if( selection && selection.test ){\n\n            var seleString = selection.string;\n            as = this.atomSetCache[ seleString ];\n\n            if( !seleString ) console.warn( \"empty seleString\" );\n\n            if( as === undefined ){\n\n                // TODO can be faster by setting ranges of atoms\n                //      but for that must loop over hierarchy itself\n                as = new TypedFastBitSet( n );\n                var ap = this.getAtomProxy();\n                var test = selection.test;\n                for( var i = 0; i < n; ++i ){\n                    ap.index = i;\n                    if( test( ap ) ) as.add_unsafe( ap.index );\n                }\n                this.atomSetCache[ seleString ] = as;\n\n            }else{\n\n                // console.log( \"getting atomSet from cache\", seleString );\n\n            }\n\n        }else{\n\n            as = new TypedFastBitSet( n );\n            as.set_all( true );\n\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.getAtomSet\" );\n\n        return as;\n\n    },\n\n    getAtomSet2: function( selection ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.getAtomSet2\" );\n\n        var as;\n        var n = this.atomStore.count;\n\n        if( selection === false ){\n\n            as = new TypedFastBitSet( n );\n\n        }else if( selection === true ){\n\n            as = new TypedFastBitSet( n );\n            as.set_all( true );\n\n        }else if( selection && selection.test ){\n\n            var seleString = selection.string;\n            as = this.atomSetCache[ seleString ];\n\n            if( !seleString ) console.warn( \"empty seleString\" );\n\n            if( as === undefined ){\n\n                as = new TypedFastBitSet( n );\n                this.eachAtom( function( ap ){\n                    as.add_unsafe( ap.index );\n                }, selection );\n                this.atomSetCache[ seleString ] = as;\n\n            }else{\n\n                // console.log( \"getting atomSet from cache\", seleString );\n\n            }\n\n        }else{\n\n            as = new TypedFastBitSet( n );\n            as.set_all( true );\n\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.getAtomSet2\" );\n\n        return as;\n\n    },\n\n    setSelection: function( selection ){\n\n        this.selection = selection;\n\n        this.refresh();\n\n    },\n\n    getSelection: function(){\n\n        return this.selection;\n\n    },\n\n    getStructure: function(){\n\n        return this;\n\n    },\n\n    //\n\n    eachBond: function( callback, selection ){\n\n        var bp = this.getBondProxy();\n        var bs = this.bondSet;\n\n        if( selection && selection.test ){\n            if( bs ){\n                bs = bs.new_intersection( this.getBondSet( selection ) );\n            }else{\n                bs = this.getBondSet( selection );\n            }\n        }\n\n        if( bs ){\n            bs.forEach( function( index ){\n                bp.index = index;\n                callback( bp );\n            } );\n        }else{\n            var n = this.bondStore.count;\n            for( var i = 0; i < n; ++i ){\n                bp.index = i;\n                callback( bp );\n            }\n        }\n\n    },\n\n    getAtomSet3: function( selection ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.getAtomSet3\" );\n\n        var as = this.atomSet;\n\n        if( selection && selection.test ){\n            if( as ){\n                as = as.new_intersection( this.getAtomSet2( selection ) );\n            }else{\n                as = this.getAtomSet2( selection );\n            }\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.getAtomSet3\" );\n\n        return as;\n\n    },\n\n    eachSelectedAtom: function( callback, selection ){\n\n        var ap = this.getAtomProxy();\n        var as = this.getAtomSet3( selection );\n        var n = this.atomStore.count;\n\n        if( as && as.size() < n ){\n            as.forEach( function( index ){\n                ap.index = index;\n                callback( ap );\n            } );\n        }else{\n            for( var i = 0; i < n; ++i ){\n                ap.index = i;\n                callback( ap );\n            }\n        }\n\n    },\n\n    eachAtom: function( callback, selection ){\n\n        if( selection && selection.test ){\n            this.eachModel( function( mp ){\n                mp.eachAtom( callback, selection )\n            }, selection );\n        }else{\n            var an = this.atomStore.count;\n            var ap = this.getAtomProxy();\n            for( var i = 0; i < an; ++i ){\n                ap.index = i;\n                callback( ap );\n            }\n        }\n\n    },\n\n    eachResidue: function( callback, selection ){\n\n        if( selection && selection.test ){\n            var mn = this.modelStore.count;\n            var mp = this.getModelProxy();\n            if( selection.modelOnlyTest ){\n                var modelOnlyTest = selection.modelOnlyTest;\n                for( var i = 0; i < mn; ++i ){\n                    mp.index = i;\n                    if( modelOnlyTest( mp ) ){\n                        mp.eachResidue( callback, selection );\n                    }\n                }\n            }else{\n                for( var i = 0; i < mn; ++i ){\n                    mp.index = i;\n                    mp.eachResidue( callback, selection );\n                }\n            }\n        }else{\n            var rn = this.residueStore.count;\n            var rp = this.getResidueProxy();\n            for( var i = 0; i < rn; ++i ){\n                rp.index = i;\n                callback( rp );\n            }\n        }\n\n    },\n\n    eachResidueN: function( n, callback ){\n\n        var rn = this.residueStore.count;\n        if( rn < n ) return;\n        var array = new Array( n );\n\n        for( var i = 0; i < n; ++i ){\n            array[ i ] = this.getResidueProxy( i );\n        }\n        callback.apply( this, array );\n\n        for( var j = n; j < rn; ++j ){\n            for( var i = 0; i < n; ++i ){\n                array[ i ].index += 1;\n            }\n            callback.apply( this, array );\n        }\n\n    },\n\n    eachPolymer: function( callback, selection ){\n\n        if( selection && selection.modelOnlyTest ){\n\n            var modelOnlyTest = selection.modelOnlyTest;\n\n            this.eachModel( function( mp ){\n                if( modelOnlyTest( mp ) ){\n                    mp.eachPolymer( callback, selection );\n                }\n            } );\n\n        }else{\n\n            this.eachModel( function( mp ){\n                mp.eachPolymer( callback, selection );\n            } );\n\n        }\n\n    },\n\n    eachChain: function( callback, selection ){\n\n        if( selection && selection.test ){\n            this.eachModel( function( mp ){\n                mp.eachChain( callback, selection );\n            } );\n        }else{\n            var cn = this.chainStore.count;\n            var cp = this.getChainProxy();\n            for( var i = 0; i < cn; ++i ){\n                cp.index = i;\n                callback( cp );\n            }\n        }\n\n    },\n\n    eachModel: function( callback, selection ){\n\n        var n = this.modelStore.count;\n        var mp = this.getModelProxy();\n\n        if( selection && selection.test ){\n            var modelOnlyTest = selection.modelOnlyTest;\n            if( modelOnlyTest ){\n                for( var i = 0; i < n; ++i ){\n                    mp.index = i;\n                    if( modelOnlyTest( mp ) ){\n                        callback( mp, selection );\n                    }\n                }\n            }else{\n                for( var i = 0; i < n; ++i ){\n                    mp.index = i;\n                    callback( mp, selection );\n                }\n            }\n        }else{\n            for( var i = 0; i < n; ++i ){\n                mp.index = i;\n                callback( mp );\n            }\n        }\n\n    },\n\n    //\n\n    getAtomData: function( params ){\n\n        var p = Object.assign( {}, params );\n        if( p.colorParams ) p.colorParams.structure = this.getStructure();\n\n        var what = p.what;\n        var atomSet = p.atomSet || this.atomSet;\n\n        var radiusFactory, colorMaker, pickingColorMaker;\n        var position, color, pickingColor, radius;\n\n        var atomData = {};\n        var ap = this.getAtomProxy();\n        var atomCount = atomSet.size();\n\n        if( !what || what[ \"position\" ] ){\n            position = new Float32Array( atomCount * 3 );\n            atomData[ \"position\" ] = position;\n        }\n        if( !what || what[ \"color\" ] ){\n            color = new Float32Array( atomCount * 3 );\n            atomData[ \"color\" ] = color;\n            colorMaker = NGL.ColorMakerRegistry.getScheme( p.colorParams );\n        }\n        if( !what || what[ \"pickingColor\" ] ){\n            pickingColor = new Float32Array( atomCount * 3 );\n            atomData[ \"pickingColor\" ] = pickingColor;\n            var pickingColorParams = Object.assign( p.colorParams, { scheme: \"picking\" } );\n            pickingColorMaker = NGL.ColorMakerRegistry.getScheme( pickingColorParams );\n        }\n        if( !what || what[ \"radius\" ] ){\n            radius = new Float32Array( atomCount );\n            atomData[ \"radius\" ] = radius;\n            radiusFactory = new NGL.RadiusFactory( p.radiusParams.radius, p.radiusParams.scale );\n        }\n\n        atomSet.forEach( function( index, i ){\n            var i3 = i * 3;\n            ap.index = index;\n            if( position ){\n                ap.positionToArray( position, i3 );\n            }\n            if( color ){\n                colorMaker.atomColorToArray( ap, color, i3 );\n            }\n            if( pickingColor ){\n                pickingColorMaker.atomColorToArray( ap, pickingColor, i3 );\n            }\n            if( radius ){\n                radius[ i ] = radiusFactory.atomRadius( ap );\n            }\n        } );\n\n        return atomData;\n\n    },\n\n    getBondData: function( params ){\n\n        var p = Object.assign( {}, params );\n        if( p.colorParams ) p.colorParams.structure = this.getStructure();\n\n        var what = p.what;\n        var bondSet = p.bondSet || this.bondSet;\n\n        var radiusFactory, colorMaker, pickingColorMaker;\n        var position1, position2, color1, color2, pickingColor1, pickingColor2, radius1, radius2;\n\n        var bondData = {};\n        var bp = this.getBondProxy();\n        if( p.bondStore ) bp.bondStore = p.bondStore;\n        var ap1 = this.getAtomProxy();\n        var ap2 = this.getAtomProxy();\n        var bondCount = bondSet.size();\n\n        if( !what || what[ \"position\" ] ){\n            position1 = new Float32Array( bondCount * 3 );\n            position2 = new Float32Array( bondCount * 3 );\n            bondData[ \"position1\" ] = position1;\n            bondData[ \"position2\" ] = position2;\n        }\n        if( !what || what[ \"color\" ] ){\n            color1 = new Float32Array( bondCount * 3 );\n            color2 = new Float32Array( bondCount * 3 );\n            bondData[ \"color1\" ] = color1;\n            bondData[ \"color2\" ] = color2;\n            colorMaker = NGL.ColorMakerRegistry.getScheme( p.colorParams );\n        }\n        if( !what || what[ \"pickingColor\" ] ){\n            pickingColor1 = new Float32Array( bondCount * 3 );\n            pickingColor2 = new Float32Array( bondCount * 3 );\n            bondData[ \"pickingColor1\" ] = pickingColor1;\n            bondData[ \"pickingColor2\" ] = pickingColor2;\n            var pickingColorParams = Object.assign( p.colorParams, { scheme: \"picking\" } );\n            pickingColorMaker = NGL.ColorMakerRegistry.getScheme( pickingColorParams );\n        }\n        if( !what || what[ \"radius\" ] ){\n            radiusFactory = new NGL.RadiusFactory( p.radiusParams.radius, p.radiusParams.scale );\n        }\n        if( !what || what[ \"radius\" ] ){\n            radius1 = new Float32Array( bondCount );\n            if( p.radius2 ){\n                radius2 = new Float32Array( bondCount );\n                bondData[ \"radius1\" ] = radius1;\n                bondData[ \"radius2\" ] = radius2;\n            }else{\n                bondData[ \"radius\" ] = radius1;\n            }\n        }\n\n        bondSet.forEach( function( index, i ){\n            var i3 = i * 3;\n            bp.index = index\n            ap1.index = bp.atomIndex1;\n            ap2.index = bp.atomIndex2;\n            if( position1 ){\n                ap1.positionToArray( position1, i3 );\n                ap2.positionToArray( position2, i3 );\n            }\n            if( color1 ){\n                colorMaker.bondColorToArray( bp, 1, color1, i3 );\n                colorMaker.bondColorToArray( bp, 0, color2, i3 );\n            }\n            if( pickingColor1 ){\n                pickingColorMaker.bondColorToArray( bp, 1, pickingColor1, i3 );\n                pickingColorMaker.bondColorToArray( bp, 0, pickingColor2, i3 );\n            }\n            if( radius1 ){\n                radius1[ i ] = radiusFactory.atomRadius( ap1 );\n            }\n            if( radius2 ){\n                radius2[ i ] = radiusFactory.atomRadius( ap2 );\n            }\n        } );\n\n        return bondData;\n\n    },\n\n    getBackboneAtomData: function( params ){\n\n        params = Object.assign( {\n            atomSet: this.atomSetCache[ \"__backbone\" ],\n        }, params );\n\n        return this.getAtomData( params );\n\n    },\n\n    getBackboneBondData: function( params ){\n\n        params = Object.assign( {\n            bondSet: this.getBackboneBondSet(),\n            bondStore: this.backboneBondStore\n        }, params );\n\n        return this.getBondData( params );\n\n    },\n\n    getRungAtomData: function( params ){\n\n        params = Object.assign( {\n            atomSet: this.atomSetCache[ \"__rung\" ],\n        }, params );\n\n        return this.getAtomData( params );\n\n    },\n\n    getRungBondData: function( params ){\n\n        params = Object.assign( {\n            bondSet: this.getRungBondSet(),\n            bondStore: this.rungBondStore\n        }, params );\n\n        return this.getBondData( params );\n\n    },\n\n    //\n\n    getView: function( selection ){\n\n        return new NGL.StructureView( this, selection );\n\n    },\n\n    getBoundingBox: function( selection ){\n\n        if( NGL.debug ) console.time( \"getBoundingBox\" );\n\n        var box = new THREE.Box3();\n\n        var minX = +Infinity;\n        var minY = +Infinity;\n        var minZ = +Infinity;\n\n        var maxX = -Infinity;\n        var maxY = -Infinity;\n        var maxZ = -Infinity;\n\n        this.eachSelectedAtom( function( ap ){\n\n            var x = ap.x;\n            var y = ap.y;\n            var z = ap.z;\n\n            if( x < minX ) minX = x;\n            if( y < minY ) minY = y;\n            if( z < minZ ) minZ = z;\n\n            if( x > maxX ) maxX = x;\n            if( y > maxY ) maxY = y;\n            if( z > maxZ ) maxZ = z;\n\n        }, selection );\n\n        box.min.set( minX, minY, minZ );\n        box.max.set( maxX, maxY, maxZ );\n\n        if( NGL.debug ) console.timeEnd( \"getBoundingBox\" );\n\n        return box;\n\n    },\n\n    atomCenter: function( selection ){\n\n        if( selection ){\n            return this.getBoundingBox( selection ).center();\n        }else{\n            return this.center.clone();\n        }\n\n    },\n\n    getSequence: function(){\n\n        var seq = [];\n        var rp = this.getResidueProxy();\n\n        this.eachSelectedAtom( function( ap ){\n            rp.index = ap.residueIndex;\n            if( ap.index === rp.traceAtomIndex ){\n                seq.push( rp.getResname1() );\n            }\n        } );\n\n        return seq;\n\n    },\n\n    getAtomIndices: function( selection ){\n\n        // Best to use only when the selection resolves to just a few indices!!!\n\n        var indices = [];\n\n        this.eachAtom( function( ap ){\n            indices.push( ap.index );\n        }, selection );\n\n        return indices;\n\n    },\n\n    atomIndex: function(){\n\n        var i = 0;\n        var index = new Float32Array( this.atomCount );\n\n        this.eachSelectedAtom( function( ap ){\n            index[ i ] = ap.index;\n        } );\n\n        return index;\n\n    },\n\n    //\n\n    updatePosition: function( position ){\n\n        var i = 0;\n\n        this.eachSelectedAtom( function( ap ){\n            ap.positionFromArray( position, i );\n            i += 3;\n        } );\n\n    },\n\n    //\n\n    toJSON: function(){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.toJSON\" );\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: 'Structure',\n                generator: 'StructureExporter'\n            },\n\n            name: this.name,\n            path: this.path,\n            title: this.title,\n            id: this.id,\n\n            biomolDict: {},\n            helices: this.helices,\n            sheets: this.sheets,\n            unitcell: this.unitcell ? this.unitcell.toJSON() : undefined,\n\n            frames: this.frames,\n            boxes: this.boxes,\n\n            center: this.center.toArray(),\n            boundingBox: [\n                this.boundingBox.min.toArray(),\n                this.boundingBox.max.toArray()\n            ],\n\n            bondStore: this.bondStore.toJSON(),\n            backboneBondStore: this.backboneBondStore.toJSON(),\n            rungBondStore: this.rungBondStore.toJSON(),\n            atomStore: this.atomStore.toJSON(),\n            residueStore: this.residueStore.toJSON(),\n            chainStore: this.chainStore.toJSON(),\n            modelStore: this.modelStore.toJSON(),\n\n            bondSet: this.bondSet.toJSON(),\n            atomSet: this.atomSet.toJSON(),\n\n            atomSetDict: {},\n            atomSetCache: {},\n\n            atomMap: this.atomMap.toJSON(),\n            residueMap: this.residueMap.toJSON()\n\n        };\n\n        for( var name in this.biomolDict ){\n            output.biomolDict[ name ] = this.biomolDict[ name ].toJSON()\n        }\n        for( var name in this.atomSetDict ){\n            output.atomSetDict[ name ] = this.atomSetDict[ name ].toJSON()\n        }\n        for( var name in this.atomSetCache ){\n            output.atomSetCache[ name ] = this.atomSetCache[ name ].toJSON()\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.toJSON\" );\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.fromJSON\" );\n\n        this.name = input.name;\n        this.path = input.path;\n        this.title = input.title;\n        this.id = input.id;\n\n        this.biomolDict = input.biomolDict;\n        this.helices = input.helices;\n        this.sheets = input.sheets;\n        if( input.unitcell ) this.unitcell = new NGL.Unitcell().fromJSON( input.unitcell );\n\n        this.frames = input.frames;\n        this.boxes = input.boxes;\n\n        this.center = new THREE.Vector3().fromArray( input.center );\n        this.boundingBox = new THREE.Box3(\n            new THREE.Vector3().fromArray( input.boundingBox[ 0 ] ),\n            new THREE.Vector3().fromArray( input.boundingBox[ 1 ] )\n        );\n\n        this.bondStore.fromJSON( input.bondStore );\n        this.backboneBondStore.fromJSON( input.backboneBondStore );\n        this.rungBondStore.fromJSON( input.rungBondStore );\n        this.atomStore.fromJSON( input.atomStore );\n        this.residueStore.fromJSON( input.residueStore );\n        this.chainStore.fromJSON( input.chainStore );\n        this.modelStore.fromJSON( input.modelStore );\n\n        this.bondSet.fromJSON( input.bondSet );\n        this.atomSet.fromJSON( input.atomSet );\n\n        this.biomolDict = {};\n        for( var name in input.biomolDict ){\n            var assembly = new NGL.Assembly();\n            this.biomolDict[ name ] = assembly.fromJSON( input.biomolDict[ name ] );\n        }\n        this.atomSetDict = {};\n        for( var name in input.atomSetDict ){\n            var as = new TypedFastBitSet();\n            this.atomSetDict[ name ] = as.fromJSON( input.atomSetDict[ name ] );\n        }\n        this.atomSetCache = {};\n        for( var name in input.atomSetCache ){\n            var as = new TypedFastBitSet();\n            this.atomSetCache[ name ] = as.fromJSON( input.atomSetCache[ name ] );\n        }\n\n        this.atomMap.fromJSON( input.atomMap );\n        this.residueMap.fromJSON( input.residueMap );\n\n        NGL.GidPool.updateObject( this );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.fromJSON\" );\n\n        return this;\n\n    },\n\n    getTransferable: function(){\n\n        var transferable = [];\n\n        transferable.concat( this.bondStore.getTransferable() );\n        transferable.concat( this.backboneBondStore.getTransferable() );\n        transferable.concat( this.rungBondStore.getTransferable() );\n        transferable.concat( this.atomStore.getTransferable() );\n        transferable.concat( this.residueStore.getTransferable() );\n        transferable.concat( this.chainStore.getTransferable() );\n        transferable.concat( this.modelStore.getTransferable() );\n\n        if( this.frames ){\n            var frames = this.frames;\n            var n = this.frames.length;\n            for( var i = 0; i < n; ++i ){\n                transferable.push( frames[ i ].buffer );\n            }\n        }\n        if( this.boxes ){\n            var boxes = this.boxes;\n            var n = this.boxes.length;\n            for( var i = 0; i < n; ++i ){\n                transferable.push( boxes[ i ].buffer );\n            }\n        }\n\n        transferable.concat( this.bondSet.getTransferable() );\n        transferable.concat( this.atomSet.getTransferable() );\n\n        for( var name in this.atomSetDict ){\n            transferable.concat( this.atomSetDict[ name ].getTransferable() );\n        }\n        for( var name in this.atomSetCache ){\n            transferable.concat( this.atomSetCache[ name ].getTransferable() );\n        }\n\n        return transferable;\n\n    },\n\n    dispose: function(){\n\n        NGL.GidPool.removeObject( this );\n\n        if( this.frames ) this.frames.length = 0;\n        if( this.boxes ) this.boxes.length = 0;\n\n        this.bondStore.dispose();\n        this.backboneBondStore.dispose();\n        this.rungBondStore.dispose();\n        this.atomStore.dispose();\n        this.residueStore.dispose();\n        this.chainStore.dispose();\n        this.modelStore.dispose();\n\n        delete this.bondStore;\n        delete this.atomStore;\n        delete this.residueStore;\n        delete this.chainStore;\n        delete this.modelStore;\n\n        delete this.frames;\n        delete this.boxes;\n        delete this.cif;\n\n        delete this.bondSet;\n        delete this.atomSet;\n\n    }\n\n};\n\n\nNGL.StructureView = function( structure, selection ){\n\n    var SIGNALS = signals;\n    this.signals = {\n        refreshed: new SIGNALS.Signal(),\n    };\n\n    this.structure = structure;\n    this.selection = selection;\n\n    this.center = new THREE.Vector3();\n    this.boundingBox = new THREE.Box3();\n\n    // to allow creating an empty object to call .fromJSON onto\n    if( !structure && !selection ) return;\n\n    this.init();\n\n    this.refresh();\n\n};\n\nNGL.StructureView.prototype = NGL.createObject(\n\n    NGL.Structure.prototype, {\n\n    constructor: NGL.StructureView,\n    type: \"StructureView\",\n\n    init: function(){\n\n        Object.defineProperties( this, {\n            atomSetDict: {\n                get: function(){ return this.structure.atomSetDict }\n            },\n            bondStore: {\n                get: function(){ return this.structure.bondStore }\n            },\n            backboneBondStore: {\n                get: function(){ return this.structure.backboneBondStore }\n            },\n            rungBondStore: {\n                get: function(){ return this.structure.rungBondStore }\n            },\n            atomStore: {\n                get: function(){ return this.structure.atomStore }\n            },\n            residueStore: {\n                get: function(){ return this.structure.residueStore }\n            },\n            chainStore: {\n                get: function(){ return this.structure.chainStore }\n            },\n            modelStore: {\n                get: function(){ return this.structure.modelStore }\n            },\n            atomMap: {\n                get: function(){ return this.structure.atomMap }\n            },\n            residueMap: {\n                get: function(){ return this.structure.residueMap }\n            }\n        } );\n\n        this._ap = this.getAtomProxy();\n        this._rp = this.getResidueProxy();\n        this._cp = this.getChainProxy();\n\n        // FIXME should selection be serializable?\n        if( this.selection ){\n            this.selection.signals.stringChanged.add( function( string ){\n                this.refresh();\n            }, this );\n        }\n\n        this.structure.signals.refreshed.add( this.refresh, this );\n\n    },\n\n    refresh: function(){\n\n        if( NGL.debug ) NGL.time( \"NGL.StructureView.refresh\" );\n\n        this.atomSetCache = {};\n\n        this.atomSet = this.getAtomSet2( this.selection );\n        if( this.structure.atomSet ){\n            if( NGL.debug ) NGL.time( \"NGL.StructureView.refresh#atomSet.intersection\" );\n            this.atomSet = this.atomSet.intersection( this.structure.atomSet );\n            if( NGL.debug ) NGL.timeEnd( \"NGL.StructureView.refresh#atomSet.intersection\" );\n        }\n\n        this.bondSet = this.getBondSet();\n\n        if( NGL.debug ) NGL.time( \"NGL.StructureView.refresh#atomSetDict.new_intersection\" );\n        for( var name in this.atomSetDict ){\n            var as = this.atomSetDict[ name ];\n            this.atomSetCache[ \"__\" + name ] = as.new_intersection( this.atomSet );\n        }\n        if( NGL.debug ) NGL.timeEnd( \"NGL.StructureView.refresh#atomSetDict.new_intersection\" );\n\n        if( NGL.debug ) NGL.time( \"NGL.StructureView.refresh#size\" );\n        this.atomCount = this.atomSet.size();\n        this.bondCount = this.bondSet.size();\n        if( NGL.debug ) NGL.timeEnd( \"NGL.StructureView.refresh#size\" );\n\n        this.boundingBox = this.getBoundingBox();\n        this.center = this.boundingBox.center();\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.StructureView.refresh\" );\n\n        this.signals.refreshed.dispatch();\n\n    },\n\n    getSelection: function(){\n\n        var parentSelection = this.structure.getSelection();\n        if( parentSelection ){\n            if( parentSelection.string && this.selection.string ){\n                return new NGL.Selection(\n                    \"( \" + parentSelection.string + \" ) AND \" +\n                    \"( \" + this.selection.string + \" )\"\n                );\n            }else if( parentSelection.string ){\n                return new NGL.Selection( parentSelection.string );\n            }else if( this.selection.string ){\n                return new NGL.Selection( this.selection.string );\n            }else{\n                return new NGL.Selection( \"\" );\n            }\n        }else{\n            return this.selection;\n        }\n\n    },\n\n    getStructure: function(){\n\n        return this.structure.getStructure();\n\n    },\n\n    toJSON: function(){\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: 'StructureView',\n                generator: 'StructureViewExporter'\n            },\n\n            structure: this.structure.toJSON(),\n            // selection: this.selection.toJSON(),\n\n            atomSet: this.atomSet.toJSON(),\n            bondSet: this.bondSet.toJSON(),\n\n            atomCount: this.atomCount,\n            bondCount: this.bondCount,\n\n            atomSetCache: {}\n\n        };\n\n        for( var name in this.atomSetCache ){\n            output.atomSetCache[ name ] = this.atomSetCache[ name ].toJSON()\n        }\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        if( input.structure.metadata.type === \"Structure\" ){\n            this.structure = new NGL.Structure().fromJSON( input.structure );\n        }else if( input.structure.metadata.type === \"StructureView\" ){\n            this.structure = new NGL.StructureView().fromJSON( input.structure );\n        }\n\n        this.atomSet = new TypedFastBitSet().fromJSON( input.atomSet );\n        this.bondSet = new TypedFastBitSet().fromJSON( input.bondSet );\n\n        this.atomCount = input.atomCount;\n        this.bondCount = input.bondCount;\n\n        this.atomSetCache = {};\n        for( var name in input.atomSetCache ){\n            var as = new TypedFastBitSet();\n            this.atomSetCache[ name ] = as.fromJSON( input.atomSetCache[ name ] );\n        }\n\n        this.init();\n\n        return this;\n\n    },\n\n    getTransferable: function(){\n\n        var transferable = [];\n\n        transferable.concat( this.structure.getTransferable() );\n\n        transferable.concat( this.bondSet.getTransferable() );\n        transferable.concat( this.atomSet.getTransferable() );\n\n        for( var name in this.atomSetCache ){\n            transferable.concat( this.atomSetCache[ name ].getTransferable() );\n        }\n\n        return transferable;\n\n    },\n\n    dispose: function(){\n\n        delete this.structure;\n\n        delete this.atomSet;\n        delete this.bondSet;\n\n        delete this.atomCount;\n        delete this.bondCount;\n\n    }\n\n} );\n\n// File:js/ngl/trajectory.js\n\n/**\n * @file Trajectory\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n\nNGL.makeTrajectory = function( trajSrc, structure, sele ){\n\n    var traj;\n\n    if( trajSrc instanceof NGL.Frames || trajSrc instanceof Promise ){\n\n        traj = new NGL.FramesTrajectory( trajSrc, structure, sele );\n\n    }else if( !trajSrc && structure.frames ){\n\n        traj = new NGL.StructureTrajectory( trajSrc, structure, sele );\n\n    }else{\n\n        traj = new NGL.RemoteTrajectory( trajSrc, structure, sele );\n\n    }\n\n    return traj;\n\n};\n\n\n///////////\n// Frames\n\nNGL.Frames = function( name, path ){\n\n    this.name = name;\n    this.path = path;\n\n    this.coordinates = [];\n    this.boxes = [];\n\n};\n\nNGL.Frames.prototype = {\n\n    constructor: NGL.Frames,\n\n    toJSON: function(){\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: 'Frames',\n                generator: 'FramesExporter'\n            },\n\n            name: this.name,\n            path: this.path,\n\n            coordinates: this.coordinates,\n            boxes: this.boxes\n\n        };\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.name = input.name;\n        this.path = input.path;\n\n        this.coordinates = input.coordinates;\n        this.boxes = input.boxes;\n\n    },\n\n    getTransferable: function(){\n\n        var transferable = [];\n\n        var coordinates = this.coordinates;\n        var n = coordinates.length;\n\n        for( var i = 0; i < n; ++i ){\n\n            transferable.push( coordinates[ i ].buffer );\n\n        }\n\n        return transferable;\n\n    }\n\n};\n\n\n///////////////\n// Trajectory\n\n// TODO params handling in constructor and getParameters method\nNGL.Trajectory = function( trajPath, structure, selectionString ){\n\n    var SIGNALS = signals;\n\n    this.signals = {\n        gotNumframes: new SIGNALS.Signal(),\n        frameChanged: new SIGNALS.Signal(),\n        selectionChanged: new SIGNALS.Signal(),\n        playerChanged: new SIGNALS.Signal(),\n    };\n\n    this.params = {\n        centerPbc: true,\n        removePbc: true,\n        superpose: true\n    };\n\n    this.name = trajPath.replace( /^.*[\\\\\\/]/, '' );\n\n    this.selection = new NGL.Selection(\n        selectionString || \"backbone and not hydrogen\"\n    );\n\n    this.selection.signals.stringChanged.add( function( string ){\n        this.makeIndices();\n        this.resetCache();\n    }, this );\n\n    // should come after this.selection is set\n    this.setStructure( structure );\n\n    this.trajPath = trajPath;\n\n    this.numframes = undefined;\n    this.getNumframes();\n\n};\n\nNGL.Trajectory.prototype = {\n\n    constructor: NGL.Trajectory,\n\n    setStructure: function( structure ){\n\n        this.structure = structure;\n        this.atomCount = structure.atomCount;\n\n        this.makeAtomIndices();\n\n        this.saveInitialStructure();\n\n        this.backboneIndices = this.structure.atomIndex(\n            new NGL.Selection( \"backbone and not hydrogen\" )\n        );\n        this.makeIndices();\n\n        this.frameCache = [];\n        this.boxCache = [];\n        this.pathCache = [];\n        this.frameCacheSize = 0;\n        this.currentFrame = -1;\n\n    },\n\n    saveInitialStructure: function(){\n\n        var i = 0;\n        var initialStructure = new Float32Array( 3 * this.atomCount );\n\n        this.structure.eachSelectedAtom( function( a ){\n\n            initialStructure[ i + 0 ] = a.x;\n            initialStructure[ i + 1 ] = a.y;\n            initialStructure[ i + 2 ] = a.z;\n\n            i += 3;\n\n        } );\n\n        this.initialStructure = initialStructure;\n\n    },\n\n    setSelection: function( string ){\n\n        this.selection.setString( string );\n\n        return this;\n\n    },\n\n    makeIndices: function(){\n\n        this.indices = this.structure.atomIndex( this.selection );\n\n        var i, j;\n        var n = this.indices.length * 3;\n\n        this.coords1 = new Float32Array( n );\n        this.coords2 = new Float32Array( n );\n\n        var y = this.initialStructure;\n        var coords2 = this.coords2;\n\n        for( i = 0; i < n; i += 3 ){\n\n            j = this.indices[ i / 3 ] * 3;\n\n            coords2[ i + 0 ] = y[ j + 0 ];\n            coords2[ i + 1 ] = y[ j + 1 ];\n            coords2[ i + 2 ] = y[ j + 2 ];\n\n        }\n\n    },\n\n    makeAtomIndices: function(){\n\n        NGL.error( \"Trajectory.makeAtomIndices not implemented\" );\n\n    },\n\n    getNumframes: function(){\n\n        NGL.error( \"Trajectory.loadFrame not implemented\" );\n\n    },\n\n    resetCache: function(){\n\n        this.frameCache = [];\n        this.boxCache = [];\n        this.pathCache = [];\n        this.frameCacheSize = 0;\n        this.setFrame( this.currentFrame );\n\n        return this;\n\n    },\n\n    setParameters: function( params ){\n\n        var p = params;\n        var tp = this.params;\n        var resetCache = false;\n\n        if( p.centerPbc !== undefined && p.centerPbc !== tp.centerPbc ){\n\n            tp.centerPbc = p.centerPbc;\n            resetCache = true;\n\n        }\n\n        if( p.removePbc !== undefined && p.removePbc !== tp.removePbc ){\n\n            tp.removePbc = p.removePbc;\n            resetCache = true;\n\n        }\n\n        if( p.superpose !== undefined && p.superpose !== tp.superpose ){\n\n            tp.superpose = p.superpose;\n            resetCache = true;\n\n        }\n\n        if( resetCache ) this.resetCache();\n\n    },\n\n    setFrame: function( i, callback ){\n\n        if( i === undefined ) return this;\n\n        this.inProgress = true;\n\n        i = parseInt( i );\n\n        if( i === -1 || this.frameCache[ i ] ){\n\n            this.updateStructure( i, callback );\n\n        }else{\n\n            this.loadFrame( i, function(){\n\n                this.updateStructure( i, callback );\n\n            }.bind( this ) );\n\n        }\n\n        return this;\n\n    },\n\n    interpolate: function(){\n\n        var spline = function( p0, p1, p2, p3, t, tension ) {\n\n            var v0 = ( p2 - p0 ) * tension;\n            var v1 = ( p3 - p1 ) * tension;\n            var t2 = t * t;\n            var t3 = t * t2;\n\n            return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 +\n                   ( -3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 +\n                   v0 * t + p1;\n\n        }\n\n        var lerp = function( a, b, t ) {\n\n            return a + ( b - a ) * t;\n\n        }\n\n        return function( i, ip, ipp, ippp, t, type, callback ){\n\n            var fc = this.frameCache;\n\n            var c = fc[ i ];\n            var cp = fc[ ip ];\n            var cpp = fc[ ipp ];\n            var cppp = fc[ ippp ];\n\n            var m = c.length;\n            var coords = new Float32Array( m );\n\n            if( type === \"spline\" ){\n\n                for( var j = 0; j < m; j += 3 ){\n\n                    coords[ j + 0 ] = spline(\n                        cppp[ j + 0 ], cpp[ j + 0 ], cp[ j + 0 ], c[ j + 0 ], t, 1\n                    );\n                    coords[ j + 1 ] = spline(\n                        cppp[ j + 1 ], cpp[ j + 1 ], cp[ j + 1 ], c[ j + 1 ], t, 1\n                    );\n                    coords[ j + 2 ] = spline(\n                        cppp[ j + 2 ], cpp[ j + 2 ], cp[ j + 2 ], c[ j + 2 ], t, 1\n                    );\n\n                }\n\n            }else{\n\n                for( var j = 0; j < m; j += 3 ){\n\n                    coords[ j + 0 ] = lerp( cp[ j + 0 ], c[ j + 0 ], t );\n                    coords[ j + 1 ] = lerp( cp[ j + 1 ], c[ j + 1 ], t );\n                    coords[ j + 2 ] = lerp( cp[ j + 2 ], c[ j + 2 ], t );\n\n                }\n\n            }\n\n            this.structure.updatePosition( coords );\n            this.currentFrame = i;\n            this.signals.frameChanged.dispatch( i );\n\n            if( typeof callback === \"function\" ){\n\n                callback();\n\n            }\n\n        }\n\n    }(),\n\n    setFrameInterpolated: function( i, ip, ipp, ippp, t, type, callback ){\n\n        if( i === undefined ) return this;\n\n        var fc = this.frameCache;\n\n        var iList = [];\n\n        if( !fc[ ippp ] ) iList.push( ippp );\n        if( !fc[ ipp ] ) iList.push( ipp );\n        if( !fc[ ip ] ) iList.push( ip );\n        if( !fc[ i ] ) iList.push( i );\n\n        if( iList.length ){\n\n            this.loadFrame( iList, function(){\n\n                this.interpolate( i, ip, ipp, ippp, t, type, callback );\n\n            }.bind( this ) );\n\n        }else{\n\n            this.interpolate( i, ip, ipp, ippp, t, type, callback );\n\n        }\n\n        return this;\n\n    },\n\n    loadFrame: function( i, callback ){\n\n        if( Array.isArray( i ) ){\n\n            var queue;\n            var fn = function( j, wcallback ){\n                this._loadFrame( j, wcallback );\n                if( queue.length() === 0 && typeof callback === \"function\" ) callback();\n            }.bind( this );\n            queue = new NGL.Queue( fn, i );\n\n        }else{\n\n            this._loadFrame( i, callback );\n\n        }\n\n    },\n\n    _loadFrame: function( i, callback ){\n\n        NGL.error( \"Trajectory._loadFrame not implemented\" );\n\n    },\n\n    updateStructure: function( i, callback ){\n\n        if( this._disposed ) return;\n\n        if( i === -1 ){\n\n            this.structure.updatePosition( this.initialStructure );\n\n        }else{\n\n            this.structure.updatePosition( this.frameCache[ i ] );\n\n        }\n\n        this.structure.trajectory = {\n            name: this.trajPath,\n            frame: i\n        };\n\n        if( typeof callback === \"function\" ){\n\n            callback();\n\n        }\n\n        this.currentFrame = i;\n\n        this.inProgress = false;\n\n        this.signals.frameChanged.dispatch( i );\n\n    },\n\n    getCircularMean: function( indices, coords, box ){\n\n        // NGL.time( \"NGL.Trajectory.getCircularMean\" );\n\n        var mean = [\n\n            NGL.Utils.circularMean( coords, box[ 0 ], 3, 0, indices ),\n            NGL.Utils.circularMean( coords, box[ 1 ], 3, 1, indices ),\n            NGL.Utils.circularMean( coords, box[ 2 ], 3, 2, indices )\n\n        ];\n\n        // NGL.timeEnd( \"NGL.Trajectory.getCircularMean\" );\n\n        return mean;\n\n    },\n\n    centerPbc: function( coords, mean, box ){\n\n        // NGL.time( \"NGL.Trajectory.centerPbc\" );\n\n        if( box[ 0 ]===0 || box[ 8 ]===0 || box[ 4 ]===0 ){\n            return;\n        }\n\n        var i;\n        var n = coords.length;\n\n        var bx = box[ 0 ], by = box[ 1 ], bz = box[ 2 ];\n        var mx = mean[ 0 ], my = mean[ 1 ], mz = mean[ 2 ];\n\n        var fx = - mx + bx + bx / 2;\n        var fy = - my + by + by / 2;\n        var fz = - mz + bz + bz / 2;\n\n        for( i = 0; i < n; i += 3 ){\n\n            coords[ i + 0 ] = ( coords[ i + 0 ] + fx ) % bx;\n            coords[ i + 1 ] = ( coords[ i + 1 ] + fy ) % by;\n            coords[ i + 2 ] = ( coords[ i + 2 ] + fz ) % bz;\n\n        }\n\n        // NGL.timeEnd( \"NGL.Trajectory.centerPbc\" );\n\n    },\n\n    removePbc: function( x, box ){\n\n        // NGL.time( \"NGL.Trajectory.removePbc\" );\n\n        if( box[ 0 ]===0 || box[ 8 ]===0 || box[ 4 ]===0 ){\n            return;\n        }\n\n        // ported from GROMACS src/gmxlib/rmpbc.c:rm_gropbc()\n        // in-place\n\n        var i, j, d, dist;\n        var n = x.length;\n\n        for( i = 3; i < n; i += 3 ){\n\n            for( j = 0; j < 3; ++j ){\n\n                dist = x[ i + j ] - x[ i - 3 + j ];\n\n                if( Math.abs( dist ) > 0.9 * box[ j * 3 + j ] ){\n\n                    if( dist > 0 ){\n\n                        for( d = 0; d < 3; ++d ){\n                            x[ i + d ] -= box[ j * 3 + d ];\n                        }\n\n                    }else{\n\n                        for( d = 0; d < 3; ++d ){\n                            x[ i + d ] += box[ j * 3 + d ];\n                        }\n\n                    }\n                }\n\n            }\n\n        }\n\n        // NGL.timeEnd( \"NGL.Trajectory.removePbc\" );\n\n        return x;\n\n    },\n\n    superpose: function( x ){\n\n        // NGL.time( \"NGL.Trajectory.superpose\" );\n\n        var i, j;\n        var n = this.indices.length * 3;\n\n        var coords1 = this.coords1;\n        var coords2 = this.coords2;\n\n        for( i = 0; i < n; i += 3 ){\n\n            j = this.indices[ i / 3 ] * 3;\n\n            coords1[ i + 0 ] = x[ j + 0 ];\n            coords1[ i + 1 ] = x[ j + 1 ];\n            coords1[ i + 2 ] = x[ j + 2 ];\n\n        }\n\n        // TODO re-use superposition object\n        var sp = new NGL.Superposition( coords1, coords2 );\n        sp.transform( x );\n\n        // NGL.timeEnd( \"NGL.Trajectory.superpose\" );\n\n    },\n\n    process: function( i, box, coords, numframes ){\n\n        this.setNumframes( numframes );\n\n        if( box ){\n\n            if( this.backboneIndices.length > 0 && this.params.centerPbc ){\n                var box2 = [ box[ 0 ], box[ 4 ], box[ 8 ] ];\n                var mean = this.getCircularMean(\n                    this.backboneIndices, coords, box2\n                );\n                this.centerPbc( coords, mean, box2 );\n            }\n\n            if( this.params.removePbc ){\n                this.removePbc( coords, box );\n            }\n\n        }\n\n        if( this.indices.length > 0 && this.params.superpose ){\n            this.superpose( coords );\n        }\n\n        this.frameCache[ i ] = coords;\n        this.boxCache[ i ] = box;\n        this.frameCacheSize += 1;\n\n    },\n\n    setNumframes: function( n ){\n\n        if( n !== this.numframes ){\n\n            this.numframes = n;\n            this.signals.gotNumframes.dispatch( n );\n\n        }\n\n    },\n\n    dispose: function(){\n\n        this.frameCache = [];  // aid GC\n        this._disposed = true;\n        if( this.player ) this.player.stop();\n\n    },\n\n    setPlayer: function( player ){\n\n        this.player = player;\n        this.signals.playerChanged.dispatch( player );\n\n    },\n\n    getPath: function( index, callback ){\n\n        NGL.error( \"Trajectory.getPath not implemented\" );\n\n    },\n\n    download: function( step ){\n\n        // TODO format needs to include the number of atoms\n        // TODO lower precision, e.g. 20 bit integers\n        // TODO don't process, use raw data\n\n        var scope = this;\n\n        var n = this.numframes;\n        var k = step;\n\n        var m = Math.ceil( n / k );\n        var u = 0;\n\n        var bbt = new Float32Array( m * ( 9 + 3 * this.atomCount ) );\n\n        function getData( j, v ){\n\n            var l = v * ( 9 + 3 * scope.atomCount );\n\n            bbt.set( scope.boxCache[ j ], l );\n            bbt.set( scope.frameCache[ j ], l + 9 );\n\n            if( v === m - 1 ){\n\n                var blob = new Blob(\n                    [ bbt ], { type: 'application/octet-binary' }\n                );\n\n                NGL.download( blob, \"traj.bbt\" );\n\n            }\n\n        }\n\n        for( var i = 0; i < n; i += k ){\n\n            this.loadFrame( i, function(){\n\n                getData( i, u );\n\n            } );\n\n            u += 1;\n\n        }\n\n    }\n\n};\n\n\nNGL.RemoteTrajectory = function( trajPath, structure, selectionString ){\n\n    NGL.Trajectory.call( this, trajPath, structure, selectionString );\n\n};\n\nNGL.RemoteTrajectory.prototype = NGL.createObject(\n\n    NGL.Trajectory.prototype, {\n\n    constructor: NGL.RemoteTrajectory,\n\n    type: \"remote\",\n\n    makeAtomIndices: function(){\n\n        var structure = this.structure;\n        var atomIndices = [];\n\n        if( structure instanceof NGL.StructureSubset ){\n\n            var indices = structure.structure.atomIndex( structure.selection );\n\n            var i, r;\n            var p = indices[ 0 ];\n            var q = indices[ 0 ];\n            var n = indices.length;\n\n            for( i = 1; i < n; ++i ){\n\n                r = indices[ i ];\n\n                if( q + 1 < r ){\n\n                    atomIndices.push( [ p, q + 1 ] );\n                    p = r;\n\n                }\n\n                q = r;\n\n            }\n\n            atomIndices.push( [ p, q + 1 ] );\n\n        }else{\n\n            atomIndices.push( [ 0, this.atomCount ] );\n\n        }\n\n        this.atomIndices = atomIndices;\n\n    },\n\n    _loadFrame: function( i, callback ){\n\n        // TODO implement max frameCache size, re-use arrays\n\n        // NGL.time( \"NGL.RemoteTrajectory._loadFrame\" );\n\n        var request = new XMLHttpRequest();\n\n        var ds = NGL.DatasourceRegistry.trajectory;\n        var url = ds.getFrameUrl( this.trajPath, i );\n        var params = ds.getFrameParams( this.trajPath, this.atomIndices );\n\n        request.open( \"POST\", url, true );\n        request.responseType = \"arraybuffer\";\n        request.setRequestHeader(\n            \"Content-type\", \"application/x-www-form-urlencoded\"\n        );\n\n        request.addEventListener( 'load', function( event ){\n\n            // NGL.timeEnd( \"NGL.RemoteTrajectory._loadFrame\" );\n\n            var arrayBuffer = request.response;\n            if( !arrayBuffer ){\n                NGL.error( \"empty arrayBuffer for '\" + url + \"'\" );\n                return;\n            }\n\n            var numframes = new Int32Array( arrayBuffer, 0, 1 )[ 0 ];\n            var time = new Float32Array( arrayBuffer, 1 * 4, 1 )[ 0 ];\n            var box = new Float32Array( arrayBuffer, 2 * 4, 9 );\n            var coords = new Float32Array( arrayBuffer, 11 * 4 );\n\n            this.process( i, box, coords, numframes );\n            if( typeof callback === \"function\" ){\n                callback();\n            }\n\n        }.bind( this ), false );\n\n        request.send( params );\n\n    },\n\n    getNumframes: function(){\n\n        var loader = new THREE.XHRLoader();\n        var ds = NGL.DatasourceRegistry.trajectory;\n        var url = ds.getNumframesUrl( this.trajPath );\n\n        loader.load( url, function( n ){\n            this.setNumframes( parseInt( n ) );\n        }.bind( this ) );\n\n    },\n\n    getPath: function( index, callback ){\n\n        if( this.pathCache[ index ] ){\n            callback( this.pathCache[ index ] );\n            return;\n        }\n\n        NGL.time( \"loadPath\" );\n\n        var request = new XMLHttpRequest();\n\n        var ds = NGL.DatasourceRegistry.trajectory;\n        var url = ds.getPathUrl( this.trajPath, index );\n        var params = \"\";\n\n        request.open( \"POST\", url, true );\n        request.responseType = \"arraybuffer\";\n        request.setRequestHeader(\n            \"Content-type\", \"application/x-www-form-urlencoded\"\n        );\n\n        request.addEventListener( 'load', function( event ){\n\n            NGL.timeEnd( \"loadPath\" );\n\n            var arrayBuffer = request.response;\n            if( !arrayBuffer ){\n                NGL.error( \"empty arrayBuffer for '\" + url + \"'\" );\n                return;\n            }\n\n            var path = new Float32Array( arrayBuffer );\n            // NGL.log( path )\n            this.pathCache[ index ] = path;\n            callback( path );\n\n        }.bind( this ), false );\n\n        request.send( params );\n\n    }\n\n} );\n\n\nNGL.StructureTrajectory = function( trajPath, structure, selectionString ){\n\n    // if( !trajPath ) trajPath = structure.path;\n    trajPath = \"\";\n\n    NGL.Trajectory.call( this, trajPath, structure, selectionString );\n\n};\n\nNGL.StructureTrajectory.prototype = NGL.createObject(\n\n    NGL.Trajectory.prototype, {\n\n    constructor: NGL.StructureTrajectory,\n\n    type: \"structure\",\n\n    makeAtomIndices: function(){\n\n        var structure = this.structure;\n        var atomSet = structure.atomSet;\n        var count = atomSet.size();\n\n        if( count < structure.atomStore.count ){\n            var atomIndices = new Int32Array( count );\n            atomSet.forEach( function( index, i ){\n                atomIndices[ i ] = index;\n            } );\n            this.atomIndices = atomIndices;\n        }else{\n            this.atomIndices = null;\n        }\n\n    },\n\n    _loadFrame: function( i, callback ){\n\n        var coords;\n        var structure = this.structure;\n        var frame = this.structure.frames[ i ];\n\n        if( this.atomIndices ){\n\n            var indices = this.atomIndices;\n            var m = indices.length;\n\n            coords = new Float32Array( m * 3 );\n\n            for( var j = 0; j < m; ++j ){\n\n                var j3 = j * 3;\n                var idx3 = indices[ j ] * 3;\n\n                coords[ j3 + 0 ] = frame[ idx3 + 0 ];\n                coords[ j3 + 1 ] = frame[ idx3 + 1 ];\n                coords[ j3 + 2 ] = frame[ idx3 + 2 ];\n\n            }\n\n        }else{\n\n            coords = new Float32Array( frame );\n\n        }\n\n        var box = this.structure.boxes[ i ];\n        var numframes = this.structure.frames.length;\n\n        this.process( i, box, coords, numframes );\n\n        if( typeof callback === \"function\" ){\n\n            callback();\n\n        }\n\n    },\n\n    getNumframes: function(){\n\n        this.setNumframes( this.structure.frames.length );\n\n    },\n\n    getPath: function( index, callback ){\n\n        var i, j, f;\n        var n = this.numframes;\n        var k = index * 3;\n\n        var path = new Float32Array( n * 3 );\n\n        for( i = 0; i < n; ++i ){\n\n            j = 3 * i;\n            f = this.structure.frames[ i ];\n\n            path[ j + 0 ] = f[ k + 0 ];\n            path[ j + 1 ] = f[ k + 1 ];\n            path[ j + 2 ] = f[ k + 2 ];\n\n        }\n\n        callback( path );\n\n    }\n\n} );\n\n\nNGL.FramesTrajectory = function( frames, structure, selectionString ){\n\n    if( frames instanceof Promise ){\n\n        frames.then( function( _frames ){\n\n            this.setFrames( _frames );\n            this.getNumframes();\n\n        }.bind( this ) );\n\n    }else{\n\n        this.setFrames( frames );\n\n    }\n\n    NGL.Trajectory.call( this, \"\", structure, selectionString );\n\n};\n\nNGL.FramesTrajectory.prototype = NGL.createObject(\n\n    NGL.Trajectory.prototype, {\n\n    constructor: NGL.FramesTrajectory,\n\n    type: \"frames\",\n\n    setFrames: function( frames ){\n\n        this.name = frames.name;\n        this.path = frames.path;\n\n        this.frames = frames.coordinates;\n        this.boxes = frames.boxes;\n\n    },\n\n    makeAtomIndices:  function(){\n\n        var structure = this.structure;\n\n        if( structure instanceof NGL.StructureView ){\n\n            this.atomIndices = structure.structure.atomIndex(\n                structure.selection\n            );\n\n        }else{\n\n            this.atomIndices = null;\n\n        }\n\n    },\n\n    _loadFrame: function( i, callback ){\n\n        var coords;\n        var structure = this.structure;\n        var frame = this.frames[ i ];\n\n        if( this.atomIndices ){\n\n            var indices = this.atomIndices;\n            var m = indices.length;\n\n            coords = new Float32Array( m * 3 );\n\n            for( var j = 0; j < m; ++j ){\n\n                var j3 = j * 3;\n                var idx3 = indices[ j ] * 3;\n\n                coords[ j3 + 0 ] = frame[ idx3 + 0 ];\n                coords[ j3 + 1 ] = frame[ idx3 + 1 ];\n                coords[ j3 + 2 ] = frame[ idx3 + 2 ];\n\n            }\n\n        }else{\n\n            coords = new Float32Array( frame );\n\n        }\n\n        var box = this.boxes[ i ];\n        var numframes = this.frames.length;\n\n        this.process( i, box, coords, numframes );\n\n        if( typeof callback === \"function\" ){\n\n            callback();\n\n        }\n\n    },\n\n    getNumframes: function(){\n\n        if( this.frames ){\n\n            this.setNumframes( this.frames.length );\n\n        }\n\n    },\n\n    getPath: function( index, callback ){\n\n        var i, j, f;\n        var n = this.numframes;\n        var k = index * 3;\n\n        var path = new Float32Array( n * 3 );\n\n        for( i = 0; i < n; ++i ){\n\n            j = 3 * i;\n            f = this.frames[ i ];\n\n            path[ j + 0 ] = f[ k + 0 ];\n            path[ j + 1 ] = f[ k + 1 ];\n            path[ j + 2 ] = f[ k + 2 ];\n\n        }\n\n        callback( path );\n\n    }\n\n} );\n\n\n///////////\n// Player\n\nNGL.TrajectoryPlayer = function( traj, step, timeout, start, end ){\n\n    var SIGNALS = signals;\n\n    this.signals = {\n        startedRunning: new SIGNALS.Signal(),\n        haltedRunning: new SIGNALS.Signal()\n    };\n\n    traj.signals.playerChanged.add( function( player ){\n        if( player !== this ){\n            this.pause();\n        }\n    }, this );\n\n    this.traj = traj;\n    this.step = step || Math.ceil( ( traj.numframes + 1 ) / 100 );\n    this.timeout = timeout || 50;\n    this.start = start || 0;\n    this.end = end || traj.numframes - 1;\n    this.end = Math.min( this.end, traj.numframes - 1 );\n    this.interpolateType = \"\";\n    this.interpolateStep = 5;\n\n    this.mode = \"loop\"; // loop, once\n    this.direction = \"forward\"; // forward, backward\n\n    this._stopFlag = false;\n    this._running = false;\n\n};\n\nNGL.TrajectoryPlayer.prototype = {\n\n    constructor: NGL.TrajectoryPlayer,\n\n    _animate: function(){\n\n        var i;\n        this._running = true;\n\n        if( !this.traj.inProgress && !this._stopFlag ){\n\n            if( this.direction === \"forward\" ){\n                i = this.traj.currentFrame + this.step;\n            }else{\n                i = this.traj.currentFrame - this.step;\n            }\n\n            if( i >= this.end || i < this.start ){\n\n                if( this.mode === \"once\" ){\n\n                    this.pause();\n\n                    if( this.direction === \"forward\" ){\n                        i = this.end;\n                    }else{\n                        i = this.start;\n                    }\n\n                }else{\n\n                    if( this.direction === \"forward\" ){\n                        i = this.start;\n                    }else{\n                        i = this.end;\n                    }\n\n                }\n\n            }\n\n            if( !this.interpolateType ){\n                this.traj.setFrame( i );\n            }\n\n        }\n\n        if( !this._stopFlag ){\n\n            if( !this.traj.inProgress && this.interpolateType ){\n\n                var ip, ipp, ippp;\n\n                if( this.direction === \"forward\" ){\n\n                    ip = Math.max( this.start, i - this.step );\n                    ipp = Math.max( this.start, i - 2 * this.step );\n                    ippp = Math.max( this.start, i - 3 * this.step );\n\n                }else{\n\n                    ip = Math.min( this.end, i + this.step );\n                    ipp = Math.min( this.end, i + 2 * this.step );\n                    ippp = Math.min( this.end, i + 3 * this.step );\n\n                }\n\n                this._interpolate(\n                    i, ip, ipp, ippp, 1 / this.interpolateStep, 0\n                );\n\n            }else{\n\n                setTimeout( this._animate.bind( this ), this.timeout );\n\n            }\n\n        }else{\n\n            this._running = false;\n\n        }\n\n    },\n\n    _interpolate: function( i, ip, ipp, ippp, d, t ){\n\n        t += d;\n\n        if( t <= 1 ){\n\n            var deltaTime = Math.round( this.timeout * d );\n\n            this.traj.setFrameInterpolated(\n                i, ip, ipp, ippp, t, this.interpolateType,\n                function(){\n                    setTimeout( function(){\n                        this._interpolate( i, ip, ipp, ippp, d, t );\n                    }.bind( this ), deltaTime );\n                }.bind( this )\n            );\n\n        }else{\n\n            setTimeout( this._animate.bind( this ), 0 );\n\n        }\n\n    },\n\n    toggle: function(){\n\n        if( this._running ){\n            this.pause();\n        }else{\n            this.play();\n        }\n\n    },\n\n    play: function(){\n\n        if( !this._running ){\n\n            if( this.traj.player !== this ){\n                this.traj.setPlayer( this );\n            }\n\n            var frame = this.traj.currentFrame;\n\n            // snap to the grid implied by this.step division and multiplication\n            // thus minimizing cache misses\n            var i = Math.ceil( frame / this.step ) * this.step\n\n            // wrap when restarting from the limit (i.e. end or start)\n            if( this.direction === \"forward\" && frame >= this.end ){\n\n                i = this.start;\n\n            }else if( this.direction === \"backward\" && frame <= this.start ){\n\n                i = this.end;\n\n            }\n\n            this.traj.setFrame( i );\n\n            this._stopFlag = false;\n            this._animate();\n            this.signals.startedRunning.dispatch();\n\n        }\n\n    },\n\n    pause: function(){\n\n        if( this._running ){\n            this._stopFlag = true;\n            this.signals.haltedRunning.dispatch();\n        }\n\n    },\n\n    stop: function(){\n\n        this.traj.setFrame( this.start );\n        this.pause();\n\n    }\n\n};\n\n// File:js/ngl/surface.js\n\n/**\n * @file Surface\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n////////////\n// Surface\n\nNGL.Surface = function( name, path, data ){\n\n    this.name = name;\n    this.path = path;\n    this.info = {};\n\n    this.center = new THREE.Vector3();\n    this.boundingBox = new THREE.Box3();\n\n    if( data instanceof THREE.Geometry ||\n        data instanceof THREE.BufferGeometry ||\n        data instanceof THREE.Group\n    ){\n\n        this.fromGeometry( data );\n\n    }else if( data ){\n\n        this.set(\n            data.position,\n            data.index,\n            data.normal,\n            data.color,\n            data.atomindex\n        );\n\n    }\n\n};\n\nNGL.Surface.prototype = {\n\n    constructor: NGL.Surface,\n    type: \"Surface\",\n\n    set: function( position, index, normal, color, atomindex ){\n\n        this.position = position;\n        this.index = index;\n        this.normal = normal;\n        this.color = color;\n        this.atomindex = atomindex;\n\n        this.size = position.length / 3;\n\n    },\n\n    fromGeometry: function( geometry ){\n\n        if( NGL.debug ) NGL.time( \"NGL.GeometrySurface.fromGeometry\" );\n\n        var geo;\n\n        if( geometry instanceof THREE.Geometry ){\n            geometry.computeVertexNormals( true );\n            geo = new THREE.BufferGeometry().fromGeometry( geometry );\n        }else if( geometry instanceof THREE.BufferGeometry ){\n            geo = geometry;\n        }else{\n            geo = geometry.children[0].geometry;\n        }\n\n        if( !geo.boundingBox ) geo.computeBoundingBox();\n\n        this.center.copy( geo.boundingBox.center() );\n        this.boundingBox.copy( geo.boundingBox );\n\n        var position, color, index, normal;\n\n        if( geo instanceof THREE.BufferGeometry ){\n\n            var attr = geo.attributes\n            var an = attr.normal ? attr.normal.array : false;\n\n            // assume there are no normals if the first is zero\n            if( !an || ( an[ 0 ] === 0 && an[ 1 ] === 0 && an[ 2 ] === 0 ) ){\n                geo.computeVertexNormals();\n            }\n\n            position = attr.position.array;\n            index = attr.index ? attr.index.array : null;\n            normal = attr.normal.array;\n\n        }\n\n        this.set( position, index, normal, color, undefined );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.GeometrySurface.setGeometry\" );\n\n    },\n\n    getPosition: function(){\n\n        return this.position;\n\n    },\n\n    getColor: function( params ){\n\n        var p = params || {};\n\n        var n = this.size;\n        var array;\n\n        if( p.scheme === \"volume\" ){\n\n            var v = new THREE.Vector3();\n            var pos = this.position;\n            var colorMaker = NGL.ColorMakerRegistry.getScheme( p );\n\n            array = new Float32Array( n * 3 );\n\n            for( var i = 0, a; i < n; ++i ){\n\n                var i3 = i * 3;\n                v.set( pos[ i3 ], pos[ i3 + 1 ], pos[ i3 + 2 ] );\n                colorMaker.positionColorToArray( v, array, i3 );\n\n            }\n\n        }else if( this.atomindex ){\n\n            p.surface = this;  // FIXME should this be p.surface???\n            array = new Float32Array( n * 3 );\n            var colorMaker = NGL.ColorMakerRegistry.getScheme( p );\n            var atomProxy = p.structure.getAtomProxy();\n            var atomindex = this.atomindex;\n\n            for( var i = 0, a; i < n; ++i ){\n                atomProxy.index = atomindex[ i ];\n                colorMaker.atomColorToArray( atomProxy, array, i * 3 );\n            }\n\n        }else{\n\n            var tc = new THREE.Color( p.value );\n            array = NGL.Utils.uniformArray3( n, tc.r, tc.g, tc.b );\n\n        }\n\n        return array;\n\n    },\n\n    getPickingColor: function( params ){\n\n        var p = Object.assign( params || {} );\n        p.scheme = \"picking\";\n\n        return this.getColor( p );\n\n    },\n\n    getNormal: function(){\n\n        return this.normal;\n\n    },\n\n    getSize: function( size ){\n\n        return NGL.Utils.uniformArray( this.size, size );\n\n    },\n\n    getIndex: function(){\n\n        return this.index;\n\n    },\n\n    getFilteredIndex: function( sele, structure ){\n\n        if( sele && this.atomindex ){\n\n            var selection = new NGL.Selection( sele );\n            var as = structure.getAtomSet( selection );\n            var filteredIndex = [];\n\n            var atomindex = this.atomindex;\n            var index = this.index;\n            var n = index.length;\n            var j = 0;\n\n            var ap1 = structure.getAtomProxy();\n            var ap2 = structure.getAtomProxy();\n            var ap3 = structure.getAtomProxy();\n\n            for( var i = 0; i < n; i+=3 ){\n\n                var idx1 = index[ i     ];\n                var idx2 = index[ i + 1 ];\n                var idx3 = index[ i + 2 ];\n\n                var ai1 = atomindex[ idx1 ];\n                var ai2 = atomindex[ idx2 ];\n                var ai3 = atomindex[ idx3 ];\n\n                if( as.has( ai1 ) && as.has( ai2 ) && as.has( ai3 ) ){\n                    filteredIndex[ j     ] = idx1;\n                    filteredIndex[ j + 1 ] = idx2;\n                    filteredIndex[ j + 2 ] = idx3;\n                    j += 3;\n                }\n\n            }\n\n            var TypedArray = this.position.length / 3 > 65535 ? Uint32Array : Uint16Array;\n            return new TypedArray( filteredIndex );\n\n        }else{\n\n            return this.index;\n\n        }\n\n    },\n\n    getAtomindex: function(){\n\n        return this.atomindex;\n\n    },\n\n    toJSON: function(){\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: 'Surface',\n                generator: 'SurfaceExporter'\n            },\n\n            name: this.name,\n            path: this.path,\n            info: this.info,\n\n            position: this.position,\n            index: this.index,\n            normal: this.normal,\n            color: this.color,\n            atomindex: this.atomindex,\n\n            size: this.size,\n\n            center: this.center.toArray(),\n            boundingBox: {\n                min: this.boundingBox.min.toArray(),\n                max: this.boundingBox.max.toArray()\n            }\n\n        }\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.name = input.name;\n        this.path = input.path;\n        this.info = input.info;\n\n        this.position = input.position;\n        this.index = input.index;\n        this.normal = input.normal;\n        this.color = input.color;\n        this.atomindex = input.atomindex;\n\n        this.size = input.size;\n\n        this.center.fromArray( input.center );\n        this.boundingBox.set(\n            input.boundingBox.min,\n            input.boundingBox.max\n        );\n\n        return this;\n\n    },\n\n    getTransferable: function(){\n\n        var transferable = [];\n\n        if( this.position ) transferable.push( this.position.buffer );\n        if( this.index ) transferable.push( this.index.buffer );\n        if( this.normal ) transferable.push( this.normal.buffer );\n        if( this.color ) transferable.push( this.color.buffer );\n        if( this.atomindex ) transferable.push( this.atomindex.buffer );\n\n        return transferable;\n\n    },\n\n    dispose: function(){\n\n        //\n\n    }\n\n};\n\n\n/////////\n// Grid\n\nNGL.Grid = function( length, width, height, dataCtor, elemSize ){\n\n    dataCtor = dataCtor || Int32Array;\n    elemSize = elemSize || 1;\n\n    var j;\n\n    var data = new dataCtor( length * width * height * elemSize );\n\n    function index( x, y, z ){\n\n        return ( ( ( ( x * width ) + y ) * height ) + z ) * elemSize;\n\n    }\n\n    this.data = data;\n\n    this.index = index;\n\n    this.set = function( x, y, z ){\n\n        var i = index( x, y, z );\n\n        for( j = 0; j < elemSize; ++j ){\n            data[ i + j ] = arguments[ 3 + j ];\n        }\n\n    };\n\n    this.toArray = function( x, y, z, array, offset ){\n\n        var i = index( x, y, z );\n\n        if ( array === undefined ) array = [];\n        if ( offset === undefined ) offset = 0;\n\n        for( j = 0; j < elemSize; ++j ){\n            array[ j ] = data[ i + j ];\n        }\n\n    };\n\n    this.fromArray = function( x, y, z, array, offset ){\n\n        var i = index( x, y, z );\n\n        if ( offset === undefined ) offset = 0;\n\n        for( j = 0; j < elemSize; ++j ){\n            data[ i + j ] = array[ offset + j ];\n        }\n\n    };\n\n    this.copy = function( grid ){\n\n        this.data.set( grid.data );\n\n    };\n\n    this.clone = function(){\n\n        return new NGL.Grid(\n\n            length, width, height, dataCtor, elemSize\n\n        ).copy( this );\n\n    };\n\n};\n\n\n///////////\n// Volume\n\nNGL.WorkerRegistry.add( \"surf\", function( e, callback ){\n\n    if( NGL.debug ) NGL.time( \"WORKER surf\" );\n\n    if( self.vol === undefined ) self.vol = new NGL.Volume();\n\n    var vol = self.vol;\n    var d = e.data;\n    var p = d.params;\n\n    if( d.vol ) vol.fromJSON( d.vol );\n\n    if( p ){\n        var surface = vol.getSurface(\n            p.isolevel, p.smooth, p.center, p.size\n        );\n    }\n\n    if( NGL.debug ) NGL.timeEnd( \"WORKER surf\" );\n\n    if( p ){\n        callback( surface.toJSON(), surface.getTransferable() );\n    }else{\n        callback();\n    }\n\n} );\n\n\nNGL.Volume = function( name, path, data, nx, ny, nz, dataAtomindex ){\n\n    this.name = name;\n    this.path = path;\n\n    this.matrix = new THREE.Matrix4();\n    this.normalMatrix = new THREE.Matrix3();\n    this.inverseMatrix = new THREE.Matrix4();\n    this.center = new THREE.Vector3();\n    this.boundingBox = new THREE.Box3();\n\n    this.setData( data, nx, ny, nz, dataAtomindex );\n\n    if( this.__data.length <= Math.pow( 10, 7 ) ){\n        NGL.GidPool.addObject( this );\n    }\n\n};\n\nNGL.Volume.prototype = {\n\n    constructor: NGL.Volume,\n    type: \"Volume\",\n\n    setData: function( data, nx, ny, nz, dataAtomindex ){\n\n        this.nx = nx || 1;\n        this.ny = ny || 1;\n        this.nz = nz || 1;\n\n        this.data = data || new Float32Array( 1 );\n        this.__data = this.data;\n\n        this.setDataAtomindex( dataAtomindex );\n\n        delete this.mc;\n\n        delete this.__isolevel;\n        delete this.__smooth;\n        delete this.__minValue;\n        delete this.__maxValue;\n\n        delete this.__dataPositionBuffer;\n        delete this.__dataPosition;\n        delete this.__dataBuffer;\n\n        delete this.__dataMin;\n        delete this.__dataMax;\n        delete this.__dataMean;\n        delete this.__dataRms;\n\n        if( this.worker ) this.worker.terminate();\n\n        if( this.__data.length <= Math.pow( 10, 7 ) ){\n            NGL.GidPool.updateObject( this, true );\n        }else{\n            NGL.warn( \"Volume too large (>10^7), not adding to GidPool\" );\n            NGL.GidPool.removeObject( this );\n        }\n\n    },\n\n    setMatrix: function( matrix ){\n\n        this.matrix.copy( matrix );\n\n        var bb = this.boundingBox;\n        var v = this.center;  // temporary re-purposing\n\n        var x = this.nx - 1;\n        var y = this.ny - 1;\n        var z = this.nz - 1;\n\n        bb.makeEmpty();\n\n        bb.expandByPoint( v.set( x, y, z ) );\n        bb.expandByPoint( v.set( x, y, 0 ) );\n        bb.expandByPoint( v.set( x, 0, z ) );\n        bb.expandByPoint( v.set( x, 0, 0 ) );\n        bb.expandByPoint( v.set( 0, y, z ) );\n        bb.expandByPoint( v.set( 0, 0, z ) );\n        bb.expandByPoint( v.set( 0, y, 0 ) );\n        bb.expandByPoint( v.set( 0, 0, 0 ) );\n\n        bb.applyMatrix4( this.matrix );\n        bb.center( this.center );\n\n        // make normal matrix\n\n        var me = this.matrix.elements;\n        var r0 = new THREE.Vector3( me[0], me[1], me[2] );\n        var r1 = new THREE.Vector3( me[4], me[5], me[6] );\n        var r2 = new THREE.Vector3( me[8], me[9], me[10] );\n        var cp = new THREE.Vector3();\n        //        [ r0 ]       [ r1 x r2 ]\n        // M3x3 = [ r1 ]   N = [ r2 x r0 ]\n        //        [ r2 ]       [ r0 x r1 ]\n        var ne = this.normalMatrix.elements;\n        cp.crossVectors( r1, r2 );\n        ne[ 0 ] = cp.x;\n        ne[ 1 ] = cp.y;\n        ne[ 2 ] = cp.z;\n        cp.crossVectors( r2, r0 );\n        ne[ 3 ] = cp.x;\n        ne[ 4 ] = cp.y;\n        ne[ 5 ] = cp.z;\n        cp.crossVectors( r0, r1 );\n        ne[ 6 ] = cp.x;\n        ne[ 7 ] = cp.y;\n        ne[ 8 ] = cp.z;\n\n        this.inverseMatrix.getInverse( this.matrix );\n\n    },\n\n    setDataAtomindex: function( dataAtomindex ){\n\n        this.dataAtomindex = dataAtomindex;\n        this.__dataAtomindex = this.dataAtomindex;\n\n        delete this.__dataAtomindexBuffer;\n\n    },\n\n    getBox: function( center, size, target ){\n\n        if( !target ) target = new THREE.Box3();\n\n        target.set( center, center );\n        target.expandByScalar( size );\n        target.applyMatrix4( this.inverseMatrix );\n\n        target.min.round();\n        target.max.round();\n\n        return target;\n\n    },\n\n    getSurface: function( isolevel, smooth, center, size ){\n\n        isolevel = isNaN( isolevel ) ? this.getValueForSigma( 2 ) : isolevel;\n        smooth = smooth || 0;\n        center = center;\n        size = size;\n\n        //\n\n        if( this.mc === undefined ){\n\n            this.mc = new NGL.MarchingCubes2(\n                this.__data, this.nx, this.ny, this.nz, this.__dataAtomindex\n            );\n\n        }\n\n        var box;\n\n        if( center && size ){\n\n            if( !this.__box ) this.__box = new THREE.Box3();\n            box = this.__box;\n            this.getBox( center, size, box );\n\n        }\n\n        var sd;\n\n        if( smooth ){\n\n            sd = this.mc.triangulate( isolevel, true, box );\n            NGL.laplacianSmooth( sd.position, sd.index, smooth, true );\n\n            var bg = new THREE.BufferGeometry();\n            bg.addAttribute( \"position\", new THREE.BufferAttribute( sd.position, 3 ) );\n            bg.setIndex( new THREE.BufferAttribute( sd.index, 1 ) );\n            bg.computeVertexNormals();\n            sd.normal = bg.attributes.normal.array;\n            bg.dispose();\n\n        }else{\n\n            sd = this.mc.triangulate( isolevel, false, box );\n\n        }\n\n        this.matrix.applyToVector3Array( sd.position );\n\n        if( sd.normal ){\n\n            this.normalMatrix.applyToVector3Array( sd.normal );\n\n        }\n\n        var surface = new NGL.Surface( \"\", \"\", sd );\n        surface.info[ \"isolevel\" ] = isolevel;\n        surface.info[ \"smooth\" ] = smooth;\n\n        return surface;\n\n    },\n\n    getSurfaceWorker: function( isolevel, smooth, center, size, callback ){\n\n        isolevel = isNaN( isolevel ) ? this.getValueForSigma( 2 ) : isolevel;\n        smooth = smooth || 0;\n\n        //\n\n        if( typeof Worker !== \"undefined\" && typeof importScripts !== 'function' ){\n\n            if( this.workerPool === undefined ){\n                this.workerPool = new NGL.WorkerPool( \"surf\", 2 );\n            }\n\n            var worker = this.workerPool.getNextWorker();\n\n            worker.post(\n\n                {\n                    vol: worker.postCount === 0 ? this.toJSON() : null,\n                    params: {\n                        isolevel: isolevel,\n                        smooth: smooth,\n                        center: center,\n                        size: size\n                    }\n                },\n\n                undefined,\n\n                function( e ){\n\n                    var surface = NGL.fromJSON( e.data );\n                    callback( surface );\n\n                },\n\n                function( e ){\n\n                    console.warn(\n                        \"NGL.Volume.generateSurfaceWorker error - trying without worker\", e\n                    );\n\n                    var surface = this.getSurface( isolevel, smooth, center, size );\n                    callback( surface );\n\n                }.bind( this )\n\n            );\n\n        }else{\n\n            var surface = this.getSurface( isolevel, smooth, center, size );\n            callback( surface );\n\n        }\n\n    },\n\n    getValueForSigma: function( sigma ){\n\n        sigma = sigma !== undefined ? sigma : 2;\n\n        return this.getDataMean() + sigma * this.getDataRms();\n\n    },\n\n    getSigmaForValue: function( value ){\n\n        value = value !== undefined ? value : 0;\n\n        return ( value - this.getDataMean() ) / this.getDataRms();\n\n    },\n\n    filterData: function( minValue, maxValue, outside ){\n\n        if( isNaN( minValue ) && this.header ){\n            minValue = this.header.DMEAN + 2.0 * this.header.ARMS;\n        }\n\n        minValue = ( minValue !== undefined && !isNaN( minValue ) ) ? minValue : -Infinity;\n        maxValue = maxValue !== undefined ? maxValue : Infinity;\n        outside = outside || false;\n\n        if( !this.dataPosition ){\n\n            this.makeDataPosition();\n\n        }\n\n        var dataPosition = this.__dataPosition;\n        var data = this.__data;\n\n        if( minValue === this.__minValue && maxValue == this.__maxValue &&\n            outside === this.__outside\n        ){\n\n            // already filtered\n            return;\n\n        }else if( minValue === -Infinity && maxValue === Infinity ){\n\n            this.dataPosition = dataPosition;\n            this.data = data;\n\n        }else{\n\n            var n = data.length;\n\n            if( !this.__dataBuffer ){\n\n                // ArrayBuffer for re-use as Float32Array backend\n\n                this.__dataPositionBuffer = new ArrayBuffer( n * 3 * 4 );\n                this.__dataBuffer = new ArrayBuffer( n * 4 );\n\n            }\n\n            var filteredDataPosition = new Float32Array( this.__dataPositionBuffer );\n            var filteredData = new Float32Array( this.__dataBuffer );\n\n            var j = 0;\n\n            for( var i = 0; i < n; ++i ){\n\n                var i3 = i * 3;\n                var v = data[ i ];\n\n                if( ( !outside && v >= minValue && v <= maxValue ) ||\n                    ( outside && ( v < minValue || v > maxValue ) )\n                ){\n\n                    var j3 = j * 3;\n\n                    filteredDataPosition[ j3 + 0 ] = dataPosition[ i3 + 0 ];\n                    filteredDataPosition[ j3 + 1 ] = dataPosition[ i3 + 1 ];\n                    filteredDataPosition[ j3 + 2 ] = dataPosition[ i3 + 2 ];\n\n                    filteredData[ j ] = v;\n\n                    j += 1;\n\n                }\n\n            }\n\n            // set views\n\n            this.dataPosition = new Float32Array( this.__dataPositionBuffer, 0, j * 3 );\n            this.data = new Float32Array( this.__dataBuffer, 0, j );\n\n        }\n\n        this.__minValue = minValue;\n        this.__maxValue = maxValue;\n        this.__outside = outside;\n\n    },\n\n    makeDataPosition: function(){\n\n        var nz = this.nz;\n        var ny = this.ny;\n        var nx = this.nx;\n\n        var position = new Float32Array( nx * ny * nz * 3 );\n\n        var p = 0;\n\n        for( var z = 0; z < nz; ++z ){\n\n            for( var y = 0; y < ny; ++y ){\n\n                for( var x = 0; x < nx; ++x ){\n\n                    position[ p + 0 ] = x;\n                    position[ p + 1 ] = y;\n                    position[ p + 2 ] = z;\n\n                    p += 3;\n\n                }\n\n            }\n\n        }\n\n        this.matrix.applyToVector3Array( position );\n\n        this.dataPosition = position;\n        this.__dataPosition = position;\n\n    },\n\n    getDataAtomindex: function(){\n\n        return this.dataAtomindex;\n\n    },\n\n    getDataPosition: function(){\n\n        return this.dataPosition;\n\n    },\n\n    getDataColor: function( params ){\n\n        var p = params || {};\n        p.volume = this;\n        p.scale = p.scale || 'Spectral';\n        p.domain = p.domain || [ this.getDataMin(), this.getDataMax() ];\n\n        var colorMaker = NGL.ColorMakerRegistry.getScheme( p );\n\n        var n = this.dataPosition.length / 3;\n        var array = new Float32Array( n * 3 );\n\n        // var atoms = p.structure.atoms;\n        // var atomindex = this.dataAtomindex;\n\n        for( var i = 0; i < n; ++i ){\n\n            colorMaker.volumeColorToArray( i, array, i * 3 );\n\n            // a = atoms[ atomindex[ i ] ];\n            // if( a ) colorMaker.atomColorToArray( a, array, i * 3 );\n\n        }\n\n        return array;\n\n    },\n\n    getPickingDataColor: function( params ){\n\n        var p = Object.assign( params || {} );\n        p.scheme = \"picking\";\n\n        return this.getDataColor( p );\n\n    },\n\n    getDataSize: function( size, scale ){\n\n        var n = this.dataPosition.length / 3;\n        var array;\n\n        switch( size ){\n\n            case \"value\":\n\n                array = new Float32Array( this.data );\n                break;\n\n            case \"abs-value\":\n\n                array = new Float32Array( this.data );\n                for( var i = 0; i < n; ++i ){\n                    array[ i ] = Math.abs( array[ i ] );\n                }\n                break;\n\n            case \"value-min\":\n\n                array = new Float32Array( this.data );\n                var min = this.getDataMin();\n                for( var i = 0; i < n; ++i ){\n                    array[ i ] -= min;\n                }\n                break;\n\n            case \"deviation\":\n\n                array = new Float32Array( this.data );\n                break;\n\n            default:\n\n                array = NGL.Utils.uniformArray( n, size );\n                break;\n\n        }\n\n        if( scale !== 1.0 ){\n\n            for( var i = 0; i < n; ++i ){\n                array[ i ] *= scale;\n            }\n\n        }\n\n        return array;\n\n    },\n\n    getDataMin: function(){\n\n        if( this.__dataMin === undefined ){\n\n            var data = this.__data;\n            var n = data.length;\n            var min = Infinity;\n\n            for( var i = 0; i < n; ++i ){\n                min = Math.min( min, data[ i ] );\n            }\n\n            this.__dataMin = min;\n\n        }\n\n        return this.__dataMin;\n\n    },\n\n    getDataMax: function(){\n\n        if( this.__dataMax === undefined ){\n\n            var data = this.__data;\n            var n = data.length;\n            var max = -Infinity;\n\n            for( var i = 0; i < n; ++i ){\n                max = Math.max( max, data[ i ] );\n            }\n\n            this.__dataMax = max;\n\n        }\n\n        return this.__dataMax;\n\n    },\n\n    getDataMean: function(){\n\n        if( this.__dataMean === undefined ){\n\n            var data = this.__data;\n            var n = data.length;\n            var sum = 0;\n\n            for( var i = 0; i < n; ++i ){\n                sum += data[ i ];\n            }\n\n            this.__dataMean = sum / n;\n\n        }\n\n        return this.__dataMean;\n\n    },\n\n    getDataRms: function(){\n\n        if( this.__dataRms === undefined ){\n\n            var data = this.__data;\n            var n = data.length;\n            var sumSq = 0;\n            var di, i;\n\n            for( i = 0; i < n; ++i ){\n                di = data[ i ];\n                sumSq += di * di;\n            }\n\n            this.__dataRms = Math.sqrt( sumSq / n );\n\n        }\n\n        return this.__dataRms;\n\n    },\n\n    clone: function(){\n\n        var vol = new NGL.Volume(\n\n            this.name,\n            this.path,\n\n            this.__data,\n\n            this.nx,\n            this.ny,\n            this.nz,\n\n            this.__dataAtomindex\n\n        );\n\n        vol.matrix.copy( this.matrix );\n\n        if( this.header ){\n\n            vol.header = Object.assign( {}, this.header );\n\n        }\n\n        return vol;\n\n    },\n\n    toJSON: function(){\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: 'Volume',\n                generator: 'VolumeExporter'\n            },\n\n            name: this.name,\n            path: this.path,\n\n            data: this.__data,\n\n            nx: this.nx,\n            ny: this.ny,\n            nz: this.nz,\n\n            dataAtomindex: this.__dataAtomindex,\n\n            matrix: this.matrix.toArray(),\n            normalMatrix: this.normalMatrix.toArray(),\n            inverseMatrix: this.inverseMatrix.toArray(),\n\n            center: this.center.toArray(),\n            boundingBox: {\n                min: this.boundingBox.min.toArray(),\n                max: this.boundingBox.max.toArray()\n            }\n\n        }\n\n        if( this.header ){\n\n            output.header = Object.assign( {}, this.header );\n\n        }\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.name = input.name;\n        this.path = input.path;\n\n        this.setData(\n\n            input.data,\n\n            input.nx,\n            input.ny,\n            input.nz,\n\n            input.dataAtomindex\n\n        );\n\n        this.matrix.fromArray( input.matrix );\n        this.normalMatrix.fromArray( input.normalMatrix );\n        this.inverseMatrix.fromArray( input.inverseMatrix );\n\n        if( input.header ){\n\n            this.header = Object.assign( {}, input.header );\n\n        }\n\n        this.center.fromArray( input.center );\n        this.boundingBox.set(\n            input.boundingBox.min,\n            input.boundingBox.max\n        );\n\n        return this;\n\n    },\n\n    getTransferable: function(){\n\n        var transferable = [\n\n            this.__data.buffer\n\n        ];\n\n        if( this.__dataAtomindex ){\n            transferable.push( this.__dataAtomindex.buffer );\n        }\n\n        return transferable;\n\n    },\n\n    dispose: function(){\n\n        if( this.workerPool ) this.workerPool.terminate();\n\n        NGL.GidPool.removeObject( this );\n\n    }\n\n};\n\n\n///////////////////\n// Marching cubes\n\nNGL.MarchingCubes = function( data, nx, ny, nz, isolevel ){\n\n    // The MIT License (MIT) Copyright (c) 2012-2013 Mikola Lysenko\n    // http://0fps.net/2012/07/12/smooth-voxel-terrain-part-2/\n    //\n    // Based on Paul Bourke's classic implementation:\n    // http://paulbourke.net/geometry/polygonise/\n    // JS port by Mikola Lysenko\n    //\n    // Adapted for NGL by Alexander Rose\n\n    if( NGL.debug ) NGL.time( \"NGL.MarchingCubes\" );\n\n    var dims = new Int32Array( [ nx, ny, nz ] );\n\n    var edgeTable = NGL.MarchingCubes.edgeTable;\n    var triTable = NGL.MarchingCubes.triTable;\n    var cubeVerts = NGL.MarchingCubes.cubeVerts;\n    var edgeIndex = NGL.MarchingCubes.edgeIndex;\n\n    var vertices = [];\n    var faces = [];\n    var vc3 = 0;  // vertexCount * 3\n    var fc3 = 0;  // faceCount * 3\n\n    var n = 0;\n    var grid = new Float32Array( 8 );\n    var edges = new Int32Array( 12 );\n    var x = new Int32Array( 3 );\n\n    // March over the volume\n\n    for( x[2]=0; x[2] < dims[2]-1; ++x[2], n+=dims[0] ){\n\n        for( x[1]=0; x[1] < dims[1]-1; ++x[1], ++n){\n\n            for( x[0]=0; x[0] < dims[0]-1; ++x[0], ++n) {\n\n                // For each cell, compute cube mask\n\n                var cubeIndex = 0;\n\n                for( var i=0; i<8; ++i ){\n\n                    var v = cubeVerts[ i ]\n                    var k = n + v[0] + dims[0] * ( v[1] + dims[1] * v[2] );\n                    var s = data[ k ] - isolevel;\n\n                    grid[ i ] = s;\n                    cubeIndex |= ( s > 0 ) ? 1 << i : 0;\n\n                }\n\n                // Compute vertices\n\n                var edgeMask = edgeTable[ cubeIndex ];\n\n                if( edgeMask === 0 ) {\n                    continue;\n                }\n\n                for( var i=0; i<12; ++i ){\n\n                    if( ( edgeMask & ( 1 << i ) ) === 0 ){\n                        continue;\n                    }\n\n                    edges[ i ] = vc3 / 3;\n\n                    var e = edgeIndex[ i ];\n                    var p0 = cubeVerts[ e[ 0 ] ];\n                    var p1 = cubeVerts[ e[ 1 ] ];\n                    var a = grid[ e[ 0 ] ];\n                    var b = grid[ e[ 1 ] ];\n                    var d = a - b;\n                    var t = 0;\n\n                    if( Math.abs( d ) > 1e-6 ){\n                        t = a / d;\n                    }\n\n                    vertices[ vc3 + 0 ] = ( x[0] + p0[0] ) + t * ( p1[0] - p0[0] );\n                    vertices[ vc3 + 1 ] = ( x[1] + p0[1] ) + t * ( p1[1] - p0[1] );\n                    vertices[ vc3 + 2 ] = ( x[2] + p0[2] ) + t * ( p1[2] - p0[2] );\n\n                    vc3 += 3;\n\n                }\n\n                // Add faces\n\n                var f = triTable[ cubeIndex ];\n\n                for( var i=0; i<f.length; i += 3 ){\n\n                    faces[ fc3 + 0 ] = edges[ f[ i + 0 ] ];\n                    faces[ fc3 + 1 ] = edges[ f[ i + 1 ] ];\n                    faces[ fc3 + 2 ] = edges[ f[ i + 2 ] ];\n\n                    fc3 += 3;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.MarchingCubes\" );\n\n    var TypedArray = vertices.length / 3 > 65535 ? Uint32Array : Uint16Array;\n    return {\n        position: new Float32Array( vertices ),\n        normal: undefined,\n        index: new TypedArray( faces )\n    };\n\n};\n\nNGL.MarchingCubes2 = function( field, nx, ny, nz, atomindex ){\n\n    // Based on alteredq / http://alteredqualia.com/\n    // port of greggman's ThreeD version of marching cubes to Three.js\n    // http://webglsamples.googlecode.com/hg/blob/blob.html\n    //\n    // Adapted for NGL by Alexander Rose\n\n    var edgeTable = NGL.MarchingCubes.edgeTable;\n    var triTable = NGL.MarchingCubes.triTable;\n\n    var isolevel = 0;\n    var noNormals = false;\n    var center = undefined;\n    var size = Infinity;\n\n    var n = nx * ny * nz;\n\n    // deltas\n    var yd = nx;\n    var zd = nx * ny;\n\n    var normalCache, vertexIndex;\n    var count, icount;\n\n    var ilist = new Int32Array( 12 );\n\n    var positionArray = [];\n    var normalArray = [];\n    var indexArray = [];\n    var atomindexArray = [];\n\n    //\n\n    this.triangulate = function( _isolevel, _noNormals, _box ){\n\n        if( NGL.debug ) NGL.time( \"NGL.MarchingCubes2.triangulate\" );\n\n        isolevel = _isolevel;\n        noNormals = _noNormals;\n\n        if( !noNormals && !normalCache ){\n            normalCache = new Float32Array( n * 3 );\n        }\n\n        if( !vertexIndex ){\n            vertexIndex = new Int32Array( n );\n        }\n\n        count = 0;\n        icount = 0;\n\n        if( _box !== undefined ){\n\n            _box.min.round();\n            _box.max.round();\n            triangulate(\n                _box.min.x, _box.min.y, _box.min.z,\n                _box.max.x, _box.max.y, _box.max.z\n            );\n\n        }else{\n\n            triangulate();\n\n        }\n\n        positionArray.length = count * 3;\n        if( !noNormals ) normalArray.length = count * 3;\n        indexArray.length = icount;\n        if( atomindex ) atomindexArray.length = count;\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.MarchingCubes2.triangulate\" );\n\n        var TypedArray = positionArray.length / 3 > 65535 ? Uint32Array : Uint16Array;\n        return {\n            position: new Float32Array( positionArray ),\n            normal: noNormals ? undefined : new Float32Array( normalArray ),\n            index: new TypedArray( indexArray ),\n            atomindex: atomindex ? new Int32Array( atomindexArray ) : undefined,\n        };\n\n    }\n\n    // polygonization\n\n    function lerp( a, b, t ) { return a + ( b - a ) * t; }\n\n    function VIntX( q, offset, x, y, z, valp1, valp2 ) {\n\n        if( vertexIndex[ q ] < 0 ){\n\n            var mu = ( isolevel - valp1 ) / ( valp2 - valp1 );\n            var nc = normalCache;\n\n            var c = count * 3;\n\n            positionArray[ c + 0 ] = x + mu;\n            positionArray[ c + 1 ] = y;\n            positionArray[ c + 2 ] = z;\n\n            if( !noNormals ){\n\n                var q3 = q * 3;\n\n                normalArray[ c ]     = -lerp( nc[ q3 ],     nc[ q3 + 3 ], mu );\n                normalArray[ c + 1 ] = -lerp( nc[ q3 + 1 ], nc[ q3 + 4 ], mu );\n                normalArray[ c + 2 ] = -lerp( nc[ q3 + 2 ], nc[ q3 + 5 ], mu );\n\n            }\n\n            if( atomindex ) atomindexArray[ count ] = atomindex[ q + mu ];\n\n            vertexIndex[ q ] = count;\n            ilist[ offset ] = count;\n\n            count += 1;\n\n        }else{\n\n            ilist[ offset ] = vertexIndex[ q ];\n\n        }\n\n    }\n\n    function VIntY( q, offset, x, y, z, valp1, valp2 ) {\n\n        if( vertexIndex[ q ] < 0 ){\n\n            var mu = ( isolevel - valp1 ) / ( valp2 - valp1 );\n            var nc = normalCache;\n\n            var c = count * 3;\n\n            positionArray[ c ]     = x;\n            positionArray[ c + 1 ] = y + mu;\n            positionArray[ c + 2 ] = z;\n\n            if( !noNormals ){\n\n                var q3 = q * 3;\n                var q6 = q3 + yd * 3;\n\n                normalArray[ c ]     = -lerp( nc[ q3 ],     nc[ q6 ],     mu );\n                normalArray[ c + 1 ] = -lerp( nc[ q3 + 1 ], nc[ q6 + 1 ], mu );\n                normalArray[ c + 2 ] = -lerp( nc[ q3 + 2 ], nc[ q6 + 2 ], mu );\n\n            }\n\n            if( atomindex ) atomindexArray[ count ] = atomindex[ q + mu * yd ];\n\n            vertexIndex[ q ] = count;\n            ilist[ offset ] = count;\n\n            count += 1;\n\n        }else{\n\n            ilist[ offset ] = vertexIndex[ q ];\n\n        }\n\n    }\n\n    function VIntZ( q, offset, x, y, z, valp1, valp2 ) {\n\n        if( vertexIndex[ q ] < 0 ){\n\n            var mu = ( isolevel - valp1 ) / ( valp2 - valp1 );\n            var nc = normalCache;\n\n            var c = count * 3;\n\n            positionArray[ c ]     = x;\n            positionArray[ c + 1 ] = y;\n            positionArray[ c + 2 ] = z + mu;\n\n            if( !noNormals ){\n\n                var q3 = q * 3;\n                var q6 = q3 + zd * 3;\n\n                normalArray[ c ]     = -lerp( nc[ q3 ],     nc[ q6 ],     mu );\n                normalArray[ c + 1 ] = -lerp( nc[ q3 + 1 ], nc[ q6 + 1 ], mu );\n                normalArray[ c + 2 ] = -lerp( nc[ q3 + 2 ], nc[ q6 + 2 ], mu );\n\n            }\n\n            if( atomindex ) atomindexArray[ count ] = atomindex[ q + mu * zd ];\n\n            vertexIndex[ q ] = count;\n            ilist[ offset ] = count;\n\n            count += 1;\n\n        }else{\n\n            ilist[ offset ] = vertexIndex[ q ];\n\n        }\n\n    }\n\n    function compNorm( q ) {\n\n        var q3 = q * 3;\n\n        if ( normalCache[ q3 ] === 0.0 ) {\n\n            normalCache[ q3     ] = field[ q - 1  ] - field[ q + 1 ];\n            normalCache[ q3 + 1 ] = field[ q - yd ] - field[ q + yd ];\n            normalCache[ q3 + 2 ] = field[ q - zd ] - field[ q + zd ];\n\n        }\n\n    }\n\n    function polygonize( fx, fy, fz, q ) {\n\n        // cache indices\n        var q1 = q + 1,\n            qy = q + yd,\n            qz = q + zd,\n            q1y = q1 + yd,\n            q1z = q1 + zd,\n            qyz = q + yd + zd,\n            q1yz = q1 + yd + zd;\n\n        var cubeindex = 0,\n            field0 = field[ q ],\n            field1 = field[ q1 ],\n            field2 = field[ qy ],\n            field3 = field[ q1y ],\n            field4 = field[ qz ],\n            field5 = field[ q1z ],\n            field6 = field[ qyz ],\n            field7 = field[ q1yz ];\n\n        if ( field0 < isolevel ) cubeindex |= 1;\n        if ( field1 < isolevel ) cubeindex |= 2;\n        if ( field2 < isolevel ) cubeindex |= 8;\n        if ( field3 < isolevel ) cubeindex |= 4;\n        if ( field4 < isolevel ) cubeindex |= 16;\n        if ( field5 < isolevel ) cubeindex |= 32;\n        if ( field6 < isolevel ) cubeindex |= 128;\n        if ( field7 < isolevel ) cubeindex |= 64;\n\n        // if cube is entirely in/out of the surface - bail, nothing to draw\n\n        var bits = edgeTable[ cubeindex ];\n        if ( bits === 0 ) return 0;\n\n        var fx2 = fx + 1,\n            fy2 = fy + 1,\n            fz2 = fz + 1;\n\n        // top of the cube\n\n        if ( bits & 1 ) {\n\n            if( !noNormals ){\n                compNorm( q );\n                compNorm( q1 );\n            }\n            VIntX( q, 0, fx, fy, fz, field0, field1 );\n\n        };\n\n        if ( bits & 2 ) {\n\n            if( !noNormals ){\n                compNorm( q1 );\n                compNorm( q1y );\n            }\n            VIntY( q1, 1, fx2, fy, fz, field1, field3 );\n\n        };\n\n        if ( bits & 4 ) {\n\n            if( !noNormals ){\n                compNorm( qy );\n                compNorm( q1y );\n            }\n            VIntX( qy, 2, fx, fy2, fz, field2, field3 );\n\n        };\n\n        if ( bits & 8 ) {\n\n            if( !noNormals ){\n                compNorm( q );\n                compNorm( qy );\n            }\n            VIntY( q, 3, fx, fy, fz, field0, field2 );\n\n        };\n\n        // bottom of the cube\n\n        if ( bits & 16 ) {\n\n            if( !noNormals ){\n                compNorm( qz );\n                compNorm( q1z );\n            }\n            VIntX( qz, 4, fx, fy, fz2, field4, field5 );\n\n        };\n\n        if ( bits & 32 ) {\n\n            if( !noNormals ){\n                compNorm( q1z );\n                compNorm( q1yz );\n            }\n            VIntY( q1z, 5, fx2, fy, fz2, field5, field7 );\n\n        };\n\n        if ( bits & 64 ) {\n\n            if( !noNormals ){\n                compNorm( qyz );\n                compNorm( q1yz );\n            }\n            VIntX( qyz, 6, fx, fy2, fz2, field6, field7 );\n\n        };\n\n        if ( bits & 128 ) {\n\n            if( !noNormals ){\n                compNorm( qz );\n                compNorm( qyz );\n            }\n            VIntY( qz, 7, fx, fy, fz2, field4, field6 );\n\n        };\n\n        // vertical lines of the cube\n\n        if ( bits & 256 ) {\n\n            if( !noNormals ){\n                compNorm( q );\n                compNorm( qz );\n            }\n            VIntZ( q, 8, fx, fy, fz, field0, field4 );\n\n        };\n\n        if ( bits & 512 ) {\n\n            if( !noNormals ){\n                compNorm( q1 );\n                compNorm( q1z );\n            }\n            VIntZ( q1, 9, fx2, fy, fz, field1, field5 );\n\n        };\n\n        if ( bits & 1024 ) {\n\n            if( !noNormals ){\n                compNorm( q1y );\n                compNorm( q1yz );\n            }\n            VIntZ( q1y, 10, fx2, fy2, fz, field3, field7 );\n\n        };\n\n        if ( bits & 2048 ) {\n\n            if( !noNormals ){\n                compNorm( qy );\n                compNorm( qyz );\n            }\n            VIntZ( qy, 11, fx, fy2, fz, field2, field6 );\n\n        };\n\n        cubeindex <<= 4;  // re-purpose cubeindex into an offset into triTable\n\n        var o1, o2, o3, i = 0;\n\n        // here is where triangles are created\n\n        while ( triTable[ cubeindex + i ] != -1 ) {\n\n            o1 = cubeindex + i;\n            o2 = o1 + 1;\n            o3 = o1 + 2;\n\n            // FIXME normals flipping (see above) and vertex order reversal\n            indexArray[ icount ]     = ilist[ triTable[ o2 ] ];\n            indexArray[ icount + 1 ] = ilist[ triTable[ o1 ] ];\n            indexArray[ icount + 2 ] = ilist[ triTable[ o3 ] ];\n\n            icount += 3;\n            i += 3;\n\n        }\n\n    }\n\n    function triangulate( xBeg, yBeg, zBeg, xEnd, yEnd, zEnd ) {\n\n        var q, x, y, z, fx, fy, fz, y_offset, z_offset\n\n        xBeg = xBeg !== undefined ? xBeg : 0;\n        yBeg = yBeg !== undefined ? yBeg : 0;\n        zBeg = zBeg !== undefined ? zBeg : 0;\n\n        xEnd = xEnd !== undefined ? xEnd : nx - 1;\n        yEnd = yEnd !== undefined ? yEnd : ny - 1;\n        zEnd = zEnd !== undefined ? zEnd : nz - 1;\n\n        if( noNormals ){\n\n            xBeg = Math.max( 0, xBeg );\n            yBeg = Math.max( 0, yBeg );\n            zBeg = Math.max( 0, zBeg );\n\n            xEnd = Math.min( nx - 1, xEnd );\n            yEnd = Math.min( ny - 1, yEnd );\n            zEnd = Math.min( nz - 1, zEnd );\n\n        }else{\n\n            xBeg = Math.max( 1, xBeg );\n            yBeg = Math.max( 1, yBeg );\n            zBeg = Math.max( 1, zBeg );\n\n            xEnd = Math.min( nx - 2, xEnd );\n            yEnd = Math.min( ny - 2, yEnd );\n            zEnd = Math.min( nz - 2, zEnd );\n\n        }\n\n        // init part of the vertexIndex\n        // (takes a significant amount of time to do for all)\n\n        var xBeg2 = Math.max( 0, xBeg - 2);\n        var yBeg2 = Math.max( 0, yBeg - 2 );\n        var zBeg2 = Math.max( 0, zBeg - 2 );\n\n        var xEnd2 = Math.min( nx, xEnd + 2 );\n        var yEnd2 = Math.min( ny, yEnd + 2 );\n        var zEnd2 = Math.min( nz, zEnd + 2 );\n\n        for ( z = zBeg2; z < zEnd2; ++z ) {\n            z_offset = zd * z;\n            for ( y = yBeg2; y < yEnd2; ++y ) {\n                y_offset = z_offset + yd * y;\n                for ( x = xBeg2; x < xEnd2; ++x ) {\n                    q = y_offset + x;\n                    vertexIndex[ q ] = -1;\n                }\n            }\n        }\n\n        // clip space where the isovalue is too low\n\n        var __break;\n        var __xBeg = xBeg; var __yBeg = yBeg; var __zBeg = zBeg;\n        var __xEnd = xEnd; var __yEnd = yEnd; var __zEnd = zEnd;\n\n        __break = false;\n        for ( z = zBeg; z < zEnd; ++z ) {\n            for ( y = yBeg; y < yEnd; ++y ) {\n                for ( x = xBeg; x < xEnd; ++x ) {\n                    q = ( ( nx * ny ) * z ) + ( nx * y ) + x;\n                    if( field[ q ] >= isolevel ){\n                        __zBeg = z;\n                        __break = true;\n                        break;\n                    }\n                }\n                if( __break ) break;\n            }\n            if( __break ) break;\n        }\n\n        __break = false;\n        for ( y = yBeg; y < yEnd; ++y ) {\n            for ( z = __zBeg; z < zEnd; ++z ) {\n                for ( x = xBeg; x < xEnd; ++x ) {\n                    q = ( ( nx * ny ) * z ) + ( nx * y ) + x;\n                    if( field[ q ] >= isolevel ){\n                        __yBeg = y;\n                        __break = true;\n                        break;\n                    }\n                }\n                if( __break ) break;\n            }\n            if( __break ) break;\n        }\n\n        __break = false;\n        for ( x = xBeg; x < xEnd; ++x ) {\n            for ( y = __yBeg; y < yEnd; ++y ) {\n                for ( z = __zBeg; z < zEnd; ++z ) {\n                    q = ( ( nx * ny ) * z ) + ( nx * y ) + x;\n                    if( field[ q ] >= isolevel ){\n                        __xBeg = x;\n                        __break = true;\n                        break;\n                    }\n                }\n                if( __break ) break;\n            }\n            if( __break ) break;\n        }\n\n        __break = false;\n        for ( z = zEnd; z >= zBeg; --z ) {\n            for ( y = yEnd; y >= yBeg; --y ) {\n                for ( x = xEnd; x >= xBeg; --x ) {\n                    q = ( ( nx * ny ) * z ) + ( nx * y ) + x;\n                    if( field[ q ] >= isolevel ){\n                        __zEnd = z;\n                        __break = true;\n                        break;\n                    }\n                }\n                if( __break ) break;\n            }\n            if( __break ) break;\n        }\n\n        __break = false;\n        for ( y = yEnd; y >= yBeg; --y ) {\n            for ( z = __zEnd; z >= zBeg; --z ) {\n                for ( x = xEnd; x >= xBeg; --x ) {\n                    q = ( ( nx * ny ) * z ) + ( nx * y ) + x;\n                    if( field[ q ] >= isolevel ){\n                        __yEnd = y;\n                        __break = true;\n                        break;\n                    }\n                }\n                if( __break ) break;\n            }\n            if( __break ) break;\n        }\n\n        __break = false;\n        for ( x = xEnd; x >= xBeg; --x ) {\n            for ( y = __yEnd; y >= yBeg; --y ) {\n                for ( z = __zEnd; z >= zBeg; --z ) {\n                    q = ( ( nx * ny ) * z ) + ( nx * y ) + x;\n                    if( field[ q ] >= isolevel ){\n                        __xEnd = x;\n                        __break = true;\n                        break;\n                    }\n                }\n                if( __break ) break;\n            }\n            if( __break ) break;\n        }\n\n        //\n\n        if( noNormals ){\n\n            xBeg = Math.max( 0, __xBeg - 1);\n            yBeg = Math.max( 0, __yBeg - 1 );\n            zBeg = Math.max( 0, __zBeg - 1 );\n\n            xEnd = Math.min( nx - 1, __xEnd + 1 );\n            yEnd = Math.min( ny - 1, __yEnd + 1 );\n            zEnd = Math.min( nz - 1, __zEnd + 1 );\n\n        }else{\n\n            xBeg = Math.max( 1, __xBeg - 1 );\n            yBeg = Math.max( 1, __yBeg - 1 );\n            zBeg = Math.max( 1, __zBeg - 1 );\n\n            xEnd = Math.min( nx - 2, __xEnd + 1 );\n            yEnd = Math.min( ny - 2, __yEnd + 1 );\n            zEnd = Math.min( nz - 2, __zEnd + 1 );\n\n        }\n\n        // polygonize part of the grid\n\n        for ( z = zBeg; z < zEnd; ++z ) {\n            z_offset = zd * z;\n            for ( y = yBeg; y < yEnd; ++y ) {\n                y_offset = z_offset + yd * y;\n                for ( x = xBeg; x < xEnd; ++x ) {\n                    q = y_offset + x;\n                    polygonize( x, y, z, q );\n                }\n            }\n        }\n\n    }\n\n};\n\nNGL.MarchingCubes.edgeTable = new Uint32Array( [\n    0x0  , 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\n    0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\n    0x190, 0x99 , 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\n    0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\n    0x230, 0x339, 0x33 , 0x13a, 0x636, 0x73f, 0x435, 0x53c,\n    0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\n    0x3a0, 0x2a9, 0x1a3, 0xaa , 0x7a6, 0x6af, 0x5a5, 0x4ac,\n    0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\n    0x460, 0x569, 0x663, 0x76a, 0x66 , 0x16f, 0x265, 0x36c,\n    0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\n    0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff , 0x3f5, 0x2fc,\n    0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\n    0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55 , 0x15c,\n    0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\n    0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc ,\n    0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\n    0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\n    0xcc , 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\n    0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\n    0x15c, 0x55 , 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\n    0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\n    0x2fc, 0x3f5, 0xff , 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\n    0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\n    0x36c, 0x265, 0x16f, 0x66 , 0x76a, 0x663, 0x569, 0x460,\n    0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\n    0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa , 0x1a3, 0x2a9, 0x3a0,\n    0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\n    0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33 , 0x339, 0x230,\n    0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\n    0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99 , 0x190,\n    0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\n    0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0\n] );\n\nNGL.MarchingCubes.triTable = new Int32Array( [\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1,\n    3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1,\n    3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1,\n    3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1,\n    9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1,\n    9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\n    2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1,\n    8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1,\n    9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\n    4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1,\n    3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1,\n    1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1,\n    4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1,\n    4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\n    5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1,\n    2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1,\n    9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\n    0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\n    2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1,\n    10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1,\n    4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1,\n    5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1,\n    5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1,\n    9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1,\n    0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1,\n    1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1,\n    10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1,\n    8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1,\n    2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1,\n    7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1,\n    2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1,\n    11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1,\n    5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1,\n    11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1,\n    11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\n    1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1,\n    9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1,\n    5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1,\n    2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\n    5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1,\n    6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1,\n    3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1,\n    6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,\n    5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1,\n    1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\n    10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1,\n    6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1,\n    8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1,\n    7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1,\n    3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\n    5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1,\n    0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\n    9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\n    8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1,\n    5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1,\n    0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1,\n    6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1,\n    10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1,\n    10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\n    8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1,\n    1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1,\n    0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1,\n    10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1,\n    3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1,\n    6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1,\n    9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\n    8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1,\n    3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1,\n    6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1,\n    0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1,\n    10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1,\n    10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1,\n    2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1,\n    7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1,\n    7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1,\n    2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1,\n    1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1,\n    11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1,\n    8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1,\n    0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1,\n    7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\n    10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\n    2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\n    6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1,\n    7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1,\n    2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1,\n    1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1,\n    10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1,\n    10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1,\n    0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1,\n    7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1,\n    6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1,\n    8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1,\n    9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\n    6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1,\n    4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1,\n    10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1,\n    8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1,\n    0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1,\n    1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1,\n    8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1,\n    10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1,\n    4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1,\n    10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\n    5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\n    11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1,\n    9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\n    6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1,\n    7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1,\n    3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1,\n    7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1,\n    3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1,\n    6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1,\n    9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1,\n    1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1,\n    4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1,\n    7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1,\n    6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1,\n    3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\n    0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1,\n    6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1,\n    0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1,\n    11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1,\n    6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1,\n    5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1,\n    9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1,\n    1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1,\n    1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1,\n    10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1,\n    0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1,\n    5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1,\n    10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1,\n    11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1,\n    9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1,\n    7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1,\n    2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1,\n    8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\n    9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1,\n    9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1,\n    1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1,\n    9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1,\n    9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\n    5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1,\n    0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1,\n    10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1,\n    2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1,\n    0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1,\n    0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1,\n    9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1,\n    5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1,\n    3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1,\n    5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1,\n    8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1,\n    0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1,\n    9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\n    1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1,\n    3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1,\n    4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1,\n    9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1,\n    11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1,\n    11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1,\n    2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1,\n    9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1,\n    3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1,\n    1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1,\n    4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1,\n    4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,\n    3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1,\n    0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,\n    9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1,\n    1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\n] );\n\nNGL.MarchingCubes.cubeVerts = [\n    [0,0,0],\n    [1,0,0],\n    [1,1,0],\n    [0,1,0],\n    [0,0,1],\n    [1,0,1],\n    [1,1,1],\n    [0,1,1]\n];\n\nNGL.MarchingCubes.edgeIndex = [\n    [0,1], [1,2], [2,3], [3,0], [4,5], [5,6],\n    [6,7], [7,4], [0,4], [1,5], [2,6], [3,7]\n];\n\n\n//////////////\n// Smoothing\n\nNGL.laplacianSmooth = function( verts, faces, numiter, inflate ){\n\n    // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\n    // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\n    //\n    // Permission to use, copy, modify, and distribute this program for\n    // any purpose, with or without fee, is hereby granted, provided that\n    // the notices on the head, the reference information, and this\n    // copyright notice appear in all copies or substantial portions of\n    // the Software. It is provided \"as is\" without express or implied\n    // warranty.\n    //\n    // ported to JavaScript and adapted to NGL by Alexander Rose\n\n    if( NGL.debug ) NGL.time( \"NGL.laplacianSmooth\" );\n\n    numiter = numiter || 1;\n    inflate = inflate || true;\n\n    var nv = verts.length / 3;\n    var nf = faces.length / 3;\n\n    if( inflate ){\n\n        // Buffer geometry is only used to calculate normals\n\n        var bg = new THREE.BufferGeometry();\n        bg.addAttribute( \"position\", new THREE.BufferAttribute( verts, 3 ) );\n        bg.setIndex( new THREE.BufferAttribute( faces, 1 ) );\n\n    }\n\n    var tps = new Float32Array( nv * 3 );\n\n    var ndeg = 20;\n    var vertdeg = new Array( ndeg );\n\n    for( var i = 0; i < ndeg; ++i ){\n        vertdeg[ i ] = new Uint32Array( nv );\n    }\n\n    for( var i = 0; i < nv; ++i ){\n        vertdeg[ 0 ][ i ] = 0;\n    }\n\n    var j, jl;\n    var flagvert;\n\n    // for each face\n\n    for( var i = 0; i < nf; ++i ){\n\n        var ao = i * 3;\n        var bo = i * 3 + 1;\n        var co = i * 3 + 2;\n\n        // vertex a\n\n        flagvert = true;\n        for( j = 0, jl = vertdeg[ 0 ][ faces[ao] ]; j < jl; ++j ){\n            if( faces[ bo ] == vertdeg[ j + 1 ][ faces[ ao ]] ){\n                flagvert = false;\n                break;\n            }\n        }\n        if( flagvert ){\n            vertdeg[ 0 ][ faces[ ao ] ]++;\n            vertdeg[ vertdeg[ 0 ][ faces[ ao ] ] ][ faces[ ao ] ] = faces[ bo ];\n        }\n\n        flagvert = true;\n        for( j = 0, jl = vertdeg[ 0 ][ faces[ ao ] ]; j < jl; ++j ){\n            if( faces[ co] == vertdeg[ j + 1 ][ faces[ ao ] ] ){\n                flagvert = false;\n                break;\n            }\n        }\n        if( flagvert ){\n            vertdeg[ 0 ][ faces[ ao ] ]++;\n            vertdeg[ vertdeg[ 0 ][ faces[ ao ] ] ][ faces[ ao ] ] = faces[ co ];\n        }\n\n        // vertex b\n\n        flagvert = true;\n        for( j = 0, jl = vertdeg[ 0 ][ faces[ bo ] ]; j < jl; ++j ){\n            if( faces[ ao ] == vertdeg[ j + 1 ][ faces[ bo ] ] ){\n                flagvert = false;\n                break;\n            }\n        }\n        if( flagvert ){\n            vertdeg[ 0 ][ faces[ bo ] ]++;\n            vertdeg[ vertdeg[ 0 ][ faces[ bo ] ] ][ faces[ bo ] ] = faces[ ao ];\n        }\n\n        flagvert = true;\n        for( j = 0, jl = vertdeg[ 0 ][ faces[ bo ] ]; j < jl; ++j ){\n            if( faces[ co ] == vertdeg[ j + 1 ][ faces[ bo ] ] ){\n                flagvert = false;\n                break;\n            }\n        }\n        if( flagvert ){\n            vertdeg[ 0 ][ faces[ bo ] ]++;\n            vertdeg[ vertdeg[ 0 ][ faces[ bo ] ] ][ faces[ bo ] ] = faces[ co ];\n        }\n\n        // vertex c\n\n        flagvert = true;\n        for( j = 0; j < vertdeg[ 0 ][ faces[ co ] ]; ++j ){\n            if( faces[ ao ] == vertdeg[ j + 1 ][ faces[ co ] ] ){\n                flagvert = false;\n                break;\n            }\n        }\n        if( flagvert ){\n            vertdeg[ 0 ][ faces[ co ] ]++;\n            vertdeg[ vertdeg[ 0 ][ faces[ co ] ] ][ faces[ co ] ] = faces[ ao ];\n        }\n\n        flagvert = true;\n        for( j = 0, jl = vertdeg[ 0 ][ faces[ co ] ]; j < jl; ++j ){\n            if( faces[ bo ] == vertdeg[ j + 1 ][ faces[ co ] ] ){\n                flagvert = false;\n                break;\n            }\n        }\n        if( flagvert ){\n            vertdeg[ 0 ][ faces[ co ] ]++;\n            vertdeg[ vertdeg[ 0 ][ faces[ co ] ] ][ faces[ co ] ] = faces[ bo ];\n        }\n\n    }\n\n    var wt = 1.0;\n    var wt2 = 0.5;\n    var i3, vi3, vi, vdi, wt_vi, wt2_vi;\n    var ssign = -1;\n    var scaleFactor = 1;\n    var outwt = 0.75 / ( scaleFactor + 3.5 );  // area-preserving\n\n    // smoothing iterations\n\n    for( var k = 0; k < numiter; ++k ){\n\n        // for each vertex\n\n        for( var i = 0; i < nv; ++i ){\n\n            i3 = i * 3;\n            vdi = vertdeg[ 0 ][ i ];\n\n            if( vdi < 3 ){\n\n                tps[ i3     ] = verts[ i3     ];\n                tps[ i3 + 1 ] = verts[ i3 + 1 ];\n                tps[ i3 + 2 ] = verts[ i3 + 2 ];\n\n            }else if( vdi === 3 || vdi === 4 ){\n\n                tps[ i3     ] = 0;\n                tps[ i3 + 1 ] = 0;\n                tps[ i3 + 2 ] = 0;\n\n                for( j = 0; j < vdi; ++j ){\n                    vi3 = vertdeg[ j + 1 ][ i ] * 3;\n                    tps[ i3     ] += verts[ vi3     ];\n                    tps[ i3 + 1 ] += verts[ vi3 + 1 ];\n                    tps[ i3 + 2 ] += verts[ vi3 + 2 ];\n                }\n\n                tps[ i3     ] += wt2 * verts[ i3 ];\n                tps[ i3 + 1 ] += wt2 * verts[ i3 + 1 ];\n                tps[ i3 + 2 ] += wt2 * verts[ i3 + 2 ];\n\n                wt2_vi = wt2 + vdi;\n                tps[ i3     ] /= wt2_vi;\n                tps[ i3 + 1 ] /= wt2_vi;\n                tps[ i3 + 2 ] /= wt2_vi;\n\n            }else{\n\n                tps[ i3     ] = 0;\n                tps[ i3 + 1 ] = 0;\n                tps[ i3 + 2 ] = 0;\n\n                for( j = 0; j < vdi; ++j ){\n                    vi3 = vertdeg[ j + 1 ][ i ] * 3;\n                    tps[ i3     ] += verts[ vi3     ];\n                    tps[ i3 + 1 ] += verts[ vi3 + 1 ];\n                    tps[ i3 + 2 ] += verts[ vi3 + 2 ];\n                }\n\n                tps[ i3     ] += wt * verts[ i3 ];\n                tps[ i3 + 1 ] += wt * verts[ i3 + 1 ];\n                tps[ i3 + 2 ] += wt * verts[ i3 + 2 ];\n\n                wt_vi = wt + vdi;\n                tps[ i3     ] /= wt_vi;\n                tps[ i3 + 1 ] /= wt_vi;\n                tps[ i3 + 2 ] /= wt_vi;\n\n            }\n\n        }\n\n        verts.set( tps );  // copy smoothed positions\n\n        if( inflate ){\n\n            bg.computeVertexNormals();\n            var norms = bg.attributes.normal.array;\n            var nv3 = nv * 3;\n\n            for( i3 = 0; i3 < nv3; i3 += 3 ){\n\n                // if(verts[i].inout) ssign=1;\n                // else ssign=-1;\n\n                verts[ i3     ] += ssign * outwt * norms[ i3     ];\n                verts[ i3 + 1 ] += ssign * outwt * norms[ i3 + 1 ];\n                verts[ i3 + 2 ] += ssign * outwt * norms[ i3 + 2 ];\n\n            }\n\n        }\n\n    }\n\n    if( inflate ){\n\n        bg.dispose();\n\n    }\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.laplacianSmooth\" );\n\n};\n\n\n//////////////////////\n// Molecular surface\n\nNGL.WorkerRegistry.add( \"molsurf\", function( e, callback ){\n\n    if( NGL.debug ) NGL.time( \"WORKER molsurf\" );\n\n    var d = e.data;\n    var p = d.params;\n\n    if( d.structure ){\n\n        if( d.structure.metadata.type === \"Structure\" ){\n            self.molsurf = new NGL.MolecularSurface(\n                new NGL.Structure().fromJSON( d.structure )\n            );\n        }else if( d.structure.metadata.type === \"StructureView\" ){\n            self.molsurf = new NGL.MolecularSurface(\n                new NGL.StructureView().fromJSON( d.structure )\n            );\n        }else{\n            console.error( \"wrong type\" );\n        }\n\n    }\n\n    var molsurf = self.molsurf;\n    var surface = molsurf.getSurface( p );\n\n    if( NGL.debug ) NGL.timeEnd( \"WORKER molsurf\" );\n\n    callback( surface.toJSON(), surface.getTransferable() );\n\n} );\n\n\nNGL.MolecularSurface = function( structure ){\n\n    this.structure = structure;\n\n};\n\nNGL.MolecularSurface.prototype = {\n\n    getSurface: function( params ){\n\n        var p = params || {};\n\n        var edtsurf = new NGL.EDTSurface( this.structure );\n        var vol = edtsurf.getVolume(\n            p.type, p.probeRadius, p.scaleFactor, p.lowRes, p.cutoff\n        );\n        var surface = vol.getSurface( 1, p.smooth );\n\n        surface.info[ \"type\" ] = p.type;\n        surface.info[ \"probeRadius\" ] = p.probeRadius;\n        surface.info[ \"scaleFactor\" ] = p.scaleFactor;\n        surface.info[ \"smooth\" ] = p.smooth;\n        surface.info[ \"lowRes\" ] = p.lowRes;\n        surface.info[ \"cutoff\" ] = p.cutoff;\n\n        vol.dispose();\n\n        return surface;\n\n    },\n\n    getSurfaceWorker: function( params, callback ){\n\n        var p = Object.assign( {}, params );\n\n        if( typeof Worker !== \"undefined\" && typeof importScripts !== 'function' ){\n\n            var structure = undefined;\n\n            if( this.worker === undefined ){\n\n                structure = this.structure.toJSON();\n                this.worker = new NGL.Worker( \"molsurf\" );\n\n            }\n\n            this.worker.post(\n\n                {\n                    structure: structure,\n                    params: p\n                },\n\n                undefined,\n\n                function( e ){\n\n                    var surface = NGL.fromJSON( e.data );\n                    callback( surface );\n\n                }.bind( this ),\n\n                function( e ){\n\n                    console.warn(\n                        \"NGL.MolecularSurface.generateSurfaceWorker error - trying without worker\", e\n                    );\n                    this.worker.terminate();\n                    this.worker = undefined;\n\n                    var surface = this.getSurface( p );\n                    callback( surface );\n\n                }.bind( this )\n\n            );\n\n        }else{\n\n            var surface = this.getSurface( p );\n            callback( surface );\n\n        }\n\n    },\n\n    dispose: function(){\n\n        if( this.worker ) this.worker.terminate();\n\n    }\n\n};\n\n\nNGL.EDTSurface = function( structure ){\n\n    // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\n    // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\n    //\n    // Permission to use, copy, modify, and distribute this program for\n    // any purpose, with or without fee, is hereby granted, provided that\n    // the notices on the head, the reference information, and this\n    // copyright notice appear in all copies or substantial portions of\n    // the Software. It is provided \"as is\" without express or implied\n    // warranty.\n    //\n    // ported to JavaScript by biochem_fan (http://webglmol.sourceforge.jp/)\n    // refactored by dkoes (https://github.com/dkoes)\n    //\n    // adapted to NGL by Alexander Rose\n\n    var bbox = structure.getBoundingBox();\n    var atomProxy1 = structure.getAtomProxy();\n    var atomProxy2 = structure.getAtomProxy();\n\n    var probeRadius, scaleFactor, cutoff, lowRes;\n    var pLength, pWidth, pHeight;\n    var matrix, ptran;\n    var depty, widxz;\n    var cutRadius;\n    var setAtomID;\n    var vpBits, vpDistance, vpAtomID;\n\n    var radiusProperty;\n    var radiusDict;\n    var selection;\n\n    function init( btype, _probeRadius, _scaleFactor, _cutoff, _lowRes, _setAtomID ){\n\n        probeRadius = _probeRadius || 1.4;\n        scaleFactor = _scaleFactor || 2.0;\n        lowRes = _lowRes || false;\n        setAtomID = _setAtomID || true;\n\n        if( lowRes ){\n\n            radiusProperty = \"resname\";\n            radiusDict = NGL.ResidueRadii;\n\n            selection = new NGL.Selection( \".CA\" );\n\n        }else{\n\n            radiusProperty = \"element\";\n            radiusDict = NGL.VdwRadii;\n\n            selection = undefined;\n\n        }\n\n        var maxRadius = 0;\n        for( var name in radiusDict ){\n            maxRadius = Math.max( maxRadius, radiusDict[ name ] );\n        }\n\n        var grid = NGL.getSurfaceGrid(\n            bbox, maxRadius, scaleFactor, btype ? probeRadius : 0\n        );\n\n        pLength = grid.dim.x;\n        pWidth = grid.dim.y;\n        pHeight = grid.dim.z;\n\n        matrix = grid.matrix;\n        ptran = grid.tran;\n        scaleFactor = grid.scaleFactor;\n\n        // boundingatom caches\n        depty = {};\n        widxz = {};\n        boundingatom( btype );\n\n        cutRadius = probeRadius * scaleFactor;\n\n        if( _cutoff ){\n            cutoff = _cutoff;\n        }else{\n            cutoff = Math.max( 0.1, -1.2 + scaleFactor * probeRadius );\n        }\n\n        vpBits = new Uint8Array( pLength * pWidth * pHeight );\n        if( btype ){\n            vpDistance = new Float64Array( pLength * pWidth * pHeight );\n        }\n        if( setAtomID ){\n            vpAtomID = new Int32Array( pLength * pWidth * pHeight );\n        }\n\n    }\n\n    // constants for vpBits bitmasks\n    var INOUT = 1;\n    var ISDONE = 2;\n    var ISBOUND = 4;\n\n    var nb = [\n        new Int32Array([  1,  0,  0 ]), new Int32Array([ -1,  0,  0 ]),\n        new Int32Array([  0,  1,  0 ]), new Int32Array([  0, -1,  0 ]),\n        new Int32Array([  0,  0,  1 ]), new Int32Array([  0,  0, -1 ]),\n        new Int32Array([  1,  1,  0 ]), new Int32Array([  1, -1,  0 ]),\n        new Int32Array([ -1,  1,  0 ]), new Int32Array([ -1, -1,  0 ]),\n        new Int32Array([  1,  0,  1 ]), new Int32Array([  1,  0, -1 ]),\n        new Int32Array([ -1,  0,  1 ]), new Int32Array([ -1,  0, -1 ]),\n        new Int32Array([  0,  1,  1 ]), new Int32Array([  0,  1, -1 ]),\n        new Int32Array([  0, -1,  1 ]), new Int32Array([  0, -1, -1 ]),\n        new Int32Array([  1,  1,  1 ]), new Int32Array([  1,  1, -1 ]),\n        new Int32Array([  1, -1,  1 ]), new Int32Array([ -1,  1,  1 ]),\n        new Int32Array([  1, -1, -1 ]), new Int32Array([ -1, -1,  1 ]),\n        new Int32Array([ -1,  1, -1 ]), new Int32Array([ -1, -1, -1 ])\n    ];\n\n    //\n\n    this.getVolume = function( type, probeRadius, scaleFactor, lowRes, cutoff, setAtomID ){\n\n        if( NGL.debug ) NGL.time( \"NGL.EDTSurface.getVolume\" );\n\n        var btype = type !== \"vws\";\n        setAtomID = true;\n\n        init( btype, probeRadius, scaleFactor, cutoff, lowRes, setAtomID );\n\n        fillvoxels( btype );\n        buildboundary();\n\n        if( type === \"ms\" || type === \"ses\" ){\n\n            fastdistancemap();\n\n        }\n\n        if( type === \"ses\" ){\n\n            boundingatom( false );\n            fillvoxelswaals();\n\n        }\n\n        marchingcubeinit( type );\n\n        var vol = new NGL.Volume(\n            type, \"\", vpBits, pHeight, pWidth, pLength, vpAtomID\n        );\n\n        vol.setMatrix( matrix );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.EDTSurface.getVolume\" );\n\n        return vol;\n\n    };\n\n\n    function boundingatom( btype ){\n\n        var r, j, k;\n        var txz, tdept, sradius, tradius, widxz_r;\n        var depty_name, indx;\n\n        for( var name in radiusDict ){\n\n            r = radiusDict[ name ];\n\n            if( depty[ name ] ) continue;\n\n            if( !btype ){\n                tradius = r * scaleFactor + 0.5;\n            }else{\n                tradius = ( r + probeRadius ) * scaleFactor + 0.5;\n            }\n\n            sradius = tradius * tradius;\n            widxz_r = Math.floor( tradius ) + 1;\n            depty_name = new Int32Array( widxz_r * widxz_r );\n            indx = 0;\n\n            for( j = 0; j < widxz_r; ++j ){\n\n                for( k = 0; k < widxz_r; ++k ){\n\n                    txz = j * j + k * k;\n\n                    if( txz > sradius ){\n\n                        depty_name[ indx ] = -1;\n\n                    }else{\n\n                        tdept = Math.sqrt( sradius - txz );\n                        depty_name[ indx ] = Math.floor( tdept );\n\n                    }\n\n                    ++indx;\n\n                }\n\n            }\n\n            widxz[ name ] = widxz_r;\n            depty[ name ] = depty_name;\n\n        }\n\n    }\n\n    function fillatom( atomIndex ){\n\n        var cx, cy, cz, ox, oy, oz, mi, mj, mk, i, j, k, si, sj, sk;\n        var ii, jj, kk;\n\n        atomProxy1.index = atomIndex;\n\n        if( selection && !selection.test( atomProxy1 ) ) return;\n\n        cx = Math.floor( 0.5 + scaleFactor * ( atomProxy1.x + ptran.x ) );\n        cy = Math.floor( 0.5 + scaleFactor * ( atomProxy1.y + ptran.y ) );\n        cz = Math.floor( 0.5 + scaleFactor * ( atomProxy1.z + ptran.z ) );\n\n        var at = atomProxy1[ radiusProperty ];\n        var depty_at = depty[ at ];\n        var nind = 0;\n        var cnt = 0;\n        var pWH = pWidth * pHeight;\n        var n = widxz[ at ];\n\n        var depty_at_nind;\n\n        for( i = 0; i < n; ++i ){\n        for( j = 0; j < n; ++j ) {\n\n            depty_at_nind = depty_at[ nind ];\n\n            if( depty_at_nind != -1 ){\n\n                for( ii = -1; ii < 2; ++ii ){\n                for( jj = -1; jj < 2; ++jj ){\n                for( kk = -1; kk < 2; ++kk ){\n\n                    if( ii !== 0 && jj !== 0 && kk !== 0 ){\n\n                        mi = ii * i;\n                        mk = kk * j;\n\n                        for( k = 0; k <= depty_at_nind; ++k ){\n\n                            mj = k * jj;\n                            si = cx + mi;\n                            sj = cy + mj;\n                            sk = cz + mk;\n\n                            if( si < 0 || sj < 0 || sk < 0 ||\n                                si >= pLength || sj >= pWidth || sk >= pHeight\n                            ){\n                                continue;\n                            }\n\n                            var index = si * pWH + sj * pHeight + sk;\n\n                            if( !setAtomID ){\n\n                                vpBits[ index ] |= INOUT;\n\n                            }else{\n\n                                if( !( vpBits[ index ] & INOUT ) ){\n\n                                    vpBits[ index ] |= INOUT;\n                                    vpAtomID[ index ] = atomIndex;\n\n                                }else if( vpBits[ index ] & INOUT ){\n                                // }else{\n\n                                    atomProxy2.index = vpAtomID[ index ];\n\n                                    if( atomProxy2.index !== atomProxy1.index ){\n\n                                        ox = cx + mi - Math.floor( 0.5 + scaleFactor * ( atomProxy2.x + ptran.x ) );\n                                        oy = cy + mj - Math.floor( 0.5 + scaleFactor * ( atomProxy2.y + ptran.y ) );\n                                        oz = cz + mk - Math.floor( 0.5 + scaleFactor * ( atomProxy2.z + ptran.z ) );\n\n                                        if( mi * mi + mj * mj + mk * mk <\n                                            ox * ox + oy * oy + oz * oz\n                                        ){\n                                            vpAtomID[ index ] = atomIndex;\n                                        }\n\n                                    }\n\n                                }\n\n                            }\n\n                        }// k\n\n                    }// if\n\n                }// kk\n                }// jj\n                }// ii\n\n            }// if\n\n            nind++;\n\n        }// j\n        }// i\n\n    }\n\n    function fillvoxels( btype ){\n\n        if( NGL.debug ) NGL.time( \"NGL.EDTSurface fillvoxels\" );\n\n        var i, il;\n\n        for( i = 0, il = vpBits.length; i < il; ++i ){\n            vpBits[ i ] = 0;\n            if( btype ) vpDistance[ i ] = -1.0;\n            if( setAtomID ) vpAtomID[ i ] = -1;\n        }\n\n        structure.eachSelectedAtom( function( ap ){\n            fillatom( ap.index );\n        } );\n\n        for( i = 0, il = vpBits.length; i < il; ++i ){\n            if( vpBits[ i ] & INOUT ){\n                vpBits[ i ] |= ISDONE;\n            }\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.EDTSurface fillvoxels\" );\n\n    }\n\n    function fillAtomWaals( atomIndex ){\n\n        var cx, cy, cz, ox, oy, oz, nind = 0;\n        var mi, mj, mk, si, sj, sk, i, j, k, ii, jj, kk, n;\n\n        atomProxy1.index = atomIndex;\n\n        if( selection && !selection.test( atomProxy1 ) ) return;\n\n        cx = Math.floor( 0.5 + scaleFactor * ( atomProxy1.x + ptran.x ) );\n        cy = Math.floor( 0.5 + scaleFactor * ( atomProxy1.y + ptran.y ) );\n        cz = Math.floor( 0.5 + scaleFactor * ( atomProxy1.z + ptran.z ) );\n\n        var at = atomProxy1[ radiusProperty ];\n        var pWH = pWidth * pHeight;\n\n        for( i = 0, n = widxz[at]; i < n; ++i ){\n        for( j = 0; j < n; ++j ){\n\n            if( depty[ at ][ nind ] != -1 ){\n\n                for( ii = -1; ii < 2; ++ii ){\n                for( jj = -1; jj < 2; ++jj ){\n                for( kk = -1; kk < 2; ++kk ){\n\n                    if( ii !== 0 && jj !== 0 && kk !== 0 ){\n\n                        mi = ii * i;\n                        mk = kk * j;\n\n                        for( k = 0; k <= depty[ at ][ nind ]; ++k ){\n\n                            mj = k * jj;\n                            si = cx + mi;\n                            sj = cy + mj;\n                            sk = cz + mk;\n\n                            if( si < 0 || sj < 0 || sk < 0 ||\n                                si >= pLength || sj >= pWidth || sk >= pHeight\n                            ){\n                                continue;\n                            }\n\n                            var index = si * pWH + sj * pHeight + sk;\n\n                            if( !( vpBits[ index ] & ISDONE ) ){\n\n                                vpBits[ index ] |= ISDONE;\n                                if( setAtomID ) vpAtomID[ index ] = atomProxy1.index;\n\n                            }else if( setAtomID ){\n\n                                atomProxy2.index = vpAtomID[ index ];\n\n                                ox = Math.floor( 0.5 + scaleFactor * ( atomProxy2.x + ptran.x ) );\n                                oy = Math.floor( 0.5 + scaleFactor * ( atomProxy2.y + ptran.y ) );\n                                oz = Math.floor( 0.5 + scaleFactor * ( atomProxy2.z + ptran.z ) );\n\n                                if( mi * mi + mj * mj + mk * mk <\n                                    ox * ox + oy * oy + oz * oz\n                                ){\n                                    vpAtomID[ index ] = atomProxy1.index;\n                                }\n\n                            }\n\n                        }// k\n\n                    }// if\n\n                }// kk\n                }// jj\n                }// ii\n\n            }// if\n\n            nind++;\n\n        }// j\n        }// i\n\n    }\n\n    function fillvoxelswaals(){\n\n        var i, il;\n\n        for( i = 0, il = vpBits.length; i < il; ++i ){\n            vpBits[ i ] &= ~ISDONE;  // not isdone\n        }\n\n        structure.eachSelectedAtom( function( ap ){\n            fillAtomWaals( ap.index );\n        } );\n\n    }\n\n    function buildboundary(){\n\n        var i, j, k;\n        var pWH = pWidth * pHeight;\n\n        for( i = 0; i < pLength; ++i ){\n        for( j = 0; j < pHeight; ++j ){\n        for( k = 0; k < pWidth; ++k ){\n\n            var index = i * pWH + k * pHeight + j;\n\n            if( vpBits[ index ] & INOUT ){\n\n                // var flagbound = false;\n                var ii = 0;\n\n                // while( !flagbound && ii < 26 ){\n                while( ii < 26 ){\n\n                    var ti = i + nb[ ii ][ 0 ];\n                    var tj = j + nb[ ii ][ 2 ];\n                    var tk = k + nb[ ii ][ 1 ];\n\n                    if( ti > -1 && ti < pLength &&\n                        tk > -1 && tk < pWidth &&\n                        tj > -1 && tj < pHeight &&\n                        !( vpBits[ ti * pWH + tk * pHeight + tj ] & INOUT )\n                    ){\n\n                        vpBits[ index ] |= ISBOUND;\n                        // flagbound = true;\n                        break;\n\n                    }else{\n\n                        ii++;\n\n                    }\n\n                }\n\n            }\n\n        } // k\n        } // j\n        } // i\n\n    }\n\n    function fastdistancemap(){\n\n        if( NGL.debug ) NGL.time( \"NGL.EDTSurface fastdistancemap\" );\n\n        var eliminate = 0;\n        var certificate;\n        var i, j, k, n;\n\n        var boundPoint = new NGL.Grid(\n            pLength, pWidth, pHeight, Uint16Array, 3\n        );\n        var pWH = pWidth * pHeight;\n        var cutRSq = cutRadius * cutRadius;\n\n        var totalsurfacevox = 0;\n        var totalinnervox = 0;\n\n        var index;\n\n        // console.log( \"lwh\", pLength * pWidth * pHeight );\n        if( NGL.debug ) console.log( \"l, w, h\", pLength, pWidth, pHeight );\n\n        for( i = 0; i < pLength; ++i ){\n            for( j = 0; j < pWidth; ++j ){\n                for( k = 0; k < pHeight; ++k ){\n\n                    index = i * pWH + j * pHeight + k;\n\n                    vpBits[ index ] &= ~ISDONE;\n\n                    if( vpBits[ index ] & INOUT ){\n\n                        if( vpBits[ index ] & ISBOUND ){\n\n                            boundPoint.set(\n                                i, j, k,\n                                i, j, k\n                            );\n\n                            vpDistance[ index ] = 0;\n                            vpBits[ index ] |= ISDONE;\n\n                            totalsurfacevox += 1;\n\n                        }else{\n\n                            totalinnervox += 1;\n\n                        }\n\n                    }\n\n                }\n            }\n        }\n\n        if( NGL.debug ) console.log( \"totalsurfacevox\", totalsurfacevox );\n        if( NGL.debug ) console.log( \"totalinnervox\", totalinnervox );\n\n        var inarray = new Int32Array( 3 * totalsurfacevox );\n        var positin = 0;\n        var outarray = new Int32Array( 3 * totalsurfacevox );\n        var positout = 0;\n\n        for( i = 0; i < pLength; ++i ){\n            for( j = 0; j < pWidth; ++j ){\n                for( k = 0; k < pHeight; ++k ){\n\n                    index = i * pWH + j * pHeight + k;\n\n                    if( vpBits[ index ] & ISBOUND ){\n\n                        inarray[ positin     ] = i;\n                        inarray[ positin + 1 ] = j;\n                        inarray[ positin + 2 ] = k;\n                        positin += 3;\n\n                        vpBits[ index ] &= ~ISBOUND;\n\n                    }\n\n                }\n            }\n        }\n\n        do{\n\n            positout = fastoneshell( inarray, boundPoint, positin, outarray );\n            positin = 0;\n\n            if( NGL.debug ) console.log( \"positout\", positout / 3 );\n\n            for( i = 0, n = positout; i < n; i+=3 ){\n\n                index = pWH * outarray[ i ] + pHeight * outarray[ i + 1 ] + outarray[ i + 2 ];\n                vpBits[ index ] &= ~ISBOUND;\n\n                if( vpDistance[ index ] <= 1.0404 * cutRSq ){\n                //if( vpDistance[ index ] <= 1.02 * cutRadius ){\n\n                    inarray[ positin     ] = outarray[ i     ];\n                    inarray[ positin + 1 ] = outarray[ i + 1 ];\n                    inarray[ positin + 2 ] = outarray[ i + 2 ];\n                    positin += 3;\n\n                }\n\n            }\n\n        }while( positin > 0 );\n\n        // var cutsf = Math.max( 0, scaleFactor - 0.5 );\n        // cutoff = cutRadius - 0.5 / ( 0.1 + cutsf );\n        var cutoffSq = cutoff * cutoff;\n\n        var index2;\n        var bp = new Uint16Array( 3 );\n\n        for( i = 0; i < pLength; ++i ){\n            for( j = 0; j < pWidth; ++j ){\n                for( k = 0; k < pHeight; ++k ){\n\n                    index = i * pWH + j * pHeight + k;\n                    vpBits[ index ] &= ~ISBOUND;\n\n                    // ses solid\n\n                    if( vpBits[ index ] & INOUT ) {\n\n                        if( !( vpBits[ index ] & ISDONE ) ||\n                            ( ( vpBits[ index ] & ISDONE ) && vpDistance[ index ] >= cutoffSq )\n                        ){\n\n                            vpBits[ index ] |= ISBOUND;\n\n                            if( setAtomID && ( vpBits[ index ] & ISDONE ) ){\n\n                                boundPoint.toArray( i, j, k, bp );\n                                index2 = bp[ 0 ] * pWH + bp[ 1 ] * pHeight + bp[ 2 ];\n\n                                vpAtomID[ index ] = vpAtomID[ index2 ];\n\n                            }\n\n                        }\n                    }\n\n                }\n            }\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.EDTSurface fastdistancemap\" );\n\n    }\n\n    function fastoneshell( inarray, boundPoint, positin, outarray ){\n\n        if( NGL.debug ) console.log( \"positin\", positin / 3 );\n\n        // *allocout,voxel2\n        // ***boundPoint, int*\n        // outnum, int *elimi)\n        var tx, ty, tz;\n        var dx, dy, dz;\n        var i, j, n;\n        var square;\n        var index;\n        var nb_j;\n        var bp = new Uint16Array( 3 );\n        var positout = 0;\n\n        if( positin === 0 ){\n            return positout;\n        }\n\n        var tnv_ix = -1;\n        var tnv_iy = -1;\n        var tnv_iz = -1;\n\n        var pWH = pWidth * pHeight;\n\n        for( i = 0, n = positin; i < n; i+=3 ){\n\n            tx = inarray[ i     ];\n            ty = inarray[ i + 1 ];\n            tz = inarray[ i + 2 ];\n            boundPoint.toArray( tx, ty, tz, bp );\n\n            for( j = 0; j < 6; ++j ){\n\n                nb_j = nb[ j ];\n                tnv_ix = tx + nb_j[ 0 ];\n                tnv_iy = ty + nb_j[ 1 ];\n                tnv_iz = tz + nb_j[ 2 ];\n\n                if( tnv_ix < pLength && tnv_ix > -1 &&\n                    tnv_iy < pWidth  && tnv_iy > -1 &&\n                    tnv_iz < pHeight && tnv_iz > -1\n                ){\n\n                    index = tnv_ix * pWH + pHeight * tnv_iy + tnv_iz;\n\n                    if( ( vpBits[ index ] & INOUT ) && !( vpBits[ index ] & ISDONE ) ){\n\n                        boundPoint.fromArray( tnv_ix, tnv_iy, tnv_iz, bp );\n                        dx = tnv_ix - bp[ 0 ];\n                        dy = tnv_iy - bp[ 1 ];\n                        dz = tnv_iz - bp[ 2 ];\n                        square = dx * dx + dy * dy + dz * dz;\n                        //square = Math.sqrt( square );\n\n                        vpDistance[ index ] = square;\n                        vpBits[ index ] |= ISDONE;\n                        vpBits[ index ] |= ISBOUND;\n\n                        outarray[ positout     ] = tnv_ix;\n                        outarray[ positout + 1 ] = tnv_iy;\n                        outarray[ positout + 2 ] = tnv_iz;\n                        positout += 3;\n\n                    }else if( ( vpBits[ index ] & INOUT ) && ( vpBits[ index ] & ISDONE ) ){\n\n                        dx = tnv_ix - bp[ 0 ];\n                        dy = tnv_iy - bp[ 1 ];\n                        dz = tnv_iz - bp[ 2 ];\n                        square = dx * dx + dy * dy + dz * dz;\n                        //square = Math.sqrt( square );\n\n                        if( square < vpDistance[ index ] ){\n\n                            boundPoint.fromArray( tnv_ix, tnv_iy, tnv_iz, bp );\n                            vpDistance[ index ] = square;\n\n                            if( !( vpBits[ index ] & ISBOUND ) ){\n\n                                vpBits[ index ] |= ISBOUND;\n\n                                outarray[ positout     ] = tnv_ix;\n                                outarray[ positout + 1 ] = tnv_iy;\n                                outarray[ positout + 2 ] = tnv_iz;\n                                positout += 3;\n\n                            }\n\n                        }\n\n                    }\n\n                }\n            }\n        }\n\n        // console.log(\"part1\", positout);\n\n        for( i = 0, n = positin; i < n; i+=3 ){\n\n            tx = inarray[ i     ];\n            ty = inarray[ i + 1 ];\n            tz = inarray[ i + 2 ];\n            boundPoint.toArray( tx, ty, tz, bp );\n\n            for (j = 6; j < 18; j++) {\n\n                nb_j = nb[ j ];\n                tnv_ix = tx + nb_j[ 0 ];\n                tnv_iy = ty + nb_j[ 1 ];\n                tnv_iz = tz + nb_j[ 2 ];\n\n                if( tnv_ix < pLength && tnv_ix > -1 &&\n                    tnv_iy < pWidth  && tnv_iy > -1 &&\n                    tnv_iz < pHeight && tnv_iz > -1\n                ) {\n\n                    index = tnv_ix * pWH + pHeight * tnv_iy + tnv_iz;\n\n                    if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\n\n                        boundPoint.fromArray( tnv_ix, tnv_iy, tnv_iz, bp );\n                        dx = tnv_ix - bp[ 0 ];\n                        dy = tnv_iy - bp[ 1 ];\n                        dz = tnv_iz - bp[ 2 ];\n                        square = dx * dx + dy * dy + dz * dz;\n                        //square = Math.sqrt( square );\n\n                        vpDistance[index] = square;\n                        vpBits[index] |= ISDONE;\n                        vpBits[index] |= ISBOUND;\n\n                        outarray[ positout     ] = tnv_ix;\n                        outarray[ positout + 1 ] = tnv_iy;\n                        outarray[ positout + 2 ] = tnv_iz;\n                        positout += 3;\n\n                    } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\n\n                        dx = tnv_ix - bp[ 0 ];\n                        dy = tnv_iy - bp[ 1 ];\n                        dz = tnv_iz - bp[ 2 ];\n                        square = dx * dx + dy * dy + dz * dz;\n                        //square = Math.sqrt( square );\n\n                        if (square < vpDistance[index]) {\n\n                            boundPoint.fromArray( tnv_ix, tnv_iy, tnv_iz, bp );\n                            vpDistance[index] = square;\n\n                            if (!(vpBits[index] & ISBOUND)) {\n\n                                vpBits[index] |= ISBOUND;\n\n                                outarray[ positout     ] = tnv_ix;\n                                outarray[ positout + 1 ] = tnv_iy;\n                                outarray[ positout + 2 ] = tnv_iz;\n                                positout += 3;\n\n                            }\n\n                        }\n\n                    }\n\n                }\n            }\n        }\n\n        // console.log(\"part2\", positout);\n\n        for( i = 0, n = positin; i < n; i+=3 ){\n\n            tx = inarray[ i     ];\n            ty = inarray[ i + 1 ];\n            tz = inarray[ i + 2 ];\n            boundPoint.toArray( tx, ty, tz, bp );\n\n            for (j = 18; j < 26; j++) {\n\n                nb_j = nb[ j ];\n                tnv_ix = tx + nb_j[ 0 ];\n                tnv_iy = ty + nb_j[ 1 ];\n                tnv_iz = tz + nb_j[ 2 ];\n\n                if( tnv_ix < pLength && tnv_ix > -1 &&\n                    tnv_iy < pWidth  && tnv_iy > -1 &&\n                    tnv_iz < pHeight && tnv_iz > -1\n                ){\n\n                    index = tnv_ix * pWH + pHeight * tnv_iy + tnv_iz;\n\n                    if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\n\n                        boundPoint.fromArray( tnv_ix, tnv_iy, tnv_iz, bp );\n                        dx = tnv_ix - bp[ 0 ];\n                        dy = tnv_iy - bp[ 1 ];\n                        dz = tnv_iz - bp[ 2 ];\n                        square = dx * dx + dy * dy + dz * dz;\n                        //square = Math.sqrt( square );\n\n                        vpDistance[index] = square;\n                        vpBits[index] |= ISDONE;\n                        vpBits[index] |= ISBOUND;\n\n                        outarray[ positout     ] = tnv_ix;\n                        outarray[ positout + 1 ] = tnv_iy;\n                        outarray[ positout + 2 ] = tnv_iz;\n                        positout += 3;\n\n                    } else if ((vpBits[index] & INOUT)  && (vpBits[index] & ISDONE)) {\n\n                        dx = tnv_ix - bp[ 0 ];\n                        dy = tnv_iy - bp[ 1 ];\n                        dz = tnv_iz - bp[ 2 ];\n                        square = dx * dx + dy * dy + dz * dz;\n                        //square = Math.sqrt( square );\n\n                        if (square < vpDistance[index]) {\n\n                            boundPoint.fromArray( tnv_ix, tnv_iy, tnv_iz, bp );\n                            vpDistance[index] = square;\n\n                            if (!(vpBits[index] & ISBOUND)) {\n\n                                vpBits[index] |= ISBOUND;\n\n                                outarray[ positout     ] = tnv_ix;\n                                outarray[ positout + 1 ] = tnv_iy;\n                                outarray[ positout + 2 ] = tnv_iz;\n                                positout += 3;\n\n                            }\n\n                        }\n\n                    }\n\n                }\n            }\n        }\n\n        // console.log(\"part3\", positout);\n\n        return positout;\n\n    }\n\n    function marchingcubeinit( stype ){\n\n        var n = vpBits.length;\n\n        if( stype === \"vws\" ) {\n\n            for( var i = 0; i < n; ++i ){\n\n                vpBits[ i ] &= ~ISBOUND;\n                vpBits[ i ] = !!( vpBits[ i ] & ISDONE ) ? 1 : 0;\n\n            }\n\n        }else if( stype === \"ms\" ){  // ses without vdw => ms\n\n            for( var i = 0; i < n; ++i ){\n\n                vpBits[ i ] &= ~ISDONE;\n                if( vpBits[ i ] & ISBOUND ){\n                    vpBits[ i ] |= ISDONE;\n                }\n                vpBits[ i ] &= ~ISBOUND;\n                vpBits[ i ] = !!( vpBits[ i ] & ISDONE ) ? 1 : 0;\n\n            }\n\n        }else if( stype === \"ses\" ){\n\n            for( var i = 0; i < n; ++i ){\n\n                if( ( vpBits[ i ] & ISBOUND ) && ( vpBits[ i ] & ISDONE ) ){\n                    vpBits[ i ] &= ~ISBOUND;\n                }else if( ( vpBits[ i ] & ISBOUND ) && !( vpBits[ i ] & ISDONE ) ){\n                    vpBits[ i ] |= ISDONE;\n                }\n                vpBits[ i ] = !!( vpBits[ i ] & ISDONE ) ? 1 : 0;\n\n            }\n\n        }else if( stype === \"sas\" ){\n\n            for( var i = 0; i < n; ++i ){\n\n                vpBits[ i ] &= ~ISBOUND;\n                vpBits[ i ] = !!( vpBits[ i ] & ISDONE ) ? 1 : 0;\n\n            }\n\n        }\n\n    };\n\n};\n\n\nNGL.getSurfaceGrid = function( bbox, maxRadius, scaleFactor, extraMargin ){\n\n    // need margin to avoid boundary/round off effects\n    var margin = ( 1 / scaleFactor ) * 3;\n    margin += maxRadius;\n\n    var min = new THREE.Vector3().copy( bbox.min );\n    var max = new THREE.Vector3().copy( bbox.max );\n\n    min.subScalar( extraMargin + margin );\n    max.addScalar( extraMargin + margin );\n\n    min.multiplyScalar( scaleFactor ).floor().divideScalar( scaleFactor );\n    max.multiplyScalar( scaleFactor ).ceil().divideScalar( scaleFactor );\n\n    var dim = new THREE.Vector3()\n        .subVectors( max, min )\n        .multiplyScalar( scaleFactor )\n        .ceil()\n        .addScalar( 1 );\n\n    var maxSize = Math.pow( 10, 6 ) * 256;\n    var tmpSize = dim.x * dim.y * dim.z * 3;\n\n    if( maxSize <= tmpSize ){\n\n        scaleFactor *= Math.pow( maxSize / tmpSize, 1/3 );\n\n        min.multiplyScalar( scaleFactor ).floor().divideScalar( scaleFactor );\n        max.multiplyScalar( scaleFactor ).ceil().divideScalar( scaleFactor );\n\n        dim.subVectors( max, min )\n            .multiplyScalar( scaleFactor )\n            .ceil()\n            .addScalar( 1 );\n\n    }\n\n    var tran = new THREE.Vector3().copy( min ).negate();\n\n    // coordinate transformation matrix\n    var matrix = new THREE.Matrix4();\n    matrix.multiply(\n        new THREE.Matrix4().makeRotationY( THREE.Math.degToRad( 90 ) )\n    );\n    matrix.multiply(\n        new THREE.Matrix4().makeScale(\n            -1 / scaleFactor,\n             1 / scaleFactor,\n             1 / scaleFactor\n        )\n    );\n    matrix.multiply(\n        new THREE.Matrix4().makeTranslation(\n            -scaleFactor * tran.z,\n            -scaleFactor * tran.y,\n            -scaleFactor * tran.x\n        )\n    );\n\n    return {\n        dim: dim,\n        tran: tran,\n        matrix: matrix,\n        scaleFactor: scaleFactor\n    };\n\n};\n\n// File:js/ngl/script.js\n\n/**\n * @file Script\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n///////////\n// Script\n\nNGL.Script = function( functionBody, name, path ){\n\n    var SIGNALS = signals;\n\n    this.signals = {\n\n        elementAdded: new SIGNALS.Signal(),\n        elementRemoved: new SIGNALS.Signal(),\n        nameChanged: new SIGNALS.Signal(),\n\n    };\n\n    this.name = name;\n    this.path = path;\n    this.dir = path.substring( 0, path.lastIndexOf( '/' ) + 1 );\n\n    try {\n\n        this.fn = new Function(\n\n            'stage', 'panel',\n            '__name__', '__path__', '__dir__',\n\n            Object.keys( NGL.makeScriptHelper() ).join( ',' ),\n\n            functionBody\n\n        );\n\n    }catch( e ){\n\n        NGL.error( \"NGL.Script compilation failed\", e );\n        this.fn = null;\n\n    }\n\n}\n\nNGL.Script.prototype = {\n\n    constructor: NGL.Script,\n\n    call: function( stage, onFinish ){\n\n        var panel = {\n\n            add: function( element ){\n\n                this.signals.elementAdded.dispatch( arguments );\n\n            }.bind( this ),\n\n            remove: function( element ){\n\n                this.signals.elementRemoved.dispatch( arguments );\n\n            }.bind( this ),\n\n            setName: function( value ){\n\n                this.signals.nameChanged.dispatch( value );\n\n            }.bind( this )\n\n        };\n\n        var queue = new NGL.ScriptQueue( stage, this.dir, onFinish );\n        var helper = NGL.makeScriptHelper( stage, queue, panel );\n\n        if( this.fn ){\n\n            var args = [\n                stage, panel,\n                this.name, this.path, this.dir\n            ];\n\n            try{\n\n                var fnList = [];\n                Object.keys( helper ).forEach( function( name ){\n                    fnList.push( helper[ name ] );\n                } );\n\n                this.fn.apply(\n                    null, args.concat( fnList )\n                );\n\n            }catch( e ){\n\n                NGL.error( \"NGL.Script.fn\", e );\n\n            }\n\n        }else{\n\n            NGL.log( \"NGL.Script.call no function available\" );\n\n        }\n\n        function finish(){\n            if( typeof onFinish === \"function\" ) onFinish();\n        }\n\n        function error(){\n            panel.add( new UI.Text( \"ERROR\" ) );\n            finish();\n        }\n\n        queue.then( finish, error );\n\n    }\n\n}\n\n\nNGL.ScriptQueue = function( stage, dir, onFinish ){\n\n    this.stage = stage;\n    this.dir = dir || \"\";\n    this.onFinish = onFinish;\n\n    this.promise = new Promise( function( resolve, reject ){\n\n        resolve();\n\n    } );\n\n};\n\nNGL.ScriptQueue.prototype = {\n\n    constructor: NGL.ScriptQueue,\n\n    load: function( file, params ){\n\n        var status = {};\n\n        // TODO check for pdbid or http...\n        var path = this.dir + file;\n\n        var _onLoad;\n        var p = params || {};\n\n        // allow loadFile( path, onLoad ) method signature\n        if( typeof params === \"function\" ){\n\n            _onLoad = params;\n            p = {};\n\n        }else{\n\n            _onLoad = p.onLoad;\n\n        }\n\n        p.onLoad = function( component ){\n\n            if( typeof _onLoad === \"function\" ){\n                _onLoad( component );\n            }\n\n            if( status.resolve ){\n                status.resolve();\n            }else{\n                status.success = true;\n            }\n\n        };\n\n        p.onError = function( e ){\n\n            if( status.reject ){\n                status.reject( e );\n            }else{\n                status.error = e || \"error\";\n            }\n\n        };\n\n        this.stage.loadFile( path, p );\n\n        var handle = function( resolve, reject ){\n\n            if( status.success === true ){\n                resolve();\n            }else if( status.error !== undefined ){\n                reject( status.error );\n            }else{\n                status.resolve = resolve;\n                status.reject = reject;\n            }\n\n        };\n\n        this.promise = this.promise.then( function(){\n\n            return new Promise( handle );\n\n        } );\n\n    },\n\n    then: function( callback, onError ){\n\n        this.promise = this.promise.then( callback, function( e ){\n\n            NGL.error( \"NGL.ScriptQueue.then\", e );\n\n            if( typeof onError === \"function\" ) onError();\n\n        } );\n\n    }\n\n};\n\n\nNGL.makeScriptHelper = function( stage, queue, panel ){\n\n    var U = NGL.unicodeHelper;\n\n    //\n\n    function load(){\n\n        queue.load.apply( queue, arguments );\n\n    }\n\n    function then(){\n\n        queue.then.apply( queue, arguments );\n\n    }\n\n    //\n\n    function components( name ){\n\n        return stage.getComponentsByName( name );\n\n    }\n\n    function representations( name ){\n\n        return stage.getRepresentationsByName( name );\n\n    }\n\n    function structures( name ){\n\n        return stage.getComponentsByName( name, NGL.StructureComponent );\n\n    }\n\n    //\n\n    function color( value, collection ){\n\n        collection.setColor( value );\n\n    }\n\n    function visibility( value, collection ){\n\n        collection.setVisibility( value );\n\n    }\n\n    function hide( collection ){\n\n        visibility( false, collection );\n\n    }\n\n    function show( collection, only ){\n\n        if( only ) hide();\n\n        visibility( true, collection );\n\n    }\n\n    function superpose( comp1, comp2, align, sele1, sele2, xsele1, xsele2 ){\n\n        comp1.superpose( comp2, align, sele1, sele2, xsele1, xsele2 );\n\n    }\n\n    //\n\n    function uiText( text, newline ){\n\n        var elm = new UI.Text( U( text ) );\n\n        panel.add( elm );\n\n        if( newline ) uiBreak( 1 );\n\n        return elm;\n\n    }\n\n    function uiHtml( html, newline ){\n\n        var elm = new UI.Html( U( html ) );\n\n        panel.add( elm );\n\n        if( newline ) uiBreak( 1 );\n\n        return elm;\n\n    }\n\n    function uiBreak( n ){\n\n        n = n === undefined ? 1 : n;\n\n        for( var i = 0; i < n; ++i ){\n\n            panel.add( new UI.Break() );\n\n        }\n\n    }\n\n    function uiButton( label, callback ){\n\n        var btn = new UI.Button( U( label ) ).onClick( function(){\n            callback( btn );\n        } );\n\n        panel.add( btn );\n\n        return btn;\n\n    }\n\n    function uiSelect( options, callback ){\n\n        if( Array.isArray( options ) ){\n            var newOptions = {};\n            options.forEach( function( name ){\n                newOptions[ name ] = name;\n            } );\n            options = newOptions;\n        }\n\n        var select = new UI.Select()\n            .setOptions( options )\n            .onChange( function(){\n                callback( select );\n            } );\n\n        panel.add( select );\n\n        return select;\n\n    }\n\n    function uiOpenButton( label, callback, extensionList ){\n\n        var btn = new UI.Button( U( label ) ).onClick( function(){\n\n            NGL.open( callback, extensionList );\n\n        } );\n\n        panel.add( btn );\n\n        return btn;\n\n    }\n\n    function uiDownloadButton( label, callback, downloadName ){\n\n        var btn = new UI.Button( U( label ) ).onClick( function(){\n\n            NGL.download( callback(), downloadName );\n\n        } );\n\n        panel.add( btn );\n\n        return btn;\n\n    }\n\n    function uiVisibilitySelect( collection ){\n\n        var list = collection.list;\n\n        function getVisible(){\n\n            var nameList = [];\n\n            list.forEach( function( o ){\n\n                if( o.visible ) nameList.push( o.name );\n\n            } );\n\n            return nameList;\n\n        }\n\n        var options = { \"\": \"[show]\" };\n\n        list.forEach( function( o ){\n\n            options[ o.name ] = o.name;\n\n            o.signals.visibilityChanged.add( function(){\n\n                var nameList = getVisible();\n\n                if( nameList.length === list.length ){\n                    select.setValue( \"\" );\n                }else if( o.visible ){\n                    select.setValue( o.name );\n                }else{\n                    select.setValue( nameList[ 0 ] );\n                }\n\n            } );\n\n        } );\n\n        var select = new UI.Select()\n            .setOptions( options )\n            .onChange( function(){\n\n                var name = select.getValue();\n\n                if( name === \"\" ){\n                    show( collection );\n                }else{\n                    hide( collection );\n                    show( stage.getAnythingByName( name ) );\n                }\n\n            } );\n\n        panel.add( select );\n\n        return select;\n\n    }\n\n    function uiVisibilityButton( label, collection ){\n\n        label = U( label ? label : \"all\" );\n        collection = collection || new NGL.Collection();\n\n        if( !( collection instanceof NGL.Collection ) &&\n            !( collection instanceof NGL.ComponentCollection ) &&\n            !( collection instanceof NGL.RepresentationCollection )\n        ){\n            collection = new NGL.Collection( [ collection ] );\n        }\n\n        var list = collection.list;\n\n        function isVisible(){\n\n            var visible = false;\n\n            list.forEach( function( o ){\n\n                if( o.visible ) visible = true;\n\n            } );\n\n            return visible;\n\n        }\n\n        function getLabel( value ){\n\n            return ( isVisible() ? \"hide \" : \"show \" ) + label;\n\n        }\n\n        list.forEach( function( o ){\n\n            o.signals.visibilityChanged.add( function(){\n\n                btn.setLabel( getLabel() );\n\n            } );\n\n        } );\n\n        var btn = new UI.Button( getLabel() ).onClick( function(){\n\n            visibility( !isVisible(), collection );\n\n        } );\n\n        // panel.add( btn );\n\n        return btn;\n\n    }\n\n    function uiPlayButton( label, trajComp, step, timeout, start, end ){\n\n        var traj = trajComp.trajectory;\n        label = U( label );\n\n        var player = new NGL.TrajectoryPlayer( traj, step, timeout, start, end );\n        player.mode = \"once\";\n\n        var btn = new UI.Button( \"play \" + label )\n            .onClick( function(){\n                player.toggle();\n            } );\n\n        player.signals.startedRunning.add( function(){\n            btn.setLabel( \"pause \" + label );\n        } );\n\n        player.signals.haltedRunning.add( function(){\n            btn.setLabel( \"play \" + label );\n        } );\n\n        panel.add( btn );\n\n        return btn;\n\n    }\n\n    //\n\n    return {\n\n        'load': load,\n        'then': then,\n\n        'components': components,\n        'representations': representations,\n        'structures': structures,\n\n        'color': color,\n        'visibility': visibility,\n        'hide': hide,\n        'show': show,\n        'superpose': superpose,\n\n        'uiText': uiText,\n        'uiHtml': uiHtml,\n        'uiBreak': uiBreak,\n        'uiSelect': uiSelect,\n        'uiButton': uiButton,\n        'uiOpenButton': uiOpenButton,\n        'uiDownloadButton': uiDownloadButton,\n        'uiVisibilitySelect': uiVisibilitySelect,\n        'uiVisibilityButton': uiVisibilityButton,\n        'uiPlayButton': uiPlayButton,\n\n    };\n\n};\n\n// File:js/ngl/streamer.js\n\n/**\n * @file Streamer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n/////////////\n// Streamer\n\nNGL.Streamer = function( src, params ){\n\n    var p = params || {};\n\n    this.compressed = p.compressed !== undefined ? p.compressed : false;\n    this.binary = p.binary !== undefined ? p.binary : false;\n    this.json = p.json !== undefined ? p.json : false;\n\n    this.src = src;\n    this.chunkSize = 1024 * 1024 * 10;\n    this.newline = \"\\n\";\n\n    this.__pointer = 0;\n    this.__partialLine = \"\";\n\n    if( this.__srcName ){\n        this[ this.__srcName ] = src;\n    }\n\n};\n\nNGL.Streamer.prototype.constructor = NGL.Streamer;\n\nNGL.Streamer.prototype = {\n\n    constructor: NGL.Streamer,\n\n    type: \"\",\n\n    __srcName: undefined,\n\n    onload: function(){},\n\n    onprogress: function(){},\n\n    onerror: function(){},\n\n    read: function( callback ){\n\n        this._read( function( data ){\n\n            if( this.compressed ){\n\n                this.data = NGL.decompress( data );\n\n            }else{\n\n                if( this.binary && data instanceof ArrayBuffer ){\n                    data = new Uint8Array( data );\n                }\n                this.data = data;\n\n            }\n\n            if( typeof this.onload === \"function\" ){\n                this.onload( this.data );\n            }\n            callback();\n\n        }.bind( this ) );\n\n    },\n\n    _read: function( callback ){\n\n        // overwrite this method when this.src does not contain the data\n\n        callback( this.src );\n\n    },\n\n    _chunk: function( start, end ){\n\n        end = Math.min( this.data.length, end );\n\n        if( start === 0 && this.data.length === end ){\n\n            return this.data;\n\n        }else{\n\n            if( this.binary || this.compressed ){\n                return this.data.subarray( start, end );\n            }else{\n                return this.data.substring( start, end );\n            }\n\n        }\n\n    },\n\n    chunk: function( start ){\n\n        var end = start + this.chunkSize;\n\n        return this._chunk( start, end );\n\n    },\n\n    peekLines: function( m ){\n\n        var data = this.data;\n        var n = data.length;\n\n        // FIXME does not work for multi-char newline\n        var newline = ( this.binary || this.compressed ) ? this.newline.charCodeAt( 0 ) : this.newline;\n\n        var i;\n        var count = 0;\n\n        for( i = 0; i < n; ++i ){\n\n            if( data[ i ] === newline ) ++count;\n            if( count === m ) break;\n\n        }\n\n        var chunk = this._chunk( 0, i + 1 );\n        var d = this.chunkToLines( chunk, \"\", i > n );\n\n        return d.lines;\n\n    },\n\n    lineCount: function(){\n        console.warn(\"lineCount\")\n        var data = this.data;\n        var n = data.length;\n\n        // FIXME does not work for multi-char newline\n        var newline = ( this.binary || this.compressed ) ? this.newline.charCodeAt( 0 ) : this.newline;\n\n        var count = 0;\n        for( var i = 0; i < n; ++i ){\n            if( data[ i ] === newline ) ++count;\n        }\n        if( data[ n - 1 ] !== newline ) ++count;\n\n        return count;\n\n    },\n\n    chunkCount: function(){\n\n        return Math.floor( this.data.length / this.chunkSize ) + 1;\n\n    },\n\n    asText: function(){\n\n        if( this.binary || this.compressed ){\n            return NGL.Uint8ToString( this.data );\n        }else{\n            return this.data;\n        }\n\n    },\n\n    chunkToLines: function( chunk, partialLine, isLast ){\n\n        var newline = this.newline;\n\n        if( !this.binary && !this.compressed && chunk.length === this.data.length ){\n            return {\n                lines: chunk.split( newline ),\n                partialLine: \"\"\n            };\n        }\n\n        var str = ( this.binary || this.compressed ) ? NGL.Uint8ToString( chunk ) : chunk;\n        var lines = [];\n        var idx = str.lastIndexOf( newline );\n\n        if( idx === -1 ){\n\n            partialLine += str;\n\n        }else{\n\n            var str2 = partialLine + str.substr( 0, idx );\n            lines = lines.concat( str2.split( newline ) );\n\n            if( idx === str.length - newline.length ){\n                partialLine = \"\";\n            }else{\n                partialLine = str.substr( idx + newline.length );\n            }\n\n        }\n\n        if( isLast && partialLine !== \"\" ){\n            lines.push( partialLine );\n        }\n\n        return {\n            lines: lines,\n            partialLine: partialLine\n        };\n\n    },\n\n    nextChunk: function(){\n\n        var start = this.__pointer;\n\n        if( start > this.data.length ){\n            return undefined;\n        }\n\n        this.__pointer += this.chunkSize;\n        return this.chunk( start );\n\n    },\n\n    nextChunkOfLines: function(){\n\n        var chunk = this.nextChunk();\n\n        if( chunk === undefined ){\n            return undefined;\n        }\n\n        var isLast = this.__pointer > this.data.length;\n        var d = this.chunkToLines( chunk, this.__partialLine, isLast );\n\n        this.__partialLine = d.partialLine;\n\n        return d.lines;\n\n    },\n\n    eachChunk: function( callback ){\n\n        var chunkSize = this.chunkSize;\n        var n = this.data.length;\n        var chunkCount = this.chunkCount();\n\n        for( var i = 0; i < n; i += chunkSize ){\n\n            var chunk = this.chunk( i );\n            var chunkNo = Math.round( i / chunkSize );\n\n            callback( chunk, chunkNo, chunkCount );\n\n        }\n\n    },\n\n    eachChunkOfLines: function( callback ){\n\n        var newline = this.newline;\n\n        this.eachChunk( function( chunk, chunkNo, chunkCount ){\n\n            var isLast = chunkNo === chunkCount + 1;\n            var d = this.chunkToLines( chunk, this.__partialLine, isLast );\n\n            this.__partialLine = d.partialLine;\n\n            callback( d.lines, chunkNo, chunkCount );\n\n        }.bind( this ) );\n\n    },\n\n    toJSON: function(){\n\n        var type = this.type.substr( 0, 1 ).toUpperCase() +\n                    this.type.substr( 1 );\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: type + 'Streamer',\n                generator: type + 'StreamerExporter'\n            },\n\n            src: this.src,\n            compressed: this.compressed,\n            binary: this.binary,\n            chunkSize: this.chunkSize,\n            newline: this.newline,\n\n\n\n        }\n\n        if( this.__srcName ){\n            output[ this.__srcName ] = this[ this.__srcName ];\n        }\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.src = input.src;\n        this.compressed = input.compressed;\n        this.binary = input.binary;\n        this.chunkSize = input.chunkSize;\n        this.newline = input.newline;\n\n        if( this.__srcName ){\n            this[ this.__srcName ] = input[ this.__srcName ];\n        }\n\n        return this;\n\n    },\n\n    getTransferable: function(){\n\n        var transferable = [];\n\n        return transferable;\n\n    },\n\n    dispose: function(){\n\n        delete this.src;\n\n        if( this.__srcName ){\n            delete this[ this.__srcName ];\n        }\n\n    }\n\n};\n\n\nNGL.NetworkStreamer = function( url, params ){\n\n    NGL.Streamer.call( this, url, params );\n\n};\n\nNGL.NetworkStreamer.prototype = NGL.createObject(\n\n    NGL.Streamer.prototype, {\n\n    constructor: NGL.NetworkStreamer,\n\n    type: \"network\",\n\n    __srcName: \"url\",\n\n    _read: function( callback ){\n\n        var url = this.src;\n\n        if( typeof importScripts === 'function' ){\n\n            // FIXME\n            // adjust relative path when inside a web worker\n            if( url.substr( 0, 3 ) === \"../\" ) url = \"../\" + url;\n\n        }\n\n        var xhr = new XMLHttpRequest();\n        xhr.open( \"GET\", url, true );\n\n        //\n\n        xhr.addEventListener( 'load', function ( event ) {\n\n            if( xhr.status === 200 || xhr.status === 304 ||\n                // when requesting from local file system\n                // the status in Google Chrome/Chromium is 0\n                xhr.status === 0\n             ){\n\n                callback( xhr.response );\n\n            } else {\n\n                if( typeof this.onerror === \"function\" ){\n\n                    this.onerror( xhr.status );\n\n                }\n\n                throw \"NGL.NetworkStreamer._read: status code \" + xhr.status;\n\n            }\n\n        }.bind( this ), false );\n\n        //\n\n        // if( typeof this.onprogress === \"function\" ){\n\n        //     xhr.addEventListener( 'progress', function ( event ) {\n\n        //         this.onprogress( event );\n\n        //     }.bind( this ), false );\n\n        // }\n\n        //\n\n        if( typeof this.onerror === \"function\" ){\n\n            xhr.addEventListener( 'error', function ( event ) {\n\n                this.onerror( event );\n\n            }.bind( this ), false );\n\n        }\n\n        //\n\n        if( this.compressed || this.binary ){\n            xhr.responseType = \"arraybuffer\";\n        }else if( this.json ){\n            xhr.responseType = \"json\";\n        }\n        // xhr.crossOrigin = true;\n\n        xhr.send( null );\n\n        // try {\n        //     xhr.send( null );\n        // }catch( e ){\n        //     if( typeof this.onerror === \"function\" ){\n        //         this.onerror( e.message );\n        //     }\n        // }\n\n    }\n\n} );\n\n\nNGL.FileStreamer = function( file, params ){\n\n    NGL.Streamer.call( this, file, params );\n\n};\n\nNGL.FileStreamer.prototype = NGL.createObject(\n\n    NGL.Streamer.prototype, {\n\n    constructor: NGL.FileStreamer,\n\n    type: \"file\",\n\n    __srcName: \"file\",\n\n    _read: function( callback ){\n\n        if( typeof importScripts === 'function' ){\n\n            // Use FileReaderSync within Worker\n\n            var reader = new FileReaderSync();\n            var data;\n            if( this.binary || this.compressed ){\n                data = reader.readAsArrayBuffer( this.file );\n            }else{\n                data = reader.readAsText( this.file );\n            }\n\n            //\n\n            callback( data );\n\n        }else{\n\n            var reader = new FileReader();\n\n            //\n\n            reader.onload = function( event ){\n\n                callback( event.target.result );\n\n            }.bind( this );\n\n            //\n\n            if( typeof this.onprogress === \"function\" ){\n\n                reader.onprogress = function ( event ) {\n\n                    this.onprogress( event );\n\n                }.bind( this );\n\n            }\n\n            //\n\n            if( typeof this.onerror === \"function\" ){\n\n                reader.onerror = function ( event ) {\n\n                    this.onerror( event );\n\n                }.bind( this );\n\n            }\n\n            //\n\n            if( this.binary || this.compressed ){\n                reader.readAsArrayBuffer( this.file );\n            }else{\n                reader.readAsText( this.file );\n            }\n\n        }\n\n    }\n\n} );\n\n\nNGL.StringStreamer = function( str, params ){\n\n    NGL.Streamer.call( this, str, params );\n\n};\n\nNGL.StringStreamer.prototype = NGL.createObject(\n\n    NGL.Streamer.prototype, {\n\n    constructor: NGL.StringStreamer,\n\n    type: \"string\",\n\n    __srcName: \"str\",\n\n    _chunk: function( start, end ){\n\n        return this.data.substr( start, end );\n\n    },\n\n} );\n\n\nNGL.BinaryStreamer = function( bin, params ){\n\n    if( bin instanceof ArrayBuffer ) bin = new Uint8Array( bin );\n\n    NGL.Streamer.call( this, bin, params );\n\n};\n\nNGL.BinaryStreamer.prototype = NGL.createObject(\n\n    NGL.Streamer.prototype, {\n\n    constructor: NGL.BinaryStreamer,\n\n    type: \"binary\",\n\n    __srcName: \"bin\",\n\n    getTransferable: function(){\n\n        var transferable = NGL.Streamer.prototype.getTransferable.call( this );\n\n        if( this.bin instanceof Uint8Array ){\n            transferable.push( this.bin.buffer );\n        }\n\n        return transferable;\n\n    }\n\n} );\n\n// File:js/ngl/parser.js\n\n/**\n * @file Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\nNGL.reorderAtoms = function( structure ){\n\n    if( NGL.debug ) NGL.time( \"NGL.reorderAtoms\" );\n\n    var ap1 = structure.getAtomProxy();\n    var ap2 = structure.getAtomProxy();\n\n    function compareModelChainResno( index1, index2 ){\n        ap1.index = index1;\n        ap2.index = index2;\n        if( ap1.modelindex < ap2.modelindex ){\n            return -1;\n        }else if( ap1.modelindex > ap2.modelindex ){\n            return 1;\n        }else{\n            if( ap1.chainname < ap2.chainname ){\n                return -1;\n            }else if( ap1.chainname > ap2.chainname ){\n                return 1;\n            }else{\n                if( ap1.resno < ap2.resno ){\n                    return -1;\n                }else if( ap1.resno > ap2.resno ){\n                    return 1;\n                }else{\n                    return 0;\n                }\n            }\n        }\n    }\n\n    structure.atomStore.sort( compareModelChainResno );\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.reorderAtoms\" );\n\n};\n\n\nNGL.StructureBuilder = function( structure ){\n\n    var currentModelindex = null;\n    var currentChainname = null;\n    var currentResname = null;\n    var currentResno = null;\n    var currentInscode = null;\n    var currentHetero = null;\n\n    var previousResname;\n    var previousHetero\n\n    var atomStore = structure.atomStore;\n    var residueStore = structure.residueStore;\n    var chainStore = structure.chainStore;\n    var modelStore = structure.modelStore;\n\n    var residueMap = structure.residueMap;\n\n    var ai = -1;\n    var ri = -1;\n    var ci = -1;\n    var mi = -1;\n\n    function addResidueType( ri ){\n        var count = residueStore.atomCount[ ri ];\n        var offset = residueStore.atomOffset[ ri ];\n        var atomTypeIdList = new Array( count );\n        for( var i = 0; i < count; ++i ){\n            atomTypeIdList[ i ] = atomStore.atomTypeId[ offset + i ];\n        }\n        residueStore.residueTypeId[ ri ] = residueMap.add(\n            previousResname, atomTypeIdList, previousHetero\n        );\n    }\n\n    this.addAtom = function( modelindex, chainname, resname, resno, hetero, sstruc, inscode ){\n\n        var addModel = false;\n        var addChain = false;\n        var addResidue = false;\n\n        if( currentModelindex !== modelindex ){\n            addModel = true;\n            addChain = true;\n            addResidue = true;\n            mi += 1;\n            ci += 1;\n            ri += 1;\n        }else if( currentChainname !== chainname ){\n            addChain = true;\n            addResidue = true;\n            ci += 1;\n            ri += 1;\n        }else if( currentResno !== resno || currentResname !== resname || currentInscode !== inscode ){\n            addResidue = true;\n            ri += 1;\n        }\n        ai += 1;\n\n        if( addModel ){\n            modelStore.growIfFull();\n            modelStore.chainOffset[ mi ] = ci;\n            modelStore.chainCount[ mi ] = 0;\n            modelStore.count += 1;\n            chainStore.modelIndex[ ci ] = mi;\n        }\n\n        if( addChain ){\n            chainStore.growIfFull();\n            chainStore.setChainname( ci, chainname );\n            chainStore.residueOffset[ ci ] = ri;\n            chainStore.residueCount[ ci ] = 0;\n            chainStore.count += 1;\n            chainStore.modelIndex[ ci ] = mi;\n            modelStore.chainCount[ mi ] += 1;\n            residueStore.chainIndex[ ri ] = ci;\n        }\n\n        if( addResidue ){\n            previousResname = currentResname;\n            previousHetero = currentHetero;\n            if( ri > 0 ) addResidueType( ri - 1 );\n            residueStore.growIfFull();\n            residueStore.resno[ ri ] = resno;\n            if( sstruc !== undefined ){\n                residueStore.sstruc[ ri ] = sstruc.charCodeAt( 0 );\n            }\n            if( inscode !== undefined ){\n                residueStore.inscode[ ri ] = inscode.charCodeAt( 0 );\n            }\n            residueStore.atomOffset[ ri ] = ai;\n            residueStore.atomCount[ ri ] = 0;\n            residueStore.count += 1;\n            residueStore.chainIndex[ ri ] = ci;\n            chainStore.residueCount[ ci ] += 1;\n        }\n\n        atomStore.count += 1;\n        atomStore.residueIndex[ ai ] = ri;\n        residueStore.atomCount[ ri ] += 1;\n\n        currentModelindex = modelindex;\n        currentChainname = chainname;\n        currentResname = resname;\n        currentResno = resno;\n        currentInscode = inscode;\n        currentHetero = hetero;\n\n    };\n\n    this.finalize = function(){\n        previousResname = currentResname;\n        previousHetero = currentHetero;\n        if( ri > -1 ) addResidueType( ri );\n    };\n\n};\n\n\nNGL.assignSecondaryStructure = function( structure ){\n\n    if( NGL.debug ) NGL.time( \"NGL.assignSecondaryStructure\" );\n\n    var chainnames = [];\n    structure.eachModel( function( mp ){\n        mp.eachChain( function( cp ){\n            chainnames.push( cp.chainname );\n        } );\n    } );\n\n    var chainnamesSorted = chainnames.slice().sort();\n    var chainnamesIndex = [];\n    chainnamesSorted.forEach( function( c ){\n        chainnamesIndex.push( chainnames.indexOf( c ) );\n    } );\n\n    // helix assignment\n\n    var helices = structure.helices || [];\n\n    helices = helices.filter( function( h ){\n        return NGL.binarySearchIndexOf( chainnamesSorted, h[ 0 ] ) >= 0;\n    } );\n\n    helices.sort( function( h1, h2 ){\n\n        var c1 = h1[ 0 ];\n        var c2 = h2[ 0 ];\n        var r1 = h1[ 1 ];\n        var r2 = h2[ 1 ];\n\n        if( c1 === c2 ){\n            if( r1 === r2 ){\n                return 0;\n            }else{\n                return r1 < r2 ? -1 : 1;\n            }\n        }else{\n            var idx1 = NGL.binarySearchIndexOf( chainnamesSorted, c1 );\n            var idx2 = NGL.binarySearchIndexOf( chainnamesSorted, c2 );\n            return chainnamesIndex[ idx1 ] < chainnamesIndex[ idx2 ] ? -1 : 1;\n        }\n\n    } );\n\n    var residueStore = structure.residueStore;\n\n    structure.eachModel( function( mp ){\n\n        var i = 0;\n        var n = helices.length;\n        if( n === 0 ) return;\n        var helix = helices[ i ];\n        var helixRun = false;\n        var done = false;\n\n        mp.eachChain( function( cp ){\n\n            var chainChange = false;\n\n            if( cp.chainname === helix[ 0 ] ){\n\n                var count = cp.residueCount;\n                var offset = cp.residueOffset;\n                var end = offset + count;\n\n                for( var j = offset; j < end; ++j ){\n\n                    if( residueStore.resno[ j ] === helix[ 1 ] &&  // resnoBeg\n                        residueStore.getInscode( j ) === helix[ 2 ]   // inscodeBeg\n                    ){\n                        helixRun = true;\n                    }\n\n                    if( helixRun ){\n\n                        residueStore.sstruc[ j ] = helix[ 6 ];\n\n                        if( residueStore.resno[ j ] === helix[ 4 ] &&  // resnoEnd\n                            residueStore.getInscode( j ) === helix[ 5 ]   // inscodeEnd\n                        ){\n\n                            helixRun = false\n                            i += 1;\n\n                            if( i < n ){\n                                // must look at previous residues as\n                                // residues may not be ordered by resno\n                                j = offset - 1;\n                                helix = helices[ i ];\n                                chainChange = cp.chainname !== helix[ 0 ];\n                            }else{\n                                done = true;\n                            }\n\n                        }\n\n                    }\n\n                    if( chainChange || done ) return;\n\n                }\n\n            }\n\n        } );\n\n    } );\n\n    // sheet assignment\n\n    var sheets = structure.sheets || [];\n\n    sheets = sheets.filter( function( s ){\n        return NGL.binarySearchIndexOf( chainnamesSorted, s[ 0 ] ) >= 0;\n    } );\n\n    sheets.sort( function( s1, s2 ){\n\n        var c1 = s1[ 0 ];\n        var c2 = s2[ 0 ];\n\n        if( c1 === c2 ) return 0;\n        var idx1 = NGL.binarySearchIndexOf( chainnamesSorted, c1 );\n        var idx2 = NGL.binarySearchIndexOf( chainnamesSorted, c2 );\n        return chainnamesIndex[ idx1 ] < chainnamesIndex[ idx2 ] ? -1 : 1;\n\n    } );\n\n    var strandCharCode = \"e\".charCodeAt( 0 );\n    structure.eachModel( function( mp ){\n\n        var i = 0;\n        var n = sheets.length;\n        if( n === 0 ) return;\n        var sheet = sheets[ i ];\n        var sheetRun = false;\n        var done = false;\n\n        mp.eachChain( function( cp ){\n\n            var chainChange = false;\n\n            if( cp.chainname === sheet[ 0 ] ){\n\n                var count = cp.residueCount;\n                var offset = cp.residueOffset;\n                var end = offset + count;\n\n                for( var j = offset; j < end; ++j ){\n\n                    if( residueStore.resno[ j ] === sheet[ 1 ] &&  // resnoBeg\n                        residueStore.getInscode( j ) === sheet[ 2 ]   // inscodeBeg\n                    ){\n                        sheetRun = true;\n                    }\n\n                    if( sheetRun ){\n\n                        residueStore.sstruc[ j ] = strandCharCode;\n\n                        if( residueStore.resno[ j ] === sheet[ 4 ] &&  // resnoEnd\n                            residueStore.getInscode( j ) === sheet[ 5 ]   // inscodeEnd\n                        ){\n\n                            sheetRun = false\n                            i += 1;\n\n                            if( i < n ){\n                                // must look at previous residues as\n                                // residues may not be ordered by resno\n                                j = offset - 1;\n                                sheet = sheets[ i ];\n                                chainChange = cp.chainname !== sheet[ 0 ];\n                            }else{\n                                done = true;\n                            }\n\n                        }\n\n                    }\n\n                    if( chainChange || done ) return;\n\n                }\n\n            }\n\n        } );\n\n    } );\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.assignSecondaryStructure\" );\n\n};\n\n\nNGL.calculateSecondaryStructure = function(){\n\n    // Implementation for proteins based on \"pv\"\n    //\n    // assigns secondary structure information based on a simple and very fast\n    // algorithm published by Zhang and Skolnick in their TM-align paper.\n    // Reference:\n    //\n    // TM-align: a protein structure alignment algorithm based on the Tm-score\n    // (2005) NAR, 33(7) 2302-2309\n\n    var zhangSkolnickSS = function( polymer, i, distances, delta ){\n\n        var structure = polymer.structure;\n        var offset = polymer.residueIndexStart;\n        var rp1 = structure.getResidueProxy();\n        var rp2 = structure.getResidueProxy();\n        var ap1 = structure.getAtomProxy();\n        var ap2 = structure.getAtomProxy();\n\n        for( var j = Math.max( 0, i - 2 ); j <= i; ++j ){\n\n            for( var k = 2;  k < 5; ++k ){\n\n                if( j + k >= polymer.residueCount ){\n                    continue;\n                }\n\n                rp1.index = offset + j;\n                rp2.index = offset + j + k;\n                ap1.index = rp1.traceAtomIndex;\n                ap2.index = rp2.traceAtomIndex;\n\n                var d = ap1.distanceTo( ap2 );\n                // NGL.log( d )\n\n                if( Math.abs( d - distances[ k - 2 ] ) > delta ){\n                    return false;\n                }\n\n            }\n\n        }\n\n        return true;\n\n    };\n\n    var isHelical = function( polymer, i ){\n        var helixDistances = [ 5.45, 5.18, 6.37 ];\n        var helixDelta = 2.1;\n        return zhangSkolnickSS( polymer, i, helixDistances, helixDelta );\n    };\n\n    var isSheet = function( polymer, i ){\n        var sheetDistances = [ 6.1, 10.4, 13.0 ];\n        var sheetDelta = 1.42;\n        return zhangSkolnickSS( polymer, i, sheetDistances, sheetDelta );\n    };\n\n    var proteinPolymer = function( p ){\n        var residueStore = p.residueStore;\n        var offset = p.residueIndexStart;\n        for( var i = 0, il = p.residueCount; i < il; ++i ){\n            var sstruc = \"c\";\n            if( isHelical( p, i ) ){\n                sstruc = \"h\";\n            }else if( isSheet( p, i ) ){\n                sstruc = \"s\";\n            }\n            residueStore.sstruc[ offset + i ] = sstruc.charCodeAt( 0 );\n        }\n    }\n\n    var cgPolymer = function( p ){\n\n        var localAngle = 20;\n        var centerDist = 2.0;\n\n        var residueStore = p.residueStore;\n        var offset = p.residueIndexStart;\n\n        var helixbundle = new NGL.Helixbundle( p );\n        var pos = helixbundle.position;\n\n        var c1 = new THREE.Vector3();\n        var c2 = new THREE.Vector3();\n\n        for( var i = 0, il = p.residueCount; i < il; ++i ){\n\n            c1.fromArray( pos.center, i * 3 );\n            c2.fromArray( pos.center, i * 3 + 3 );\n            var d = c1.distanceTo( c2 );\n\n            if( d < centerDist && d > 1.0 && pos.bending[ i ] < localAngle ){\n                residueStore.sstruc[ offset + i ] = \"h\".charCodeAt( 0 );\n                residueStore.sstruc[ offset + i + 1 ] = \"h\".charCodeAt( 0 );\n            }\n\n        }\n\n    }\n\n    return function( structure ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Structure.autoSS\" );\n\n        structure.eachPolymer( function( p ){\n\n            // assign secondary structure\n            if( p.residueCount < 4 ) return;\n            if( p.isCg() ){\n                cgPolymer( p );\n            }else if( p.isProtein() ){\n                proteinPolymer( p );\n            }else{\n                return;\n            }\n\n            // set lone secondary structure assignments to \"c\"\n            var prevSstruc = undefined;\n            var sstrucCount = 0;\n            p.eachResidue( function( r ){\n                if( r.sstruc === prevSstruc ){\n                    sstrucCount += 1;\n                }else{\n                    if( sstrucCount === 1 ){\n                        r.index -= 1;\n                        r.sstruc = \"c\";\n                    }\n                    sstrucCount = 1;\n                    prevSstruc = r.sstruc;\n                }\n            } );\n\n        } );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Structure.autoSS\" );\n\n    }\n\n}();\n\n\nNGL.calculateChainnames = function( structure ){\n\n    if( NGL.debug ) NGL.time( \"NGL.calculateChainnames\" );\n\n    var doAutoChainName = true;\n    structure.eachChain( function( c ){\n        if( c.chainname ) doAutoChainName = false;\n    } );\n\n    if( doAutoChainName ){\n\n        // var names = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n        //             \"abcdefghijklmnopqrstuvwxyz\" +\n        //             \"0123456789\";\n        var names = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        var n = names.length;\n\n        var modelStore = structure.modelStore;\n        var chainStore = structure.chainStore;\n        var residueStore = structure.residueStore;\n\n        var addChain = function( mIndex, chainname, rOffset, rCount ){\n            var ci = chainStore.count;\n            for( var i = 0; i < rCount; ++i ){\n                residueStore.chainIndex[ rOffset + i ] = ci;\n            }\n            chainStore.growIfFull();\n            chainStore.modelIndex[ ci ] = mIndex;\n            chainStore.setChainname( ci, chainname );\n            chainStore.residueOffset[ ci ] = rOffset;\n            chainStore.residueCount[ ci ] = rCount;\n            chainStore.count += 1;\n            modelStore.chainCount[ mIndex ] += 1;\n        }\n\n        var ap1 = structure.getAtomProxy();\n        var ap2 = structure.getAtomProxy();\n\n        var i = 0;\n        var mi = 0;\n        var rStart = 0;\n        var rEnd = 0;\n        var chainData = [];\n\n        if( structure.residueStore.count === 1 ){\n\n            chainData.push( {\n                mIndex: 0,\n                chainname: \"A\",\n                rStart: 0,\n                rCount: 1\n            } );\n\n        }else{\n\n            structure.eachResidueN( 2, function( rp1, rp2 ){\n\n                var newChain = false;\n\n                var bbType1 = rp1.backboneType;\n                var bbType2 = rp2.backboneType;\n                var bbTypeUnk = NGL.UnknownBackboneType;\n\n                rEnd = rp1.index;\n\n                if( rp1.modelIndex !== rp2.modelIndex ){\n                    newChain = true;\n                }else if( rp1.moleculeType !== rp2.moleculeType ){\n                    newChain = true;\n                }else if( bbType1 !== bbTypeUnk && bbType1 === bbType2 ){\n                    ap1.index = rp1.backboneEndAtomIndex;\n                    ap2.index = rp2.backboneStartAtomIndex;\n                    if( !ap1.connectedTo( ap2 ) ){\n                        newChain = true;\n                    }\n                }\n\n                if( rp2.index === residueStore.count - 1 ){\n                    newChain = true;\n                    rEnd = rp2.index;\n                }\n\n                if( newChain ){\n                    var j = i;\n                    var k = 0;\n                    var chainname = names[ j % n ];\n\n                    while( j >= n ){\n                        j = Math.floor( j / n );\n                        chainname += names[ j % n ];\n                        k += 1;\n                    }\n\n                    chainData.push( {\n                        mIndex: mi,\n                        chainname: chainname,\n                        rStart: rStart,\n                        rCount: rEnd - rStart + 1\n                    } );\n\n                    i += 1;\n\n                    if( rp1.modelIndex !== rp2.modelIndex ){\n                        i = 0;\n                        mi += 1;\n                    }\n\n                    if( k >= 5 ){\n                        NGL.warn( \"out of chain names\" );\n                        i = 0;\n                    }\n\n                    rStart = rp2.index;\n                    rEnd = rp2.index;\n\n                }\n\n            } );\n\n        }\n\n        //\n\n        chainStore.count = 0;\n        chainData.forEach( function( d ){\n            addChain( d.mIndex, d.chainname, d.rStart, d.rCount );\n        } );\n\n        var chainOffset = 0;\n        structure.eachModel( function( mp ){\n            modelStore.chainOffset[ mp.index ] = chainOffset;\n            modelStore.chainCount[ mp.index ] -= 1;\n            chainOffset += modelStore.chainCount[ mp.index ];\n        } );\n\n    }\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.calculateChainnames\" );\n\n};\n\n\nNGL.calculateBonds = function( structure ){\n\n    if( NGL.debug ) NGL.time( \"NGL.calculateBonds\" );\n\n    NGL.calculateBondsWithin( structure );\n    NGL.calculateBondsBetween( structure );\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.calculateBonds\" );\n\n};\n\n\nNGL.calculateResidueBonds = function( r ){\n\n    // if( NGL.debug ) NGL.time( \"NGL.calculateResidueBonds\" );\n\n    var structure = r.structure;\n    var a1 = structure.getAtomProxy();\n    var a2 = structure.getAtomProxy();\n\n    var count = r.atomCount;\n    var offset = r.atomOffset;\n    var end = offset + count;\n    var end1 = end - 1;\n\n    if( count > 500 ){\n        if( NGL.debug ) NGL.warn( \"more than 500 atoms, skip residue for auto-bonding\", r.qualifiedName() );\n        return;\n    }\n\n    var atomIndices1 = [];\n    var atomIndices2 = [];\n\n    if( count > 50 ){\n\n        var kdtree = new NGL.Kdtree( r, true );\n        var radius = r.isCg() ? 1.2 : 2.3;\n\n        for( var i = offset; i < end1; ++i ){\n            a1.index = i;\n            var maxd = a1.covalent + radius + 0.3;\n            var nearestAtoms = kdtree.nearest(\n                a1, Infinity, maxd * maxd\n            );\n            var m = nearestAtoms.length;\n            for( var j = 0; j < m; ++j ){\n                a2.index = nearestAtoms[ j ].index;\n                if( a1.index < a2.index ){\n                    if( a1.connectedTo( a2 ) ){\n                        atomIndices1.push( a1.index - offset );\n                        atomIndices2.push( a2.index - offset );\n                    };\n                }\n            }\n        }\n\n    }else{\n\n        for( var i = offset; i < end1; ++i ){\n            a1.index = i;\n            for( var j = i + 1; j <= end1; ++j ){\n                a2.index = j;\n                if( a1.connectedTo( a2 ) ){\n                    atomIndices1.push( i - offset );\n                    atomIndices2.push( j - offset );\n                }\n            }\n        }\n\n    }\n\n    // if( NGL.debug ) NGL.timeEnd( \"NGL.calculateResidueBonds\" );\n\n    return {\n        atomIndices1: atomIndices1,\n        atomIndices2: atomIndices2\n    };\n\n};\n\n\nNGL.calculateBondsWithin = function( structure, onlyAddRung ){\n\n    if( NGL.debug ) NGL.time( \"NGL.calculateBondsWithin\" );\n\n    var bondStore = structure.bondStore;\n    var rungBondStore = structure.rungBondStore;\n    var rungAtomSet = structure.getAtomSet( false );\n    var a1 = structure.getAtomProxy();\n    var a2 = structure.getAtomProxy();\n\n    structure.eachResidue( function( r ){\n\n        if( !onlyAddRung ){\n\n            var count = r.atomCount;\n            var offset = r.atomOffset;\n            var end = offset + count;\n            var end1 = end - 1;\n\n            if( count > 500 ){\n                NGL.warn( \"more than 500 atoms, skip residue for auto-bonding\", r.qualifiedName() );\n                return;\n            }\n\n            var bonds = r.getBonds();\n            var atomIndices1 = bonds.atomIndices1;\n            var atomIndices2 = bonds.atomIndices2;\n            var nn = atomIndices1.length;\n\n            for( var i = 0; i < nn; ++i ){\n                a1.index = atomIndices1[ i ] + offset;\n                a2.index = atomIndices2[ i ] + offset;\n                bondStore.addBond( a1, a2 );\n            }\n\n        }\n\n        // get RNA/DNA rung pseudo bonds\n        var traceAtomIndex = r.residueType.traceAtomIndex;\n        var rungEndAtomIndex = r.residueType.rungEndAtomIndex;\n        if( traceAtomIndex !== -1 && rungEndAtomIndex !== -1 ){\n            a1.index = r.traceAtomIndex;\n            a2.index = r.rungEndAtomIndex;\n            rungBondStore.addBond( a1, a2 );\n            rungAtomSet.add_unsafe( a1.index );\n            rungAtomSet.add_unsafe( a2.index );\n        }\n\n    } );\n\n    structure.atomSetDict[ \"rung\" ] = rungAtomSet;\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.calculateBondsWithin\" );\n\n};\n\n\nNGL.calculateBondsBetween = function( structure, onlyAddBackbone ){\n\n    if( NGL.debug ) NGL.time( \"NGL.calculateBondsBetween\" );\n\n    var bondStore = structure.bondStore;\n    var backboneBondStore = structure.backboneBondStore;\n    var backboneAtomSet = structure.getAtomSet( false );\n    var ap1 = structure.getAtomProxy();\n    var ap2 = structure.getAtomProxy();\n\n    if( backboneBondStore.count === 0 ){\n        backboneBondStore.resize( structure.residueStore.count );\n    }\n\n    function addBondIfConnected( rp1, rp2 ){\n        var bbType1 = rp1.backboneType;\n        var bbType2 = rp2.backboneType;\n        if( bbType1 !== NGL.UnknownBackboneType && bbType1 === bbType2 ){\n            ap1.index = rp1.backboneEndAtomIndex;\n            ap2.index = rp2.backboneStartAtomIndex;\n            if( ap1.connectedTo( ap2 ) ){\n                if( !onlyAddBackbone ){\n                    bondStore.addBond( ap1, ap2 );\n                }\n                ap1.index = rp1.traceAtomIndex;\n                ap2.index = rp2.traceAtomIndex;\n                backboneBondStore.addBond( ap1, ap2 );\n                backboneAtomSet.add_unsafe( ap1.index );\n                backboneAtomSet.add_unsafe( ap2.index );\n            }\n        }\n    }\n\n    structure.eachResidueN( 2, addBondIfConnected );\n\n    var rp1 = structure.getResidueProxy();\n    var rp2 = structure.getResidueProxy();\n\n    // check for cyclic chains\n    structure.eachChain( function( cp ){\n        if( cp.residueCount === 0 ) return;\n        rp1.index = cp.residueOffset;\n        rp2.index = cp.residueOffset + cp.residueCount - 1;\n        addBondIfConnected( rp2, rp1 );\n    } );\n\n    structure.atomSetDict[ \"backbone\" ] = backboneAtomSet;\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.calculateBondsBetween\" );\n\n};\n\n\nNGL.buildUnitcellAssembly = function( structure ){\n\n    if( NGL.debug ) NGL.time( \"NGL.buildUnitcellAssembly\" );\n\n    var uc = structure.unitcell;\n\n    var centerFrac = structure.center.clone().applyMatrix4( uc.cartToFrac );\n    var symopDict = NGL.getSymmetryOperations( uc.spacegroup );\n\n    var positionFrac = new THREE.Vector3();\n    var centerFracSymop = new THREE.Vector3();\n    var positionFracSymop = new THREE.Vector3();\n\n    if( centerFrac.x > 1 ) positionFrac.x -= 1;\n    if( centerFrac.x < 0 ) positionFrac.x += 1;\n    if( centerFrac.y > 1 ) positionFrac.y -= 1;\n    if( centerFrac.y < 0 ) positionFrac.y += 1;\n    if( centerFrac.z > 1 ) positionFrac.z -= 1;\n    if( centerFrac.z < 0 ) positionFrac.z += 1;\n\n    function getMatrixList( shift ){\n\n        var matrixList = [];\n\n        Object.keys( symopDict ).forEach( function( name ){\n\n            var m = symopDict[ name ].clone();\n\n            centerFracSymop.copy( centerFrac ).applyMatrix4( m );\n            positionFracSymop.setFromMatrixPosition( m );\n            positionFracSymop.sub( positionFrac );\n\n            if( centerFracSymop.x > 1 ) positionFracSymop.x -= 1;\n            if( centerFracSymop.x < 0 ) positionFracSymop.x += 1;\n            if( centerFracSymop.y > 1 ) positionFracSymop.y -= 1;\n            if( centerFracSymop.y < 0 ) positionFracSymop.y += 1;\n            if( centerFracSymop.z > 1 ) positionFracSymop.z -= 1;\n            if( centerFracSymop.z < 0 ) positionFracSymop.z += 1;\n\n            if( shift ) positionFracSymop.add( shift );\n\n            m.setPosition( positionFracSymop );\n            m.multiplyMatrices( uc.fracToCart, m );\n            m.multiply( uc.cartToFrac );\n\n            matrixList.push( m );\n\n        } );\n\n        return matrixList;\n\n    }\n\n    var unitcellAssembly = new NGL.Assembly( \"UNITCELL\" );\n    var unitcellMatrixList = getMatrixList();\n    if( structure.biomolDict[ \"NCS\" ] ){\n        var ncsUnitcellMatrixList = [];\n        var ncsMatrixList = structure.biomolDict[ \"NCS\" ].partList[ 0 ].matrixList;\n        unitcellMatrixList.forEach( function( sm ){\n            ncsMatrixList.forEach( function( nm ){\n                ncsUnitcellMatrixList.push( sm.clone().multiply( nm ) );\n            } );\n        } );\n        unitcellAssembly.addPart( ncsUnitcellMatrixList );\n    }else{\n        unitcellAssembly.addPart( unitcellMatrixList );\n    }\n\n    var vec = new THREE.Vector3();\n    var supercellAssembly = new NGL.Assembly( \"SUPERCELL\" );\n    var supercellMatrixList = Array.prototype.concat.call(\n        getMatrixList(),                         // 555\n        getMatrixList( vec.set(  1,  1,  1 ) ),  // 666\n        getMatrixList( vec.set( -1, -1, -1 ) ),  // 444\n\n        getMatrixList( vec.set(  1,  0,  0 ) ),  // 655\n        getMatrixList( vec.set(  1,  1,  0 ) ),  // 665\n        getMatrixList( vec.set(  1,  0,  1 ) ),  // 656\n        getMatrixList( vec.set(  0,  1,  0 ) ),  // 565\n        getMatrixList( vec.set(  0,  1,  1 ) ),  // 566\n        getMatrixList( vec.set(  0,  0,  1 ) ),  // 556\n\n        getMatrixList( vec.set( -1,  0,  0 ) ),  // 455\n        getMatrixList( vec.set( -1, -1,  0 ) ),  // 445\n        getMatrixList( vec.set( -1,  0, -1 ) ),  // 454\n        getMatrixList( vec.set(  0, -1,  0 ) ),  // 545\n        getMatrixList( vec.set(  0, -1, -1 ) ),  // 544\n        getMatrixList( vec.set(  0,  0, -1 ) ),  // 554\n\n        getMatrixList( vec.set(  1, -1, -1 ) ),  // 644\n        getMatrixList( vec.set(  1,  1, -1 ) ),  // 664\n        getMatrixList( vec.set(  1, -1,  1 ) ),  // 646\n        getMatrixList( vec.set( -1,  1,  1 ) ),  // 466\n        getMatrixList( vec.set( -1, -1,  1 ) ),  // 446\n        getMatrixList( vec.set( -1,  1, -1 ) ),  // 464\n\n        getMatrixList( vec.set(  0,  1, -1 ) ),  // 564\n        getMatrixList( vec.set(  0, -1,  1 ) ),  // 546\n        getMatrixList( vec.set(  1,  0, -1 ) ),  // 654\n        getMatrixList( vec.set( -1,  0,  1 ) ),  // 456\n        getMatrixList( vec.set(  1, -1,  0 ) ),  // 645\n        getMatrixList( vec.set( -1,  1,  0 ) )   // 465\n    );\n    if( structure.biomolDict[ \"NCS\" ] ){\n        var ncsSupercellMatrixList = [];\n        var ncsMatrixList = structure.biomolDict[ \"NCS\" ].partList[ 0 ].matrixList;\n        supercellMatrixList.forEach( function( sm ){\n            ncsMatrixList.forEach( function( nm ){\n                ncsSupercellMatrixList.push( sm.clone().multiply( nm ) );\n            } );\n        } );\n        supercellAssembly.addPart( ncsSupercellMatrixList );\n    }else{\n        supercellAssembly.addPart( supercellMatrixList );\n    }\n\n    structure.biomolDict[ \"UNITCELL\" ] = unitcellAssembly;\n    structure.biomolDict[ \"SUPERCELL\" ] = supercellAssembly;\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.buildUnitcellAssembly\" );\n\n};\n\n\nNGL.Assembly = function( name ){\n\n    this.name = name || \"\";\n    this.partList = []\n\n};\n\nNGL.Assembly.prototype = {\n\n    constructor: NGL.Assembly,\n    type: \"Assembly\",\n\n    addPart: function( matrixList, chainList ){\n        var part = new NGL.AssemblyPart( matrixList, chainList );\n        this.partList.push( part );\n        return part;\n    },\n\n    getAtomCount: function( structure ){\n\n        var atomCount = 0;\n\n        this.partList.forEach( function( part ){\n            atomCount += part.getAtomCount( structure );\n        } );\n\n        return atomCount;\n\n    },\n\n    getInstanceCount: function(){\n\n        var instanceCount = 0;\n\n        this.partList.forEach( function( part ){\n            instanceCount += part.matrixList.length;\n        } );\n\n        return instanceCount;\n\n    },\n\n    isIdentity: function( structure ){\n\n        if( this.partList.length !== 1 ) return false;\n\n        var part = this.partList[ 0 ];\n        if( part.matrixList.length !== 1 ) return false;\n\n        var identityMatrix = new THREE.Matrix4();\n        if( !identityMatrix.equals( part.matrixList[ 0 ] ) ) return false;\n\n        var structureChainList = [];\n        structure.eachChain( function( cp ){\n            structureChainList.push( cp.chainname );\n        } );\n        structureChainList = NGL.uniqueArray( structureChainList );\n        if( part.chainList.length !== structureChainList.length ) return false;\n\n        return true;\n\n    },\n\n    toJSON: function(){\n\n        var output = {\n            name: this.name,\n            partList: new Array( this.partList.length )\n        };\n\n        this.partList.forEach( function( part, i ){\n            output.partList[ i ] = part.toJSON()\n        } );\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.name = input.name;\n        this.partList = input.partList;\n\n        this.partList.forEach( function( part, i ){\n            this.partList[ i ] = new NGL.AssemblyPart().fromJSON( part );\n        }.bind( this ) );\n\n        return this;\n\n    }\n\n};\n\n\nNGL.AssemblyPart = function( matrixList, chainList ){\n\n    this.matrixList = matrixList || [];\n    this.chainList = chainList || [];\n\n};\n\nNGL.AssemblyPart.prototype = {\n\n    constructor: NGL.AssemblyPart,\n    type: \"AssemblyPart\",\n\n    getAtomCount: function( structure ){\n\n        var atomCount = 0;\n        var chainList = this.chainList;\n\n        structure.eachChain( function( cp ){\n            if( chainList.length === 0 || chainList.indexOf( cp.chainname ) != -1 ){\n                atomCount += cp.atomCount;\n            }\n        } );\n\n        return this.matrixList.length * atomCount;\n\n    },\n\n    getSelection: function(){\n        if( this.chainList.length > 0 ){\n            var chainList = NGL.uniqueArray( this.chainList );\n            var sele = \":\" + chainList.join( \" OR :\" );\n            return new NGL.Selection( sele );\n        }else{\n            return new NGL.Selection( \"\" );\n        }\n    },\n\n    getView: function( structure ){\n        var selection = this.getSelection();\n        if( selection ){\n            return structure.getView( selection );\n        }else{\n            return structure;\n        }\n    },\n\n    getInstanceList: function(){\n        var instanceList = [];\n        for ( var j = 0, jl = this.matrixList.length; j < jl; ++j ){\n            instanceList.push( {\n                id: j + 1,\n                name: j,\n                matrix: this.matrixList[ j ]\n            } );\n        }\n        return instanceList;\n    },\n\n    toJSON: function(){\n\n        var output = {\n            matrixList: this.matrixList,\n            chainList: this.chainList\n        };\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.matrixList = input.matrixList;\n        this.chainList = input.chainList;\n\n        return this;\n\n    }\n\n};\n\n\n///////////\n// Parser\n\nNGL.WorkerRegistry.add( \"parse\", function( e, callback ){\n\n    if( NGL.debug ) NGL.time( \"WORKER parse\" );\n\n    var parser = NGL.fromJSON( e.data );\n\n    parser.parse( function(){\n\n        if( NGL.debug ) NGL.timeEnd( \"WORKER parse\" );\n\n        // no need to return the streamer data\n        parser.streamer.dispose();\n\n        callback( parser.toJSON(), parser.getTransferable() );\n\n    } );\n\n} );\n\n\nNGL.Parser = function( streamer, params ){\n\n    var p = params || {};\n\n    this.streamer = streamer;\n\n    this.name = p.name;\n    this.path = p.path;\n\n};\n\nNGL.Parser.prototype = {\n\n    constructor: NGL.Parser,\n    type: \"\",\n\n    __objName: \"\",\n\n    parse: function( callback ){\n\n        var self = this;\n\n        this.streamer.read( function(){\n            self._beforeParse();\n            self._parse( function(){\n                self._afterParse();\n                callback( self[ self.__objName ] );\n            } );\n        } );\n\n        return this[ this.__objName ];\n\n    },\n\n    parseWorker: function( callback ){\n\n        if( typeof Worker !== \"undefined\" && typeof importScripts !== 'function' ){\n\n            var worker = new NGL.Worker( \"parse\" ).post(\n\n                this.toJSON(),\n\n                this.getTransferable(),\n\n                function( e ){\n\n                    worker.terminate();\n\n                    this.fromJSON( e.data );\n                    this._afterWorker( callback );\n\n                }.bind( this ),\n\n                function( e ){\n\n                    NGL.warn(\n                        \"NGL.Parser.parseWorker error - trying without worker\", e\n                    );\n                    worker.terminate();\n\n                    this.parse( callback );\n\n                }.bind( this )\n\n            );\n\n        }else{\n\n            this.parse( callback );\n\n        }\n\n        return this[ this.__objName ];\n\n    },\n\n    _parse: function( callback ){\n\n        NGL.warn( \"NGL.Parser._parse not implemented\" );\n        callback();\n\n    },\n\n    _beforeParse: function(){},\n\n    _afterParse: function(){\n\n        if( NGL.debug ) NGL.log( this[ this.__objName ] );\n\n    },\n\n    _afterWorker: function( callback ){\n\n        if( NGL.debug ) NGL.log( this[ this.__objName ] );\n        callback( this[ this.__objName ] );\n\n    },\n\n    toJSON: function(){\n\n        var type = this.type.substr( 0, 1 ).toUpperCase() +\n                    this.type.substr( 1 );\n\n        var output = {\n\n            metadata: {\n                version: 0.1,\n                type: type + 'Parser',\n                generator: type + 'ParserExporter'\n            },\n\n            streamer: this.streamer.toJSON(),\n            name: this.name,\n            path: this.path,\n\n        }\n\n        if( typeof this[ this.__objName ].toJSON === \"function\" ){\n\n            output[ this.__objName ] = this[ this.__objName ].toJSON();\n\n        }else{\n\n            output[ this.__objName ] = this[ this.__objName ];\n\n        }\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        this.streamer = NGL.fromJSON( input.streamer );\n        this.name = input.name;\n        this.path = input.path;\n\n        if( typeof this[ this.__objName ].toJSON === \"function\" ){\n\n            this[ this.__objName ].fromJSON( input[ this.__objName ] );\n\n        }else{\n\n            this[ this.__objName ] = input[ this.__objName ];\n\n        }\n\n        return this;\n\n    },\n\n    getTransferable: function(){\n\n        var transferable = [];\n\n        transferable = transferable.concat(\n            this.streamer.getTransferable()\n        );\n\n        if( typeof this[ this.__objName ].toJSON === \"function\" ){\n\n            transferable = transferable.concat(\n                this[ this.__objName ].getTransferable()\n            );\n\n        }\n\n        return transferable;\n\n    }\n\n};\n\n\n////////////////////\n// StructureParser\n\nNGL.StructureParser = function( streamer, params ){\n\n    var p = params || {};\n\n    this.firstModelOnly = p.firstModelOnly || false;\n    this.asTrajectory = p.asTrajectory || false;\n    this.cAlphaOnly = p.cAlphaOnly || false;\n    this.reorderAtoms = p.reorderAtoms || false;\n    this.dontAutoBond = p.dontAutoBond || false;\n    this.doAutoSS = true;\n\n    NGL.Parser.call( this, streamer, p );\n\n    this.structure = new NGL.Structure( this.name, this.path );\n    this.structureBuilder = new NGL.StructureBuilder( this.structure );\n\n};\n\nNGL.StructureParser.prototype = NGL.createObject(\n\n    NGL.Parser.prototype, {\n\n    constructor: NGL.StructureParser,\n    type: \"structure\",\n\n    __objName: \"structure\",\n\n    _afterParse: function(){\n\n        if( NGL.debug ) NGL.time( \"NGL.StructureParser._afterParse\" );\n\n        var s = this.structure;\n        s.refresh();\n\n        if( this.reorderAtoms ){\n            NGL.reorderAtoms( s );\n        }\n\n        // check for chain names\n        NGL.calculateChainnames( s );\n\n        if( !this.dontAutoBond ){\n            NGL.calculateBonds( s );\n        }else if( this.autoBondBetween ){\n            NGL.calculateBondsBetween( s );\n        }\n\n        // TODO\n        // check for secondary structure\n        if( this.doAutoSS && s.helices.length === 0 && s.sheets.length === 0 ){\n            NGL.calculateSecondaryStructure( s );\n        }\n\n        if( s.helices.length > 0 || s.sheets.length > 0 ){\n            NGL.assignSecondaryStructure( s );\n        }\n\n        this._postProcess();\n\n        if( s.unitcell ){\n            NGL.buildUnitcellAssembly( s );\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.StructureParser._afterParse\" );\n        if( NGL.debug ) NGL.log( this[ this.__objName ] );\n\n    },\n\n    _postProcess: function(){},\n\n    toJSON: function(){\n\n        var output = NGL.Parser.prototype.toJSON.call( this );\n\n        output.firstModelOnly = this.firstModelOnly;\n        output.asTrajectory = this.asTrajectory;\n        output.cAlphaOnly = this.cAlphaOnly;\n        output.reorderAtoms = this.reorderAtoms;\n        output.dontAutoBond = this.dontAutoBond;\n        output.doAutoSS = this.doAutoSS;\n\n        return output;\n\n    },\n\n    fromJSON: function( input ){\n\n        NGL.Parser.prototype.fromJSON.call( this, input );\n\n        this.firstModelOnly = input.firstModelOnly;\n        this.asTrajectory = input.asTrajectory;\n        this.cAlphaOnly = input.cAlphaOnly;\n        this.reorderAtoms = input.reorderAtoms;\n        this.dontAutoBond = input.dontAutoBond;\n        this.doAutoSS = input.doAutoSS;\n\n        return this;\n\n    },\n\n} );\n\n\nNGL.PdbParser = function( streamer, params ){\n\n    NGL.StructureParser.call( this, streamer, params );\n\n};\n\nNGL.PdbParser.prototype = NGL.createObject(\n\n    NGL.StructureParser.prototype, {\n\n    constructor: NGL.PdbParser,\n    type: \"pdb\",\n\n    _parse: function( callback ){\n\n        // http://www.wwpdb.org/documentation/file-format.php\n\n        if( NGL.debug ) NGL.time( \"NGL.PdbParser._parse \" + this.name );\n\n        var isPqr = this.type === \"pqr\";\n        var reWhitespace = /\\s+/;\n\n        var s = this.structure;\n        var sb = this.structureBuilder;\n\n        var firstModelOnly = this.firstModelOnly;\n        var asTrajectory = this.asTrajectory;\n        var cAlphaOnly = this.cAlphaOnly;\n\n        var frames = s.frames;\n        var boxes = s.boxes;\n        var doFrames = false;\n        var currentFrame, currentCoord;\n\n        var id = s.id;\n        var title = s.title;\n\n        var atoms = s.atoms;\n        var bondSet = s.bondSet;\n        var helices = s.helices;\n        var sheets = s.sheets;\n        var biomolDict = s.biomolDict;\n        var currentBiomol;\n        var currentPart;\n        var currentMatrix;\n\n        var helixTypes = NGL.HelixTypes;\n\n        var line, recordName;\n        var serial, chainname, resno, resname, occupancy,\n            inscode, atomname, element, hetero, bfactor, altloc;\n\n        var serialDict = {};\n        var unitcellDict = {};\n\n        s.hasConnect = false;\n\n        var atomMap = s.atomMap;\n        var atomStore = s.atomStore;\n        atomStore.resize( Math.round( this.streamer.data.length / 80 ) );\n\n        var ap1 = s.getAtomProxy();\n        var ap2 = s.getAtomProxy();\n\n        var idx = 0;\n        var modelIdx = 0;\n        var pendingStart = true;\n\n        function _parseChunkOfLines( _i, _n, lines ){\n\n            for( var i = _i; i < _n; ++i ){\n\n                line = lines[ i ];\n                recordName = line.substr( 0, 6 );\n\n                if( recordName === 'ATOM  ' || recordName === 'HETATM' ){\n\n                    // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\n                    // PQR: Field_name Atom_number Atom_name Residue_name Chain_ID Residue_number X Y Z Charge Radius\n\n                    if( pendingStart ){\n\n                        if( asTrajectory ){\n\n                            if( doFrames ){\n                                currentFrame = new Float32Array( atomStore.count * 3 );\n                                frames.push( currentFrame );\n                            }else{\n                                currentFrame = [];\n                            }\n                            currentCoord = 0;\n\n                        }else{\n\n                            if( !firstModelOnly ) serialDict = {};\n\n                        }\n\n                    }\n\n                    pendingStart = false;\n\n                    if( firstModelOnly && modelIdx > 0 ) continue;\n\n                    if( isPqr ){\n\n                        var ls = line.split( reWhitespace );\n                        var dd = ls.length === 10 ? 1 : 0;\n\n                        atomname = ls[ 2 ];\n                        if( cAlphaOnly && atomname !== 'CA' ) continue;\n\n                        var x = parseFloat( ls[ 6 - dd ] );\n                        var y = parseFloat( ls[ 7 - dd ] );\n                        var z = parseFloat( ls[ 8 - dd ] );\n\n                    }else{\n\n                        atomname = line.substr( 12, 4 ).trim();\n                        if( cAlphaOnly && atomname !== 'CA' ) continue;\n\n                        var x = parseFloat( line.substr( 30, 8 ) );\n                        var y = parseFloat( line.substr( 38, 8 ) );\n                        var z = parseFloat( line.substr( 46, 8 ) );\n\n                    }\n\n                    if( asTrajectory ){\n\n                        var j = currentCoord * 3;\n\n                        currentFrame[ j + 0 ] = x;\n                        currentFrame[ j + 1 ] = y;\n                        currentFrame[ j + 2 ] = z;\n\n                        currentCoord += 1;\n\n                        if( doFrames ) continue;\n\n                    }\n\n                    var element;\n\n                    if( isPqr ){\n\n                        serial = parseInt( ls[ 1 ] );\n                        element = \"\";\n                        hetero = ( line[ 0 ] === 'H' ) ? 1 : 0;\n                        chainname = dd ? \"\" : ls[ 4 ];\n                        resno = parseInt( ls[ 5 - dd ] );\n                        inscode = \"\";\n                        resname = ls[ 3 ];\n                        bfactor = parseFloat( ls[ 9 - dd ] );  // charge FIXME should be its own field\n                        altloc = \"\";\n                        occupancy = 0.0;\n                        // FIXME radius field not supported\n\n                    }else{\n\n                        serial = parseInt( line.substr( 6, 5 ) );\n                        element = line.substr( 76, 2 ).trim();\n                        hetero = ( line[ 0 ] === 'H' ) ? 1 : 0;\n                        chainname = line[ 21 ].trim();\n                        resno = parseInt( line.substr( 22, 4 ) );\n                        inscode = line[ 26 ].trim();\n                        resname = line.substr( 17, 4 ).trim();\n                        bfactor = parseFloat( line.substr( 60, 6 ) );\n                        altloc = line[ 16 ].trim();\n                        occupancy = parseFloat( line.substr( 54, 6 ) );\n\n                    }\n\n                    atomStore.growIfFull();\n                    atomStore.atomTypeId[ idx ] = atomMap.add( atomname, element );\n\n                    atomStore.x[ idx ] = x;\n                    atomStore.y[ idx ] = y;\n                    atomStore.z[ idx ] = z;\n                    atomStore.serial[ idx ] = serial;\n                    atomStore.bfactor[ idx ] = isNaN( bfactor ) ? 0 : bfactor;\n                    atomStore.altloc[ idx ] = altloc.charCodeAt( 0 );\n                    atomStore.occupancy[ idx ] = isNaN( occupancy ) ? 0 : occupancy;\n\n                    sb.addAtom( modelIdx, chainname, resname, resno, hetero, undefined, inscode );\n\n                    serialDict[ serial ] = idx;\n\n                    idx += 1;\n\n                }else if( recordName === 'CONECT' ){\n\n                    var from = serialDict[ parseInt( line.substr( 6, 5 ) ) ];\n                    var pos = [ 11, 16, 21, 26 ];\n\n                    if( from === undefined ){\n                        // NGL.log( \"missing CONNECT serial\" );\n                        continue;\n                    }\n\n                    for( var j = 0; j < 4; ++j ){\n\n                        var to = parseInt( line.substr( pos[ j ], 5 ) );\n                        if( Number.isNaN( to ) ) continue;\n                        to = serialDict[ to ];\n                        if( to === undefined ){\n                            // NGL.log( \"missing CONNECT serial\" );\n                            continue;\n                        }/*else if( to < from ){\n                            // likely a duplicate in standard PDB format\n                            // but not necessarily, so better remove duplicates\n                            // in a pass after parsing (and auto bonding)\n                            continue;\n                        }*/\n\n                        ap1.index = from;\n                        ap2.index = to;\n\n                        s.bondStore.addBond( ap1, ap2 );\n\n                    }\n\n                    s.hasConnect = true;\n\n                }else if( recordName === 'HELIX ' ){\n\n                    var startChain = line[ 19 ].trim();\n                    var startResi = parseInt( line.substr( 21, 4 ) );\n                    var startIcode = line[ 25 ].trim();\n                    var endChain = line[ 31 ].trim();\n                    var endResi = parseInt( line.substr( 33, 4 ) );\n                    var endIcode = line[ 37 ].trim();\n                    var helixType = parseInt( line.substr( 39, 1 ) );\n                    helixType = ( helixTypes[ helixType ] || helixTypes[\"\"] ).charCodeAt( 0 );\n                    helices.push( [\n                        startChain, startResi, startIcode,\n                        endChain, endResi, endIcode,\n                        helixType\n                    ] );\n\n                }else if( recordName === 'SHEET ' ){\n\n                    var startChain = line[ 21 ].trim();\n                    var startResi = parseInt( line.substr( 22, 4 ) );\n                    var startIcode = line[ 26 ].trim();\n                    var endChain = line[ 32 ].trim();\n                    var endResi = parseInt( line.substr( 33, 4 ) );\n                    var endIcode = line[ 37 ].trim();\n                    sheets.push( [\n                        startChain, startResi, startIcode,\n                        endChain, endResi, endIcode\n                    ] );\n\n                }else if( recordName === 'REMARK' && line.substr( 7, 3 ) === '350' ){\n\n                    if( line.substr( 11, 12 ) === \"BIOMOLECULE:\" ){\n\n                        var name = line.substr( 23 ).trim();\n                        if( /^(0|[1-9][0-9]*)$/.test( name ) ) name = \"BU\" + name;\n\n                        currentBiomol = new NGL.Assembly( name );\n                        biomolDict[ name ] = currentBiomol;\n\n                    }else if( line.substr( 13, 5 ) === \"BIOMT\" ){\n\n                        var ls = line.split( /\\s+/ );\n\n                        var row = parseInt( line[ 18 ] ) - 1;\n                        var mat = ls[ 3 ].trim();\n\n                        if( row === 0 ){\n                            currentMatrix = new THREE.Matrix4();\n                            currentPart.matrixList.push( currentMatrix );\n                        }\n\n                        var elms = currentMatrix.elements;\n\n                        elms[ 4 * 0 + row ] = parseFloat( ls[ 4 ] );\n                        elms[ 4 * 1 + row ] = parseFloat( ls[ 5 ] );\n                        elms[ 4 * 2 + row ] = parseFloat( ls[ 6 ] );\n                        elms[ 4 * 3 + row ] = parseFloat( ls[ 7 ] );\n\n                    }else if(\n                        line.substr( 11, 30 ) === 'APPLY THE FOLLOWING TO CHAINS:' ||\n                        line.substr( 11, 30 ) === '                   AND CHAINS:'\n                    ){\n\n                        if( line.substr( 11, 5 ) === 'APPLY' ){\n                            currentPart = currentBiomol.addPart();\n                        }\n\n                        line.substr( 41, 30 ).split( \",\" ).forEach( function( v ){\n                            var c = v.trim();\n                            if( c ) currentPart.chainList.push( c );\n                        } );\n\n                    }\n\n                }else if( recordName === 'HEADER' ){\n\n                    id = line.substr( 62, 4 );\n\n                }else if( recordName === 'TITLE ' ){\n\n                    title += line.substr( 10, 70 ) + \"\\n\";\n\n                }else if( recordName === 'MODEL ' ){\n\n                    pendingStart = true;\n\n                }else if( recordName === 'ENDMDL' || line.substr( 0, 3 ) === 'END' ){\n\n                    if( pendingStart ) continue;\n\n                    if( asTrajectory && !doFrames ){\n\n                        frames.push( new Float32Array( currentFrame ) );\n                        doFrames = true;\n\n                    }\n\n                    modelIdx += 1;\n                    pendingStart = true;\n\n                }else if( recordName === 'MTRIX ' ){\n\n                    var ls = line.split( /\\s+/ );\n                    var mat = ls[ 1 ].trim();\n\n                    if( line[ 5 ] === \"1\" && mat === \"1\" ){\n                        var name = \"NCS\";\n                        currentBiomol = new NGL.Assembly( name );\n                        biomolDict[ name ] = currentBiomol;\n                        currentPart = currentBiomol.addPart();\n                    }\n\n                    var row = parseInt( line[ 5 ] ) - 1;\n\n                    if( row === 0 ){\n                        currentMatrix = new THREE.Matrix4();\n                        currentPart.matrixList.push( currentMatrix );\n                    }\n\n                    var elms = currentMatrix.elements;\n\n                    elms[ 4 * 0 + row ] = parseFloat( ls[ 2 ] );\n                    elms[ 4 * 1 + row ] = parseFloat( ls[ 3 ] );\n                    elms[ 4 * 2 + row ] = parseFloat( ls[ 4 ] );\n                    elms[ 4 * 3 + row ] = parseFloat( ls[ 5 ] );\n\n                }else if( line.substr( 0, 5 ) === 'ORIGX' ){\n\n                    if( !unitcellDict.origx ){\n                        unitcellDict.origx = new THREE.Matrix4();\n                    }\n\n                    var ls = line.split( /\\s+/ );\n                    var row = parseInt( line[ 5 ] ) - 1;\n                    var elms = unitcellDict.origx.elements;\n\n                    elms[ 4 * 0 + row ] = parseFloat( ls[ 1 ] );\n                    elms[ 4 * 1 + row ] = parseFloat( ls[ 2 ] );\n                    elms[ 4 * 2 + row ] = parseFloat( ls[ 3 ] );\n                    elms[ 4 * 3 + row ] = parseFloat( ls[ 4 ] );\n\n                }else if( line.substr( 0, 5 ) === 'SCALE' ){\n\n                    if( !unitcellDict.scale ){\n                        unitcellDict.scale = new THREE.Matrix4();\n                    }\n\n                    var ls = line.split( /\\s+/ );\n                    var row = parseInt( line[ 5 ] ) - 1;\n                    var elms = unitcellDict.scale.elements;\n\n                    elms[ 4 * 0 + row ] = parseFloat( ls[ 1 ] );\n                    elms[ 4 * 1 + row ] = parseFloat( ls[ 2 ] );\n                    elms[ 4 * 2 + row ] = parseFloat( ls[ 3 ] );\n                    elms[ 4 * 3 + row ] = parseFloat( ls[ 4 ] );\n\n                }else if( recordName === 'CRYST1' ){\n\n                    // CRYST1   55.989   55.989   55.989  90.00  90.00  90.00 P 1           1\n                    //  7 - 15       Real(9.3)      a (Angstroms)\n                    // 16 - 24       Real(9.3)      b (Angstroms)\n                    // 25 - 33       Real(9.3)      c (Angstroms)\n                    // 34 - 40       Real(7.2)      alpha         alpha (degrees).\n                    // 41 - 47       Real(7.2)      beta          beta (degrees).\n                    // 48 - 54       Real(7.2)      gamma         gamma (degrees).\n                    // 56 - 66       LString        sGroup        Space group.\n                    // 67 - 70       Integer        z             Z value.\n\n                    var a = parseFloat( line.substr( 6, 9 ) );\n                    var b = parseFloat( line.substr( 15, 9 ) );\n                    var c = parseFloat( line.substr( 24, 9 ) );\n\n                    var alpha = parseFloat( line.substr( 33, 7 ) );\n                    var beta = parseFloat( line.substr( 40, 7 ) );\n                    var gamma = parseFloat( line.substr( 47, 7 ) );\n\n                    var sGroup = line.substr( 55, 11 ).trim();\n                    var z = parseInt( line.substr( 66, 4 ) );\n\n                    var box = new Float32Array( 9 );\n                    box[ 0 ] = a;\n                    box[ 4 ] = b;\n                    box[ 8 ] = c;\n                    boxes.push( box );\n\n                    if( modelIdx === 0 ){\n                        unitcellDict.a = a;\n                        unitcellDict.b = b;\n                        unitcellDict.c = c;\n                        unitcellDict.alpha = alpha;\n                        unitcellDict.beta = beta;\n                        unitcellDict.gamma = gamma;\n                        unitcellDict.spacegroup = sGroup;\n                    }\n\n                }\n\n            }\n\n        }\n\n        this.streamer.eachChunkOfLines( function( lines, chunkNo, chunkCount ){\n            _parseChunkOfLines( 0, lines.length, lines );\n        } );\n\n        sb.finalize();\n\n        if( unitcellDict.a !== undefined ){\n            s.unitcell = new NGL.Unitcell(\n                unitcellDict.a, unitcellDict.b, unitcellDict.c,\n                unitcellDict.alpha, unitcellDict.beta, unitcellDict.gamma,\n                unitcellDict.spacegroup, unitcellDict.scale\n            );\n        }else{\n            s.unitcell = undefined;\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.PdbParser._parse \" + this.name );\n        callback();\n\n    }\n\n} );\n\n\nNGL.PqrParser = function( streamer, params ){\n\n    NGL.StructureParser.call( this, streamer, params );\n\n    // http://www.poissonboltzmann.org/docs/file-format-info/\n\n};\n\nNGL.PqrParser.prototype = NGL.createObject(\n\n    NGL.PdbParser.prototype, {\n\n    constructor: NGL.PqrParser,\n    type: \"pqr\",\n\n} );\n\n\nNGL.GroParser = function( streamer, params ){\n\n    NGL.StructureParser.call( this, streamer, params );\n\n    this.structure._doAutoSS = true;\n    this.structure._doAutoChainName = true;\n\n};\n\nNGL.GroParser.prototype = NGL.createObject(\n\n    NGL.StructureParser.prototype, {\n\n    constructor: NGL.GroParser,\n    type: \"gro\",\n\n    _parse: function( callback ){\n\n        // http://manual.gromacs.org/current/online/gro.html\n\n        if( NGL.debug ) NGL.time( \"NGL.GroParser._parse \" + this.name );\n\n        var s = this.structure;\n        var sb = this.structureBuilder;\n\n        var firstModelOnly = this.firstModelOnly;\n        var asTrajectory = this.asTrajectory;\n        var cAlphaOnly = this.cAlphaOnly;\n\n        var frames = s.frames;\n        var boxes = s.boxes;\n        var doFrames = false;\n        var currentFrame, currentCoord;\n\n        var firstLines = this.streamer.peekLines( 3 );\n\n        s.title = firstLines[ 0 ].trim();\n\n        // determine number of decimal places\n        var ndec = firstLines[ 2 ].length - firstLines[ 2 ].lastIndexOf( \".\" ) - 1;\n        var lpos = 5 + ndec;\n        var xpos = 20;\n        var ypos = 20 + lpos;\n        var zpos = 20 + 2 * lpos;\n\n        //\n\n        var atomname, resname, element, resno, serial;\n\n        var atomCount = parseInt( firstLines[ 1 ] );\n        var modelLineCount = atomCount + 3;\n\n        var atomMap = s.atomMap;\n        var atomStore = s.atomStore;\n        atomStore.resize( atomCount );\n\n        var idx = 0;\n        var modelIdx = 0;\n        var lineNo = 0;\n\n        function _parseChunkOfLines( _i, _n, lines ){\n\n            for( var i = _i; i < _n; ++i ){\n\n                ++lineNo;\n                var l = lineNo - 1;\n\n                var line = lines[ i ];\n\n                if( !line ) continue;\n\n                if( l % modelLineCount === 0 ){\n\n                    // NGL.log( \"title\", line )\n\n                    if( asTrajectory ){\n\n                        currentFrame = new Float32Array( atomCount * 3 );\n                        frames.push( currentFrame );\n                        currentCoord = 0;\n\n                    }\n\n                }else if( l % modelLineCount === 1 ){\n\n                    // NGL.log( \"atomCount\", line )\n\n                }else if( l % modelLineCount === modelLineCount - 1 ){\n\n                    var str = line.trim().split( /\\s+/ );\n                    var box = new Float32Array( 9 );\n                    box[ 0 ] = parseFloat( str[ 0 ] ) * 10;\n                    box[ 4 ] = parseFloat( str[ 1 ] ) * 10;\n                    box[ 8 ] = parseFloat( str[ 2 ] ) * 10;\n                    boxes.push( box );\n\n                    if( firstModelOnly ){\n\n                        return true;\n\n                    }\n\n                    modelIdx += 1;\n\n                }else{\n\n                    atomname = line.substr( 10, 5 ).trim();\n                    if( cAlphaOnly && atomname !== 'CA' ) continue;\n\n                    var x = parseFloat( line.substr( xpos, lpos ) ) * 10;\n                    var y = parseFloat( line.substr( ypos, lpos ) ) * 10;\n                    var z = parseFloat( line.substr( zpos, lpos ) ) * 10;\n\n                    if( asTrajectory ){\n\n                        var j = currentCoord * 3;\n\n                        currentFrame[ j + 0 ] = x;\n                        currentFrame[ j + 1 ] = y;\n                        currentFrame[ j + 2 ] = z;\n\n                        currentCoord += 1;\n\n                        if( l > modelLineCount ) continue;\n\n                    }\n\n                    resname = line.substr( 5, 5 ).trim();\n                    resno = parseInt( line.substr( 0, 5 ) );\n                    serial = parseInt( line.substr( 15, 5 ) );\n\n                    atomStore.growIfFull();\n                    atomStore.atomTypeId[ idx ] = atomMap.add( atomname );\n\n                    atomStore.x[ idx ] = x;\n                    atomStore.y[ idx ] = y;\n                    atomStore.z[ idx ] = z;\n                    atomStore.serial[ idx ] = serial;\n\n                    sb.addAtom( modelIdx, \"\", resname, resno, 0, \"l\" );\n\n                    idx += 1;\n\n                }\n\n            }\n\n        }\n\n        this.streamer.eachChunkOfLines( function( lines, chunkNo, chunkCount ){\n            _parseChunkOfLines( 0, lines.length, lines );\n        } );\n\n        sb.finalize();\n\n        s.unitcell = new NGL.Unitcell(\n            boxes[ 0 ][ 0 ], boxes[ 0 ][ 4 ], boxes[ 0 ][ 8 ],\n            90, 90, 90, \"P 1\"\n        );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.GroParser._parse \" + this.name );\n        callback();\n\n    }\n\n} );\n\n\nNGL.CifParser = function( streamer, params ){\n\n    NGL.StructureParser.call( this, streamer, params );\n\n};\n\nNGL.CifParser.prototype = NGL.createObject(\n\n    NGL.StructureParser.prototype, {\n\n    constructor: NGL.CifParser,\n    type: \"cif\",\n\n\n    _parse: function( callback ){\n\n        // http://mmcif.wwpdb.org/\n\n        NGL.time( \"NGL.CifParser._parse \" + this.name );\n\n        var s = this.structure;\n        var sb = this.structureBuilder;\n\n        var firstModelOnly = this.firstModelOnly;\n        var asTrajectory = this.asTrajectory;\n        var cAlphaOnly = this.cAlphaOnly;\n\n        var frames = s.frames;\n        var boxes = s.boxes;\n        var doFrames = false;\n        var currentFrame, currentCoord;\n\n        var title = s.title;\n        var atoms = s.atoms;\n        var bondSet = s.bondSet;\n\n        var helixTypes = NGL.HelixTypes;\n\n        var line, recordName;\n        var altloc, serial, elem, chainname, resno, resname,\n            atomname, element, inscode;\n\n        s.hasConnect = false;\n\n        //\n\n        var reWhitespace = /\\s+/;\n        var reQuotedWhitespace = /'((?:(?!'\\s).)*)'|\"((?:(?!\"\\s).)*)\"|(\\S+)/g;\n        var reDoubleQuote = /\"/g;\n\n        var cif = {};\n        this.cif = cif;\n\n        var pendingString = false;\n        var currentString = null;\n        var pendingValue = false;\n        var pendingLoop = false;\n        var loopPointers = [];\n        var currentLoopIndex = null;\n        var currentCategory = null;\n        var currentName = null;\n        var first = null;\n        var pointerNames = [];\n\n        var auth_asym_id, auth_seq_id,\n            label_atom_id, label_comp_id, label_asym_id, label_alt_id,\n            group_PDB, id, type_symbol, pdbx_PDB_model_num, pdbx_PDB_ins_code,\n            Cartn_x, Cartn_y, Cartn_z, B_iso_or_equiv, occupancy;\n\n        var asymIdDict = {};\n        this.asymIdDict = asymIdDict;\n\n        //\n\n        var atomMap = s.atomMap;\n        var atomStore = s.atomStore;\n        atomStore.resize( this.streamer.data.length / 100 );\n\n        var idx = 0;\n        var modelIdx = 0;\n        var modelNum;\n\n        function _parseChunkOfLines( _i, _n, lines ){\n\n            for( var i = _i; i < _n; ++i ){\n\n                line = lines[i].trim();\n\n                if( ( !line && !pendingString && !pendingLoop ) || line[0]===\"#\" ){\n\n                    // NGL.log( \"NEW BLOCK\" );\n\n                    pendingString = false;\n                    pendingLoop = false;\n                    pendingValue = false;\n                    loopPointers.length = 0;\n                    currentLoopIndex = null;\n                    currentCategory = null;\n                    currentName = null;\n                    first = null;\n                    pointerNames.length = 0;\n\n                }else if( line.substring( 0, 5 )===\"data_\" ){\n\n                    var data = line.substring( 5 );\n\n                    // NGL.log( \"DATA\", data );\n\n                }else if( line[0]===\";\" ){\n\n                    if( pendingString ){\n\n                        // NGL.log( \"STRING END\", currentString );\n\n                        if( pendingLoop ){\n\n                            if( currentLoopIndex === loopPointers.length ){\n                                currentLoopIndex = 0;\n                            }\n                            loopPointers[ currentLoopIndex ].push( currentString );\n                            currentLoopIndex += 1;\n\n                        }else{\n\n                            cif[ currentCategory ][ currentName ] = currentString;\n\n                        }\n\n                        pendingString = false;\n                        currentString = null;\n\n                    }else{\n\n                        // NGL.log( \"STRING START\" );\n\n                        pendingString = true;\n                        currentString = line.substring( 1 );\n\n                    }\n\n                }else if( line===\"loop_\" ){\n\n                    // NGL.log( \"LOOP START\" );\n\n                    pendingLoop = true;\n                    loopPointers.length = 0;\n                    pointerNames.length = 0;\n                    currentLoopIndex = 0;\n\n                }else if( line[0]===\"_\" ){\n\n                    if( pendingLoop ){\n\n                        // NGL.log( \"LOOP KEY\", line );\n\n                        var ks = line.split(\".\");\n                        var category = ks[ 0 ].substring( 1 );\n                        var name = ks[ 1 ];\n\n                        if( ks.length === 1 ){\n\n                            name = false;\n                            if( !cif[ category ] ) cif[ category ] = [];\n                            loopPointers.push( cif[ category ] );\n\n                        }else{\n\n                            if( !cif[ category ] ) cif[ category ] = {};\n                            if( cif[ category ][ name ] ){\n                                NGL.warn( category, name, \"already exists\" );\n                            }else{\n                                cif[ category ][ name ] = [];\n                                loopPointers.push( cif[ category ][ name ] );\n                                pointerNames.push( name );\n                            }\n\n                        }\n\n                        currentCategory = category;\n                        currentName = name;\n                        first = true;\n\n                    }else{\n\n                        var ls = line.match( reQuotedWhitespace );\n                        var key = ls[ 0 ];\n                        var value = ls[ 1 ];\n                        var ks = key.split(\".\");\n                        var category = ks[ 0 ].substring( 1 );\n                        var name = ks[ 1 ];\n\n                        if( ks.length === 1 ){\n\n                            name = false;\n                            if( !cif[ category ] ) cif[ category ] = [];\n                            cif[ category ] = value\n\n                        }else{\n\n                            if( !cif[ category ] ) cif[ category ] = {};\n\n                            if( cif[ category ][ name ] ){\n                                NGL.warn( category, name, \"already exists\" );\n                            }else{\n                                cif[ category ][ name ] = value;\n                            }\n\n                        }\n\n                        if( !value ) pendingValue = true;\n\n                        currentCategory = category;\n                        currentName = name;\n\n                    }\n\n                }else{\n\n                    if( pendingString ){\n\n                        // NGL.log( \"STRING VALUE\", line );\n\n                        currentString += \" \" + line;\n\n                    }else if( pendingLoop ){\n\n                        // NGL.log( \"LOOP VALUE\", line );\n\n                        if( !line ){\n\n                            continue;\n\n                        }else if( currentCategory===\"atom_site\" ){\n\n                            var nn = pointerNames.length;\n\n                            var ls = line.split( reWhitespace );\n                            var k;\n\n                            if( first ){\n\n                                var names = [\n                                    \"auth_asym_id\", \"auth_seq_id\",\n                                    \"label_atom_id\", \"label_comp_id\", \"label_asym_id\", \"label_alt_id\",\n                                    \"group_PDB\", \"id\", \"type_symbol\", \"pdbx_PDB_model_num\",\n                                    \"Cartn_x\", \"Cartn_y\", \"Cartn_z\", \"B_iso_or_equiv\",\n                                    \"pdbx_PDB_ins_code\", \"occupancy\"\n                                ];\n\n                                auth_asym_id = pointerNames.indexOf( \"auth_asym_id\" );\n                                auth_seq_id = pointerNames.indexOf( \"auth_seq_id\" );\n                                label_atom_id = pointerNames.indexOf( \"label_atom_id\" );\n                                label_comp_id = pointerNames.indexOf( \"label_comp_id\" );\n                                label_asym_id = pointerNames.indexOf( \"label_asym_id\" );\n                                label_alt_id = pointerNames.indexOf( \"label_alt_id\" );\n                                Cartn_x = pointerNames.indexOf( \"Cartn_x\" );\n                                Cartn_y = pointerNames.indexOf( \"Cartn_y\" );\n                                Cartn_z = pointerNames.indexOf( \"Cartn_z\" );\n                                id = pointerNames.indexOf( \"id\" );\n                                type_symbol = pointerNames.indexOf( \"type_symbol\" );\n                                group_PDB = pointerNames.indexOf( \"group_PDB\" );\n                                B_iso_or_equiv = pointerNames.indexOf( \"B_iso_or_equiv\" );\n                                pdbx_PDB_model_num = pointerNames.indexOf( \"pdbx_PDB_model_num\" );\n\n                                pdbx_PDB_ins_code = pointerNames.indexOf( \"pdbx_PDB_ins_code\" );\n                                occupancy = pointerNames.indexOf( \"occupancy\" );\n\n                                first = false;\n\n                                modelNum = parseInt( ls[ pdbx_PDB_model_num ] );\n\n                                if( asTrajectory ){\n                                    currentFrame = [];\n                                    currentCoord = 0;\n                                }\n\n                            }\n\n                            //\n\n                            var _modelNum = parseInt( ls[ pdbx_PDB_model_num ] );\n\n                            if( modelNum !== _modelNum ){\n\n                                if( asTrajectory ){\n\n                                    if( modelIdx === 0 ){\n                                        frames.push( new Float32Array( currentFrame ) );\n                                    }\n\n                                    currentFrame = new Float32Array( atomStore.count * 3 );\n                                    frames.push( currentFrame );\n                                    currentCoord = 0;\n\n                                }\n\n                                modelIdx += 1;\n\n                            }\n\n                            modelNum = _modelNum;\n\n                            if( firstModelOnly && modelIdx > 0 ) continue;\n\n                            //\n\n                            var atomname = ls[ label_atom_id ].replace( reDoubleQuote, '' );\n                            if( cAlphaOnly && atomname !== 'CA' ) continue;\n\n                            var x = parseFloat( ls[ Cartn_x ] );\n                            var y = parseFloat( ls[ Cartn_y ] );\n                            var z = parseFloat( ls[ Cartn_z ] );\n\n                            if( asTrajectory ){\n\n                                var j = currentCoord * 3;\n\n                                currentFrame[ j + 0 ] = x;\n                                currentFrame[ j + 1 ] = y;\n                                currentFrame[ j + 2 ] = z;\n\n                                currentCoord += 1;\n\n                                if( modelIdx > 0 ) continue;\n\n                            }\n\n                            //\n\n                            var resname = ls[ label_comp_id ];\n                            var resno = parseInt( ls[ auth_seq_id ] );\n                            var inscode = ls[ pdbx_PDB_ins_code ];\n                            inscode = ( inscode === '?' ) ? '' : inscode;\n                            var chainname = ls[ auth_asym_id ];\n                            var hetero = ( ls[ group_PDB ][ 0 ] === 'H' ) ? 1 : 0;\n\n                            //\n\n                            var element = ls[ type_symbol ];\n                            var bfactor = parseFloat( ls[ B_iso_or_equiv ] );\n                            var occ = parseFloat( ls[ occupancy ] );\n                            var altloc = ls[ label_alt_id ];\n                            altloc = ( altloc === '.' ) ? '' : altloc;\n\n                            atomStore.growIfFull();\n                            atomStore.atomTypeId[ idx ] = atomMap.add( atomname, element );\n\n                            atomStore.x[ idx ] = x;\n                            atomStore.y[ idx ] = y;\n                            atomStore.z[ idx ] = z;\n                            atomStore.serial[ idx ] = parseInt( ls[ id ] );\n                            atomStore.bfactor[ idx ] = isNaN( bfactor ) ? 0 : bfactor;\n                            atomStore.occupancy[ idx ] = isNaN( occ ) ? 0 : occ;\n                            atomStore.altloc[ idx ] = altloc.charCodeAt( 0 );\n\n                            sb.addAtom( modelIdx, chainname, resname, resno, hetero, undefined, inscode );\n\n                            if( NGL.debug ){\n                                // check if one-to-many (chainname-asymId) relationship is\n                                // actually a many-to-many mapping\n                                var assignedChainname = asymIdDict[ ls[ label_asym_id ] ]\n                                if( assignedChainname !== undefined && assignedChainname !== chainname ){\n                                    NGL.warn( assignedChainname, chainname );\n                                }\n                            }\n                            // chainname mapping: label_asym_id -> auth_asym_id\n                            asymIdDict[ ls[ label_asym_id ] ] = chainname;\n\n                            idx += 1;\n\n                        }else{\n\n                            var ls = line.match( reQuotedWhitespace );\n                            var nn = ls.length;\n\n                            if( currentLoopIndex === loopPointers.length ){\n                                currentLoopIndex = 0;\n                            }/*else if( currentLoopIndex + nn > loopPointers.length ){\n                                NGL.warn( \"cif parsing error, wrong number of loop data entries\", nn, loopPointers.length );\n                            }*/\n\n                            for( var j = 0; j < nn; ++j ){\n                                loopPointers[ currentLoopIndex + j ].push( ls[ j ] );\n                            }\n\n                            currentLoopIndex += nn;\n\n                        }\n\n                    }else if( line[0]===\"'\" && line.substring( line.length-1 )===\"'\" ){\n\n                        // NGL.log( \"NEWLINE STRING\", line );\n\n                        var str = line.substring( 1, line.length - 2 );\n\n                        if( currentName === false ){\n                            cif[ currentCategory ] = str;\n                        }else{\n                            cif[ currentCategory ][ currentName ] = str;\n                        }\n\n                    }else if( pendingValue ){\n\n                        // NGL.log( \"NEWLINE VALUE\", line );\n\n                        if( currentName === false ){\n                            cif[ currentCategory ] = line.trim();\n                        }else{\n                            cif[ currentCategory ][ currentName ] = line.trim();\n                        }\n\n                    }else{\n\n                        if( NGL.debug ) NGL.log( \"NGL.CifParser._parse: unknown state\", line );\n\n                    }\n\n                }\n\n\n            }\n\n        }\n\n        function postProcess(){\n\n            function _ensureArray( dict, field ){\n\n                if( !Array.isArray( dict[ field ] ) ){\n                    Object.keys( dict ).forEach( function( key ){\n                        dict[ key ] = [ dict[ key ] ];\n                    } );\n                }\n\n            }\n\n            // get helices\n            var sc = cif.struct_conf;\n\n            if( sc ){\n\n                var helices = s.helices;\n                var helixTypes = NGL.HelixTypes;\n\n                // ensure data is in lists\n                _ensureArray( sc, \"id\" );\n\n                for( var i = 0, il = sc.beg_auth_seq_id.length; i < il; ++i ){\n                    var helixType = parseInt( sc.pdbx_PDB_helix_class[ i ] );\n                    if( !Number.isNaN( helixType ) ){\n                        var begIcode = sc.pdbx_beg_PDB_ins_code[ i ];\n                        var endIcode = sc.pdbx_end_PDB_ins_code[ i ];\n                        helices.push( [\n                            asymIdDict[ sc.beg_label_asym_id[ i ] ],\n                            parseInt( sc.beg_auth_seq_id[ i ] ),\n                            begIcode === \"?\" ? \"\" : begIcode,\n                            asymIdDict[ sc.end_label_asym_id[ i ] ],\n                            parseInt( sc.end_auth_seq_id[ i ] ),\n                            endIcode === \"?\" ? \"\" : endIcode,\n                            ( helixTypes[ helixType ] || helixTypes[\"\"] ).charCodeAt( 0 )\n                        ] );\n                    }\n                }\n\n            }\n\n            // get sheets\n            var ssr = cif.struct_sheet_range;\n\n            if( ssr ){\n\n                var sheets = s.sheets;\n\n                // ensure data is in lists\n                _ensureArray( ssr, \"id\" );\n\n                for( var i = 0, il = ssr.beg_auth_seq_id.length; i < il; ++i ){\n                    var begIcode = ssr.pdbx_beg_PDB_ins_code[ i ];\n                    var endIcode = ssr.pdbx_end_PDB_ins_code[ i ];\n                    sheets.push( [\n                        asymIdDict[ ssr.beg_label_asym_id[ i ] ],\n                        parseInt( ssr.beg_auth_seq_id[ i ] ),\n                        begIcode === \"?\" ? \"\" : begIcode,\n                        asymIdDict[ ssr.end_label_asym_id[ i ] ],\n                        parseInt( ssr.end_auth_seq_id[ i ] ),\n                        endIcode === \"?\" ? \"\" : endIcode\n                    ] );\n                }\n\n            }\n\n        }\n\n        this.streamer.eachChunkOfLines( function( lines, chunkNo, chunkCount ){\n            _parseChunkOfLines( 0, lines.length, lines );\n        } );\n\n        sb.finalize();\n\n        if( cif.struct && cif.struct.title ){\n            s.title = cif.struct.title.trim().replace( /^['\"]+|['\"]+$/g, \"\" );\n        }\n\n        postProcess();\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.CifParser._parse \" + this.name );\n        callback();\n\n    },\n\n    _postProcess: function(){\n\n        if( NGL.debug ) NGL.time( \"NGL.CifParser._postProcess\" );\n\n        var s = this.structure;\n        var structure = this.structure;\n        var cif = this.cif;\n        var asymIdDict = this.asymIdDict;\n\n        function _ensureArray( dict, field ){\n\n            if( !Array.isArray( dict[ field ] ) ){\n                Object.keys( dict ).forEach( function( key ){\n                    dict[ key ] = [ dict[ key ] ];\n                } );\n            }\n\n        }\n\n        // biomol & ncs processing\n        var operDict = {};\n        var biomolDict = s.biomolDict;\n\n        if( cif.pdbx_struct_oper_list ){\n\n            var op = cif.pdbx_struct_oper_list;\n\n            // ensure data is in lists\n            _ensureArray( op, \"id\" );\n\n            op.id.forEach( function( id, i ){\n\n                var m = new THREE.Matrix4();\n                var elms = m.elements;\n\n                elms[  0 ] = parseFloat( op[ \"matrix[1][1]\" ][ i ] );\n                elms[  1 ] = parseFloat( op[ \"matrix[1][2]\" ][ i ] );\n                elms[  2 ] = parseFloat( op[ \"matrix[1][3]\" ][ i ] );\n\n                elms[  4 ] = parseFloat( op[ \"matrix[2][1]\" ][ i ] );\n                elms[  5 ] = parseFloat( op[ \"matrix[2][2]\" ][ i ] );\n                elms[  6 ] = parseFloat( op[ \"matrix[2][3]\" ][ i ] );\n\n                elms[  8 ] = parseFloat( op[ \"matrix[3][1]\" ][ i ] );\n                elms[  9 ] = parseFloat( op[ \"matrix[3][2]\" ][ i ] );\n                elms[ 10 ] = parseFloat( op[ \"matrix[3][3]\" ][ i ] );\n\n                elms[  3 ] = parseFloat( op[ \"vector[1]\" ][ i ] );\n                elms[  7 ] = parseFloat( op[ \"vector[2]\" ][ i ] );\n                elms[ 11 ] = parseFloat( op[ \"vector[3]\" ][ i ] );\n\n                m.transpose();\n\n                operDict[ id ] = m;\n\n            } );\n\n        }\n\n        if( cif.pdbx_struct_assembly_gen ){\n\n            var gen = cif.pdbx_struct_assembly_gen;\n\n            // ensure data is in lists\n            _ensureArray( gen, \"assembly_id\" );\n\n            var getMatrixDict = function( expr ){\n\n                var matDict = {};\n\n                var l = expr.replace( /[\\(\\)']/g, \"\" ).split( \",\" );\n\n                l.forEach( function( e ){\n\n                    if( e.indexOf( \"-\" ) !== -1 ){\n\n                        var es = e.split( \"-\" );\n\n                        var j = parseInt( es[ 0 ] );\n                        var m = parseInt( es[ 1 ] );\n\n                        for( ; j <= m; ++j ){\n\n                            matDict[ j ] = operDict[ j ];\n\n                        }\n\n                    }else{\n\n                        matDict[ e ] = operDict[ e ];\n\n                    }\n\n                } );\n\n                return matDict;\n\n            }\n\n            gen.assembly_id.forEach( function( id, i ){\n\n                var md = {};\n                var oe = gen.oper_expression[ i ];\n\n                if( oe.indexOf( \")(\" ) !== -1 ){\n\n                    oe = oe.split( \")(\" );\n\n                    var md1 = getMatrixDict( oe[ 0 ] );\n                    var md2 = getMatrixDict( oe[ 1 ] );\n\n                    Object.keys( md1 ).forEach( function( k1 ){\n\n                        Object.keys( md2 ).forEach( function( k2 ){\n\n                            var mat = new THREE.Matrix4();\n\n                            mat.multiplyMatrices( md1[ k1 ], md2[ k2 ] );\n                            md[ k1 + \"x\" + k2 ] = mat;\n\n                        } );\n\n                    } );\n\n                }else{\n\n                    md = getMatrixDict( oe );\n\n                }\n\n                var matrixList = [];\n                for( var k in md ){\n                    matrixList.push( md[ k ] );\n                }\n\n                var name = id;\n                if( /^(0|[1-9][0-9]*)$/.test( name ) ) name = \"BU\" + name;\n\n                var chainList = gen.asym_id_list[ i ].split( \",\" );\n                for( var j = 0, jl = chainList.length; j < jl; ++j ){\n                    chainList[ j ] = asymIdDict[ chainList[ j ] ];\n                }\n\n                if( biomolDict[ name ] === undefined ){\n                    biomolDict[ name ] = new NGL.Assembly( name );\n                }\n                biomolDict[ name ].addPart( matrixList, chainList );\n\n            } );\n\n        }\n\n        // non-crystallographic symmetry operations\n        if( cif.struct_ncs_oper ){\n\n            var op = cif.struct_ncs_oper;\n\n            // ensure data is in lists\n            _ensureArray( op, \"id\" );\n\n            var ncsName = \"NCS\";\n            biomolDict[ ncsName ] = new NGL.Assembly( ncsName );\n            var ncsPart = biomolDict[ ncsName ].addPart();\n\n            op.id.forEach( function( id, i ){\n\n                var m = new THREE.Matrix4();\n                var elms = m.elements;\n\n                elms[  0 ] = parseFloat( op[ \"matrix[1][1]\" ][ i ] );\n                elms[  1 ] = parseFloat( op[ \"matrix[1][2]\" ][ i ] );\n                elms[  2 ] = parseFloat( op[ \"matrix[1][3]\" ][ i ] );\n\n                elms[  4 ] = parseFloat( op[ \"matrix[2][1]\" ][ i ] );\n                elms[  5 ] = parseFloat( op[ \"matrix[2][2]\" ][ i ] );\n                elms[  6 ] = parseFloat( op[ \"matrix[2][3]\" ][ i ] );\n\n                elms[  8 ] = parseFloat( op[ \"matrix[3][1]\" ][ i ] );\n                elms[  9 ] = parseFloat( op[ \"matrix[3][2]\" ][ i ] );\n                elms[ 10 ] = parseFloat( op[ \"matrix[3][3]\" ][ i ] );\n\n                elms[  3 ] = parseFloat( op[ \"vector[1]\" ][ i ] );\n                elms[  7 ] = parseFloat( op[ \"vector[2]\" ][ i ] );\n                elms[ 11 ] = parseFloat( op[ \"vector[3]\" ][ i ] );\n\n                m.transpose();\n\n                ncsPart.matrixList.push( m );\n\n            } );\n\n        }\n\n        // cell & symmetry\n        var unitcellDict = {};\n\n        if( cif.cell ){\n\n            var cell = cif.cell;\n\n            var a = parseFloat( cell.length_a );\n            var b = parseFloat( cell.length_b );\n            var c = parseFloat( cell.length_c );\n\n            var box = new Float32Array( 9 );\n            box[ 0 ] = a;\n            box[ 4 ] = b;\n            box[ 8 ] = c;\n            structure.boxes.push( box );\n\n            unitcellDict.a = a;\n            unitcellDict.b = b;\n            unitcellDict.c = c;\n            unitcellDict.alpha = parseFloat( cell.angle_alpha );\n            unitcellDict.beta = parseFloat( cell.angle_beta );\n            unitcellDict.gamma = parseFloat( cell.angle_gamma );\n\n        }\n\n        if( cif.symmetry ){\n\n            var symmetry = cif.symmetry;\n\n            var sGroup = symmetry[ \"space_group_name_H-M\" ];\n            if( sGroup[0] === sGroup[ sGroup.length-1 ] &&\n                ( sGroup[0] === \"'\" || sGroup[0] === '\"' )\n            ){\n                sGroup = sGroup.substring( 1, sGroup.length-1 );\n            }\n\n            unitcellDict.spacegroup = sGroup;\n\n        }\n\n        // origx\n        var origx = new THREE.Matrix4();\n\n        if( cif.database_PDB_matrix ){\n\n            var mat = cif.database_PDB_matrix;\n            var elms = origx.elements;\n\n            elms[  0 ] = parseFloat( mat[ \"origx[1][1]\" ] );\n            elms[  1 ] = parseFloat( mat[ \"origx[1][2]\" ] );\n            elms[  2 ] = parseFloat( mat[ \"origx[1][3]\" ] );\n\n            elms[  4 ] = parseFloat( mat[ \"origx[2][1]\" ] );\n            elms[  5 ] = parseFloat( mat[ \"origx[2][2]\" ] );\n            elms[  6 ] = parseFloat( mat[ \"origx[2][3]\" ] );\n\n            elms[  8 ] = parseFloat( mat[ \"origx[3][1]\" ] );\n            elms[  9 ] = parseFloat( mat[ \"origx[3][2]\" ] );\n            elms[ 10 ] = parseFloat( mat[ \"origx[3][3]\" ] );\n\n            elms[  3 ] = parseFloat( mat[ \"origx_vector[1]\" ] );\n            elms[  7 ] = parseFloat( mat[ \"origx_vector[2]\" ] );\n            elms[ 11 ] = parseFloat( mat[ \"origx_vector[3]\" ] );\n\n            origx.transpose();\n\n            unitcellDict.origx = origx;\n\n        }\n\n        // scale\n        var scale = new THREE.Matrix4();\n\n        if( cif.atom_sites ){\n\n            var mat = cif.atom_sites;\n            var elms = scale.elements;\n\n            elms[  0 ] = parseFloat( mat[ \"fract_transf_matrix[1][1]\" ] );\n            elms[  1 ] = parseFloat( mat[ \"fract_transf_matrix[1][2]\" ] );\n            elms[  2 ] = parseFloat( mat[ \"fract_transf_matrix[1][3]\" ] );\n\n            elms[  4 ] = parseFloat( mat[ \"fract_transf_matrix[2][1]\" ] );\n            elms[  5 ] = parseFloat( mat[ \"fract_transf_matrix[2][2]\" ] );\n            elms[  6 ] = parseFloat( mat[ \"fract_transf_matrix[2][3]\" ] );\n\n            elms[  8 ] = parseFloat( mat[ \"fract_transf_matrix[3][1]\" ] );\n            elms[  9 ] = parseFloat( mat[ \"fract_transf_matrix[3][2]\" ] );\n            elms[ 10 ] = parseFloat( mat[ \"fract_transf_matrix[3][3]\" ] );\n\n            elms[  3 ] = parseFloat( mat[ \"fract_transf_vector[1]\" ] );\n            elms[  7 ] = parseFloat( mat[ \"fract_transf_vector[2]\" ] );\n            elms[ 11 ] = parseFloat( mat[ \"fract_transf_vector[3]\" ] );\n\n            scale.transpose();\n\n            unitcellDict.scale = scale;\n\n        }\n\n        if( unitcellDict.a !== undefined ){\n            s.unitcell = new NGL.Unitcell(\n                unitcellDict.a, unitcellDict.b, unitcellDict.c,\n                unitcellDict.alpha, unitcellDict.beta, unitcellDict.gamma,\n                unitcellDict.spacegroup, unitcellDict.scale\n            );\n        }else{\n            s.unitcell = undefined;\n        }\n\n        // add connections\n        var sc = cif.struct_conn;\n\n        if( sc ){\n\n            // ensure data is in lists\n            _ensureArray( sc, \"id\" );\n\n            var reDoubleQuote = /\"/g;\n            var ap1 = s.getAtomProxy();\n            var ap2 = s.getAtomProxy();\n            var atomIndicesCache = {};\n\n            for( var i = 0, il = sc.id.length; i < il; ++i ){\n\n                // ignore:\n                // hydrog - hydrogen bond\n                // mismat - mismatched base pairs\n                // saltbr - ionic interaction\n\n                var conn_type_id = sc.conn_type_id[ i ]\n                if( conn_type_id === \"hydrog\" ||\n                    conn_type_id === \"mismat\" ||\n                    conn_type_id === \"saltbr\" ) continue;\n\n                // ignore bonds between symmetry mates\n                if( sc.ptnr1_symmetry[ i ] !== \"1_555\" ||\n                    sc.ptnr2_symmetry[ i ] !== \"1_555\" ) continue;\n\n                // process:\n                // covale - covalent bond\n                // covale_base -\n                //      covalent modification of a nucleotide base\n                // covale_phosphate -\n                //      covalent modification of a nucleotide phosphate\n                // covale_sugar -\n                //      covalent modification of a nucleotide sugar\n                // disulf - disulfide bridge\n                // metalc - metal coordination\n                // modres - covalent residue modification\n\n                var inscode1 = sc.pdbx_ptnr1_PDB_ins_code[ i ];\n                var altloc1 = sc.pdbx_ptnr1_label_alt_id[ i ];\n                var sele1 = (\n                    sc.ptnr1_auth_seq_id[ i ] +\n                    ( inscode1 === \"?\" ? \"\" : ( \"^\" + inscode1 ) ) +\n                    \":\" + asymIdDict[ sc.ptnr1_label_asym_id[ i ] ] +\n                    \".\" + sc.ptnr1_label_atom_id[ i ].replace( reDoubleQuote, '' ) +\n                    ( altloc1 === \"?\" ? \"\" : ( \"%\" + altloc1 ) )\n                );\n                var atomIndices1 = atomIndicesCache[ sele1 ];\n                if( !atomIndices1 ){\n                    var selection1 = new NGL.Selection( sele1 );\n                    if( selection1.selection[ \"error\" ] ){\n                        NGL.warn( \"invalid selection for connection\", sele1 );\n                        continue;\n                    }\n                    atomIndices1 = s.getAtomIndices( selection1 );\n                    atomIndicesCache[ sele1 ] = atomIndices1;\n                }\n\n                var inscode2 = sc.pdbx_ptnr2_PDB_ins_code[ i ];\n                var altloc2 = sc.pdbx_ptnr2_label_alt_id[ i ];\n                var sele2 = (\n                    sc.ptnr2_auth_seq_id[ i ] +\n                    ( inscode2 === \"?\" ? \"\" : ( \"^\" + inscode2 ) ) +\n                    \":\" + asymIdDict[ sc.ptnr2_label_asym_id[ i ] ] +\n                    \".\" + sc.ptnr2_label_atom_id[ i ].replace( reDoubleQuote, '' ) +\n                    ( altloc2 === \"?\" ? \"\" : ( \"%\" + altloc2 ) )\n                );\n                var atomIndices2 = atomIndicesCache[ sele2 ];\n                if( !atomIndices2 ){\n                    var selection2 = new NGL.Selection( sele2 );\n                    if( selection2.selection[ \"error\" ] ){\n                        NGL.warn( \"invalid selection for connection\", sele2 );\n                        continue;\n                    }\n                    atomIndices2 = s.getAtomIndices( selection2 );\n                    atomIndicesCache[ sele2 ] = atomIndices2;\n                }\n\n                // cases with more than one atom per selection\n                // - #altloc1 to #altloc2\n                // - #model to #model\n                // - #altloc1 * #model to #altloc2 * #model\n\n                var k = atomIndices1.length;\n                var l = atomIndices2.length;\n\n                if( k > l ){\n                    var tmpA = k;\n                    k = l;\n                    l = tmpA;\n                    var tmpB = atomIndices1;\n                    atomIndices1 = atomIndices2;\n                    atomIndices2 = tmpB;\n                }\n\n                // console.log( k, l );\n\n                if( k === 0 || l === 0 ){\n                    NGL.warn( \"no atoms found for\", sele1, sele2 );\n                    continue;\n                }\n\n                for( var j = 0; j < l; ++j ){\n\n                    ap1.index = atomIndices1[ j % k ];\n                    ap2.index = atomIndices2[ j ];\n\n                    if( ap1 && ap2 ){\n                        s.bondStore.addBond( ap1, ap2 );\n                    }else{\n                        NGL.log( \"atoms for connection not found\" );\n                    }\n\n                }\n\n            }\n\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.CifParser._postProcess\" );\n\n    }\n\n} );\n\n\nNGL.SdfParser = function( streamer, params ){\n\n    NGL.StructureParser.call( this, streamer, params );\n\n};\n\nNGL.SdfParser.prototype = NGL.createObject(\n\n    NGL.StructureParser.prototype, {\n\n    constructor: NGL.SdfParser,\n    type: \"sdf\",\n\n    _parse: function( callback ){\n\n        // https://en.wikipedia.org/wiki/Chemical_table_file#SDF\n        // http://download.accelrys.com/freeware/ctfile-formats/ctfile-formats.zip\n\n        if( NGL.debug ) NGL.time( \"NGL.SdfParser._parse \" + this.name );\n\n        var s = this.structure;\n        var sb = this.structureBuilder;\n\n        var firstModelOnly = this.firstModelOnly;\n        var asTrajectory = this.asTrajectory;\n\n        var headerLines = this.streamer.peekLines( 2 );\n\n        s.id = headerLines[ 0 ].trim();\n        s.title = headerLines[ 1 ].trim();\n\n        var frames = s.frames;\n        var boxes = s.boxes;\n        var doFrames = false;\n        var currentFrame, currentCoord;\n\n        var atomMap = s.atomMap;\n        var atomStore = s.atomStore;\n        atomStore.resize( Math.round( this.streamer.data.length / 50 ) );\n\n        var ap1 = s.getAtomProxy();\n        var ap2 = s.getAtomProxy();\n\n        var idx = 0;\n        var lineNo = 0;\n        var modelIdx = 0;\n        var modelAtomIdxStart = 0;\n\n        var atomCount, bondCount, atomStart, atomEnd, bondStart, bondEnd;\n\n        function _parseChunkOfLines( _i, _n, lines ){\n\n            for( var i = _i; i < _n; ++i ){\n\n                var line = lines[ i ];\n\n                if( line.substr( 0, 4 ) === \"$$$$\" ){\n\n                    lineNo = -1;\n                    ++modelIdx;\n                    modelAtomIdxStart = atomStore.count;\n\n                }\n\n                if( lineNo === 3 ){\n\n                    atomCount = parseInt( line.substr( 0, 3 ) );\n                    bondCount = parseInt( line.substr( 3, 3 ) );\n\n                    atomStart = 4;\n                    atomEnd = atomStart + atomCount;\n                    bondStart = atomEnd;\n                    bondEnd = bondStart + bondCount;\n\n                    if( asTrajectory ){\n\n                        currentCoord = 0;\n                        currentFrame = new Float32Array( atomCount * 3 );\n                        frames.push( currentFrame );\n\n                        if( modelIdx > 0 ) doFrames = true;\n\n                    }\n\n                }\n\n                if( lineNo >= atomStart && lineNo < atomEnd ){\n\n                    if( firstModelOnly && modelIdx > 0 ) continue;\n\n                    var x = parseFloat( line.substr( 0, 10 ) );\n                    var y = parseFloat( line.substr( 10, 10 ) );\n                    var z = parseFloat( line.substr( 20, 10 ) );\n\n                    if( asTrajectory ){\n\n                        var j = currentCoord * 3;\n\n                        currentFrame[ j + 0 ] = x;\n                        currentFrame[ j + 1 ] = y;\n                        currentFrame[ j + 2 ] = z;\n\n                        currentCoord += 1;\n\n                        if( doFrames ) continue;\n\n                    }\n\n                    var element = line.substr( 31, 3 ).trim();\n                    var atomname = element + ( idx + 1 );\n\n                    atomStore.growIfFull();\n                    atomStore.atomTypeId[ idx ] = atomMap.add( atomname, element );\n\n                    atomStore.x[ idx ] = x;\n                    atomStore.y[ idx ] = y;\n                    atomStore.z[ idx ] = z;\n                    atomStore.serial[ idx ] = idx;\n\n                    sb.addAtom( modelIdx, \"\", \"HET\", 1, 1 );\n\n                    idx += 1;\n\n                }\n\n                if( lineNo >= bondStart && lineNo < bondEnd ){\n\n                    if( firstModelOnly && modelIdx > 0 ) continue;\n                    if( asTrajectory && modelIdx > 0 ) continue;\n\n                    ap1.index = parseInt( line.substr( 0, 3 ) ) - 1 + modelAtomIdxStart;\n                    ap2.index = parseInt( line.substr( 3, 3 ) ) - 1 + modelAtomIdxStart;\n                    var order = parseInt( line.substr( 6, 3 ) );\n\n                    s.bondStore.addBond( ap1, ap2, order );\n\n                }\n\n                ++lineNo;\n\n            };\n\n        };\n\n        this.streamer.eachChunkOfLines( function( lines, chunkNo, chunkCount ){\n            _parseChunkOfLines( 0, lines.length, lines );\n        } );\n\n        sb.finalize();\n\n        s._dontAutoBond = true;\n        s.unitcell = undefined;\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.SdfParser._parse \" + this.name );\n        callback();\n\n    }\n\n} );\n\n\nNGL.Mol2Parser = function( streamer, params ){\n\n    NGL.StructureParser.call( this, streamer, params );\n\n};\n\nNGL.Mol2Parser.prototype = NGL.createObject(\n\n    NGL.StructureParser.prototype, {\n\n    constructor: NGL.Mol2Parser,\n    type: \"mol2\",\n\n    _parse: function( callback ){\n\n        // http://www.tripos.com/data/support/mol2.pdf\n\n        if( NGL.debug ) NGL.time( \"NGL.Mol2Parser._parse \" + this.name );\n\n        var reWhitespace = /\\s+/;\n\n        var s = this.structure;\n        var sb = this.structureBuilder;\n\n        var firstModelOnly = this.firstModelOnly;\n        var asTrajectory = this.asTrajectory;\n\n        var frames = s.frames;\n        var boxes = s.boxes;\n        var doFrames = false;\n        var currentFrame, currentCoord;\n\n        var atomMap = s.atomMap;\n        var atomStore = s.atomStore;\n        atomStore.resize( Math.round( this.streamer.data.length / 60 ) );\n\n        var idx = 0;\n        var moleculeLineNo = 0;\n        var modelAtomIdxStart = 0;\n        var modelIdx = -1;\n        var numAtoms = 0;\n\n        var currentRecordType = 0;\n        var moleculeRecordType = 1;\n        var atomRecordType = 2;\n        var bondRecordType = 3;\n\n        var ap1 = s.getAtomProxy();\n        var ap2 = s.getAtomProxy();\n\n        var bondTypes = {\n            \"1\": 1,\n            \"2\": 2,\n            \"3\": 3,\n            \"am\": 1,  // amide\n            \"ar\": 1,  // aromatic\n            \"du\": 1,  // dummy\n            \"un\": 1,  // unknown\n            \"nc\": 0,  // not connected\n        };\n\n        function _parseChunkOfLines( _i, _n, lines ){\n\n            for( var i = _i; i < _n; ++i ){\n\n                var line = lines[ i ].trim();\n\n                if( line === \"\" || line[ 0 ] === \"#\" ) continue;\n\n                if( line[ 0 ] === \"@\" ){\n\n                    if( line === \"@<TRIPOS>MOLECULE\" ){\n\n                        currentRecordType = moleculeRecordType;\n                        moleculeLineNo = 0;\n\n                        ++modelIdx;\n\n                    }else if( line === \"@<TRIPOS>ATOM\" ){\n\n                        currentRecordType = atomRecordType;\n                        modelAtomIdxStart = atomStore.count;\n\n                        if( asTrajectory ){\n\n                            currentCoord = 0;\n                            currentFrame = new Float32Array( numAtoms * 3 );\n                            frames.push( currentFrame );\n\n                            if( modelIdx > 0 ) doFrames = true;\n\n                        }\n\n                    }else if( line === \"@<TRIPOS>BOND\" ){\n\n                        currentRecordType = bondRecordType;\n\n                    }else{\n\n                        currentRecordType = 0;\n\n                    }\n\n                }else if( currentRecordType === moleculeRecordType ){\n\n                    if( moleculeLineNo === 0 ){\n\n                        s.title = line;\n                        s.id = line;\n\n                    }else if( moleculeLineNo === 1 ){\n\n                        var ls = line.split( reWhitespace );\n                        numAtoms = parseInt( ls[ 0 ] );\n                        // num_atoms [num_bonds [num_subst [num_feat [num_sets]]]]\n\n                    }else if( moleculeLineNo === 2 ){\n\n                        var molType = line;\n                        // SMALL, BIOPOLYMER, PROTEIN, NUCLEIC_ACID, SACCHARIDE\n\n                    }else if( moleculeLineNo === 3 ){\n\n                        var chargeType = line;\n                        // NO_CHARGES, DEL_RE, GASTEIGER, GAST_HUCK, HUCKEL,\n                        // PULLMAN, GAUSS80_CHARGES, AMPAC_CHARGES,\n                        // MULLIKEN_CHARGES, DICT_ CHARGES, MMFF94_CHARGES,\n                        // USER_CHARGES\n\n                    }else if( moleculeLineNo === 4 ){\n\n                        var statusBits = line;\n\n                    }else if( moleculeLineNo === 5 ){\n\n                        var molComment = line;\n\n                    }\n\n                    ++moleculeLineNo;\n\n                }else if( currentRecordType === atomRecordType ){\n\n                    var ls = line.split( reWhitespace );\n\n                    if( firstModelOnly && modelIdx > 0 ) continue;\n\n                    var x = parseFloat( ls[ 2 ] );\n                    var y = parseFloat( ls[ 3 ] );\n                    var z = parseFloat( ls[ 4 ] );\n\n                    if( asTrajectory ){\n\n                        var j = currentCoord * 3;\n\n                        currentFrame[ j + 0 ] = x;\n                        currentFrame[ j + 1 ] = y;\n                        currentFrame[ j + 2 ] = z;\n\n                        currentCoord += 1;\n\n                        if( doFrames ) continue;\n\n                    }\n\n                    var serial = ls[ 0 ];\n                    var atomname = ls[ 1 ];\n                    var element = ls[ 5 ].split( \".\" )[ 0 ];\n                    var resno = ls[ 6 ] ? parseInt( ls[ 6 ] ) : 1;\n                    var resname = ls[ 7 ] ? ls[ 7 ] : \"\";\n                    var bfactor = ls[ 8 ] ? parseFloat( ls[ 8 ] ) : 0.0;\n\n                    atomStore.growIfFull();\n                    atomStore.atomTypeId[ idx ] = atomMap.add( atomname, element );\n\n                    atomStore.x[ idx ] = x;\n                    atomStore.y[ idx ] = y;\n                    atomStore.z[ idx ] = z;\n                    atomStore.serial[ idx ] = serial;\n                    atomStore.bfactor[ idx ] = bfactor;\n\n                    sb.addAtom( modelIdx, \"\", resname, resno, 1 );\n\n                    idx += 1;\n\n                }else if( currentRecordType === bondRecordType ){\n\n                    if( firstModelOnly && modelIdx > 0 ) continue;\n                    if( asTrajectory && modelIdx > 0 ) continue;\n\n                    var ls = line.split( reWhitespace );\n\n                    // ls[ 0 ] is bond id\n                    ap1.index = parseInt( ls[ 1 ] ) - 1 + modelAtomIdxStart;\n                    ap2.index = parseInt( ls[ 2 ] ) - 1 + modelAtomIdxStart;\n                    var order = bondTypes[ ls[ 3 ] ];\n\n                    s.bondStore.addBond( ap1, ap2, order );\n\n                }\n\n            };\n\n        };\n\n        this.streamer.eachChunkOfLines( function( lines, chunkNo, chunkCount ){\n            _parseChunkOfLines( 0, lines.length, lines );\n        } );\n\n        sb.finalize();\n\n        s._dontAutoBond = true;\n        s.unitcell = undefined;\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.Mol2Parser._parse \" + this.name );\n        callback();\n\n    }\n\n} );\n\n\nNGL.MmtfParser = function( streamer, params ){\n\n    NGL.StructureParser.call( this, streamer, params );\n\n    this.dontAutoBond = true;\n    this.autoBondBetween = false;\n    this.doAutoSS = false;\n\n};\n\nNGL.MmtfParser.prototype = NGL.createObject(\n\n    NGL.StructureParser.prototype, {\n\n    constructor: NGL.MmtfParser,\n    type: \"mmtf\",\n\n    _parse: function( callback ){\n\n        // https://github.com/rcsb/mmtf\n\n        if( NGL.debug ) NGL.time( \"NGL.MmtfParser._parse \" + this.name );\n\n        var s = this.structure;\n        var sd = decodeMmtf( decodeMsgpack( this.streamer.data ) );\n\n        var numBonds, numAtoms, numGroups, numChains, numModels;\n        var chainsPerModel;\n\n        if( this.firstModelOnly || this.asTrajectory ){\n\n            numModels = 1;\n            numChains = sd.chainsPerModel[ 0 ];\n\n            numGroups = 0;\n            for( var i = 0, il = numChains; i < il; ++i ){\n                numGroups += sd.groupsPerChain[ i ];\n            }\n\n            numAtoms = 0;\n            for( var i = 0, il = numGroups; i < il; ++i ){\n                var groupData = sd.groupList[ sd.groupTypeList[ i ] ];\n                numAtoms += groupData.atomNameList.length;\n            }\n\n            numBonds = sd.numBonds;\n\n            chainsPerModel = [ numChains ];\n\n        }else{\n\n            numBonds = sd.numBonds;\n            numAtoms = sd.numAtoms;\n            numGroups = sd.numGroups;\n            numChains = sd.numChains;\n            numModels = sd.numModels;\n\n            chainsPerModel = sd.chainsPerModel;\n\n        }\n\n        numBonds += numGroups;  // add numGroups to have space for polymer bonds\n\n        //\n\n        if( this.asTrajectory ){\n\n            for( var i = 0, il = sd.numModels; i < il; ++i ){\n\n                var frame = new Float32Array( numAtoms * 3 );\n                var frameAtomOffset = numAtoms * i;\n\n                for( var j = 0; j < numAtoms; ++j ){\n                    var j3 = j * 3;\n                    var offset = j + frameAtomOffset;\n                    frame[ j3     ] = sd.xCoordList[ offset ];\n                    frame[ j3 + 1 ] = sd.yCoordList[ offset ];\n                    frame[ j3 + 2 ] = sd.zCoordList[ offset ];\n                }\n\n                s.frames.push( frame );\n\n            }\n\n        }\n\n        // bondStore\n        var bAtomIndex1 = new Uint32Array( numBonds );\n        var bAtomIndex2 = new Uint32Array( numBonds );\n        var bBondOrder = new Uint8Array( numBonds );\n\n        var aGroupIndex = new Uint32Array( numAtoms );\n\n        var gChainIndex = new Uint32Array( numGroups );\n        var gAtomOffset = new Uint32Array( numGroups );\n        var gAtomCount = new Uint16Array( numGroups );\n\n        var cModelIndex = new Uint16Array( numChains );\n        var cGroupOffset = new Uint32Array( numChains );\n        var cGroupCount = new Uint32Array( numChains );\n\n        var mChainOffset = new Uint32Array( numModels );\n        var mChainCount = new Uint32Array( numModels );\n\n        // set-up model-chain relations\n        var chainOffset = 0;\n        for( var i = 0, il = numModels; i < il; ++i ){\n            var modelChainCount = chainsPerModel[ i ];\n            mChainOffset[ i ] = chainOffset;\n            mChainCount[ i ] = modelChainCount;\n            for( var j = 0; j < modelChainCount; ++j ){\n                cModelIndex[ j + chainOffset ] = i;\n            }\n            chainOffset += modelChainCount;\n        }\n\n        // set-up chain-residue relations\n        var groupsPerChain = sd.groupsPerChain;\n        var groupOffset = 0;\n        for( var i = 0, il = numChains; i < il; ++i ){\n            var chainGroupCount = groupsPerChain[ i ];\n            cGroupOffset[ i ] = groupOffset;\n            cGroupCount[ i ] = chainGroupCount;\n            for( var j = 0; j < chainGroupCount; ++j ){\n                gChainIndex[ j + groupOffset ] = i;\n            }\n            groupOffset += chainGroupCount;\n        }\n\n        //////\n        // get data from group map\n\n        var atomOffset = 0;\n        var bondOffset = 0;\n\n        for( var i = 0, il = numGroups; i < il; ++i ){\n\n            var groupData = sd.groupList[ sd.groupTypeList[ i ] ];\n            var groupAtomCount = groupData.atomNameList.length;\n\n            var bondAtomList = groupData.bondAtomList;\n            var bondOrderList = groupData.bondOrderList;\n\n            for( var j = 0, jl = bondOrderList.length; j < jl; ++j ){\n                bAtomIndex1[ bondOffset ] = atomOffset + bondAtomList[ j * 2 ];\n                bAtomIndex2[ bondOffset ] = atomOffset + bondAtomList[ j * 2 + 1 ];\n                bBondOrder[ bondOffset ] = bondOrderList[ j ];\n                bondOffset += 1;\n            }\n\n            //\n\n            gAtomOffset[ i ] = atomOffset;\n            gAtomCount[ i ] = groupAtomCount;\n\n            for( var j = 0; j < groupAtomCount; ++j ){\n                aGroupIndex[ atomOffset ] = i;\n                atomOffset += 1;\n            }\n\n        }\n\n        // extra bonds\n\n        var bondAtomList = sd.bondAtomList;\n        if( bondAtomList ){\n\n            if( sd.bondOrderList ){\n                bBondOrder.set( sd.bondOrderList, bondOffset );\n            }\n\n            for( var i = 0, il = bondAtomList.length; i < il; i += 2 ){\n                var atomIndex1 = bondAtomList[ i ];\n                var atomIndex2 = bondAtomList[ i + 1 ];\n                if( atomIndex1 < numAtoms && atomIndex2 < numAtoms ){\n                    bAtomIndex1[ bondOffset ] = atomIndex1;\n                    bAtomIndex2[ bondOffset ] = atomIndex2;\n                    bondOffset += 1;\n                }\n            }\n\n        }\n\n        //\n\n        s.bondStore.length = bBondOrder.length;\n        s.bondStore.count = bondOffset;\n        s.bondStore.atomIndex1 = bAtomIndex1;\n        s.bondStore.atomIndex2 = bAtomIndex2;\n        s.bondStore.bondOrder = bBondOrder;\n\n        s.atomStore.length = numAtoms;\n        s.atomStore.count = numAtoms;\n        s.atomStore.residueIndex = aGroupIndex;\n        s.atomStore.atomTypeId = new Uint16Array( numAtoms );\n        s.atomStore.x = sd.xCoordList.subarray( 0, numAtoms );\n        s.atomStore.y = sd.yCoordList.subarray( 0, numAtoms );\n        s.atomStore.z = sd.zCoordList.subarray( 0, numAtoms );\n        s.atomStore.serial = sd.atomIdList.subarray( 0, numAtoms );\n        s.atomStore.bfactor = sd.bFactorList.subarray( 0, numAtoms );\n        s.atomStore.altloc = sd.altLocList.subarray( 0, numAtoms );\n        s.atomStore.occupancy = sd.occupancyList.subarray( 0, numAtoms );\n\n        s.residueStore.length = numGroups;\n        s.residueStore.count = numGroups;\n        s.residueStore.chainIndex = gChainIndex;\n        s.residueStore.residueTypeId = sd.groupTypeList;\n        s.residueStore.atomOffset = gAtomOffset;\n        s.residueStore.atomCount = gAtomCount;\n        s.residueStore.resno = sd.groupIdList.subarray( 0, numGroups );\n        s.residueStore.sstruc = sd.secStructList.subarray( 0, numGroups );\n        s.residueStore.inscode = sd.insCodeList.subarray( 0, numGroups );\n\n        s.chainStore.length = numChains;\n        s.chainStore.count = numChains;\n        s.chainStore.modelIndex = cModelIndex;\n        s.chainStore.residueOffset = cGroupOffset;\n        s.chainStore.residueCount = cGroupCount;\n        s.chainStore.chainname = sd.chainNameList.subarray( 0, numChains * 4 );\n\n        s.modelStore.length = numModels;\n        s.modelStore.count = numModels;\n        s.modelStore.chainOffset = mChainOffset;\n        s.modelStore.chainCount = mChainCount;\n\n        var sstrucMap = {\n            \"0\": \"i\".charCodeAt( 0 ),  // pi helix\n            \"1\": \"s\".charCodeAt( 0 ),  // bend\n            \"2\": \"h\".charCodeAt( 0 ),  // alpha helix\n            \"3\": \"e\".charCodeAt( 0 ),  // extended\n            \"4\": \"g\".charCodeAt( 0 ),  // 3-10 helix\n            \"5\": \"b\".charCodeAt( 0 ),  // bridge\n            \"6\": \"t\".charCodeAt( 0 ),  // turn\n            \"7\": \"l\".charCodeAt( 0 ),  // coil\n            \"-1\": \"\".charCodeAt( 0 )   // NA\n        };\n\n        var hetCompList = [\n            \"non-polymer\", \"other\", \"saccharide\", \"l-saccharide\", \"d-saccharide\",\n            \"l-saccharide 1,4 and 1,4 linking\", \"l-saccharide 1,4 and 1,6 linking\",\n            \"d-saccharide 1,4 and 1,4 linking\", \"d-saccharide 1,4 and 1,6 linking\"\n        ];\n\n        var groupTypeDict = {};\n        for( var i = 0, il = sd.groupList.length; i < il; ++i ){\n            var groupType = sd.groupList[ i ];\n            var atomTypeIdList = [];\n            for( var j = 0, jl = groupType.atomNameList.length; j < jl; ++j ){\n                var element = groupType.elementList[ j ].toUpperCase();\n                var atomname = groupType.atomNameList[ j ];\n                atomTypeIdList.push( s.atomMap.add( atomname, element ) );\n            }\n            var hetFlag = hetCompList.indexOf( groupType.chemCompType.toLowerCase() ) !== -1;\n            groupTypeDict[ i ] = s.residueMap.add( groupType.groupName, atomTypeIdList, hetFlag );\n        }\n\n        for( var i = 0, il = numGroups; i < il; ++i ){\n            s.residueStore.residueTypeId[ i ] = groupTypeDict[ s.residueStore.residueTypeId[ i ] ];\n        }\n\n        for( var i = 0, il = s.atomStore.count; i < il; ++i ){\n            var residueIndex = s.atomStore.residueIndex[ i ];\n            var residueType = s.residueMap.list[ s.residueStore.residueTypeId[ residueIndex ] ];\n            var resAtomOffset = s.residueStore.atomOffset[ residueIndex ];\n            s.atomStore.atomTypeId[ i ] = residueType.atomTypeIdList[ i - resAtomOffset ];\n        }\n\n        if( sd.secStructList ){\n            var secStructLength = sd.secStructList.length;\n            for( var i = 0, il = s.residueStore.count; i < il; ++i ){\n                // with ( i % secStructLength ) secStruct entries are reused\n                var sstruc = sstrucMap[ s.residueStore.sstruc[ i % secStructLength ] ];\n                if( sstruc !== undefined ) s.residueStore.sstruc[ i ] = sstruc;\n            }\n        }\n\n        //\n\n        if( sd.bioAssemblyList ){\n            sd.bioAssemblyList.forEach( function( _assembly, k ){\n                var id = k + 1;\n                var assembly = new NGL.Assembly( id );\n                s.biomolDict[ \"BU\" + id ] = assembly;\n                var chainToPart = {};\n                _assembly.transformList.forEach( function( _transform ){\n                    var matrix = new THREE.Matrix4().fromArray( _transform.matrix ).transpose();\n                    var chainList = _transform.chainIndexList.map( function( chainIndex ){\n                        var chainname = \"\";\n                        for( var k = 0; k < 4; ++k ){\n                            var code = sd.chainNameList[ chainIndex * 4 + k ];\n                            if( code ){\n                                chainname += String.fromCharCode( code );\n                            }else{\n                                break;\n                            }\n                        }\n                        return chainname;\n                    } );\n                    var part = chainToPart[ chainList ];\n                    if( part ){\n                        part.matrixList.push( matrix );\n                    }else{\n                        chainToPart[ chainList ] = assembly.addPart( [ matrix ], chainList );\n                    }\n                } );\n            } );\n        }\n\n        if( sd.unitCell && Array.isArray( sd.unitCell ) && sd.unitCell[ 0 ] ){\n            s.unitcell = new NGL.Unitcell(\n                sd.unitCell[ 0 ], sd.unitCell[ 1 ], sd.unitCell[ 2 ],\n                sd.unitCell[ 3 ], sd.unitCell[ 4 ], sd.unitCell[ 5 ],\n                sd.spaceGroup\n            );\n        }else{\n            s.unitcell = undefined;\n        }\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.MmtfParser._parse \" + this.name );\n\n        // calculate backbone bonds\n        NGL.calculateBondsBetween( s, true );\n\n        // calculate rung bonds\n        NGL.calculateBondsWithin( s, true );\n\n        callback();\n\n    }\n\n} );\n\n\n//////////////////////\n// Trajectory parser\n\nNGL.TrajectoryParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.Parser.call( this, streamer, p );\n\n    this.frames = new NGL.Frames( this.name, this.path );\n\n};\n\nNGL.TrajectoryParser.prototype = NGL.createObject(\n\n    NGL.Parser.prototype, {\n\n    constructor: NGL.TrajectoryParser,\n    type: \"trajectory\",\n\n    __objName: \"frames\"\n\n} );\n\n\nNGL.DcdParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.TrajectoryParser.call( this, streamer, p );\n\n};\n\nNGL.DcdParser.prototype = NGL.createObject(\n\n    NGL.TrajectoryParser.prototype, {\n\n    constructor: NGL.DcdParser,\n    type: \"dcd\",\n\n    _parse: function( callback ){\n\n        // http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/dcdplugin.html\n\n        // The DCD format is structured as follows\n        //   (FORTRAN UNFORMATTED, with Fortran data type descriptions):\n        // HDR     NSET    ISTRT   NSAVC   5-ZEROS NATOM-NFREAT    DELTA   9-ZEROS\n        // `CORD'  #files  step 1  step    zeroes  (zero)          timestep  (zeroes)\n        //                         interval\n        // C*4     INT     INT     INT     5INT    INT             DOUBLE  9INT\n        // ==========================================================================\n        // NTITLE          TITLE\n        // INT (=2)        C*MAXTITL\n        //                 (=32)\n        // ==========================================================================\n        // NATOM\n        // #atoms\n        // INT\n        // ==========================================================================\n        // X(I), I=1,NATOM         (DOUBLE)\n        // Y(I), I=1,NATOM\n        // Z(I), I=1,NATOM\n        // ==========================================================================\n\n        if( NGL.debug ) NGL.time( \"NGL.DcdParser._parse \" + this.name );\n\n        var bin = this.streamer.data;\n        if( bin instanceof Uint8Array ){\n            bin = bin.buffer;\n        }\n        var dv = new DataView( bin );\n\n        var f = this.frames;\n        var coordinates = f.coordinates;\n        var boxes = f.boxes;\n        var header = {};\n        var nextPos = 0;\n\n        // header block\n\n        var intView = new Int32Array( bin, 0, 23 );\n        var ef = intView[ 0 ] !== dv.getInt32( 0 );  // endianess flag\n        // swap byte order when big endian (84 indicates little endian)\n        if( intView[ 0 ] !== 84 ){\n            var n = bin.byteLength;\n            for( var i = 0; i < n; i+=4 ){\n                dv.setFloat32( i, dv.getFloat32( i ), true );\n            }\n        }\n        if( intView[ 0 ] !== 84 ){\n            NGL.error( \"dcd bad format, header block start\" );\n        }\n        // format indicator, should read 'CORD'\n        var formatString = String.fromCharCode(\n            dv.getUint8( 4 ), dv.getUint8( 5 ),\n            dv.getUint8( 6 ), dv.getUint8( 7 )\n        );\n        if( formatString !== \"CORD\" ){\n            NGL.error( \"dcd bad format, format string\" );\n        }\n        var isCharmm = false;\n        var extraBlock = false;\n        var fourDims = false;\n        // version field in charmm, unused in X-PLOR\n        if( intView[ 22 ] !== 0 ){\n            isCharmm = true;\n            if( intView[ 12 ] !== 0 ) extraBlock = true;\n            if( intView[ 13 ] === 1 ) fourDims = true;\n        }\n        header.NSET = intView[ 2 ];\n        header.ISTART = intView[ 3 ];\n        header.NSAVC = intView[ 4 ];\n        header.NAMNF = intView[ 10 ];\n        if( isCharmm ){\n            header.DELTA = dv.getFloat32( 44, ef );\n        }else{\n            header.DELTA = dv.getFloat64( 44, ef );\n        }\n        if( intView[ 22 ] !== 84 ){\n            NGL.error( \"dcd bad format, header block end\" );\n        }\n        nextPos = nextPos + 21 * 4 + 8;\n\n        // title block\n\n        var titleLength = dv.getInt32( nextPos, ef );\n        var titlePos = nextPos + 1;\n        if( ( titleLength - 4 ) % 80 !== 0 ){\n            NGL.error( \"dcd bad format, title block start\" );\n        }\n        header.TITLE = NGL.Uint8ToString(\n            new Uint8Array( bin, titlePos, titleLength )\n        );\n        if( dv.getInt32( titlePos + titleLength + 4 - 1, ef ) !== titleLength ){\n            NGL.error( \"dcd bad format, title block end\" );\n        }\n        nextPos = nextPos + titleLength + 8;\n\n        // natom block\n\n        if( dv.getInt32( nextPos, ef ) !== 4 ){\n            NGL.error( \"dcd bad format, natom block start\" );\n        }\n        header.NATOM = dv.getInt32( nextPos + 4, ef );\n        if( dv.getInt32( nextPos + 8, ef ) !== 4 ){\n            NGL.error( \"dcd bad format, natom block end\" );\n        }\n        nextPos = nextPos + 4 + 8;\n\n        // fixed atoms block\n\n        if( header.NAMNF > 0 ){\n            // TODO read coordinates and indices of fixed atoms\n            NGL.error( \"dcd format with fixed atoms unsupported, aborting\" );\n            callback();\n            return;\n        }\n\n        // frames\n\n        var natom = header.NATOM;\n        var natom4 = natom * 4;\n\n        for( var i = 0, n = header.NSET; i < n; ++i ){\n\n            if( extraBlock ){\n                nextPos += 4;  // block start\n                // unitcell: A, alpha, B, beta, gamma, C (doubles)\n                var box = new Float32Array( 9 );\n                box[ 0 ] = dv.getFloat64( nextPos        , ef );\n                box[ 4 ] = dv.getFloat64( nextPos + 2 * 8, ef );\n                box[ 8 ] = dv.getFloat64( nextPos + 5 * 8, ef );\n                boxes.push( box );\n                nextPos += 48;\n                nextPos += 4;  // block end\n            }\n\n            // xyz coordinates\n            var coord = new Float32Array( natom * 3 );\n            for( var j = 0; j < 3; ++j ){\n                if( dv.getInt32( nextPos, ef ) !== natom4 ){\n                    NGL.error( \"dcd bad format, coord block start\", i, j );\n                }\n                nextPos += 4;  // block start\n                var c = new Float32Array( bin, nextPos, natom );\n                for( var k = 0; k < natom; ++k ){\n                    coord[ 3 * k + j ] = c[ k ];\n                }\n                nextPos += natom4;\n                if( dv.getInt32( nextPos, ef ) !== natom4 ){\n                    NGL.error( \"dcd bad format, coord block end\", i, j );\n                }\n                nextPos += 4;  // block end\n            }\n            coordinates.push( coord );\n\n            if( fourDims ){\n                var bytes = dv.getInt32( nextPos, ef );\n                nextPos += 4 + bytes + 4;  // block start + skip + block end\n            }\n\n        }\n\n        // console.log( header );\n        // console.log( header.TITLE );\n        // console.log( \"isCharmm\", isCharmm, \"extraBlock\", extraBlock, \"fourDims\", fourDims );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.DcdParser._parse \" + this.name );\n        callback();\n\n    },\n\n} );\n\n\n//////////////////\n// Volume parser\n\nNGL.VolumeParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.Parser.call( this, streamer, p );\n\n    this.volume = new NGL.Volume( this.name, this.path );\n\n};\n\nNGL.VolumeParser.prototype = NGL.createObject(\n\n    NGL.Parser.prototype, {\n\n    constructor: NGL.VolumeParser,\n    type: \"volume\",\n\n    __objName: \"volume\",\n\n    _afterParse: function(){\n\n        this.volume.setMatrix( this.getMatrix() );\n\n    },\n\n    getMatrix: function(){\n\n        return new THREE.Matrix4();\n\n    }\n\n} );\n\n\nNGL.MrcParser = function( streamer, params ){\n\n    NGL.VolumeParser.call( this, streamer, params );\n\n};\n\nNGL.MrcParser.prototype = NGL.createObject(\n\n    NGL.VolumeParser.prototype, {\n\n    constructor: NGL.MrcParser,\n    type: \"mrc\",\n\n    _parse: function( callback ){\n\n        // MRC\n        // http://ami.scripps.edu/software/mrctools/mrc_specification.php\n        // http://www2.mrc-lmb.cam.ac.uk/research/locally-developed-software/image-processing-software/#image\n        // http://bio3d.colorado.edu/imod/doc/mrc_format.txt\n\n        // CCP4 (MAP)\n        // http://www.ccp4.ac.uk/html/maplib.html\n\n        // MRC format does not use the skew transformation header records (words 25-37)\n        // CCP4 format does not use the ORIGIN header records (words 50-52)\n\n        if( NGL.debug ) NGL.time( \"NGL.MrcParser._parse \" + this.name );\n\n        var bin = this.streamer.data;\n\n        if( bin instanceof Uint8Array ){\n            bin = bin.buffer;\n        }\n\n        var v = this.volume;\n        var header = {};\n\n        var intView = new Int32Array( bin, 0, 56 );\n        var floatView = new Float32Array( bin, 0, 56 );\n\n        var dv = new DataView( bin );\n\n        // 53  MAP         Character string 'MAP ' to identify file type\n        header.MAP = String.fromCharCode(\n            dv.getUint8( 52 * 4 ), dv.getUint8( 52 * 4 + 1 ),\n            dv.getUint8( 52 * 4 + 2 ), dv.getUint8( 52 * 4 + 3 )\n        );\n\n        // 54  MACHST      Machine stamp indicating machine type which wrote file\n        //                 17 and 17 for big-endian or 68 and 65 for little-endian\n        header.MACHST = [ dv.getUint8( 53 * 4 ), dv.getUint8( 53 * 4 + 1 ) ];\n\n        // swap byte order when big endian\n        if( header.MACHST[ 0 ] === 17 && header.MACHST[ 1 ] === 17 ){\n            var n = bin.byteLength;\n            for( var i = 0; i < n; i+=4 ){\n                dv.setFloat32( i, dv.getFloat32( i ), true );\n            }\n        }\n\n        header.NX = intView[ 0 ];  // NC - columns (fastest changing)\n        header.NY = intView[ 1 ];  // NR - rows\n        header.NZ = intView[ 2 ];  // NS - sections (slowest changing)\n\n        // mode\n        //  0 image : signed 8-bit bytes range -128 to 127\n        //  1 image : 16-bit halfwords\n        //  2 image : 32-bit reals\n        //  3 transform : complex 16-bit integers\n        //  4 transform : complex 32-bit reals\n        //  6 image : unsigned 16-bit range 0 to 65535\n        // 16 image: unsigned char * 3 (for rgb data, non-standard)\n        //\n        // Note: Mode 2 is the normal mode used in the CCP4 programs.\n        //       Other modes than 2 and 0 may NOT WORK\n        header.MODE = intView[ 3 ];\n\n        // start\n        header.NXSTART = intView[ 4 ];  // NCSTART - first column\n        header.NYSTART = intView[ 5 ];  // NRSTART - first row\n        header.NZSTART = intView[ 6 ];  // NSSTART - first section\n\n        // intervals\n        header.MX = intView[ 7 ];  // intervals along x\n        header.MY = intView[ 8 ];  // intervals along y\n        header.MZ = intView[ 9 ];  // intervals along z\n\n        // cell length (Angstroms in CCP4)\n        header.xlen = floatView[ 10 ];\n        header.ylen = floatView[ 11 ];\n        header.zlen = floatView[ 12 ];\n\n        // cell angle (Degrees)\n        header.alpha = floatView[ 13 ];\n        header.beta  = floatView[ 14 ];\n        header.gamma = floatView[ 15 ];\n\n        // axis correspondence (1,2,3 for X,Y,Z)\n        header.MAPC = intView[ 16 ];  // column\n        header.MAPR = intView[ 17 ];  // row\n        header.MAPS = intView[ 18 ];  // section\n\n        // density statistics\n        header.DMIN  = floatView[ 19 ];\n        header.DMAX  = floatView[ 20 ];\n        header.DMEAN = floatView[ 21 ];\n\n        // space group number 0 or 1 (default=0)\n        header.ISPG = intView[ 22 ];\n\n        // number of bytes used for symmetry data (0 or 80)\n        header.NSYMBT = intView[ 23 ];\n\n        // Flag for skew transformation, =0 none, =1 if foll\n        header.LSKFLG = intView[ 24 ];\n\n        // 26-34  SKWMAT  Skew matrix S (in order S11, S12, S13, S21 etc) if\n        //                LSKFLG .ne. 0.\n        // 35-37  SKWTRN  Skew translation t if LSKFLG != 0.\n        //                Skew transformation is from standard orthogonal\n        //                coordinate frame (as used for atoms) to orthogonal\n        //                map frame, as Xo(map) = S * (Xo(atoms) - t)\n\n        // 38      future use       (some of these are used by the MSUBSX routines\n        //  .          \"              in MAPBRICK, MAPCONT and FRODO)\n        //  .          \"   (all set to zero by default)\n        //  .          \"\n        // 52          \"\n\n        // 50-52 origin in X,Y,Z used for transforms\n        header.originX = floatView[ 49 ];\n        header.originY = floatView[ 50 ];\n        header.originZ = floatView[ 51 ];\n\n        // 53  MAP         Character string 'MAP ' to identify file type\n        // => see top of this parser\n\n        // 54  MACHST      Machine stamp indicating machine type which wrote file\n        // => see top of this parser\n\n        // Rms deviation of map from mean density\n        header.ARMS = floatView[ 54 ];\n\n        // 56      NLABL           Number of labels being used\n        // 57-256  LABEL(20,10)    10  80 character text labels (ie. A4 format)\n\n        v.header = header;\n\n        // NGL.log( header )\n\n        // FIXME depends on mode\n        var data = new Float32Array(\n            bin, 256 * 4 + header.NSYMBT,\n            header.NX * header.NY * header.NZ\n        );\n\n        v.setData( data, header.NX, header.NY, header.NZ );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.MrcParser._parse \" + this.name );\n        callback();\n\n    },\n\n    getMatrix: function(){\n\n        var h = this.volume.header;\n\n        var basisX = [\n            h.xlen,\n            0,\n            0\n        ];\n\n        var basisY = [\n            h.ylen * Math.cos( Math.PI / 180.0 * h.gamma ),\n            h.ylen * Math.sin( Math.PI / 180.0 * h.gamma ),\n            0\n        ];\n\n        var basisZ = [\n            h.zlen * Math.cos( Math.PI / 180.0 * h.beta ),\n            h.zlen * (\n                    Math.cos( Math.PI / 180.0 * h.alpha )\n                    - Math.cos( Math.PI / 180.0 * h.gamma )\n                    * Math.cos( Math.PI / 180.0 * h.beta )\n                ) / Math.sin( Math.PI / 180.0 * h.gamma ),\n            0\n        ];\n        basisZ[ 2 ] = Math.sqrt(\n            h.zlen * h.zlen * Math.sin( Math.PI / 180.0 * h.beta ) *\n            Math.sin( Math.PI / 180.0 * h.beta ) - basisZ[ 1 ] * basisZ[ 1 ]\n        );\n\n        var basis = [ 0, basisX, basisY, basisZ ];\n        var nxyz = [ 0, h.MX, h.MY, h.MZ ];\n        var mapcrs = [ 0, h.MAPC, h.MAPR, h.MAPS ];\n\n        var matrix = new THREE.Matrix4();\n\n        matrix.set(\n\n            basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\n            basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\n            basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\n            0,\n\n            basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\n            basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\n            basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\n            0,\n\n            basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\n            basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\n            basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\n            0,\n\n            0, 0, 0, 1\n\n        );\n\n        matrix.setPosition( new THREE.Vector3(\n            h.originX, h.originY, h.originZ\n        ) );\n\n        matrix.multiply( new THREE.Matrix4().makeTranslation(\n            h.NXSTART, h.NYSTART, h.NZSTART\n        ) );\n\n        return matrix;\n\n    }\n\n} );\n\n\nNGL.CubeParser = function( streamer, params ){\n\n    // @author Johanna Tiemann <johanna.tiemann@googlemail.com>\n    // @author Alexander Rose <alexander.rose@weirdbyte.de>\n\n    NGL.VolumeParser.call( this, streamer, params );\n\n};\n\nNGL.CubeParser.prototype = NGL.createObject(\n\n    NGL.VolumeParser.prototype, {\n\n    constructor: NGL.CubeParser,\n    type: \"cube\",\n\n    _parse: function( callback ){\n\n        // http://paulbourke.net/dataformats/cube/\n\n        if( NGL.debug ) NGL.time( \"NGL.CubeParser._parse \" + this.name );\n\n        var v = this.volume;\n        var headerLines = this.streamer.peekLines( 6 );\n        var header = {};\n        var reWhitespace = /\\s+/;\n        var bohrToAngstromFactor = 0.529177210859;\n\n        function headerhelper( k, l ) {\n            var field = headerLines[ k ].trim().split( reWhitespace )[ l ];\n            return parseFloat( field );\n        }\n\n        header.atomCount = Math.abs( headerhelper( 2, 0 ) ); //Number of atoms\n        header.originX = headerhelper( 2, 1 ) * bohrToAngstromFactor; //Position of origin of volumetric data\n        header.originY = headerhelper( 2, 2 ) * bohrToAngstromFactor;\n        header.originZ = headerhelper( 2, 3 ) * bohrToAngstromFactor;\n        header.NVX = headerhelper( 3, 0 ); //Number of voxels\n        header.NVY = headerhelper( 4, 0 );\n        header.NVZ = headerhelper( 5, 0 );\n        header.AVX = headerhelper( 3, 1 ) * bohrToAngstromFactor; //Axis vector\n        header.AVY = headerhelper( 4, 2 ) * bohrToAngstromFactor;\n        header.AVZ = headerhelper( 5, 3 ) * bohrToAngstromFactor;\n\n        var data = new Float32Array( header.NVX * header.NVY * header.NVZ );\n        var count = 0;\n        var lineNo = 0;\n\n        function _parseChunkOfLines( _i, _n, lines ){\n\n            for( var i = _i; i < _n; ++i ){\n\n                var line = lines[ i ].trim();\n\n                if( line !== \"\" && lineNo >= header.atomCount + 6 ){\n\n                    line = line.split( reWhitespace );\n                    for( var j = 0, lj = line.length; j < lj; ++j ){\n                        if ( line.length !==1 ) {\n                            data[ count ] = parseFloat( line[ j ] );\n                            ++count;\n                        };\n                    };\n\n                }\n\n                ++lineNo;\n\n            };\n\n        };\n\n        this.streamer.eachChunkOfLines( function( lines, chunkNo, chunkCount ){\n            _parseChunkOfLines( 0, lines.length, lines );\n        } );\n\n        v.header = header;\n        v.setData( data, header.NVZ, header.NVY, header.NVX );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.CubeParser._parse \" + this.name );\n        callback();\n\n    },\n\n    getMatrix: function(){\n\n        var h = this.volume.header;\n        var matrix = new THREE.Matrix4();\n\n        matrix.multiply(\n            new THREE.Matrix4().makeRotationY( THREE.Math.degToRad( 90 ) )\n        );\n\n        matrix.multiply(\n            new THREE.Matrix4().makeTranslation(\n                -h.originZ, h.originY, h.originX\n            )\n        );\n\n        matrix.multiply(\n            new THREE.Matrix4().makeScale(\n                -h.AVZ, h.AVY, h.AVX\n            )\n        );\n\n        return matrix;\n\n    }\n\n} );\n\n\nNGL.DxParser = function( streamer, params ){\n\n    NGL.VolumeParser.call( this, streamer, params );\n\n};\n\nNGL.DxParser.prototype = NGL.createObject(\n\n    NGL.VolumeParser.prototype, {\n\n    constructor: NGL.DxParser,\n    type: \"dx\",\n\n    _parse: function( callback ){\n\n        // http://www.poissonboltzmann.org/docs/file-format-info/\n\n        if( NGL.debug ) NGL.time( \"NGL.DxParser._parse \" + this.name );\n\n        var v = this.volume;\n        var headerLines = this.streamer.peekLines( 30 );\n        var headerInfo = this.parseHeaderLines( headerLines );\n        var header = this.volume.header;\n        var dataLineStart = headerInfo.dataLineStart;\n\n        var reWhitespace = /\\s+/;\n        var size = header.nx * header.ny * header.nz;\n        var data = new Float32Array( size );\n        var count = 0;\n        var lineNo = 0;\n\n        function _parseChunkOfLines( _i, _n, lines ){\n\n            for( var i = _i; i < _n; ++i ){\n\n                if( count < size && lineNo > dataLineStart ){\n\n                    var line = lines[ i ].trim();\n\n                    if( line !== \"\" ){\n\n                        var ls = line.split( reWhitespace );\n\n                        for( var j = 0, lj = ls.length; j < lj; ++j ){\n                            data[ count ] = parseFloat( ls[ j ] );\n                            ++count;\n                        };\n\n                    }\n\n                }\n\n                ++lineNo;\n\n            };\n\n        };\n\n        this.streamer.eachChunkOfLines( function( lines, chunkNo, chunkCount ){\n            _parseChunkOfLines( 0, lines.length, lines );\n        } );\n\n        v.setData( data, header.nz, header.ny, header.nx );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.DxParser._parse \" + this.name );\n        callback();\n\n    },\n\n    parseHeaderLines: function( headerLines ){\n\n        var header = {};\n        var reWhitespace = /\\s+/;\n        var n = headerLines.length;\n\n        var dataLineStart = 0;\n        var headerByteCount = 0;\n        var deltaLineCount = 0;\n\n        for( var i = 0; i < n; ++i ){\n\n            var line = headerLines[ i ];\n\n            if( line.startsWith( \"object 1\" ) ){\n\n                var ls = line.split( reWhitespace );\n\n                header.nx = parseInt( ls[ 5 ] );\n                header.ny = parseInt( ls[ 6 ] );\n                header.nz = parseInt( ls[ 7 ] );\n\n            }else if( line.startsWith( \"origin\" ) ){\n\n                var ls = line.split( reWhitespace );\n\n                header.xmin = parseFloat( ls[ 1 ] );\n                header.ymin = parseFloat( ls[ 2 ] );\n                header.zmin = parseFloat( ls[ 3 ] );\n\n            }else if( line.startsWith( \"delta\" ) ){\n\n                var ls = line.split( reWhitespace );\n\n                if( deltaLineCount === 0 ){\n                    header.hx = parseFloat( ls[ 1 ] );\n                }else if( deltaLineCount === 1 ){\n                    header.hy = parseFloat( ls[ 2 ] );\n                }else if( deltaLineCount === 2 ){\n                    header.hz = parseFloat( ls[ 3 ] );\n                }\n\n                deltaLineCount += 1;\n\n            }else if( line.startsWith( \"object 3\" ) ){\n\n                dataLineStart = i;\n                headerByteCount += line.length + 1;\n                break;\n\n            }\n\n            headerByteCount += line.length + 1;\n\n        }\n\n        this.volume.header = header;\n\n        return {\n            dataLineStart: dataLineStart,\n            headerByteCount: headerByteCount\n        }\n\n    },\n\n    getMatrix: function(){\n\n        var h = this.volume.header;\n        var matrix = new THREE.Matrix4();\n\n        matrix.multiply(\n            new THREE.Matrix4().makeRotationY( THREE.Math.degToRad( 90 ) )\n        );\n\n        matrix.multiply(\n            new THREE.Matrix4().makeTranslation(\n                -h.zmin, h.ymin, h.xmin\n            )\n        );\n\n        matrix.multiply(\n            new THREE.Matrix4().makeScale(\n                -h.hz, h.hy, h.hx\n            )\n        );\n\n        return matrix;\n\n    }\n\n} );\n\n\nNGL.DxbinParser = function( streamer, params ){\n\n    NGL.DxParser.call( this, streamer, params );\n\n};\n\nNGL.DxbinParser.prototype = NGL.createObject(\n\n    NGL.DxParser.prototype, {\n\n    constructor: NGL.DxbinParser,\n    type: \"dxbin\",\n\n    _parse: function( callback ){\n\n        // https://github.com/Electrostatics/apbs-pdb2pqr/issues/216\n\n        if( NGL.debug ) NGL.time( \"NGL.DxbinParser._parse \" + this.name );\n\n        var bin = this.streamer.data;\n        if( bin instanceof Uint8Array ){\n            bin = bin.buffer;\n        }\n\n        var headerLines = NGL.Uint8ToLines( new Uint8Array( bin, 0, 1000 ) );\n        var headerInfo = this.parseHeaderLines( headerLines );\n        var header = this.volume.header;\n        var headerByteCount = headerInfo.headerByteCount;\n\n        var size = header.nx * header.ny * header.nz;\n        var dv = new DataView( bin );\n        var data = new Float32Array( size );\n\n        for( var i = 0; i < size; ++i ){\n            data[ i ] = dv.getFloat64( i * 8 + headerByteCount, true );\n        }\n\n        this.volume.setData( data, header.nz, header.ny, header.nx );\n\n        if( NGL.debug ) NGL.timeEnd( \"NGL.DxbinParser._parse \" + this.name );\n\n        callback();\n\n    }\n\n} );\n\n\n///////////////////\n// Surface parser\n\nNGL.SurfaceParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.Parser.call( this, streamer, p );\n\n    this.loader = undefined;\n    this.surface = new NGL.Surface( this.name, this.path );\n\n};\n\nNGL.SurfaceParser.prototype = NGL.createObject(\n\n    NGL.Parser.prototype, {\n\n    constructor: NGL.SurfaceParser,\n    type: \"surface\",\n\n    __objName: \"surface\",\n\n    _parse: function( callback ){\n\n        var geometry = this.loader.parse( this.streamer.asText() );\n\n        this.surface.fromGeometry( geometry );\n\n        callback();\n\n    }\n\n} );\n\n\nNGL.PlyParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.SurfaceParser.call( this, streamer, p );\n\n    this.loader = new THREE.PLYLoader();\n\n};\n\nNGL.PlyParser.prototype = NGL.createObject(\n\n    NGL.SurfaceParser.prototype, {\n\n    constructor: NGL.PlyParser,\n    type: \"ply\"\n\n} );\n\n\nNGL.ObjParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.SurfaceParser.call( this, streamer, p );\n\n    this.loader = new THREE.OBJLoader();\n\n};\n\nNGL.ObjParser.prototype = NGL.createObject(\n\n    NGL.SurfaceParser.prototype, {\n\n    constructor: NGL.ObjParser,\n    type: \"obj\"\n\n} );\n\n\n////////////////\n// Text parser\n\nNGL.TextParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.Parser.call( this, streamer, p );\n\n    this.text = {\n\n        name: this.name,\n        path: this.path,\n        data: \"\"\n\n    };\n\n};\n\nNGL.TextParser.prototype = NGL.createObject(\n\n    NGL.Parser.prototype, {\n\n    constructor: NGL.TextParser,\n    type: \"text\",\n\n    __objName: \"text\",\n\n    _parse: function( callback ){\n\n        this.text.data = this.streamer.asText();\n\n        callback();\n\n    }\n\n} );\n\n\n///////////////\n// Csv parser\n\nNGL.CsvParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.Parser.call( this, streamer, p );\n\n    this.table = {\n\n        name: this.name,\n        path: this.path,\n        colNames: [],\n        data: []\n\n    };\n\n};\n\nNGL.CsvParser.prototype = NGL.createObject(\n\n    NGL.Parser.prototype, {\n\n    constructor: NGL.CsvParser,\n    type: \"csv\",\n\n    __objName: \"table\",\n\n    _parse: function( callback ){\n\n        var data = this.table.data;\n        var reDelimiter = /\\s*,\\s*/;\n\n        this.streamer.eachChunkOfLines( function( chunk, chunkNo, chunkCount ){\n\n            var n = chunk.length;\n\n            for( var i = 0; i < n; ++i ){\n\n                var line = chunk[ i ].trim();\n                var values = line.split( reDelimiter );\n\n                if( chunkNo === 0 && i === 0 ){\n\n                    this.table.colNames = values;\n\n                }else if( line ){\n\n                    data.push( values );\n\n                }\n\n            }\n\n        }.bind( this ) );\n\n        callback();\n\n    }\n\n} );\n\n\n////////////////\n// Json parser\n\nNGL.JsonParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.Parser.call( this, streamer, p );\n\n    this.json = {\n\n        name: this.name,\n        path: this.path,\n        data: {}\n\n    };\n\n};\n\nNGL.JsonParser.prototype = NGL.createObject(\n\n    NGL.Parser.prototype, {\n\n    constructor: NGL.JsonParser,\n    type: \"json\",\n\n    __objName: \"json\",\n\n    _parse: function( callback ){\n\n        if( this.streamer.compressed || this.streamer.binary ){\n            this.json.data = JSON.parse( this.streamer.asText() );\n        }else{\n            this.json.data = this.streamer.data;\n        }\n\n        callback();\n\n    }\n\n} );\n\n\n////////////////\n// Xml parser\n\nNGL.XmlParser = function( streamer, params ){\n\n    var p = params || {};\n\n    NGL.Parser.call( this, streamer, p );\n\n    this.xml = {\n\n        name: this.name,\n        path: this.path,\n        data: {}\n\n    };\n\n};\n\nNGL.XmlParser.prototype = NGL.createObject(\n\n    NGL.Parser.prototype, {\n\n    constructor: NGL.XmlParser,\n    type: \"xml\",\n\n    __objName: \"xml\",\n\n    _parse: function( callback ){\n\n        // https://github.com/segmentio/xml-parser\n        // MIT license\n\n        function parse( xml ){\n\n            xml = xml.trim();\n\n            // strip comments\n            xml = xml.replace( /<!--[\\s\\S]*?-->/g, '' );\n\n            return document();\n\n            function document(){\n                return {\n                    declaration: declaration(),\n                    root: tag()\n                }\n            }\n\n            function declaration(){\n                var m = match(/^<\\?xml\\s*/);\n                if (!m) return;\n                // tag\n                var node = {\n                    attributes: {}\n                };\n                // attributes\n                while (!(eos() || is('?>'))) {\n                    var attr = attribute();\n                    if (!attr) return node;\n                    node.attributes[attr.name] = attr.value;\n                }\n                match(/\\?>\\s*/);\n                return node;\n            }\n\n            function tag(){\n                var m = match(/^<([\\w-:.]+)\\s*/);\n                if (!m) return;\n                // name\n                var node = {\n                    name: m[1],\n                    attributes: {},\n                    children: []\n                };\n                // attributes\n                while (!(eos() || is('>') || is('?>') || is('/>'))) {\n                    var attr = attribute();\n                    if (!attr) return node;\n                    node.attributes[attr.name] = attr.value;\n                }\n                // self closing tag\n                if (match(/^\\s*\\/>\\s*/)) {\n                    return node;\n                }\n                match(/\\??>\\s*/);\n                // content\n                node.content = content();\n                // children\n                var child;\n                while (child = tag()) {\n                    node.children.push(child);\n                }\n                // closing\n                match(/^<\\/[\\w-:.]+>\\s*/);\n                return node;\n            }\n\n            function content(){\n                var m = match(/^([^<]*)/);\n                if (m) return m[1];\n                return '';\n            }\n\n            function attribute(){\n                var m = match(/([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/);\n                if (!m) return;\n                return { name: m[1], value: strip(m[2]) }\n            }\n\n            function strip( val ){\n                return val.replace(/^['\"]|['\"]$/g, '');\n            }\n\n            function match( re ){\n                var m = xml.match(re);\n                if (!m) return;\n                xml = xml.slice(m[0].length);\n                return m;\n            }\n\n            function eos(){\n                return 0 == xml.length;\n            }\n\n            function is( prefix ){\n                return 0 == xml.indexOf(prefix);\n            }\n\n        }\n\n        this.xml.data = parse( this.streamer.asText() );\n\n        callback();\n\n    }\n\n} );\n\n// File:js/ngl/writer.js\n\n/**\n * @file Writer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n///////////////\n// PDB Writer\n\nNGL.PdbWriter = function( structure, params ){\n\n    var p = Object.assign( {}, params );\n\n    var renumberSerial = p.renumberSerial !== undefined ? p.renumberSerial : true;\n    var remarks = p.remarks || [];\n    if( !Array.isArray( remarks ) ) remarks = [ remarks ];\n\n    var records;\n\n    function writeRecords(){\n\n        records = [];\n\n        writeTitle();\n        writeRemarks();\n        writeAtoms();\n\n    }\n\n    // http://www.wwpdb.org/documentation/file-format\n\n    // Sample PDB line, the coords X,Y,Z are fields 5,6,7 on each line.\n    // ATOM      1  N   ARG     1      29.292  13.212 -12.751  1.00 33.78      1BPT 108\n\n    function DEF( x, y ){\n        return x !== undefined ? x : y;\n    }\n\n    var atomFormat =\n        \"ATOM  %5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s\";\n\n    var hetatmFormat =\n        \"HETATM%5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s\";\n\n    function writeTitle(){\n\n        // FIXME multiline if title line longer than 80 chars\n        records.push( sprintf( \"TITEL %-74s\", structure.name ) );\n\n    }\n\n    function writeRemarks(){\n\n        remarks.forEach( function( str ){\n            records.push( sprintf( \"REMARK %-73s\", str ) );\n        } );\n\n        if( structure.trajectory ){\n            records.push( sprintf(\n                \"REMARK %-73s\",\n                \"Trajectory '\" + structure.trajectory.name + \"'\"\n            ) );\n            records.push( sprintf(\n                \"REMARK %-73s\",\n                \"Frame \" + structure.trajectory.frame + \"\"\n            ) );\n        }\n\n    }\n\n    function writeAtoms(){\n\n        var ia = 1;\n        var im = 1;\n\n        structure.eachModel( function( m ){\n\n            records.push( sprintf( \"MODEL %-74d\", im++ ) );\n\n            m.eachAtom( function( a ){\n\n                var formatString = a.hetero ? hetatmFormat : atomFormat;\n                var serial = renumberSerial ? ia : a.serial;\n\n                // Alignment of one-letter atom name such as C starts at column 14,\n                // while two-letter atom name such as FE starts at column 13.\n                var atomname = a.atomname;\n                if( atomname.length === 1 ) atomname = \" \" + atomname;\n\n                records.push( sprintf(\n                    formatString,\n\n                    serial,\n                    atomname,\n                    a.resname,\n                    DEF( a.chainname, \" \" ),\n                    a.resno,\n                    a.x, a.y, a.z,\n                    DEF( a.occurence, 1.0 ),\n                    DEF( a.bfactor, 0.0 ),\n                    DEF( a.segid, \"\" ),\n                    DEF( a.element, \"\" )\n                ) );\n                ia += 1;\n\n            } );\n\n            records.push( sprintf( \"%-80s\", \"ENDMDL\" ) );\n            im += 1;\n\n        } );\n\n        records.push( sprintf( \"%-80s\", \"END\" ) );\n\n    }\n\n    function getString(){\n\n        writeRecords();\n        return records.join( \"\\n\" );\n\n    }\n\n    function getBlob(){\n\n        return new Blob(\n            [ getString() ],\n            { type: 'text/plain' }\n        );\n\n    }\n\n    function download( name, ext ){\n\n        name = name || \"structure\"\n        ext = ext || \"pdb\";\n\n        var file = name + \".\" + ext;\n        var blob = getBlob();\n\n        NGL.download( blob, file );\n\n    }\n\n    // API\n\n    this.getString = getString;\n    this.getBlob = getBlob;\n    this.download = download;\n\n};\n\n// File:js/ngl/loader.js\n\n/**\n * @file Loader\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n///////////////\n// Datasource\n\nNGL.DatasourceRegistry = {\n\n    sourceDict: {},\n\n    listing: undefined,\n    trajectory: undefined,\n\n    __passThrough: {\n        getUrl: function( path ){\n            return path;\n        }\n    },\n\n    add: function( name, datasource ){\n        name = name.toLowerCase();\n        if( name in this.sourceDict ){\n            NGL.warn( \"overwriting datasource named '\" + name + \"'\" );\n        }\n        this.sourceDict[ name ] = datasource;\n    },\n\n    get: function( name ){\n        name = name || \"\";\n        name = name.toLowerCase();\n        if( name in this.sourceDict ){\n            return this.sourceDict[ name ];\n        }else if( [ \"http\", \"https\", \"ftp\" ].indexOf( name ) !== -1 ){\n            return this.__passThrough;\n        }else if( !name ){\n            return this.__passThrough;\n        }else{\n            NGL.error( \"no datasource named '\" + name + \"' found\" );\n        }\n    }\n\n};\n\n\nNGL.getDataInfo = function( src ){\n\n    var info = NGL.getFileInfo( src );\n    var datasource = NGL.DatasourceRegistry.get( info.protocol );\n    var url = datasource.getUrl( info.src );\n    var info2 = NGL.getFileInfo( url );\n    if( !info2.ext && datasource.getExt ){\n        info2.ext = datasource.getExt( src );\n    }\n\n    return info2;\n\n};\n\n\nNGL.StaticDatasource = function( baseUrl ){\n\n    baseUrl = baseUrl || \"\";\n\n    this.getUrl = function( src ){\n        var info = NGL.getFileInfo( src );\n        return NGL.getAbsolutePath( baseUrl + info.path );\n    };\n\n};\n\n\nNGL.RcsbDatasource = function(){\n\n    var baseUrl = \"http://files.rcsb.org/download/\";\n    var mmtfBaseUrl = \"http://mmtf.rcsb.org/v0/full/\";\n    var bbMmtfBaseUrl = \"http://mmtf.rcsb.org/reduced/\";\n\n    this.getUrl = function( src ){\n        // valid path are\n        // XXXX.pdb, XXXX.pdb.gz, XXXX.cif, XXXX.cif.gz, XXXX.mmtf, XXXX.bb.mmtf\n        // XXXX defaults to XXXX.cif\n        var info = NGL.getFileInfo( src );\n        var file;\n        if( [ \"pdb\", \"cif\" ].indexOf( info.ext ) !== -1 &&\n            ( info.compressed === false || info.compressed === \"gz\" )\n        ){\n            return baseUrl + info.path;\n        }else if( info.ext === \"mmtf\" ){\n            if( info.base.endsWith( \".bb\" ) ){\n                return bbMmtfBaseUrl + info.name;\n            }else{\n                return mmtfBaseUrl + info.name;\n            }\n        }else if( !info.ext ){\n            return baseUrl + info.name + \".cif\";\n            // return mmtfBaseUrl + info.name + \".mmtf\";\n        }else{\n            console.warn( \"unsupported ext\", info.ext );\n            return mmtfBaseUrl + info.name;\n        }\n    };\n\n    this.getExt = function( src ){\n        var info = NGL.getFileInfo( src );\n        if( info.ext === \"mmtf\" || !info.ext ){\n            return \"mmtf\";\n        }\n    };\n\n};\n\nNGL.DatasourceRegistry.add(\n    \"rcsb\", new NGL.RcsbDatasource()\n);\n\n\n///////////\n// Loader\n\nNGL.Loader = function( src, params ){\n\n    var p = Object.assign( {}, params );\n\n    var binaryExtList = [ \"mmtf\", \"dcd\", \"mrc\", \"ccp4\", \"map\", \"dxbin\" ];\n    var binary = binaryExtList.indexOf( p.ext ) !== -1;\n\n    this.compressed = p.compressed || false;\n    this.binary = p.binary !== undefined ? p.binary : binary;\n    this.name = p.name || \"\";\n    this.ext = p.ext || \"\";\n    this.dir = p.dir || \"\";\n    this.path = p.path || \"\";\n    this.protocol = p.protocol || \"\";\n\n    this.params = params;\n\n    //\n\n    var streamerParams = {\n        compressed: this.compressed,\n        binary: this.binary,\n        json: this.ext === \"json\"\n    };\n\n    if( ( self.File && src instanceof File ) ||\n        ( self.Blob && src instanceof self.Blob )\n    ){\n        this.streamer = new NGL.FileStreamer( src, streamerParams );\n    }else{\n        this.streamer = new NGL.NetworkStreamer( src, streamerParams );\n    }\n\n    if( typeof p.onProgress === \"function\" ){\n        this.streamer.onprogress = p.onprogress;\n    }\n\n};\n\nNGL.Loader.prototype = {\n\n    constructor: NGL.Loader,\n\n    load: function(){\n\n        return new Promise( function( resolve, reject ){\n\n            this.streamer.onerror = reject;\n\n            try{\n                this._load( resolve, reject );\n            }catch( e ){\n                reject( e );\n            }\n\n        }.bind( this ) );\n\n    },\n\n    _load: function( resolve, reject ){\n\n        reject( \"not implemented\" );\n\n    }\n\n};\n\n\nNGL.ParserLoader = function( src, params ){\n\n    NGL.Loader.call( this, src, params );\n\n    this.useWorker = this.params.useWorker === undefined ? false : this.params.useWorker;\n\n};\n\nNGL.ParserLoader.prototype = NGL.createObject(\n\n    NGL.Loader.prototype, {\n\n    constructor: NGL.ParserLoader,\n\n    _load: function( resolve, reject ){\n\n        var parsersClasses = {\n\n            \"gro\": NGL.GroParser,\n            \"pdb\": NGL.PdbParser,\n            \"pdb1\": NGL.PdbParser,\n            \"ent\": NGL.PdbParser,\n            \"pqr\": NGL.PqrParser,\n            \"cif\": NGL.CifParser,\n            \"mcif\": NGL.CifParser,\n            \"mmcif\": NGL.CifParser,\n            \"sdf\": NGL.SdfParser,\n            \"mol2\": NGL.Mol2Parser,\n\n            \"mmtf\": NGL.MmtfParser,\n\n            \"dcd\": NGL.DcdParser,\n\n            \"mrc\": NGL.MrcParser,\n            \"ccp4\": NGL.MrcParser,\n            \"map\": NGL.MrcParser,\n            \"cube\": NGL.CubeParser,\n            \"dx\": NGL.DxParser,\n            \"dxbin\": NGL.DxbinParser,\n\n            \"ply\": NGL.PlyParser,\n            \"obj\": NGL.ObjParser,\n\n            \"txt\": NGL.TextParser,\n            \"text\": NGL.TextParser,\n            \"csv\": NGL.CsvParser,\n            \"json\": NGL.JsonParser,\n            \"xml\": NGL.XmlParser\n\n        };\n\n        var parser = new parsersClasses[ this.ext ](\n            this.streamer, this.params\n        );\n\n        if( this.useWorker ){\n\n            parser.parseWorker( resolve );\n\n        }else{\n\n            parser.parse( resolve );\n\n        }\n\n    }\n\n} );\n\n\nNGL.ScriptLoader = function( src, params ){\n\n    NGL.Loader.call( this, src, params );\n\n};\n\nNGL.ScriptLoader.prototype = NGL.createObject(\n\n    NGL.Loader.prototype, {\n\n    constructor: NGL.ScriptLoader,\n\n    _load: function( resolve, reject ){\n\n        this.streamer.read( function(){\n\n            var text = this.streamer.asText();\n            var script = new NGL.Script( text, this.name, this.path );\n            resolve( script );\n\n        }.bind( this ) );\n\n    }\n\n} );\n\n\nNGL.PluginLoader = function( src, params ){\n\n    NGL.Loader.call( this, src, params );\n\n};\n\nNGL.PluginLoader.prototype = NGL.createObject(\n\n    NGL.Loader.prototype, {\n\n    constructor: NGL.PluginLoader,\n\n    _load: function( resolve, reject ){\n\n        var basePath;\n        if( this.protocol ){\n            basePath = this.protocol + \"://\" + this.dir;\n        }else{\n            basePath = this.dir;\n        }\n\n        this.streamer.read( function(){\n\n            var manifest = JSON.parse( this.streamer.asText() );\n            var promiseList = [];\n\n            manifest.files.map( function( name ){\n\n                promiseList.push(\n                    NGL.autoLoad( basePath + name, {\n                        ext: \"text\", useWorker: false\n                    } )\n                );\n\n            } );\n\n            Promise.all( promiseList ).then( function( dataList ){\n\n                var text = dataList.reduce( function( text, value ){\n                    return text + \"\\n\\n\" + value.data;\n                }, \"\" );\n                text += manifest.source || \"\";\n\n                var script = new NGL.Script( text, this.name, this.path );\n                resolve( script );\n\n            }.bind( this ) );\n\n        }.bind( this ) );\n\n    }\n\n} );\n\n\nNGL.loaderMap = {\n\n    \"gro\": NGL.ParserLoader,\n    \"pdb\": NGL.ParserLoader,\n    \"pdb1\": NGL.ParserLoader,\n    \"ent\": NGL.ParserLoader,\n    \"pqr\": NGL.ParserLoader,\n    \"cif\": NGL.ParserLoader,\n    \"mcif\": NGL.ParserLoader,\n    \"mmcif\": NGL.ParserLoader,\n    \"sdf\": NGL.ParserLoader,\n    \"mol2\": NGL.ParserLoader,\n\n    \"mmtf\":  NGL.ParserLoader,\n\n    \"dcd\": NGL.ParserLoader,\n\n    \"mrc\": NGL.ParserLoader,\n    \"ccp4\": NGL.ParserLoader,\n    \"map\": NGL.ParserLoader,\n    \"cube\": NGL.ParserLoader,\n    \"dx\": NGL.ParserLoader,\n    \"dxbin\": NGL.ParserLoader,\n\n    \"obj\": NGL.ParserLoader,\n    \"ply\": NGL.ParserLoader,\n\n    \"txt\": NGL.ParserLoader,\n    \"text\": NGL.ParserLoader,\n    \"csv\": NGL.ParserLoader,\n    \"json\": NGL.ParserLoader,\n    \"xml\": NGL.ParserLoader,\n\n    \"ngl\": NGL.ScriptLoader,\n    \"plugin\": NGL.PluginLoader,\n\n};\n\n\nNGL.autoLoad = function( file, params ){\n\n    var p = Object.assign( NGL.getDataInfo( file ), params );\n    var loader = new NGL.loaderMap[ p.ext ]( p.src, p );\n\n    if( loader ){\n        return loader.load();\n    }else{\n        return Promise.reject( \"NGL.autoLoading: ext '\" + p.ext + \"' unknown\" );\n    }\n\n};\n\n// File:js/ngl/viewer.js\n\n/**\n * @file Viewer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n/**\n * [Resources description]\n * @type {Object}\n * @private\n */\nNGL.Resources = {\n\n    // shaders\n    'shader/CylinderImpostor.vert': null,\n    'shader/CylinderImpostor.frag': null,\n    'shader/HyperballStickImpostor.vert': null,\n    'shader/HyperballStickImpostor.frag': null,\n    'shader/Line.vert': null,\n    'shader/Line.frag': null,\n    // 'shader/LineSprite.vert': null,\n    // 'shader/LineSprite.frag': null,\n    'shader/Mesh.vert': null,\n    'shader/Mesh.frag': null,\n    // 'shader/ParticleSprite.vert': null,\n    // 'shader/ParticleSprite.frag': null,\n    'shader/Point.vert': null,\n    'shader/Point.frag': null,\n    'shader/Quad.vert': null,\n    'shader/Quad.frag': null,\n    'shader/Ribbon.vert': null,\n    'shader/SDFFont.vert': null,\n    'shader/SDFFont.frag': null,\n    // 'shader/SphereHalo.vert': null,\n    // 'shader/SphereHalo.frag': null,\n    'shader/SphereImpostor.vert': null,\n    'shader/SphereImpostor.frag': null,\n\n    // shader chunks\n    'shader/chunk/dull_interior_fragment.glsl': null,\n    'shader/chunk/fog_fragment.glsl': null,\n    'shader/chunk/nearclip_fragment.glsl': null,\n    'shader/chunk/nearclip_vertex.glsl': null,\n    'shader/chunk/opaque_back_fragment.glsl': null,\n\n};\n\n\n/**\n * [Utils description]\n * @namespace NGL.Utils\n * @type {Object}\n */\nNGL.Utils = {\n\n    /**\n     * Converted to JavaScript from\n     * {@link http://paulbourke.net/geometry/pointlineplane/lineline.c}\n     *\n     * @param  {THREE.Vector3} p1\n     * @param  {THREE.Vector3} p2\n     * @param  {THREE.Vector3} p3\n     * @param  {THREE.Vector3} p4\n     * @return {Array.<THREE.Vector3, THREE.Vector3>}\n     */\n    lineLineIntersect: function( p1, p2, p3, p4 ){\n\n        var EPS = NGL.EPS;\n\n        var p13 = new THREE.Vector3(),\n            p43 = new THREE.Vector3(),\n            p21 = new THREE.Vector3();\n        var d1343, d4321, d1321, d4343, d2121;\n        var denom, numer;\n\n        p13.x = p1.x - p3.x;\n        p13.y = p1.y - p3.y;\n        p13.z = p1.z - p3.z;\n        p43.x = p4.x - p3.x;\n        p43.y = p4.y - p3.y;\n        p43.z = p4.z - p3.z;\n        if( Math.abs(p43.x) < EPS && Math.abs(p43.y) < EPS && Math.abs(p43.z) < EPS )\n            return null;\n\n        p21.x = p2.x - p1.x;\n        p21.y = p2.y - p1.y;\n        p21.z = p2.z - p1.z;\n        if( Math.abs(p21.x) < EPS && Math.abs(p21.y) < EPS && Math.abs(p21.z) < EPS )\n            return null;\n\n        d1343 = p13.x * p43.x + p13.y * p43.y + p13.z * p43.z;\n        d4321 = p43.x * p21.x + p43.y * p21.y + p43.z * p21.z;\n        d1321 = p13.x * p21.x + p13.y * p21.y + p13.z * p21.z;\n        d4343 = p43.x * p43.x + p43.y * p43.y + p43.z * p43.z;\n        d2121 = p21.x * p21.x + p21.y * p21.y + p21.z * p21.z;\n\n        denom = d2121 * d4343 - d4321 * d4321;\n        if( Math.abs(denom) < EPS )\n            return null;\n        numer = d1343 * d4321 - d1321 * d4343;\n\n        var mua = numer / denom;\n        var mub = ( d1343 + d4321 * mua ) / d4343;\n\n        var pa = new THREE.Vector3(\n            p1.x + mua * p21.x,\n            p1.y + mua * p21.y,\n            p1.z + mua * p21.z\n        );\n        var pb = new THREE.Vector3(\n            p3.x + mub * p43.x,\n            p3.y + mub * p43.y,\n            p3.z + mub * p43.z\n        );\n\n        return [ pa, pb ];\n\n    },\n\n    circularMean: function(){\n\n        // http://en.wikipedia.org/wiki/Center_of_mass#Systems_with_periodic_boundary_conditions\n\n        // Bai, Linge; Breen, David (2008). Calculating Center of Mass in an Unbounded 2D Environment. Journal of Graphics, GPU, and Game Tools 13 (4): 53–60.\n\n        // http://stackoverflow.com/questions/18166507/using-fft-to-find-the-center-of-mass-under-periodic-boundary-conditions\n\n        var twoPi = 2 * Math.PI;\n\n        return function( array, max, stride, offset, indices ){\n\n            stride = stride || 1;\n            offset = offset || 0;\n\n            var n = indices ? indices.length : array.length;\n            var angle, i, c;\n\n            var cosMean = 0;\n            var sinMean = 0;\n\n            if( indices ){\n\n                for( i = 0; i < n; ++i ){\n\n                    // NGL.log( indices[ i ], stride, offset, indices[ i ] * stride + offset, array.length, array[ indices[ i ] * stride + offset ] );\n\n                    c = ( array[ indices[ i ] * stride + offset ] + max ) % max;\n\n                    angle = ( c / max ) * twoPi - Math.PI;\n\n                    cosMean += Math.cos( angle );\n                    sinMean += Math.sin( angle );\n\n                }\n\n            }else{\n\n                for( i = offset; i < n; i += stride ){\n\n                    c = ( array[ i ] + max ) % max;\n\n                    angle = ( c / max ) * twoPi - Math.PI;\n\n                    cosMean += Math.cos( angle );\n                    sinMean += Math.sin( angle );\n\n                }\n\n            }\n\n            cosMean /= n;\n            sinMean /= n;\n\n            var meanAngle = Math.atan2( sinMean, cosMean );\n\n            var mean = ( meanAngle + Math.PI ) / twoPi * max;\n\n            return mean;\n\n        }\n\n    }(),\n\n    calculateCenterArray: function( array1, array2, center, offset ){\n\n        var n = array1.length;\n        center = center || new Float32Array( n );\n        offset = offset || 0;\n\n        for( var i = 0; i < n; i+=3 ){\n\n            center[ offset + i + 0 ] = ( array1[ i + 0 ] + array2[ i + 0 ] ) / 2.0;\n            center[ offset + i + 1 ] = ( array1[ i + 1 ] + array2[ i + 1 ] ) / 2.0;\n            center[ offset + i + 2 ] = ( array1[ i + 2 ] + array2[ i + 2 ] ) / 2.0;\n\n        }\n\n        return center;\n\n    },\n\n    calculateDirectionArray: function( array1, array2 ){\n\n        var n = array1.length;\n        var direction = new Float32Array( n );\n\n        for( var i = 0; i < n; i+=3 ){\n\n            direction[ i + 0 ] = array2[ i + 0 ] - array1[ i + 0 ];\n            direction[ i + 1 ] = array2[ i + 1 ] - array1[ i + 1 ];\n            direction[ i + 2 ] = array2[ i + 2 ] - array1[ i + 2 ];\n\n        }\n\n        return direction;\n\n    },\n\n    positionFromGeometry: function( geometry ){\n\n        var vertices = geometry.vertices;\n\n        var j, v3;\n        var n = vertices.length;\n        var position = new Float32Array( n * 3 );\n\n        for( var v = 0; v < n; v++ ){\n\n            j = v * 3;\n            v3 = vertices[ v ];\n\n            position[ j + 0 ] = v3.x;\n            position[ j + 1 ] = v3.y;\n            position[ j + 2 ] = v3.z;\n\n        }\n\n        return position;\n\n    },\n\n    colorFromGeometry: function( geometry ){\n\n        var faces = geometry.faces;\n        var vn = geometry.vertices.length;\n\n        var j, f, c;\n        var n = faces.length;\n        var color = new Float32Array( vn * 3 );\n\n        for( var v = 0; v < n; v++ ){\n\n            f = faces[ v ];\n            c = f.color;\n\n            j = f.a * 3;\n            color[ j + 0 ] = c.r;\n            color[ j + 1 ] = c.g;\n            color[ j + 2 ] = c.b;\n\n            j = f.b * 3;\n            color[ j + 0 ] = c.r;\n            color[ j + 1 ] = c.g;\n            color[ j + 2 ] = c.b;\n\n            j = f.c * 3;\n            color[ j + 0 ] = c.r;\n            color[ j + 1 ] = c.g;\n            color[ j + 2 ] = c.b;\n\n        }\n\n        return color;\n\n    },\n\n    indexFromGeometry: function( geometry ){\n\n        var faces = geometry.faces;\n\n        var j, f;\n        var n = faces.length;\n        var TypedArray = n * 3 > 65535 ? Uint32Array : Uint16Array;\n        var index = new TypedArray( n * 3 );\n\n        for( var v = 0; v < n; v++ ){\n\n            j = v * 3;\n            f = faces[ v ];\n\n            index[ j + 0 ] = f.a;\n            index[ j + 1 ] = f.b;\n            index[ j + 2 ] = f.c;\n\n        }\n\n        return index;\n\n    },\n\n    normalFromGeometry: function( geometry ){\n\n        var faces = geometry.faces;\n        var vn = geometry.vertices.length;\n\n        var j, f, nn, n1, n2, n3;\n        var n = faces.length;\n        var normal = new Float32Array( vn * 3 );\n\n        for( var v = 0; v < n; v++ ){\n\n            f = faces[ v ];\n            nn = f.vertexNormals;\n            n1 = nn[ 0 ];\n            n2 = nn[ 1 ];\n            n3 = nn[ 2 ];\n\n            j = f.a * 3;\n            normal[ j + 0 ] = n1.x;\n            normal[ j + 1 ] = n1.y;\n            normal[ j + 2 ] = n1.z;\n\n            j = f.b * 3;\n            normal[ j + 0 ] = n2.x;\n            normal[ j + 1 ] = n2.y;\n            normal[ j + 2 ] = n2.z;\n\n            j = f.c * 3;\n            normal[ j + 0 ] = n3.x;\n            normal[ j + 1 ] = n3.y;\n            normal[ j + 2 ] = n3.z;\n\n        }\n\n        return normal;\n\n    },\n\n    uniformArray: function( n, a ){\n\n        var array = new Float32Array( n );\n\n        for( var i = 0; i < n; ++i ){\n\n            array[ i ] = a;\n\n        }\n\n        return array;\n\n    },\n\n    uniformArray3: function( n, a, b, c ){\n\n        var array = new Float32Array( n * 3 );\n\n        var j;\n\n        for( var i = 0; i < n; ++i ){\n\n            j = i * 3;\n\n            array[ j + 0 ] = a;\n            array[ j + 1 ] = b;\n            array[ j + 2 ] = c;\n\n        }\n\n        return array;\n\n    },\n\n    randomColorArray: function( n ){\n\n        var array = new Float32Array( n * 3 );\n\n        var j;\n\n        for( var i = 0; i < n; ++i ){\n\n            j = i * 3;\n\n            array[ j + 0 ] = Math.random();\n            array[ j + 1 ] = Math.random();\n            array[ j + 2 ] = Math.random();\n\n        }\n\n        return array;\n\n    },\n\n    replicateArray3Entries: function( array, m ){\n\n        var n = array.length / 3;\n        var repArr = new Float32Array( n * m * 3 );\n\n        for( var i = 0; i < n; ++i ){\n\n            var v = i * 3;\n            var k = i * m * 3;\n\n            var a = array[ v + 0 ];\n            var b = array[ v + 1 ];\n            var c = array[ v + 2 ];\n\n            for( var j = 0; j < m; ++j ){\n\n                var l = k + j * 3;\n\n                repArr[ l + 0 ] = a;\n                repArr[ l + 1 ] = b;\n                repArr[ l + 2 ] = c;\n\n            }\n\n        }\n\n        return repArr;\n\n    },\n\n    calculateMeanArray: function( array1, array2 ){\n\n        var n = array1.length;\n        var mean = new Float32Array( n );\n\n        for( var i = 0; i < n; i++ ){\n\n            mean[ i ] = ( array1[ i ] + array2[ i ] ) / 2.0;\n\n        }\n\n        return mean;\n\n    },\n\n    calculateMinArray: function( array1, array2 ){\n\n        var n = array1.length;\n        var min = new Float32Array( n );\n\n        for( var i = 0; i < n; i++ ){\n\n            min[ i ] = Math.min( array1[ i ],  array2[ i ] );\n\n        }\n\n        return min;\n\n    },\n\n    calculateMeanVector3: function( array ){\n\n        var n = array.length;\n        var m = array.length / 3;\n\n        var x = 0;\n        var y = 0;\n        var z = 0;\n\n        var i;\n\n        for( i = 0; i < n; i += 3 ){\n\n            x += array[ i + 0 ];\n            y += array[ i + 1 ];\n            z += array[ i + 2 ];\n\n        }\n\n        return new THREE.Vector3( x / m, y / m, z / m );\n\n    },\n\n    isPointOnSegment: function( p, l1, l2 ){\n\n        var len = l1.distanceTo( l2 );\n\n        return p.distanceTo( l1 ) <= len && p.distanceTo( l2 ) <= len;\n\n    },\n\n    pointVectorIntersection: function(){\n\n        var v = new THREE.Vector3();\n        var v1 = new THREE.Vector3();\n\n        return function( point, origin, vector ){\n\n            v.copy( vector );\n            v1.subVectors( point, origin );\n            var distOriginI = Math.cos( v.angleTo( v1 ) ) * v1.length();\n            var vectorI = v.normalize().multiplyScalar( distOriginI );\n            var pointI = new THREE.Vector3().addVectors( vectorI, origin );\n\n            return pointI;\n\n        }\n\n    }(),\n\n    copyArray: function( src, dst, srcOffset, dstOffset, length ){\n\n        var i;\n        var n = length;\n\n        for( i = 0; i < n; ++i ){\n\n            dst[ dstOffset + i ] = src[ srcOffset + i ];\n\n        }\n\n    }\n\n};\n\n\nNGL.getShader = function(){\n\n    var re = /^(?!\\/\\/)\\s*#include\\s+(\\S+)/gmi;\n    var cache = {};\n\n    function getDefines( defines ){\n\n        if( defines === undefined ) return \"\";\n\n        var lines = [];\n\n        for ( var name in defines ) {\n\n            var value = defines[ name ];\n\n            if ( value === false ) continue;\n\n            lines.push( '#define ' + name + ' ' + value );\n\n        }\n\n        return lines.join( '\\n' ) + \"\\n\";\n\n    }\n\n    //\n\n    return function( name, defines ){\n\n        defines = defines || {};\n\n        var hash = name + \"|\";\n        for( var key in defines ){\n            hash += key + \":\" + defines[ key ];\n        }\n\n        if( !cache[ hash ] ){\n\n            var definesText = getDefines( defines );\n\n            var shaderText = NGL.Resources[ 'shader/' + name ];\n            if( !shaderText ){\n                throw \"empty shader, '\" + name + \"'\";\n            }\n            shaderText = shaderText.replace( re, function( match, p1 ){\n\n                var path = 'shader/chunk/' + p1 + '.glsl';\n                var chunk = NGL.Resources[ path ] || THREE.ShaderChunk[ p1 ];\n\n                return chunk ? chunk : \"\";\n\n            });\n\n            cache[ hash ] = definesText + shaderText;\n\n        }\n\n        return cache[ hash ];\n\n    }\n\n}();\n\n\nNGL.trimCanvas = function( canvas, r, g, b, a ){\n\n    var canvasHeight = canvas.height;\n    var canvasWidth = canvas.width;\n\n    var ctx = canvas.getContext( '2d' );\n    var pixels = ctx.getImageData(0, 0, canvasWidth, canvasHeight ).data;\n\n    var x, y, doBreak;\n\n    doBreak = false;\n    for( y = 0; y < canvasHeight; y++ ) {\n        for( x = 0; x < canvasWidth; x++ ) {\n            var off = ( y * canvasWidth + x ) * 4;\n            if( pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\n                    pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a ){\n                doBreak = true;\n                break;\n            }\n        }\n        if( doBreak ){\n            break;\n        }\n    }\n    var topY = y;\n\n    doBreak = false;\n    for( x = 0; x < canvasWidth; x++ ) {\n        for( y = 0; y < canvasHeight; y++ ) {\n            var off = ( y * canvasWidth + x ) * 4;\n            if( pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\n                    pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a ){\n                doBreak = true;\n                break;\n            }\n        }\n        if( doBreak ){\n            break;\n        }\n    }\n    var topX = x;\n\n    doBreak = false;\n    for( y = canvasHeight-1; y >= 0; y-- ) {\n        for( x = canvasWidth-1; x >= 0; x-- ) {\n            var off = ( y * canvasWidth + x ) * 4;\n            if( pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\n                    pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a ){\n                doBreak = true;\n                break;\n            }\n        }\n        if( doBreak ){\n            break;\n        }\n    }\n    var bottomY = y;\n\n    doBreak = false;\n    for( x = canvasWidth-1; x >= 0; x-- ) {\n        for( y = canvasHeight-1; y >= 0; y-- ) {\n            var off = ( y * canvasWidth + x ) * 4;\n            if( pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\n                    pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a ){\n                doBreak = true;\n                break;\n            }\n        }\n        if( doBreak ){\n            break;\n        }\n    }\n    var bottomX = x;\n\n    var trimedCanvas = document.createElement( 'canvas' );\n    trimedCanvas.style.display = \"hidden\";\n    document.body.appendChild( trimedCanvas );\n\n    trimedCanvas.width = bottomX - topX;\n    trimedCanvas.height = bottomY - topY;\n\n    var trimedCtx = trimedCanvas.getContext( '2d' );\n\n    trimedCtx.drawImage(\n        canvas,\n        topX, topY,\n        trimedCanvas.width, trimedCanvas.height,\n        0, 0,\n        trimedCanvas.width, trimedCanvas.height\n    );\n\n    return trimedCanvas;\n\n}\n\n\nNGL.JitterVectors = [\n    [\n        [ 0, 0 ]\n    ],\n    [\n        [ 4, 4 ], [ - 4, - 4 ]\n    ],\n    [\n        [ - 2, - 6 ], [ 6, - 2 ], [ - 6, 2 ], [ 2, 6 ]\n    ],\n    [\n        [ 1, - 3 ], [ - 1, 3 ], [ 5, 1 ], [ - 3, - 5 ],\n        [ - 5, 5 ], [ - 7, - 1 ], [ 3, 7 ], [ 7, - 7 ]\n    ],\n    [\n        [ 1, 1 ], [ - 1, - 3 ], [ - 3, 2 ], [ 4, - 1 ],\n        [ - 5, - 2 ], [ 2, 5 ], [ 5, 3 ], [ 3, - 5 ],\n        [ - 2, 6 ], [ 0, - 7 ], [ - 4, - 6 ], [ - 6, 4 ],\n        [ - 8, 0 ], [ 7, - 4 ], [ 6, 7 ], [ - 7, - 8 ]\n    ],\n    [\n        [ - 4, - 7 ], [ - 7, - 5 ], [ - 3, - 5 ], [ - 5, - 4 ],\n        [ - 1, - 4 ], [ - 2, - 2 ], [ - 6, - 1 ], [ - 4, 0 ],\n        [ - 7, 1 ], [ - 1, 2 ], [ - 6, 3 ], [ - 3, 3 ],\n        [ - 7, 6 ], [ - 3, 6 ], [ - 5, 7 ], [ - 1, 7 ],\n        [ 5, - 7 ], [ 1, - 6 ], [ 6, - 5 ], [ 4, - 4 ],\n        [ 2, - 3 ], [ 7, - 2 ], [ 1, - 1 ], [ 4, - 1 ],\n        [ 2, 1 ], [ 6, 2 ], [ 0, 4 ], [ 4, 4 ],\n        [ 2, 5 ], [ 7, 5 ], [ 5, 6 ], [ 3, 7 ]\n    ]\n];\nNGL.JitterVectors.forEach( function( offsetList ){\n    offsetList.forEach( function( offset ){\n        // 0.0625 = 1 / 16\n        offset[ 0 ] *= 0.0625;\n        offset[ 1 ] *= 0.0625;\n    } );\n} );\n\n\nTHREE.OrthographicCamera.prototype.setViewOffset = function( fullWidth, fullHeight, x, y, width, height ) {\n\n    this.view = {\n        fullWidth: fullWidth,\n        fullHeight: fullHeight,\n        offsetX: x,\n        offsetY: y,\n        width: width,\n        height: height\n    };\n\n    this.updateProjectionMatrix();\n\n};\n\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\n\n    var dx = ( this.right - this.left ) / ( 2 * this.zoom );\n    var dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n    var cx = ( this.right + this.left ) / 2;\n    var cy = ( this.top + this.bottom ) / 2;\n\n    var left = cx - dx;\n    var right = cx + dx;\n    var top = cy + dy;\n    var bottom = cy - dy;\n\n    if( this.view ){\n\n        var scaleW = this.zoom / ( this.view.width / this.view.fullWidth );\n        var scaleH = this.zoom / ( this.view.height / this.view.fullHeight );\n\n        left += this.view.offsetX / scaleW;\n        right = left + this.view.width / scaleW;\n        top -= this.view.offsetY / scaleH;\n        bottom = top - this.view.height / scaleH;\n\n    }\n\n    this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n};\n\n\n//////////\n// Stats\n\nNGL.Stats = function(){\n\n    var SIGNALS = signals;\n\n    this.signals = {\n\n        updated: new SIGNALS.Signal(),\n\n    };\n\n    this.begin();\n\n    this.maxDuration = -Infinity;\n    this.minDuration = Infinity;\n    this.avgDuration = 14;\n    this.lastDuration = Infinity;\n\n    this.prevFpsTime = 0;\n    this.lastFps = Infinity;\n    this.lastFrames = 1;\n    this.frames = 0;\n    this.count = 0;\n\n}\n\nNGL.Stats.prototype = {\n\n    update: function(){\n\n        this.startTime = this.end();\n        this.signals.updated.dispatch();\n\n    },\n\n    begin: function(){\n\n        this.startTime = performance.now();\n        this.lastFrames = this.frames;\n\n    },\n\n    end: function(){\n\n        var time = performance.now();\n\n        this.count += 1;\n        this.frames += 1;\n\n        this.lastDuration = time - this.startTime;\n        this.minDuration = Math.min( this.minDuration, this.lastDuration );\n        this.maxDuration = Math.max( this.maxDuration, this.lastDuration );\n        this.avgDuration -= this.avgDuration / 30;\n        this.avgDuration += this.lastDuration / 30;\n\n        if( time > this.prevFpsTime + 1000 ) {\n            this.lastFps = this.frames;\n            this.prevFpsTime = time;\n            this.frames = 0;\n        }\n\n        return time;\n\n    }\n\n};\n\n\n///////////\n// Viewer\n\n/**\n * [Viewer description]\n * @class\n * @param {String} eid\n */\nNGL.Viewer = function( eid, params ){\n\n    var SIGNALS = signals;\n\n    this.signals = {\n\n        orientationChanged: new SIGNALS.Signal(),\n\n    };\n\n    if( eid ){\n        this.container = document.getElementById( eid );\n    }else{\n        this.container = document.createElement( 'div' );\n    }\n\n    if ( this.container === document ) {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n    } else {\n        var box = this.container.getBoundingClientRect();\n        this.width = box.width;\n        this.height = box.height;\n    }\n\n    this.initParams();\n    this.initStats();\n    // this.holdRendering = true;\n\n    this.initCamera();\n    this.initScene();\n    if( this.initRenderer() === false ) return;\n    this.initControls();\n    this.initHelper();\n\n    this._render = this.render.bind( this );\n    this._animate = this.animate.bind( this );\n\n    // fog & background\n    this.setBackground();\n    this.setFog();\n\n    this.boundingBox = new THREE.Box3();\n    this.distVector = new THREE.Vector3();\n\n    this.info = {\n\n        memory: {\n            programs: 0,\n            geometries: 0,\n            textures: 0\n        },\n\n        render: {\n            calls: 0,\n            vertices: 0,\n            faces: 0,\n            points: 0\n        }\n\n    };\n\n};\n\nNGL.Viewer.prototype = {\n\n    constructor: NGL.Viewer,\n\n    initParams: function(){\n\n        this.params = {\n\n            fogColor: new THREE.Color( 0x000000 ),\n            fogNear: 50,\n            fogFar: 100,\n\n            backgroundColor: new THREE.Color( 0x000000 ),\n\n            cameraType: \"perspective\",\n            cameraFov: 40,\n            cameraZ: -80, // FIXME initial value should be automatically determined\n\n            clipNear: 0,\n            clipFar: 100,\n            clipDist: 10,\n\n            spinAxis: null,\n            spinAngle: 0.01,\n\n            lightColor: new THREE.Color( 0xdddddd ),\n            lightIntensity: 1.0,\n            ambientColor: new THREE.Color( 0xdddddd ),\n            ambientIntensity: 0.2,\n\n            holdRendering: false,\n            sampleLevel: 0\n\n        };\n\n    },\n\n    initCamera: function(){\n\n        var p = this.params;\n        var lookAt = new THREE.Vector3( 0, 0, 0 );\n\n        this.perspectiveCamera = new THREE.PerspectiveCamera(\n            p.cameraFov, this.width / this.height, 0.1, 10000\n        );\n        this.perspectiveCamera.position.z = p.cameraZ;\n        this.perspectiveCamera.lookAt( lookAt );\n\n        this.orthographicCamera = new THREE.OrthographicCamera(\n            this.width / -2, this.width / 2,\n            this.height / 2, this.height / -2,\n            0.1, 10000\n        );\n        this.orthographicCamera.position.z = p.cameraZ;\n        this.orthographicCamera.lookAt( lookAt );\n\n        if( p.cameraType === \"orthographic\" ){\n            this.camera = this.orthographicCamera;\n        }else{  // p.cameraType === \"perspective\"\n            this.camera = this.perspectiveCamera;\n        }\n        this.camera.updateProjectionMatrix();\n\n    },\n\n    initRenderer: function(){\n\n        try{\n            this.renderer = new THREE.WebGLRenderer( {\n                preserveDrawingBuffer: true,\n                alpha: true,\n                antialias: true\n            } );\n        }catch( e ){\n            this.container.innerHTML = NGL.webglErrorMessage;\n            return false;\n        }\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( this.width, this.height );\n        this.renderer.autoClear = false;\n        this.renderer.sortObjects = true;\n\n        // var gl = this.renderer.getContext();\n        // console.log( gl.getContextAttributes().antialias );\n        // console.log( gl.getParameter(gl.SAMPLES) );\n\n        NGL.extensionFragDepth = this.renderer.extensions.get( \"EXT_frag_depth\" );\n        NGL.indexUint16 = !this.renderer.extensions.get( 'OES_element_index_uint' );\n\n        NGL.supportsReadPixelsFloat = (\n            ( NGL.browser === \"Chrome\" &&\n                this.renderer.extensions.get( 'OES_texture_float' ) ) ||\n            ( this.renderer.extensions.get( 'OES_texture_float' ) &&\n                this.renderer.extensions.get( \"WEBGL_color_buffer_float\" ) )\n        );\n\n        this.container.appendChild( this.renderer.domElement );\n\n        // picking texture\n\n        this.renderer.extensions.get( 'OES_texture_float' );\n        NGL.supportsHalfFloat = this.renderer.extensions.get( 'OES_texture_half_float' );\n        this.renderer.extensions.get( \"WEBGL_color_buffer_float\" );\n\n        this.pickingTarget = new THREE.WebGLRenderTarget(\n            this.width * window.devicePixelRatio,\n            this.height * window.devicePixelRatio,\n            {\n                minFilter: THREE.NearestFilter,\n                magFilter: THREE.NearestFilter,\n                stencilBuffer: false,\n                format: THREE.RGBAFormat,\n                type: NGL.supportsReadPixelsFloat ? THREE.FloatType : THREE.UnsignedByteType\n            }\n        );\n        this.pickingTarget.texture.generateMipmaps = false;\n\n        // msaa textures\n\n        this.sampleTarget = new THREE.WebGLRenderTarget(\n            this.width * window.devicePixelRatio,\n            this.height * window.devicePixelRatio,\n            {\n                minFilter: THREE.NearestFilter,\n                magFilter: THREE.NearestFilter,\n                format: THREE.RGBAFormat,\n            }\n        );\n\n        this.holdTarget = new THREE.WebGLRenderTarget(\n            this.width * window.devicePixelRatio,\n            this.height * window.devicePixelRatio,\n            {\n                minFilter: THREE.NearestFilter,\n                magFilter: THREE.NearestFilter,\n                format: THREE.RGBAFormat,\n                type: NGL.supportsHalfFloat ? THREE.HalfFloatType : THREE.FloatType\n            }\n        );\n\n        this.compositeUniforms = {\n            \"tForeground\": { type: \"t\", value: null },\n            \"scale\": { type: \"f\", value: 1.0 }\n        };\n\n        this.compositeMaterial = new THREE.ShaderMaterial( {\n            uniforms: this.compositeUniforms,\n            vertexShader: NGL.getShader( \"Quad.vert\" ),\n            fragmentShader: NGL.getShader( \"Quad.frag\" ),\n            transparent: true,\n            blending: THREE.CustomBlending,\n            blendSrc: THREE.OneFactor,\n            blendDst: THREE.OneFactor,\n            blendSrcAlpha: THREE.OneFactor,\n            blendDstAlpha: THREE.OneFactor,\n            blendEquation: THREE.AddEquation,\n            depthTest: false,\n            depthWrite: false\n        } );\n\n        this.compositeCamera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n        this.compositeScene = new THREE.Scene().add( new THREE.Mesh(\n            new THREE.PlaneGeometry( 2, 2 ), this.compositeMaterial\n        ) );\n\n    },\n\n    initScene: function(){\n\n        if( !this.scene ){\n            this.scene = new THREE.Scene();\n        }\n\n        this.rotationGroup = new THREE.Group();\n        this.rotationGroup.name = \"rotationGroup\";\n        this.scene.add( this.rotationGroup );\n\n        this.modelGroup = new THREE.Group();\n        this.modelGroup.name = \"modelGroup\";\n        this.rotationGroup.add( this.modelGroup );\n\n        this.pickingGroup = new THREE.Group();\n        this.pickingGroup.name = \"pickingGroup\";\n        this.rotationGroup.add( this.pickingGroup );\n\n        this.backgroundGroup = new THREE.Group();\n        this.backgroundGroup.name = \"backgroundGroup\";\n        this.rotationGroup.add( this.backgroundGroup );\n\n        this.helperGroup = new THREE.Group();\n        this.helperGroup.name = \"helperGroup\";\n        this.rotationGroup.add( this.helperGroup );\n\n        // fog\n\n        this.modelGroup.fog = new THREE.Fog();\n\n        // light\n\n        this.pointLight = new THREE.SpotLight(\n            this.params.lightColor, this.params.lightIntensity\n        );\n        this.modelGroup.add( this.pointLight );\n\n        this.ambientLight = new THREE.AmbientLight(\n            this.params.ambientLight, this.params.ambientIntensity\n        );\n        this.modelGroup.add( this.ambientLight );\n\n    },\n\n    initHelper: function(){\n\n        var indices = new Uint16Array( [\n            0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6,\n            6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7\n        ] );\n        var positions = new Float32Array( 8 * 3 );\n\n        var bbGeometry = new THREE.BufferGeometry();\n        bbGeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n        bbGeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n        var bbMaterial = new THREE.LineBasicMaterial( { color: \"skyblue\", linewidth: 2 } );\n\n        this.boundingBoxMesh = new THREE.LineSegments( bbGeometry, bbMaterial );\n        this.helperGroup.add( this.boundingBoxMesh );\n\n    },\n\n    updateHelper: function(){\n\n        var position = this.boundingBoxMesh.geometry.attributes.position;\n        var array = position.array;\n\n        var bb = this.boundingBox;\n        var min = bb.min;\n        var max = bb.max;\n\n        array[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n        array[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n        array[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n        array[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n        array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n        array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n        array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n        array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n        position.needsUpdate = true;\n\n        if( !bb.isEmpty() ){\n            this.boundingBoxMesh.geometry.computeBoundingSphere();\n        }\n\n    },\n\n    initControls: function(){\n\n        function preventDefault( e ){\n            e.preventDefault();\n        }\n        this.renderer.domElement.addEventListener(\n            'mousewheel', preventDefault, false\n        );\n        this.renderer.domElement.addEventListener(  // firefox\n            'MozMousePixelScroll', preventDefault, false\n        );\n        this.renderer.domElement.addEventListener(\n            'touchmove', preventDefault, false\n        );\n\n        this.controls = new THREE.TrackballControls( this.camera, this.renderer.domElement );\n        this.controls.rotateSpeed = 2.0;\n        this.controls.zoomSpeed = 1.2;\n        this.controls.panSpeed = 0.8;\n        this.controls.staticMoving = true;\n        // this.controls.dynamicDampingFactor = 0.3;\n        this.controls.keys = [ 65, 83, 68 ];\n\n        this.controls.addEventListener(\n            'change', this.requestRender.bind( this )\n        );\n\n        document.addEventListener(\n            'mousemove',\n            this.controls.update.bind( this.controls ),\n            false\n        );\n        document.addEventListener(\n            'touchmove',\n            this.controls.update.bind( this.controls ),\n            false\n        );\n\n        this.controls.addEventListener(\n            'change',\n            function(){\n                this.signals.orientationChanged.dispatch();\n            }.bind( this ),\n            false\n        );\n\n    },\n\n    initStats: function(){\n\n        this.stats = new NGL.Stats();\n\n    },\n\n    add: function( buffer, instanceList ){\n\n        // NGL.time( \"Viewer.add\" );\n\n        if( instanceList ){\n\n            instanceList.forEach( function( instance ){\n\n                this.addBuffer( buffer, instance );\n\n            }, this );\n\n        }else{\n\n            this.addBuffer( buffer );\n\n        }\n\n        if( buffer.background ){\n            this.backgroundGroup.add( buffer.group );\n            this.backgroundGroup.add( buffer.wireframeGroup );\n        }else{\n            this.modelGroup.add( buffer.group );\n            this.modelGroup.add( buffer.wireframeGroup );\n        }\n\n        if( buffer.pickable ){\n            this.pickingGroup.add( buffer.pickingGroup );\n        }\n\n        this.rotationGroup.updateMatrixWorld();\n        if( NGL.debug ) this.updateHelper();\n\n        // this.requestRender();\n\n        // NGL.timeEnd( \"Viewer.add\" );\n\n    },\n\n    addBuffer: function( buffer, instance ){\n\n        // NGL.time( \"Viewer.addBuffer\" );\n\n        var mesh = buffer.getMesh();\n        mesh.userData[ \"buffer\" ] = buffer;\n        if( instance ){\n            mesh.applyMatrix( instance.matrix );\n            mesh.userData[ \"instance\" ] = instance;\n        }\n        buffer.group.add( mesh );\n\n        var wireframeMesh = buffer.getWireframeMesh();\n        wireframeMesh.userData[ \"buffer\" ] = buffer;\n        if( instance ){\n            // wireframeMesh.applyMatrix( instance.matrix );\n            wireframeMesh.matrix.copy( mesh.matrix );\n            wireframeMesh.position.copy( mesh.position );\n            wireframeMesh.quaternion.copy( mesh.quaternion );\n            wireframeMesh.scale.copy( mesh.scale );\n            wireframeMesh.userData[ \"instance\" ] = instance;\n        }\n        buffer.wireframeGroup.add( wireframeMesh );\n\n        if( buffer.pickable ){\n\n            var pickingMesh = buffer.getPickingMesh();\n            pickingMesh.userData[ \"buffer\" ] = buffer;\n            if( instance ){\n                // pickingMesh.applyMatrix( instance.matrix );\n                pickingMesh.matrix.copy( mesh.matrix );\n                pickingMesh.position.copy( mesh.position );\n                pickingMesh.quaternion.copy( mesh.quaternion );\n                pickingMesh.scale.copy( mesh.scale );\n                pickingMesh.userData[ \"instance\" ] = instance;\n            }\n            buffer.pickingGroup.add( pickingMesh );\n\n        }\n\n        if( instance ){\n            this.updateBoundingBox( buffer.geometry, instance.matrix );\n        }else{\n            this.updateBoundingBox( buffer.geometry );\n        }\n\n        // NGL.timeEnd( \"Viewer.addBuffer\" );\n\n    },\n\n    remove: function( buffer ){\n\n        this.rotationGroup.children.forEach( function( group ){\n            group.remove( buffer.group );\n            group.remove( buffer.wireframeGroup );\n        } );\n\n        if( buffer.pickable ){\n            this.pickingGroup.remove( buffer.pickingGroup );\n        }\n\n        this.updateBoundingBox();\n        if( NGL.debug ) this.updateHelper();\n\n        // this.requestRender();\n\n    },\n\n    updateBoundingBox: function( geometry, matrix ){\n\n        var gbb;\n        var bb = this.boundingBox;\n\n        function updateGeometry( geometry, matrix ){\n\n            if( geometry.attributes.position.count === 0 ) return;\n\n            if( !geometry.boundingBox ){\n                geometry.computeBoundingBox();\n            }\n\n            if( matrix ){\n                gbb = geometry.boundingBox.clone();\n                gbb.applyMatrix4( matrix );\n            }else{\n                gbb = geometry.boundingBox;\n            }\n\n            if( gbb.min.equals( gbb.max ) ){\n                // mainly to give a single impostor geometry some volume\n                // as it is only expanded in the shader on the GPU\n                gbb.expandByScalar( 5 );\n            }\n\n            bb.expandByPoint( gbb.min );\n            bb.expandByPoint( gbb.max );\n\n        }\n\n        function updateNode( node ){\n\n            if( node.geometry !== undefined ){\n\n                var matrix = undefined;\n                if( node.userData[ \"instance\" ] ){\n                    matrix = node.userData[ \"instance\" ].matrix;\n                }\n\n                updateGeometry( node.geometry, matrix );\n\n            }\n\n        }\n\n        if( geometry ){\n\n            updateGeometry( geometry, matrix );\n\n        }else{\n\n            bb.makeEmpty();\n            this.modelGroup.traverse( updateNode );\n            this.backgroundGroup.traverse( updateNode );\n\n        }\n\n        this.controls.maxDistance = bb.size().length() * 10;\n\n    },\n\n    getImage: function(){\n\n        var renderer = this.renderer;\n\n        return new Promise( function( resolve, reject ){\n            renderer.domElement.toBlob( resolve, \"image/png\" );\n        } );\n\n    },\n\n    makeImage: function( params ){\n\n        return NGL.makeImage( this, params );\n\n    },\n\n    setLight: function( color, intensity, ambientColor, ambientIntensity ){\n\n        var p = this.params;\n\n        if( color !== undefined ) p.lightColor.set( color );\n        if( intensity !== undefined ) p.lightIntensity = intensity;\n        if( ambientColor !== undefined ) p.ambientColor.set( ambientColor );\n        if( ambientIntensity !== undefined ) p.ambientIntensity = ambientIntensity;\n\n        this.requestRender();\n\n    },\n\n    setFog: function( color, near, far ){\n\n        var p = this.params;\n\n        if( color !== undefined ) p.fogColor.set( color );\n        if( near !== undefined ) p.fogNear = near;\n        if( far !== undefined ) p.fogFar = far;\n\n        this.requestRender();\n\n    },\n\n    setBackground: function( color ){\n\n        var p = this.params;\n\n        if( color ) p.backgroundColor.set( color );\n\n        this.setFog( p.backgroundColor );\n        this.renderer.setClearColor( p.backgroundColor, 0 );\n        this.renderer.domElement.style.backgroundColor = p.backgroundColor.getStyle();\n\n        this.requestRender();\n\n    },\n\n    setSampling: function( level ){\n\n        if( level !== undefined ){\n            this.params.sampleLevel = level;\n            this.sampleLevel = level;\n        }\n\n        this.requestRender();\n\n    },\n\n    setCamera: function( type, fov ){\n\n        var p = this.params;\n\n        if( type ) p.cameraType = type;\n        if( fov ) p.cameraFov = fov;\n\n        if( p.cameraType === \"orthographic\" ){\n            if( this.camera !== this.orthographicCamera ){\n                this.camera = this.orthographicCamera;\n                this.camera.position.copy( this.perspectiveCamera.position );\n                this.camera.up.copy( this.perspectiveCamera.up );\n                this.__updateZoom();\n            }\n        }else{  // p.cameraType === \"perspective\"\n            if( this.camera !== this.perspectiveCamera ){\n                this.camera = this.perspectiveCamera;\n                this.camera.position.copy( this.orthographicCamera.position );\n                this.camera.up.copy( this.orthographicCamera.up );\n            }\n        }\n\n        this.perspectiveCamera.fov = p.cameraFov;\n        this.controls.object = this.camera;\n        this.camera.lookAt( this.controls.target );\n        this.camera.updateProjectionMatrix();\n\n        this.requestRender();\n\n    },\n\n    setClip: function( near, far, dist ){\n\n        var p = this.params;\n\n        if( near !== undefined ) p.clipNear = near;\n        if( far !== undefined ) p.clipFar = far;\n        if( dist !== undefined ) p.clipDist = dist;\n\n        this.requestRender();\n\n    },\n\n    setSpin: function( axis, angle ){\n\n        var p = this.params;\n\n        if( axis !== undefined ) p.spinAxis = axis;\n        if( angle !== undefined ) p.spinAngle = angle;\n\n    },\n\n    setSize: function( width, height ){\n\n        this.width = width;\n        this.height = height;\n\n        this.perspectiveCamera.aspect = this.width / this.height;\n        this.orthographicCamera.left = -this.width / 2;\n        this.orthographicCamera.right = this.width / 2;\n        this.orthographicCamera.top = this.height / 2;\n        this.orthographicCamera.bottom = -this.height / 2;\n        this.camera.updateProjectionMatrix();\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( this.width, this.height );\n\n        this.pickingTarget.setSize(\n            this.width * window.devicePixelRatio,\n            this.height * window.devicePixelRatio\n        );\n        this.sampleTarget.setSize(\n            this.width * window.devicePixelRatio,\n            this.height * window.devicePixelRatio\n        );\n        this.holdTarget.setSize(\n            this.width * window.devicePixelRatio,\n            this.height * window.devicePixelRatio\n        );\n\n        this.controls.handleResize();\n\n        this.requestRender();\n\n    },\n\n    handleResize: function(){\n\n        if( this.container === document ){\n\n            this.setSize( window.innerWidth, window.innerHeight );\n\n        }else{\n\n            var box = this.container.getBoundingClientRect();\n            this.setSize( box.width, box.height );\n\n        }\n\n    },\n\n    updateInfo: function( reset ){\n\n        var info = this.info;\n        var memory = info.memory;\n        var render = info.render;\n\n        if( reset ){\n\n            memory.programs = 0;\n            memory.geometries = 0;\n            memory.textures = 0;\n\n            render.calls = 0;\n            render.vertices = 0;\n            render.faces = 0;\n            render.points = 0;\n\n        }else{\n\n            var rInfo = this.renderer.info;\n            var rMemory = rInfo.memory;\n            var rRender = rInfo.render;\n\n            memory.programs = rMemory.programs;\n            memory.geometries = rMemory.geometries;\n            memory.textures = rMemory.textures;\n\n            render.calls += rRender.calls;\n            render.vertices += rRender.vertices;\n            render.faces += rRender.faces;\n            render.points += rRender.points;\n\n        }\n\n    },\n\n    rotate: function(){\n\n        var eye = new THREE.Vector3();\n        var quaternion = new THREE.Quaternion();\n        var eyeDirection = new THREE.Vector3();\n        var upDirection = new THREE.Vector3();\n        var sidewaysDirection = new THREE.Vector3();\n        var moveDirection = new THREE.Vector3();\n\n        return function( axis, angle ){\n\n            eye.copy( this.camera.position ).sub( this.controls.target );\n            eyeDirection.copy( eye ).normalize();\n            upDirection.copy( this.camera.up ).normalize();\n            sidewaysDirection.crossVectors( upDirection, eyeDirection ).normalize();\n\n            eyeDirection.setLength( axis.z );\n            upDirection.setLength( axis.y );\n            sidewaysDirection.setLength( axis.x );\n            moveDirection.copy( sidewaysDirection.sub( upDirection ).add( eyeDirection ) );\n\n            quaternion.setFromAxisAngle( moveDirection.normalize(), angle );\n            eye.applyQuaternion( quaternion );\n\n            this.camera.up.applyQuaternion( quaternion );\n            this.camera.position.addVectors( this.controls.target, eye );\n            this.camera.lookAt( this.controls.target );\n\n        }\n\n    }(),\n\n    zoom: function(){\n\n        var eye = new THREE.Vector3();\n        var eyeDirection = new THREE.Vector3();\n\n        return function( distance ){\n\n            eye.copy( this.camera.position ).sub( this.controls.target );\n            eyeDirection.copy( eye ).normalize();\n\n            eyeDirection.setLength( distance );\n            eye.add( eyeDirection );\n\n            this.camera.position.addVectors( this.controls.target, eye );\n            this.camera.lookAt( this.controls.target );\n\n            this.__updateZoom();\n\n        }\n\n    }(),\n\n    animate: function(){\n\n        this.controls.update();\n\n        var delta = performance.now() - this.stats.startTime;\n\n        if( delta > 500 && !this.still && this.sampleLevel < 3 && this.sampleLevel !== -1 ){\n\n            var currentSampleLevel = this.sampleLevel;\n            this.sampleLevel = 3;\n            this._renderPending = true;\n            this.render();\n            this.still = true;\n            this.sampleLevel = currentSampleLevel;\n            if( NGL.debug ) NGL.log( \"rendered still frame\" );\n\n        }\n\n        // spin\n\n        var p = this.params;\n\n        if( p.spinAxis && p.spinAngle ){\n            this.rotate( p.spinAxis, p.spinAngle * this.stats.lastDuration / 16 );\n            this.requestRender();\n        }\n\n        requestAnimationFrame( this._animate );\n\n    },\n\n    pick: function(){\n\n        var pixelBufferFloat = new Float32Array( 4 );\n        var pixelBufferUint = new Uint8Array( 4 );\n\n        return function( x, y ){\n\n            x *= window.devicePixelRatio;\n            y *= window.devicePixelRatio;\n\n            var gid, object, instance, bondId;\n            var pixelBuffer = NGL.supportsReadPixelsFloat ? pixelBufferFloat : pixelBufferUint;\n\n            this.render( true );\n            this.renderer.readRenderTargetPixels(\n                this.pickingTarget, x, y, 1, 1, pixelBuffer\n            );\n\n            if( NGL.supportsReadPixelsFloat ){\n                gid =\n                    ( ( Math.round( pixelBuffer[0] * 255 ) << 16 ) & 0xFF0000 ) |\n                    ( ( Math.round( pixelBuffer[1] * 255 ) << 8 ) & 0x00FF00 ) |\n                    ( ( Math.round( pixelBuffer[2] * 255 ) ) & 0x0000FF );\n            }else{\n                gid =\n                    ( pixelBuffer[0] << 16 ) |\n                    ( pixelBuffer[1] << 8 ) |\n                    ( pixelBuffer[2] );\n            }\n\n            object = this.pickingGroup.getObjectById(\n                Math.round( pixelBuffer[ 3 ] )\n            );\n\n            if( object && object.userData.instance ){\n                instance = object.userData.instance;\n            }\n\n            if( NGL.debug ){\n                var rgba = Array.apply( [], pixelBuffer );\n                NGL.log( pixelBuffer );\n                NGL.log(\n                    \"picked color\",\n                    [\n                        ( rgba[0] ).toPrecision(2),\n                        ( rgba[1] ).toPrecision(2),\n                        ( rgba[2] ).toPrecision(2),\n                        ( rgba[3] ).toPrecision(2)\n                    ]\n                );\n                NGL.log( \"picked gid\", gid );\n                NGL.log( \"picked instance\", instance );\n                NGL.log( \"picked position\", x, y );\n                NGL.log( \"devicePixelRatio\", window.devicePixelRatio );\n            }\n\n            return {\n                \"gid\": gid,\n                \"instance\": instance\n            };\n\n        };\n\n    }(),\n\n    requestRender: function(){\n\n        if( this._renderPending || this.holdRendering ){\n            // NGL.info( \"there is still a 'render' call pending\" );\n            return;\n        }\n\n        // start gathering stats anew after inactivity\n        if( performance.now() - this.stats.startTime > 22 ){\n            this.stats.begin();\n            this.still = false;\n        }\n\n        this._renderPending = true;\n\n        requestAnimationFrame( function(){\n            this.render();\n            this.stats.update();\n        }.bind( this ) );\n\n    },\n\n    __updateClipping: function(){\n\n        var p = this.params;\n        var camera = this.camera;\n\n        // clipping\n\n        var cDist = this.distVector.copy( camera.position )\n                        .sub( this.controls.target ).length();\n        // console.log( \"cDist\", cDist )\n        if( !cDist ){\n            // recover from a broken (NaN) camera position\n            camera.position.set( 0, 0, p.cameraZ );\n            cDist = Math.abs( p.cameraZ );\n        }\n        this.cDist = cDist;\n\n        var bRadius = Math.max( 10, this.boundingBox.size( this.distVector ).length() * 0.5 );\n        bRadius += this.boundingBox.center( this.distVector )\n            .add( this.rotationGroup.position )\n            .length();\n        if( bRadius === Infinity || bRadius === -Infinity || isNaN( bRadius ) ){\n            // console.warn( \"something wrong with bRadius\" );\n            bRadius = 50;\n        }\n        this.bRadius = bRadius;\n\n        var nearFactor = ( 50 - p.clipNear ) / 50;\n        var farFactor = - ( 50 - p.clipFar ) / 50;\n        camera.near = Math.max( 0.1, p.clipDist, cDist - ( bRadius * nearFactor ) );\n        camera.far = Math.max( 1, cDist + ( bRadius * farFactor ) );\n\n        // fog\n\n        var fogNearFactor = ( 50 - p.fogNear ) / 50;\n        var fogFarFactor = - ( 50 - p.fogFar ) / 50;\n        var fog = this.modelGroup.fog;\n        fog.color.set( p.fogColor );\n        fog.near = Math.max( 0.1, cDist - ( bRadius * fogNearFactor ) );\n        fog.far = Math.max( 1, cDist + ( bRadius * fogFarFactor ) );\n\n    },\n\n    __updateZoom: function(){\n\n        this.__updateClipping();\n        var fov = THREE.Math.degToRad( this.perspectiveCamera.fov );\n        var near = this.camera.near;\n        var far = this.camera.far;\n        var hyperfocus = ( near + far ) / 2;\n        var height = 2 * Math.tan( fov / 2 ) * hyperfocus;\n        this.orthographicCamera.zoom = this.height / height;\n\n    },\n\n    __updateCamera: function(){\n\n        var camera = this.camera;\n\n        camera.updateMatrix();\n        camera.updateMatrixWorld( true );\n        camera.matrixWorldInverse.getInverse( camera.matrixWorld );\n        camera.updateProjectionMatrix();\n\n        this.updateMaterialUniforms( this.scene, camera );\n        this.sortProjectedPosition( this.scene, camera );\n\n    },\n\n    __updateLights: function(){\n\n        var p = this.params;\n        var camera = this.camera;\n\n        var pointLight = this.pointLight;\n        pointLight.position.copy( camera.position ).multiplyScalar( 100 );\n        pointLight.updateMatrixWorld();\n        pointLight.color.set( p.lightColor );\n        pointLight.intensity = p.lightIntensity;\n\n        var ambientLight = this.ambientLight;\n        ambientLight.color.set( p.ambientColor );\n        ambientLight.intensity = p.ambientIntensity;\n\n    },\n\n    __renderPickingGroup: function(){\n\n        this.renderer.clearTarget( this.pickingTarget );\n        this.renderer.render(\n            this.pickingGroup, this.camera, this.pickingTarget\n        );\n        this.updateInfo();\n        this.renderer.setRenderTarget( null );  // back to standard render target\n\n        if( NGL.debug ){\n            this.renderer.clear();\n            this.renderer.render( this.pickingGroup, this.camera );\n            this.renderer.render( this.helperGroup, this.camera );\n        }\n\n    },\n\n    __renderModelGroup: function( renderTarget ){\n\n        if( renderTarget ){\n            this.renderer.clearTarget( renderTarget );\n        }else{\n            this.renderer.clear();\n        }\n\n        this.renderer.render( this.backgroundGroup, this.camera, renderTarget );\n        if( renderTarget ){\n            this.renderer.clearTarget( renderTarget, false, true, false );\n        }else{\n            this.renderer.clearDepth();\n        }\n        this.updateInfo();\n\n        this.renderer.render( this.modelGroup, this.camera, renderTarget );\n        this.updateInfo();\n\n        if( NGL.debug ){\n            this.renderer.render( this.helperGroup, this.camera, renderTarget );\n        }\n\n    },\n\n    __renderMultiSample: function(){\n\n        // based on the Manual Multi-Sample Anti-Aliasing Render Pass\n        // contributed to three.js by bhouston / http://clara.io/\n        //\n        // This manual approach to MSAA re-renders the scene ones for\n        // each sample with camera jitter and accumulates the results.\n        // References: https://en.wikipedia.org/wiki/Multisample_anti-aliasing\n\n        var camera = this.camera;\n        var offsetList = NGL.JitterVectors[ Math.max( 0, Math.min( this.sampleLevel, 5 ) ) ];\n\n        this.compositeUniforms[ \"scale\" ].value = 1.0 / offsetList.length;\n        this.compositeUniforms[ \"tForeground\" ].value = this.sampleTarget;\n        this.compositeUniforms[ \"tForeground\" ].needsUpdate = true;\n        this.compositeMaterial.needsUpdate = true;\n\n        // this.renderer.setRenderTarget( this.sampleTarget );\n        var width = this.sampleTarget.width;\n        var height = this.sampleTarget.height;\n\n        // render the scene multiple times, each slightly jitter offset\n        // from the last and accumulate the results.\n        for ( var i = 0; i < offsetList.length; ++i ){\n\n            var offset = offsetList[ i ];\n            camera.setViewOffset(\n                width, height, offset[ 0 ], offset[ 1 ], width, height\n            );\n            this.__updateCamera();\n\n            this.__renderModelGroup( this.sampleTarget );\n            this.renderer.render(\n                this.compositeScene, this.compositeCamera, this.holdTarget, ( i === 0 )\n            );\n\n        }\n\n        this.renderer.setRenderTarget( null );\n\n        this.compositeUniforms[ \"scale\" ].value = 1.0;\n        this.compositeUniforms[ \"tForeground\" ].value = this.holdTarget;\n        this.compositeUniforms[ \"tForeground\" ].needsUpdate = true;\n        this.compositeMaterial.needsUpdate = true;\n\n        this.renderer.clear();\n        this.renderer.render( this.compositeScene, this.compositeCamera );\n\n        camera.view = null;\n\n    },\n\n    render: function( picking ){\n\n        if( this._rendering ){\n            NGL.warn( \"tried to call 'render' from within 'render'\" );\n            return;\n        }\n\n        // NGL.time( \"Viewer.render\" );\n\n        this._rendering = true;\n\n        this.__updateClipping();\n        this.__updateCamera();\n        this.__updateLights();\n\n        // render\n\n        this.updateInfo( true );\n\n        if( picking ){\n\n            this.__renderPickingGroup();\n\n        }else if( this.sampleLevel > 0 ){\n\n            this.__renderMultiSample();\n\n        }else{\n\n            this.__renderModelGroup();\n\n        }\n\n        this._rendering = false;\n        this._renderPending = false;\n\n        // NGL.timeEnd( \"Viewer.render\" );\n        // NGL.log( this.info.memory, this.info.render );\n\n    },\n\n    updateMaterialUniforms: function(){\n\n        var projectionMatrixInverse = new THREE.Matrix4();\n        var projectionMatrixTranspose = new THREE.Matrix4();\n\n        return function( group, camera ){\n\n            var cDist = this.cDist;\n            var bRadius = this.bRadius;\n            var canvasHeight = this.height;\n            var pixelRatio = this.renderer.getPixelRatio();\n            var ortho = camera.type === \"OrthographicCamera\" ? 1.0 : 0.0;\n\n            projectionMatrixInverse.getInverse(\n                camera.projectionMatrix\n            );\n\n            projectionMatrixTranspose.copy(\n                camera.projectionMatrix\n            ).transpose();\n\n            group.traverse( function( o ){\n\n                var m = o.material;\n                if( !m ) return;\n\n                var u = o.material.uniforms;\n                if( !u ) return;\n\n                if( m.clipNear ){\n                    var nearFactor = ( 50 - m.clipNear ) / 50;\n                    var nearClip = cDist - ( bRadius * nearFactor );\n                    u.nearClip.value = nearClip;\n                }\n\n                if( u.canvasHeight ){\n                    u.canvasHeight.value = canvasHeight;\n                }\n\n                if( u.pixelRatio ){\n                    u.pixelRatio.value = pixelRatio;\n                }\n\n                if( u.projectionMatrixInverse ){\n                    u.projectionMatrixInverse.value.copy(\n                        projectionMatrixInverse\n                    );\n                }\n\n                if( u.projectionMatrixTranspose ){\n                    u.projectionMatrixTranspose.value.copy(\n                        projectionMatrixTranspose\n                    );\n                }\n\n                if( u.ortho ){\n                    u.ortho.value = ortho;\n                }\n\n            } );\n\n        }\n\n    }(),\n\n    sortProjectedPosition: function(){\n\n        var lastCall = 0;\n\n        var vertex = new THREE.Vector3();\n        var matrix = new THREE.Matrix4();\n        var modelViewProjectionMatrix = new THREE.Matrix4();\n\n        return function( scene, camera ){\n\n            // NGL.time( \"sort\" );\n\n            scene.traverseVisible( function ( o ){\n\n                if( !( o instanceof THREE.Points ) || !o.sortParticles ){\n                    return;\n                }\n\n                matrix.multiplyMatrices(\n                    camera.matrixWorldInverse, o.matrixWorld\n                );\n                modelViewProjectionMatrix.multiplyMatrices(\n                    camera.projectionMatrix, matrix\n                );\n\n                var attributes = o.geometry.attributes;\n                var n = attributes.position.count;\n\n                if( !o.userData.sortData ){\n                    o.userData.sortData = {};\n                }\n\n                var sortData = o.userData.sortData;\n\n                if( !sortData.__sortArray ){\n                    sortData.__sortArray = new Float32Array( n * 2 );\n                }\n\n                var sortArray = sortData.__sortArray;\n\n                for( var i = 0; i < n; ++i ){\n\n                    var i2 = 2 * i;\n\n                    vertex.fromArray( attributes.position.array, i * 3 );\n                    vertex.applyProjection( modelViewProjectionMatrix );\n\n                    // negate, so that sorting order is reversed\n                    sortArray[ i2 ] = -vertex.z;\n                    sortArray[ i2 + 1 ] = i;\n\n                }\n\n                THREE.TypedArrayUtils.quicksortIP( sortArray, 2, 0 );\n\n                var index, indexSrc, indexDst, tmpTab;\n\n                for( var name in attributes ){\n\n                    var attr = attributes[ name ];\n                    var array = attr.array;\n                    var itemSize = attr.itemSize;\n\n                    if( !sortData[ name ] ){\n                        sortData[ name ] = new Float32Array(\n                            itemSize * n\n                        );\n                    }\n\n                    tmpTab = sortData[ name ];\n                    sortData[ name ] = array;\n\n                    for( var i = 0; i < n; ++i ){\n\n                        index = sortArray[ i * 2 + 1 ];\n\n                        for( var j = 0; j < itemSize; ++j ){\n                            indexSrc = index * itemSize + j;\n                            indexDst = i * itemSize + j;\n                            tmpTab[ indexDst ] = array[ indexSrc ];\n                        }\n\n                    }\n\n                    attributes[ name ].array = tmpTab;\n                    attributes[ name ].needsUpdate = true;\n\n                }\n\n            } );\n\n            // NGL.timeEnd( \"sort\" );\n\n        }\n\n    }(),\n\n    clear: function(){\n\n        NGL.log( \"scene cleared\" );\n\n        this.scene.remove( this.rotationGroup );\n\n        this.initScene();\n\n        this.renderer.clear();\n\n    },\n\n    centerView: function(){\n\n        var t = new THREE.Vector3();\n        var eye = new THREE.Vector3();\n        var eyeDirection = new THREE.Vector3();\n        var bbSize = new THREE.Vector3();\n\n        return function( zoom, center ){\n\n            center = center || this.boundingBox.center();\n\n            // remove any paning/translation\n            this.controls.object.position.sub( this.controls.target );\n            this.controls.target.copy( this.controls.target0 );\n\n            // center\n            t.copy( center ).multiplyScalar( -1 );\n            this.rotationGroup.position.copy( t );\n            this.rotationGroup.updateMatrixWorld();\n\n            if( zoom ){\n\n                if( zoom === true ){\n\n                    // automatic zoom that shows\n                    // everything inside the bounding box\n                    // TODO take extent towards the camera into account\n\n                    this.boundingBox.size( bbSize );\n                    var maxSize = Math.max( bbSize.x, bbSize.y, bbSize.z );\n                    var minSize = Math.min( bbSize.x, bbSize.y, bbSize.z );\n                    // var avgSize = ( bbSize.x + bbSize.y + bbSize.z ) / 3;\n                    var objSize = maxSize + ( minSize / 2 );\n                    zoom = objSize;\n\n                }\n\n                var fov = THREE.Math.degToRad( this.perspectiveCamera.fov );\n                var aspect = this.width / this.height;\n\n                zoom = zoom / 2 / aspect / Math.tan( fov / 2 );\n                zoom = Math.max( zoom, 1.2 * this.params.clipDist );\n\n                eye.copy( this.camera.position ).sub( this.controls.target );\n                eyeDirection.copy( eye ).normalize();\n\n                eyeDirection.setLength( zoom );\n                eye.copy( eyeDirection );\n\n                this.camera.position.addVectors( this.controls.target, eye );\n\n                this.__updateZoom();\n            }\n\n            this.requestRender();\n\n            this.signals.orientationChanged.dispatch();\n\n        }\n\n    }(),\n\n    getOrientation: function(){\n\n        return [\n            this.camera.position.toArray(),\n            this.camera.up.toArray(),\n            this.rotationGroup.position.toArray(),\n            this.controls.target.toArray()\n        ];\n\n    },\n\n    setOrientation: function( orientation ){\n\n        // remove any paning/translation\n        this.controls.object.position.sub( this.controls.target );\n        this.controls.target.copy( this.controls.target0 );\n\n        this.controls.target.fromArray( orientation[ 3 ] );\n\n        this.rotationGroup.position.fromArray( orientation[ 2 ] );\n        this.rotationGroup.updateMatrixWorld();\n\n        this.camera.up.fromArray( orientation[ 1 ] );\n        this.camera.position.fromArray( orientation[ 0 ] );\n\n        this.requestRender();\n\n        this.signals.orientationChanged.dispatch();\n\n    }\n\n};\n\n\n/////////////\n// Renderer\n\nNGL.TiledRenderer = function( renderer, camera, viewer, params ){\n\n    var p = params || {};\n\n    this.renderer = renderer;\n    this.camera = camera;\n    this.viewer = viewer;\n\n    this.factor = p.factor!==undefined ? p.factor : 2;\n    this.antialias = p.antialias!==undefined ? p.antialias : false;\n\n    this.onProgress = p.onProgress;\n    this.onFinish = p.onFinish;\n\n    this.init();\n\n};\n\nNGL.TiledRenderer.prototype = {\n\n    init: function(){\n\n        if( this.antialias ) this.factor *= 2;\n        this.n = this.factor * this.factor;\n\n        // canvas\n\n        var canvas = document.createElement( 'canvas' );\n        canvas.style.display = \"hidden\";\n        document.body.appendChild( canvas );\n\n        if( this.antialias ){\n            canvas.width = this.viewer.width * this.factor / 2;\n            canvas.height = this.viewer.height * this.factor / 2;\n        }else{\n            canvas.width = this.viewer.width * this.factor;\n            canvas.height = this.viewer.height * this.factor;\n        }\n\n        this.ctx = canvas.getContext( '2d' );\n        this.canvas = canvas;\n\n        this.viewerSampleLevel = this.viewer.sampleLevel;\n        this.viewer.sampleLevel = -1;\n\n    },\n\n    renderTile: function( i ){\n\n        var factor = this.factor;\n\n        var x = i % factor;\n        var y = Math.floor( i / factor );\n\n        var width = this.viewer.width;\n        var height = this.viewer.height;\n        var offsetX = x * width;\n        var offsetY = y * height;\n\n        this.viewer.camera.setViewOffset(\n            width * factor,\n            height * factor,\n            offsetX,\n            offsetY,\n            width,\n            height\n        );\n\n        this.viewer.render();\n\n        if( this.antialias ){\n            this.ctx.drawImage(\n                this.renderer.domElement,\n                Math.floor( offsetX / 2 ),\n                Math.floor( offsetY / 2 ),\n                Math.ceil( width / 2 ),\n                Math.ceil( height / 2 )\n            );\n        }else{\n            this.ctx.drawImage(\n                this.renderer.domElement,\n                Math.floor( offsetX ),\n                Math.floor( offsetY ),\n                Math.ceil( width ),\n                Math.ceil( height )\n            );\n        }\n\n        if( typeof this.onProgress === \"function\" ){\n            this.onProgress( i + 1, this.n, false );\n        }\n\n    },\n\n    finalize: function(){\n\n        this.viewer.sampleLevel = this.viewerSampleLevel;\n        this.viewer.camera.view = null;\n\n        if( typeof this.onFinish === \"function\" ){\n            this.onFinish( this.n + 1, this.n, false );\n        }\n\n    },\n\n    render: function(){\n\n        var n = this.n;\n\n        for( var i = 0; i <= n; ++i ){\n            if( i === n ){\n                this.finalize();\n            }else{\n                this.renderTile( i );\n            }\n        }\n\n    },\n\n    renderAsync: function(){\n\n        var n = this.n;\n        var renderTile = this.renderTile.bind( this );\n        var finalize = this.finalize.bind( this );\n\n        for( var i = 0; i <= n; ++i ){\n            setTimeout( function( i ){\n                if( i === n ){\n                    finalize();\n                }else{\n                    renderTile( i );\n                }\n            }, 0, i );\n        }\n\n    },\n\n    dispose: function(){\n\n        document.body.removeChild( this.canvas );\n\n    }\n\n};\n\n\nNGL.makeImage = function( viewer, params ){\n\n    var p = params || {};\n\n    var trim = p.trim!==undefined ? p.trim : false;\n    var factor = p.factor!==undefined ? p.factor : 1;\n    var antialias = p.antialias!==undefined ? p.antialias : false;\n    var transparent = p.transparent!==undefined ? p.transparent : false;\n\n    var renderer = viewer.renderer;\n    var camera = viewer.camera;\n\n    var originalClearAlpha = renderer.getClearAlpha();\n    var backgroundColor = renderer.getClearColor();\n\n    function setLineWidthAndPixelSize( invert ){\n        var _factor = factor;\n        if( antialias ) _factor *= 2;\n        if( invert ) _factor = 1 / _factor;\n        viewer.scene.traverse( function( o ){\n            var m = o.material;\n            if( m && m.linewidth ){\n                m.linewidth *= _factor;\n            }\n            if( m && m.uniforms && m.uniforms.size ){\n                if( m.uniforms.size[ \"__seen\" ] === undefined ){\n                    m.uniforms.size.value *= _factor;\n                    m.uniforms.size[ \"__seen\" ] = true;\n                }\n            }\n        } );\n        viewer.scene.traverse( function( o ){\n            var m = o.material;\n            if( m && m.uniforms && m.uniforms.size ){\n                delete m.uniforms.size[ \"__seen\" ];\n            }\n        } );\n    }\n\n    function trimCanvas( canvas ){\n        if( trim ){\n            var bg = backgroundColor;\n            var r = ( transparent ? 0 : bg.r * 255 ) | 0;\n            var g = ( transparent ? 0 : bg.g * 255 ) | 0;\n            var b = ( transparent ? 0 : bg.b * 255 ) | 0;\n            var a = ( transparent ? 0 : 255 ) | 0;\n            return NGL.trimCanvas( canvas, r, g, b, a );\n        }else{\n            return canvas;\n        }\n    }\n\n    function onProgress( i, n, finished ){\n        if( typeof p.onProgress === \"function\" ){\n            p.onProgress( i, n, finished );\n        }\n    }\n\n    return new Promise( function( resolve, reject ){\n\n        var tiledRenderer = new NGL.TiledRenderer(\n            renderer, camera, viewer,\n            {\n                factor: factor,\n                antialias: antialias,\n                onProgress: onProgress,\n                onFinish: onFinish\n            }\n        );\n\n        renderer.setClearAlpha( transparent ? 0 : 1 );\n        setLineWidthAndPixelSize();\n        tiledRenderer.renderAsync();\n\n        function onFinish( i, n ){\n            var canvas = trimCanvas( tiledRenderer.canvas );\n            canvas.toBlob(\n                function( blob ){\n                    renderer.setClearAlpha( originalClearAlpha );\n                    setLineWidthAndPixelSize( true );\n                    viewer.requestRender();\n                    tiledRenderer.dispose();\n                    onProgress( n, n, true );\n                    resolve( blob );\n                },\n                \"image/png\"\n            );\n        }\n\n    } );\n\n};\n\n// File:js/ngl/buffer.js\n\n/**\n * @file Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n////////////////\n// Buffer Core\n\nNGL.DoubleSidedBuffer = function( buffer ){\n\n    this.size = buffer.size;\n    this.side = buffer.side;\n    this.wireframe = buffer.wireframe;\n    this.visible = buffer.visible;\n    this.geometry = buffer.geometry;\n    this.pickable = buffer.pickable;\n    this.background = buffer.background;\n\n    this.group = new THREE.Group();\n    this.wireframeGroup = new THREE.Group();\n    this.pickingGroup = new THREE.Group();\n\n    var frontMeshes = [];\n    var backMeshes = [];\n\n    var frontBuffer = buffer;\n    var backBuffer = new buffer.constructor();\n\n    frontBuffer.makeMaterial();\n    backBuffer.makeMaterial();\n\n    backBuffer.geometry = buffer.geometry;\n    backBuffer.wireframeGeometry = buffer.wireframeGeometry;\n    backBuffer.size = buffer.size;\n    backBuffer.attributeSize = buffer.attributeSize;\n    backBuffer.pickable = buffer.pickable;\n    backBuffer.setParameters( buffer.getParameters() );\n    backBuffer.updateShader();\n\n    frontBuffer.setParameters( {\n        side: THREE.FrontSide\n    } );\n    backBuffer.setParameters( {\n        side: THREE.BackSide,\n        opacity: backBuffer.opacity\n    } );\n\n    this.getMesh = function( picking ){\n\n        var front, back;\n\n        if( picking ){\n            back = backBuffer.getPickingMesh();\n            front = frontBuffer.getPickingMesh();\n        }else{\n            back = backBuffer.getMesh();\n            front = frontBuffer.getMesh();\n        }\n\n        frontMeshes.push( front );\n        backMeshes.push( back );\n\n        this.setParameters( { side: this.side } );\n\n        return new THREE.Group().add( back, front );\n\n    };\n\n    this.getWireframeMesh = function(){\n\n        return buffer.getWireframeMesh();\n\n    };\n\n    this.getPickingMesh = function(){\n\n        return this.getMesh( true );\n\n    };\n\n    this.setAttributes = function( data ){\n\n        buffer.setAttributes( data );\n\n    };\n\n    this.setParameters = function( data ){\n\n        data = Object.assign( {}, data );\n\n        if( data.side === THREE.FrontSide ){\n\n            frontMeshes.forEach( function( m ){ m.visible = true; } );\n            backMeshes.forEach( function( m ){ m.visible = false; } );\n\n        }else if( data.side === THREE.BackSide ){\n\n            frontMeshes.forEach( function( m ){ m.visible = false; } );\n            backMeshes.forEach( function( m ){ m.visible = true; } );\n\n        }else if( data.side === THREE.DoubleSide ){\n\n            frontMeshes.forEach( function( m ){ m.visible = true; } );\n            backMeshes.forEach( function( m ){ m.visible = true; } );\n\n        }\n\n        if( data.side !== undefined ){\n            this.side = data.side;\n        }\n        delete data.side;\n\n        frontBuffer.setParameters( data );\n\n        if( data.wireframe !== undefined ){\n            this.wireframe = data.wireframe;\n            this.setVisibility( this.visible );\n        }\n        delete data.wireframe;\n\n        backBuffer.setParameters( data );\n\n    };\n\n    this.setVisibility = NGL.Buffer.prototype.setVisibility;\n\n    this.dispose = function(){\n\n        frontBuffer.dispose();\n        backBuffer.dispose();\n\n    };\n\n};\n\n\n/**\n * The core buffer class.\n * @class\n * @private\n */\nNGL.Buffer = function( position, color, index, pickingColor, params ){\n\n    var p = params || {};\n\n    // required properties:\n    // - size\n    // - attributeSize\n    // - vertexShader\n    // - fragmentShader\n\n    this.pickable = false;\n    this.dynamic = true;\n\n    this.opaqueBack = p.opaqueBack !== undefined ? p.opaqueBack : false;\n    this.dullInterior = p.dullInterior !== undefined ? p.dullInterior : false;\n    this.side = p.side !== undefined ? p.side : THREE.DoubleSide;\n    this.opacity = p.opacity !== undefined ? p.opacity : 1.0;\n    this.clipNear = p.clipNear !== undefined ? p.clipNear : 0;\n    this.flatShaded = p.flatShaded !== undefined ? p.flatShaded : false;\n    this.background = p.background !== undefined ? p.background : false;\n    this.linewidth = p.linewidth !== undefined ? p.linewidth : 1;\n    this.wireframe = p.wireframe !== undefined ? p.wireframe : false;\n    this.wireframeLinewidth = p.wireframeLinewidth || 1;\n    this.roughness = p.roughness !== undefined ? p.roughness : 0.4;\n    this.metalness = p.metalness !== undefined ? p.metalness : 0.0;\n    this.diffuse = p.diffuse !== undefined ? p.diffuse : 0xffffff;\n    this.forceTransparent = p.forceTransparent !== undefined ? p.forceTransparent : false;\n\n    this.geometry = new THREE.BufferGeometry();\n\n    this.addAttributes( {\n        \"position\": { type: \"v3\", value: position },\n        \"color\": { type: \"c\", value: color },\n    } );\n\n    this.indexVersion = 0;\n    this.wireframeIndexVersion = -1;\n\n    if( index ){\n        this.geometry.setIndex(\n            new THREE.BufferAttribute( index, 1 )\n        );\n        this.geometry.getIndex().setDynamic( this.dynamic );\n    }\n\n    if( pickingColor ){\n        this.addAttributes( {\n            \"pickingColor\": { type: \"c\", value: pickingColor },\n        } );\n        this.pickable = true;\n    }\n\n    this.uniforms = THREE.UniformsUtils.merge( [\n        THREE.UniformsLib[ \"common\" ],\n        {\n            \"fogColor\": { value: null },\n            \"fogNear\": { value: 0.0 },\n            \"fogFar\": { value: 0.0 },\n            \"opacity\": { value: this.opacity },\n            \"nearClip\": { value: 0.0 }\n        },\n        {\n            \"emissive\" : { value: new THREE.Color( 0x000000 ) },\n            \"roughness\": { value: this.roughness },\n            \"metalness\": { value: this.metalness }\n        },\n        THREE.UniformsLib[ \"ambient\" ],\n        THREE.UniformsLib[ \"lights\" ]\n    ] );\n\n    this.uniforms[ \"diffuse\" ].value.set( this.diffuse );\n\n    var objectId = new THREE.Uniform( 0.0 )\n        .onUpdate( function( object, camera ){\n            this.value = NGL.supportsReadPixelsFloat ? object.id : object.id / 255;\n        } );\n\n    this.pickingUniforms = {\n        \"nearClip\": { value: 0.0 },\n        \"objectId\": objectId\n    };\n\n    this.group = new THREE.Group();\n    this.wireframeGroup = new THREE.Group();\n    this.pickingGroup = new THREE.Group();\n\n    this.makeWireframeGeometry();\n\n};\n\nNGL.Buffer.prototype = {\n\n    constructor: NGL.Buffer,\n\n    parameters: {\n\n        opaqueBack: { updateShader: true },\n        dullInterior: { updateShader: true },\n        side: { updateShader: true, property: true },\n        opacity: { uniform: true },\n        clipNear: { updateShader: true, property: true },\n        flatShaded: { updateShader: true },\n        background: { updateShader: true },\n        linewidth: { property: true },\n        wireframe: { updateVisibility: true },\n        roughness: { uniform: true },\n        metalness: { uniform: true },\n        diffuse: { uniform: true },\n\n    },\n\n    get transparent () {\n\n        return this.opacity < 1 || this.forceTransparent;\n\n    },\n\n    makeMaterial: function(){\n\n        this.material = new THREE.ShaderMaterial( {\n            uniforms: this.uniforms,\n            vertexShader: \"\",\n            fragmentShader: \"\",\n            depthTest: true,\n            transparent: this.transparent,\n            depthWrite: true,\n            lights: true,\n            fog: true,\n            side: this.side,\n            linewidth: this.linewidth\n        } );\n        this.material.vertexColors = THREE.VertexColors;\n        this.material.extensions.derivatives = this.flatShaded;\n        this.material.extensions.fragDepth = this.impostor;\n        this.material.clipNear = this.clipNear;\n\n        this.wireframeMaterial = new THREE.ShaderMaterial( {\n            uniforms: this.uniforms,\n            vertexShader: \"Line.vert\",\n            fragmentShader: \"Line.frag\",\n            depthTest: true,\n            transparent: this.transparent,\n            depthWrite: true,\n            lights: false,\n            fog: true,\n            side: this.side,\n            linewidth: this.linewidth\n        } );\n        this.wireframeMaterial.vertexColors = THREE.VertexColors;\n        this.wireframeMaterial.clipNear = this.clipNear;\n\n        this.pickingMaterial = new THREE.ShaderMaterial( {\n            uniforms: this.pickingUniforms,\n            vertexShader: \"\",\n            fragmentShader: \"\",\n            depthTest: true,\n            transparent: false,\n            depthWrite: true,\n            lights: false,\n            fog: false,\n            side: this.side,\n            linewidth: this.linewidth\n        } );\n        this.pickingMaterial.vertexColors = THREE.VertexColors;\n        this.pickingMaterial.extensions.fragDepth = this.impostor;\n        this.pickingMaterial.clipNear = this.clipNear;\n\n        this.updateShader();\n\n    },\n\n    makeWireframeGeometry: function(){\n\n        this.makeWireframeIndex();\n\n        var geometry = this.geometry;\n        var wireframeIndex = this.wireframeIndex;\n        var wireframeGeometry = new THREE.BufferGeometry();\n\n        wireframeGeometry.attributes = geometry.attributes;\n        if( wireframeIndex ){\n            wireframeGeometry.setIndex(\n                new THREE.BufferAttribute( wireframeIndex, 1 )\n                    .setDynamic( this.dynamic )\n            );\n            wireframeGeometry.setDrawRange( 0, this.wireframeIndexCount );\n        }\n\n        this.wireframeGeometry = wireframeGeometry;\n\n    },\n\n    makeWireframeIndex: function(){\n\n        var edges = [];\n\n        function checkEdge( a, b ) {\n\n            if ( a > b ){\n                var tmp = a;\n                a = b;\n                b = tmp;\n            }\n\n            var list = edges[ a ];\n\n            if( list === undefined ){\n                edges[ a ] = [ b ];\n                return true;\n            }else if( list.indexOf( b ) === -1 ){\n                list.push( b );\n                return true;\n            }\n\n            return false;\n\n        }\n\n        return function(){\n\n            var index = this.geometry.index;\n\n            if( !this.wireframe ){\n\n                this.wireframeIndex = new Uint16Array( 0 );\n                this.wireframeIndexCount = 0;\n\n            }else if( index ){\n\n                var array = index.array;\n                var n = array.length;\n                if( this.geometry.drawRange.count !== Infinity ){\n                    n = this.geometry.drawRange.count;\n                }\n                var wireframeIndex;\n                if( this.wireframeIndex && this.wireframeIndex.length > n * 2 ){\n                    wireframeIndex = this.wireframeIndex;\n                }else{\n                    var count = this.geometry.attributes.position.count;\n                    var TypedArray = count > 65535 ? Uint32Array : Uint16Array;\n                    wireframeIndex = new TypedArray( n * 2 );\n                }\n\n                var j = 0;\n                edges.length = 0;\n\n                for( var i = 0; i < n; i += 3 ){\n\n                    var a = array[ i + 0 ];\n                    var b = array[ i + 1 ];\n                    var c = array[ i + 2 ];\n\n                    if( checkEdge( a, b ) ){\n                        wireframeIndex[ j + 0 ] = a;\n                        wireframeIndex[ j + 1 ] = b;\n                        j += 2;\n                    }\n                    if( checkEdge( b, c ) ){\n                        wireframeIndex[ j + 0 ] = b;\n                        wireframeIndex[ j + 1 ] = c;\n                        j += 2;\n                    }\n                    if( checkEdge( c, a ) ){\n                        wireframeIndex[ j + 0 ] = c;\n                        wireframeIndex[ j + 1 ] = a;\n                        j += 2;\n                    }\n\n                }\n\n                this.wireframeIndex = wireframeIndex;\n                this.wireframeIndexCount = j;\n                this.wireframeIndexVersion = this.indexVersion;\n\n            }\n\n        }\n\n    }(),\n\n    updateWireframeIndex: function(){\n\n        this.wireframeGeometry.setDrawRange( 0, Infinity );\n        if( this.wireframeIndexVersion < this.indexVersion ) this.makeWireframeIndex();\n\n        if( this.wireframeIndex.length > this.wireframeGeometry.index.array.length ){\n\n            this.wireframeGeometry.setIndex(\n                new THREE.BufferAttribute( this.wireframeIndex, 1 )\n                    .setDynamic( this.dynamic )\n            );\n\n        }else{\n\n            var index = this.wireframeGeometry.getIndex();\n            index.set( this.wireframeIndex );\n            index.needsUpdate = this.wireframeIndexCount > 0;\n            index.updateRange.count = this.wireframeIndexCount;\n\n        }\n\n        this.wireframeGeometry.setDrawRange( 0, this.wireframeIndexCount );\n\n    },\n\n    getRenderOrder: function(){\n\n        var renderOrder = 0;\n\n        if( this instanceof NGL.TextBuffer ){\n\n            renderOrder = 1;\n\n        }else if( this.transparent ){\n\n            if( this instanceof NGL.SurfaceBuffer ){\n                renderOrder = 3;\n            }else{\n                renderOrder = 2;\n            }\n\n        }\n\n        return renderOrder;\n\n    },\n\n    getMesh: function(){\n\n        var mesh;\n\n        if( !this.material ) this.makeMaterial();\n\n        if( this.line ){\n\n            mesh = new THREE.LineSegments( this.geometry, this.material );\n\n        }else if( this.point ){\n\n            mesh = new THREE.Points( this.geometry, this.material );\n            if( this.sortParticles ) mesh.sortParticles = true;\n\n        }else{\n\n            mesh = new THREE.Mesh( this.geometry, this.material );\n\n        }\n\n        mesh.frustumCulled = false;\n        mesh.renderOrder = this.getRenderOrder();\n\n        return mesh;\n\n    },\n\n    getWireframeMesh: function(){\n\n        var mesh;\n\n        if( !this.material ) this.makeMaterial();\n        if( !this.wireframeGeometry ) this.makeWireframeGeometry();\n\n        mesh = new THREE.LineSegments(\n            this.wireframeGeometry, this.wireframeMaterial\n        );\n\n        mesh.frustumCulled = false;\n        mesh.renderOrder = this.getRenderOrder();\n\n        return mesh;\n\n    },\n\n    getPickingMesh: function(){\n\n        var mesh;\n\n        if( !this.material ) this.makeMaterial();\n\n        mesh = new THREE.Mesh( this.geometry, this.pickingMaterial );\n\n        mesh.frustumCulled = false;\n        mesh.renderOrder = this.getRenderOrder();\n\n        return mesh;\n\n    },\n\n    getShader: function( name, type ){\n\n        return NGL.getShader( name, this.getDefines( type ) );\n\n    },\n\n    getVertexShader: function( type ){\n\n        return this.getShader( this.vertexShader, type );\n\n    },\n\n    getFragmentShader: function( type ){\n\n        return this.getShader( this.fragmentShader, type );\n\n    },\n\n    getDefines: function( type ){\n\n        var defines = {};\n\n        if( this.clipNear ){\n            defines[ \"NEAR_CLIP\" ] = 1;\n        }\n\n        if( type === \"picking\" ){\n\n            defines[ \"PICKING\" ] = 1;\n\n        }else{\n\n            if( type === \"background\" || this.background ){\n                defines[ \"NOLIGHT\" ] = 1;\n            }\n            if( this.flatShaded ){\n                defines[ \"FLAT_SHADED\" ] = 1;\n            }\n            if( this.opaqueBack ){\n                defines[ \"OPAQUE_BACK\" ] = 1;\n            }\n            if( this.dullInterior ){\n                defines[ \"DULL_INTERIOR\" ] = 1;\n            }\n\n        }\n\n        return defines;\n\n    },\n\n    getParameters: function(){\n\n        var params = {};\n\n        for( var name in this.parameters ){\n            params[ name ] = this[ name ];\n        }\n\n        return params;\n\n    },\n\n    addUniforms: function( uniforms ){\n\n        this.uniforms = THREE.UniformsUtils.merge(\n            [ this.uniforms, uniforms ]\n        );\n\n        this.pickingUniforms = THREE.UniformsUtils.merge(\n            [ this.pickingUniforms, uniforms ]\n        );\n\n    },\n\n    addAttributes: function( attributes ){\n\n        var itemSize = {\n            \"f\": 1, \"v2\": 2, \"v3\": 3, \"c\": 3\n        };\n\n        for( var name in attributes ){\n\n            var buf;\n            var a = attributes[ name ];\n\n            if( a.value ){\n\n                if( this.attributeSize * itemSize[ a.type ] !== a.value.length ){\n                    NGL.error( \"attribute value has wrong length\", name );\n                }\n\n                buf = a.value;\n\n            }else{\n\n                buf = new Float32Array(\n                    this.attributeSize * itemSize[ a.type ]\n                );\n\n            }\n\n            this.geometry.addAttribute(\n                name,\n                new THREE.BufferAttribute( buf, itemSize[ a.type ] )\n                    .setDynamic( this.dynamic )\n            );\n\n        }\n\n    },\n\n    updateRenderOrder: function(){\n\n        var renderOrder = this.getRenderOrder();\n        function setRenderOrder( mesh ){\n            mesh.renderOrder = renderOrder;\n        }\n\n        this.group.children.forEach( setRenderOrder );\n        if( this.pickingGroup ){\n            this.pickingGroup.children.forEach( setRenderOrder );\n        }\n\n    },\n\n    updateShader: function(){\n\n        var m = this.material;\n        var wm = this.wireframeMaterial;\n        var pm = this.pickingMaterial;\n\n        m.vertexShader = this.getVertexShader();\n        m.fragmentShader = this.getFragmentShader();\n        m.needsUpdate = true;\n\n        wm.vertexShader = this.getShader( \"Line.vert\" );\n        wm.fragmentShader = this.getShader( \"Line.frag\" );\n        wm.needsUpdate = true;\n\n        pm.vertexShader = this.getVertexShader( \"picking\" );\n        pm.fragmentShader = this.getFragmentShader( \"picking\" );\n        pm.needsUpdate = true;\n\n    },\n\n    setParameters: function( params ){\n\n        if( !params ) return;\n\n        var p = params;\n        var tp = this.parameters;\n\n        var propertyData = {};\n        var uniformData = {};\n        var doShaderUpdate = false;\n        var doVisibilityUpdate = false;\n\n        for( var name in p ){\n\n            if( p[ name ] === undefined ) continue;\n            if( tp[ name ] === undefined ) continue;\n\n            this[ name ] = p[ name ];\n\n            if( tp[ name ].property ){\n                if( tp[ name ].property !== true ){\n                    propertyData[ tp[ name ].property ] = p[ name ];\n                }else{\n                    propertyData[ name ] = p[ name ];\n                }\n            }\n\n            if( tp[ name ].uniform ){\n                if( tp[ name ].uniform !== true ){\n                    uniformData[ tp[ name ].uniform ] = p[ name ];\n                }else{\n                    uniformData[ name ] = p[ name ];\n                }\n            }\n\n            if( tp[ name ].updateShader ){\n                doShaderUpdate = true;\n            }\n\n            if( tp[ name ].updateVisibility ){\n                doVisibilityUpdate = true;\n            }\n\n            if( this.dynamic && name === \"wireframe\" && p[ name ] === true ){\n                this.updateWireframeIndex();\n            }\n\n            if( name === \"flatShaded\" ){\n                this.material.extensions.derivatives = this.flatShaded;\n            }\n\n            if( name === \"forceTransparent\" ){\n                propertyData[ \"transparent\" ] = this.transparent;\n            }\n\n        }\n\n        this.setProperties( propertyData );\n        this.setUniforms( uniformData );\n        if( doShaderUpdate ) this.updateShader();\n        if( doVisibilityUpdate ) this.setVisibility( this.visible );\n\n    },\n\n    setAttributes: function( data ){\n\n        /**\n         * Sets buffer attributes\n         * @param {Object} data - An object where the keys are the attribute names\n         *      and the values are the attribute data.\n         * @example\n         * var buffer = new NGL.Buffer();\n         * buffer.setAttributes({ attrName: attrData });\n         */\n\n        var geometry = this.geometry;\n        var attributes = geometry.attributes;\n\n        for( var name in data ){\n\n            var array = data[ name ];\n            var length = array.length;\n\n            if( name === \"index\" ){\n\n                var index = geometry.getIndex();\n                geometry.setDrawRange( 0, Infinity );\n\n                if( length > index.array.length ){\n\n                    geometry.setIndex(\n                        new THREE.BufferAttribute( array, 1 )\n                            .setDynamic( this.dynamic )\n                    );\n\n                }else{\n\n                    index.set( array );\n                    index.needsUpdate = length > 0;\n                    index.updateRange.count = length;\n                    geometry.setDrawRange( 0, length );\n\n                }\n\n                this.indexVersion++;\n                if( this.wireframe ) this.updateWireframeIndex();\n\n            }else{\n\n                var attribute = attributes[ name ];\n\n                if( length > attribute.array.length ){\n\n                    geometry.addAttribute(\n                        name,\n                        new THREE.BufferAttribute( array, attribute.itemSize )\n                            .setDynamic( this.dynamic )\n                    );\n\n                }else{\n\n                    attributes[ name ].set( array );\n                    attributes[ name ].needsUpdate = length > 0;\n                    attributes[ name ].updateRange.count = length;\n\n                }\n\n            }\n\n        }\n\n    },\n\n    setUniforms: function( data ){\n\n        if( !data ) return;\n\n        var u = this.material.uniforms;\n        var wu = this.wireframeMaterial.uniforms;\n        var pu = this.pickingMaterial.uniforms;\n\n        for( var name in data ){\n\n            if( name === \"opacity\" ){\n                this.setProperties( { transparent: this.transparent } );\n            }\n\n            if( u[ name ] !== undefined ){\n                if( u[ name ].value.set ){\n                    u[ name ].value.set( data[ name ] );\n                }else{\n                    u[ name ].value = data[ name ];\n                }\n            }\n\n            if( wu[ name ] !== undefined ){\n                if( wu[ name ].value.set ){\n                    wu[ name ].value.set( data[ name ] );\n                }else{\n                    wu[ name ].value = data[ name ];\n                }\n            }\n\n            if( pu[ name ] !== undefined ){\n                if( pu[ name ].value.set ){\n                    pu[ name ].value.set( data[ name ] );\n                }else{\n                    pu[ name ].value = data[ name ];\n                }\n            }\n\n        }\n\n    },\n\n    setProperties: function( data ){\n\n        if( !data ) return;\n\n        var m = this.material;\n        var wm = this.wireframeMaterial;\n        var pm = this.pickingMaterial;\n\n        for( var name in data ){\n\n            if( name === \"transparent\" ){\n                this.updateRenderOrder();\n            }\n\n            if( m[ name ] !== undefined ){\n                m[ name ] = data[ name ];\n            }\n\n            if( wm[ name ] !== undefined ){\n                wm[ name ] = data[ name ];\n            }\n\n            if( pm[ name ] !== undefined ){\n                pm[ name ] = data[ name ];\n            }\n\n        }\n\n        m.needsUpdate = true;\n        wm.needsUpdate = true;\n        pm.needsUpdate = true;\n\n    },\n\n    setVisibility: function( value ){\n\n        this.visible = value;\n\n        if( this.wireframe ){\n\n            this.group.visible = false;\n            this.wireframeGroup.visible = value;\n            if( this.pickable ){\n                this.pickingGroup.visible = false;\n            }\n\n        }else{\n\n            this.group.visible = value;\n            this.wireframeGroup.visible = false;\n            if( this.pickable ){\n                this.pickingGroup.visible = value;\n            }\n\n        }\n\n    },\n\n    dispose: function(){\n\n        if( this.material ) this.material.dispose();\n        if( this.wireframeMaterial ) this.wireframeMaterial.dispose();\n        if( this.pickingMaterial ) this.pickingMaterial.dispose();\n\n        this.geometry.dispose();\n        if( this.wireframeGeometry ) this.wireframeGeometry.dispose();\n\n    }\n\n};\n\n\nNGL.MeshBuffer = function( position, color, index, normal, pickingColor, params ){\n\n    var p = params || {};\n\n    this.size = position ? position.length / 3 : 0;\n    this.attributeSize = this.size;\n    this.vertexShader = 'Mesh.vert';\n    this.fragmentShader = 'Mesh.frag';\n\n    NGL.Buffer.call( this, position, color, index, pickingColor, p );\n\n    this.addAttributes( {\n        \"normal\": { type: \"v3\", value: normal },\n    } );\n\n    if( normal === undefined ){\n        this.geometry.computeVertexNormals();\n    }\n\n};\n\nNGL.MeshBuffer.prototype = Object.create( NGL.Buffer.prototype );\n\nNGL.MeshBuffer.prototype.constructor = NGL.MeshBuffer;\n\n\nNGL.MappedBuffer = function( params ){\n\n    // required\n    // - mapping\n    // - mappingType\n    // - mappingSize\n    // - mappingItemSize\n    // - mappingIndices\n    // - mappingIndicesSize\n\n    this.size = this.count;\n    this.attributeSize = this.count * this.mappingSize;\n\n    var n = this.count * this.mappingIndicesSize;\n    var TypedArray = this.attributeSize > 65535 ? Uint32Array : Uint16Array;\n    this.index = new TypedArray( n );\n    this.makeIndex();\n\n    NGL.Buffer.call( this, null, null, this.index, null, params );\n\n    this.addAttributes( {\n        \"mapping\": { type: this.mappingType, value: null },\n    } );\n\n};\n\nNGL.MappedBuffer.prototype = Object.create( NGL.Buffer.prototype );\n\nNGL.MappedBuffer.prototype.constructor = NGL.MappedBuffer;\n\nNGL.MappedBuffer.prototype.setAttributes = function( data ){\n\n    var count = this.count;\n    var mappingSize = this.mappingSize;\n    var attributes = this.geometry.attributes;\n\n    var a, d, itemSize, array, n, i, j;\n\n    for( var name in data ){\n\n        d = data[ name ];\n        a = attributes[ name ];\n        itemSize = a.itemSize;\n        array = a.array;\n\n        for( var k = 0; k < count; ++k ) {\n\n            n = k * itemSize;\n            i = n * mappingSize;\n\n            for( var l = 0; l < mappingSize; ++l ) {\n\n                j = i + ( itemSize * l );\n\n                for( var m = 0; m < itemSize; ++m ) {\n\n                    array[ j + m ] = d[ n + m ];\n\n                }\n\n            }\n\n        }\n\n        a.needsUpdate = true;\n\n    }\n\n};\n\nNGL.MappedBuffer.prototype.makeMapping = function(){\n\n    var count = this.count;\n    var mapping = this.mapping;\n    var mappingSize = this.mappingSize;\n    var mappingItemSize = this.mappingItemSize;\n\n    var aMapping = this.geometry.attributes[ \"mapping\" ].array;\n\n    for( var v = 0; v < count; v++ ) {\n\n        aMapping.set( mapping, v * mappingItemSize * mappingSize );\n\n    }\n\n};\n\nNGL.MappedBuffer.prototype.makeIndex = function(){\n\n    var count = this.count;\n    var mappingSize = this.mappingSize;\n    var mappingIndices = this.mappingIndices;\n    var mappingIndicesSize = this.mappingIndicesSize;\n    var mappingItemSize = this.mappingItemSize;\n\n    var index = this.index;\n\n    var i, ix, it;\n\n    for( var v = 0; v < count; v++ ) {\n\n        i = v * mappingItemSize * mappingSize;\n        ix = v * mappingIndicesSize;\n        it = v * mappingSize;\n\n        index.set( mappingIndices, ix );\n\n        for( var s = 0; s < mappingIndicesSize; ++s ){\n            index[ ix + s ] += it;\n        }\n\n    }\n\n};\n\n\nNGL.QuadBuffer = function( params ){\n\n    this.mapping = new Float32Array([\n        -1.0,  1.0,\n        -1.0, -1.0,\n         1.0,  1.0,\n         1.0, -1.0\n    ]);\n\n    this.mappingIndices = new Uint16Array([\n        0, 1, 2,\n        1, 3, 2\n    ]);\n\n    this.mappingIndicesSize = 6;\n    this.mappingType = \"v2\";\n    this.mappingSize = 4;\n    this.mappingItemSize = 2;\n\n    NGL.MappedBuffer.call( this, params );\n\n};\n\nNGL.QuadBuffer.prototype = Object.create( NGL.MappedBuffer.prototype );\n\nNGL.QuadBuffer.prototype.constructor = NGL.QuadBuffer;\n\n\nNGL.BoxBuffer = function( params ){\n\n    this.mapping = new Float32Array([\n        -1.0, -1.0, -1.0,\n         1.0, -1.0, -1.0,\n         1.0, -1.0,  1.0,\n        -1.0, -1.0,  1.0,\n        -1.0,  1.0, -1.0,\n         1.0,  1.0, -1.0,\n         1.0,  1.0,  1.0,\n        -1.0,  1.0,  1.0\n    ]);\n\n    this.mappingIndices = new Uint16Array([\n        0, 1, 2,\n        0, 2, 3,\n        1, 5, 6,\n        1, 6, 2,\n        4, 6, 5,\n        4, 7, 6,\n        0, 7, 4,\n        0, 3, 7,\n        0, 5, 1,\n        0, 4, 5,\n        3, 2, 6,\n        3, 6, 7\n    ]);\n\n    this.mappingIndicesSize = 36;\n    this.mappingType = \"v3\";\n    this.mappingSize = 8;\n    this.mappingItemSize = 3;\n\n    NGL.MappedBuffer.call( this, params );\n\n};\n\nNGL.BoxBuffer.prototype = Object.create( NGL.MappedBuffer.prototype );\n\nNGL.BoxBuffer.prototype.constructor = NGL.BoxBuffer;\n\n\nNGL.AlignedBoxBuffer = function( params ){\n\n    this.mapping = new Float32Array([\n        -1.0,  1.0, -1.0,\n        -1.0, -1.0, -1.0,\n         1.0,  1.0, -1.0,\n         1.0,  1.0,  1.0,\n         1.0, -1.0, -1.0,\n         1.0, -1.0,  1.0\n    ]);\n\n    this.mappingIndices = new Uint16Array([\n        0, 1, 2,\n        1, 4, 2,\n        2, 4, 3,\n        4, 5, 3\n    ]);\n\n    this.mappingIndicesSize = 12;\n    this.mappingType = \"v3\";\n    this.mappingSize = 6;\n    this.mappingItemSize = 3;\n\n    NGL.MappedBuffer.call( this, params );\n\n};\n\nNGL.AlignedBoxBuffer.prototype = Object.create( NGL.MappedBuffer.prototype );\n\nNGL.AlignedBoxBuffer.prototype.constructor = NGL.AlignedBoxBuffer;\n\n\n////////////////////////\n// Impostor Primitives\n\nNGL.SphereImpostorBuffer = function( position, color, radius, pickingColor, params ){\n\n    this.impostor = true;\n    this.count = position.length / 3;\n    this.vertexShader = \"SphereImpostor.vert\";\n    this.fragmentShader = \"SphereImpostor.frag\";\n\n    NGL.QuadBuffer.call( this, params );\n\n    this.addUniforms( {\n        \"projectionMatrixInverse\": { value: new THREE.Matrix4() },\n        \"ortho\": { value: 0.0 },\n    } );\n\n    this.addAttributes( {\n        \"radius\": { type: \"f\", value: null },\n    } );\n\n    this.setAttributes( {\n        \"position\": position,\n        \"color\": color,\n        \"radius\": radius,\n    } );\n\n    if( pickingColor ){\n\n        this.addAttributes( {\n            \"pickingColor\": { type: \"c\", value: null },\n        } );\n\n        this.setAttributes( {\n            \"pickingColor\": pickingColor,\n        } );\n\n        this.pickable = true;\n\n    }\n\n    this.makeMapping();\n\n};\n\nNGL.SphereImpostorBuffer.prototype = Object.create( NGL.QuadBuffer.prototype );\n\nNGL.SphereImpostorBuffer.prototype.constructor = NGL.SphereImpostorBuffer;\n\n\nNGL.CylinderImpostorBuffer = function( from, to, color, color2, radius, pickingColor, pickingColor2, params ){\n\n    var p = params || {};\n\n    // Moves the cylinder in camera space to get, for example,\n    // one of multiple shifted screen-aligned cylinders.\n    this.shift = p.shift !== undefined ? p.shift : 0;\n\n    this.cap = p.cap !== undefined ? p.cap : true;\n\n    this.impostor = true;\n    this.count = from.length / 3;\n    this.vertexShader = \"CylinderImpostor.vert\";\n    this.fragmentShader = \"CylinderImpostor.frag\";\n\n    NGL.AlignedBoxBuffer.call( this, p );\n\n    var modelViewMatrixInverse = new THREE.Uniform( new THREE.Matrix4() )\n        .onUpdate( function( object, camera ){\n            this.value.getInverse( object.modelViewMatrix );\n        } );\n\n    this.addUniforms( {\n        \"modelViewMatrixInverse\": modelViewMatrixInverse,\n        \"shift\": { value: this.shift },\n        \"ortho\": { value: 0.0 },\n    } );\n\n    this.addAttributes( {\n        \"position1\": { type: \"v3\", value: null },\n        \"position2\": { type: \"v3\", value: null },\n        \"color2\": { type: \"c\", value: null },\n        \"radius\": { type: \"f\", value: null },\n    } );\n\n    this.setAttributes( {\n        \"position\": NGL.Utils.calculateCenterArray( from, to ),\n\n        \"position1\": from,\n        \"position2\": to,\n        \"color\": color,\n        \"color2\": color2,\n        \"radius\": radius,\n    } );\n\n    if( pickingColor ){\n\n        this.addAttributes( {\n            \"pickingColor\": { type: \"c\", value: null },\n            \"pickingColor2\": { type: \"c\", value: null },\n        } );\n\n        this.setAttributes( {\n            \"pickingColor\": pickingColor,\n            \"pickingColor2\": pickingColor2,\n        } );\n\n        this.pickable = true;\n\n    }\n\n    this.makeMapping();\n\n    // FIXME\n    // if( this.cap ){\n    //     this.material.defines[ \"CAP\" ] = 1;\n    // }\n\n};\n\nNGL.CylinderImpostorBuffer.prototype = Object.create( NGL.AlignedBoxBuffer.prototype );\n\nNGL.CylinderImpostorBuffer.prototype.constructor = NGL.CylinderImpostorBuffer;\n\nNGL.CylinderImpostorBuffer.prototype.getMaterial = function( type ){\n\n    var material = NGL.Buffer.prototype.getMaterial.call( this, type );\n\n    if( this.cap ){\n        material.defines[ \"CAP\" ] = 1;\n    }\n\n    return material;\n\n}\n\n\nNGL.HyperballStickImpostorBuffer = function( position1, position2, color, color2, radius1, radius2, pickingColor, pickingColor2, params ){\n\n    var p = params || {};\n\n    var shrink = p.shrink !== undefined ? p.shrink : 0.14;\n\n    this.impostor = true;\n    this.count = position1.length / 3;\n    this.vertexShader = \"HyperballStickImpostor.vert\";\n    this.fragmentShader = \"HyperballStickImpostor.frag\";\n\n    NGL.BoxBuffer.call( this, p );\n\n    var matrix = new THREE.Matrix4();\n\n    function matrixCalc( object, camera ){\n\n        var u = object.material.uniforms;\n\n        if( u.modelViewMatrixInverse ){\n            u.modelViewMatrixInverse.value.getInverse(\n                object.modelViewMatrix\n            );\n        }\n\n        if( u.modelViewMatrixInverseTranspose ){\n            if( u.modelViewMatrixInverse ){\n                u.modelViewMatrixInverseTranspose.value.copy(\n                    u.modelViewMatrixInverse.value\n                ).transpose();\n            }else{\n                u.modelViewMatrixInverseTranspose.value\n                    .getInverse( object.modelViewMatrix )\n                    .transpose();\n            }\n        }\n\n        if( u.modelViewProjectionMatrix ){\n            u.modelViewProjectionMatrix.value.multiplyMatrices(\n                camera.projectionMatrix, object.modelViewMatrix\n            );\n        }\n\n        if( u.modelViewProjectionMatrixInverse ){\n            if( u.modelViewProjectionMatrix ){\n                matrix.copy(\n                    u.modelViewProjectionMatrix.value\n                );\n                u.modelViewProjectionMatrixInverse.value.getInverse(\n                    matrix\n                );\n            }else{\n                matrix.multiplyMatrices(\n                    camera.projectionMatrix, object.modelViewMatrix\n                );\n                u.modelViewProjectionMatrixInverse.value.getInverse(\n                    matrix\n                );\n            }\n        }\n\n    }\n\n    var modelViewProjectionMatrix = new THREE.Uniform( new THREE.Matrix4() )\n        .onUpdate( matrixCalc );\n    var modelViewProjectionMatrixInverse = new THREE.Uniform( new THREE.Matrix4() )\n        .onUpdate( matrixCalc );\n    var modelViewMatrixInverseTranspose = new THREE.Uniform( new THREE.Matrix4() )\n        .onUpdate( matrixCalc );\n\n    this.addUniforms( {\n        \"modelViewProjectionMatrix\": modelViewProjectionMatrix,\n        \"modelViewProjectionMatrixInverse\": modelViewProjectionMatrixInverse,\n        \"modelViewMatrixInverseTranspose\": modelViewMatrixInverseTranspose,\n        \"shrink\": { value: shrink },\n    } );\n\n    this.addAttributes( {\n        \"color\": { type: \"c\", value: null },\n        \"color2\": { type: \"c\", value: null },\n        \"radius\": { type: \"f\", value: null },\n        \"radius2\": { type: \"f\", value: null },\n        \"position1\": { type: \"v3\", value: null },\n        \"position2\": { type: \"v3\", value: null },\n    } );\n\n    this.setAttributes( {\n        \"color\": color,\n        \"color2\": color2,\n        \"radius\": radius1,\n        \"radius2\": radius2,\n        \"position1\": position1,\n        \"position2\": position2,\n\n        \"position\": NGL.Utils.calculateCenterArray( position1, position2 ),\n    } );\n\n    if( pickingColor ){\n\n        this.addAttributes( {\n            \"pickingColor\": { type: \"c\", value: null },\n            \"pickingColor2\": { type: \"c\", value: null },\n        } );\n\n        this.setAttributes( {\n            \"pickingColor\": pickingColor,\n            \"pickingColor2\": pickingColor2,\n        } );\n\n        this.pickable = true;\n\n    }\n\n    this.makeMapping();\n\n};\n\nNGL.HyperballStickImpostorBuffer.prototype = Object.create( NGL.BoxBuffer.prototype );\n\nNGL.HyperballStickImpostorBuffer.prototype.constructor = NGL.HyperballStickImpostorBuffer;\n\nNGL.HyperballStickImpostorBuffer.prototype.parameters = Object.assign( {\n\n    shrink: { uniform: true }\n\n}, NGL.BoxBuffer.prototype.parameters );\n\n\n////////////////////////\n// Geometry Primitives\n\nNGL.GeometryBuffer = function( position, color, pickingColor, params ){\n\n    var p = params || {};\n\n    // required properties:\n    // - geo\n\n    var geo = this.geo;\n\n    var n = position.length / 3;\n    var m = geo.vertices.length;\n    var o = geo.faces.length;\n\n    this.size = n * m;\n    this.positionCount = n;\n\n    this.geoPosition = NGL.Utils.positionFromGeometry( geo );\n    this.geoNormal = NGL.Utils.normalFromGeometry( geo );\n    this.geoIndex = NGL.Utils.indexFromGeometry( geo );\n\n    this.transformedGeoPosition = new Float32Array( m * 3 );\n    this.transformedGeoNormal = new Float32Array( m * 3 );\n\n    this.meshPosition = new Float32Array( this.size * 3 );\n    this.meshNormal = new Float32Array( this.size * 3 );\n    this.meshColor = new Float32Array( this.size * 3 );\n    this.meshPickingColor = new Float32Array( this.size * 3 );\n\n    var TypedArray = this.meshPosition.length / 3 > 65535 ? Uint32Array : Uint16Array;\n    this.meshIndex = new TypedArray( n * o * 3 );\n    this.makeIndex();\n\n    NGL.MeshBuffer.call(\n        this, this.meshPosition, this.meshColor, this.meshIndex,\n        this.meshNormal, this.meshPickingColor, p\n    );\n\n    this.initNormals = true;\n\n    this.setAttributes( {\n        position: position,\n        color: color,\n        pickingColor: pickingColor\n    } );\n\n    this.initNormals = false;\n\n};\n\nNGL.GeometryBuffer.prototype = Object.create( NGL.MeshBuffer.prototype );\n\nNGL.GeometryBuffer.prototype.constructor = NGL.GeometryBuffer;\n\nNGL.GeometryBuffer.prototype.applyPositionTransform = function(){};\n\nNGL.GeometryBuffer.prototype.setAttributes = function(){\n\n    var matrix = new THREE.Matrix4();\n    var normalMatrix = new THREE.Matrix3();\n\n    return function( data ){\n\n        var attributes = this.geometry.attributes;\n\n        var position, color, pickingColor;\n        var geoPosition, geoNormal;\n        var transformedGeoPosition, transformedGeoNormal;\n        var meshPosition, meshColor, meshPickingColor, meshNormal;\n\n        if( data[ \"position\" ] ){\n            position = data[ \"position\" ];\n            geoPosition = this.geoPosition;\n            meshPosition = this.meshPosition;\n            transformedGeoPosition = this.transformedGeoPosition;\n            attributes[ \"position\" ].needsUpdate = true;\n        }\n\n        if( data[ \"color\" ] ){\n            color = data[ \"color\" ];\n            meshColor = this.meshColor;\n            attributes[ \"color\" ].needsUpdate = true;\n        }\n\n        if( data[ \"pickingColor\" ] ){\n            pickingColor = data[ \"pickingColor\" ];\n            meshPickingColor = this.meshPickingColor;\n            attributes[ \"pickingColor\" ].needsUpdate = true;\n        }\n\n        var updateNormals = !!( this.updateNormals && position );\n        var initNormals = !!( this.initNormals && position );\n\n        if( updateNormals || initNormals ){\n            geoNormal = this.geoNormal;\n            meshNormal = this.meshNormal;\n            transformedGeoNormal = this.transformedGeoNormal;\n            attributes[ \"normal\" ].needsUpdate = true;\n        }\n\n        var n = this.positionCount;\n        var m = this.geo.vertices.length;\n\n        for( var i = 0; i < n; ++i ){\n\n            var k = i * m * 3;\n            var i3 = i * 3;\n\n            if( position ){\n\n                transformedGeoPosition.set( geoPosition );\n                matrix.makeTranslation(\n                    position[ i3 ], position[ i3 + 1 ], position[ i3 + 2 ]\n                );\n                this.applyPositionTransform( matrix, i, i3 );\n                matrix.applyToVector3Array( transformedGeoPosition );\n\n                meshPosition.set( transformedGeoPosition, k );\n\n            }\n\n            if( updateNormals ){\n\n                transformedGeoNormal.set( geoNormal );\n                normalMatrix.getNormalMatrix( matrix );\n                normalMatrix.applyToVector3Array( transformedGeoNormal );\n\n                meshNormal.set( transformedGeoNormal, k );\n\n            }else if( initNormals ){\n\n                meshNormal.set( geoNormal, k );\n\n            }\n\n            if( color ){\n\n                for( var j = 0; j < m; ++j ){\n\n                    var l = k + 3 * j;\n\n                    meshColor[ l     ] = color[ i3     ];\n                    meshColor[ l + 1 ] = color[ i3 + 1 ];\n                    meshColor[ l + 2 ] = color[ i3 + 2 ];\n\n                }\n\n            }\n\n            if( pickingColor ){\n\n                for( var j = 0; j < m; ++j ){\n\n                    var l = k + 3 * j;\n\n                    meshPickingColor[ l     ] = pickingColor[ i3     ];\n                    meshPickingColor[ l + 1 ] = pickingColor[ i3 + 1 ];\n                    meshPickingColor[ l + 2 ] = pickingColor[ i3 + 2 ];\n\n                }\n\n            }\n\n        }\n\n    }\n\n}();\n\nNGL.GeometryBuffer.prototype.makeIndex = function(){\n\n    var geoIndex = this.geoIndex;\n    var meshIndex = this.meshIndex;\n\n    var n = this.positionCount;\n    var m = this.geo.vertices.length;\n    var o = this.geo.faces.length;\n\n    var p, i, j, q;\n    var o3 = o * 3;\n\n    for( i = 0; i < n; ++i ){\n\n        j = i * o3;\n        q = j + o3;\n\n        meshIndex.set( geoIndex, j );\n        for( p = j; p < q; ++p ) meshIndex[ p ] += i * m;\n\n    }\n\n};\n\n\nNGL.SphereGeometryBuffer = function( position, color, radius, pickingColor, params ){\n\n    var detail = params.sphereDetail !== undefined ? params.sphereDetail : 1;\n\n    this.geo = new THREE.IcosahedronGeometry( 1, detail );\n\n    this.setPositionTransform( radius );\n\n    NGL.GeometryBuffer.call( this, position, color, pickingColor, params );\n\n};\n\nNGL.SphereGeometryBuffer.prototype = Object.create( NGL.GeometryBuffer.prototype );\n\nNGL.SphereGeometryBuffer.prototype.constructor = NGL.SphereGeometryBuffer;\n\nNGL.SphereGeometryBuffer.prototype.setPositionTransform = function( radius ){\n\n    var r;\n    var scale = new THREE.Vector3();\n\n    this.applyPositionTransform = function( matrix, i ){\n\n        r = radius[ i ];\n        scale.set( r, r, r );\n        matrix.scale( scale );\n\n    }\n\n};\n\nNGL.SphereGeometryBuffer.prototype.setAttributes = function( data ){\n\n    if( data[ \"radius\" ] ){\n        this.setPositionTransform( data[ \"radius\" ] );\n    }\n\n    NGL.GeometryBuffer.prototype.setAttributes.call( this, data );\n\n}\n\n\nNGL.CylinderGeometryBuffer = function( from, to, color, color2, radius, pickingColor, pickingColor2, params ){\n\n    var radiusSegments = params.radiusSegments !== undefined ? params.radiusSegments : 10;\n\n    this.updateNormals = true;\n\n    var matrix = new THREE.Matrix4().makeRotationX( Math.PI/ 2  );\n\n    // FIXME params.cap\n    this.geo = new THREE.CylinderGeometry( 1, 1, 1, radiusSegments, 1, true );\n    this.geo.applyMatrix( matrix );\n\n    var n = from.length;\n    var m = radius.length;\n\n    this._position = new Float32Array( n * 2 );\n    this._color = new Float32Array( n * 2 );\n    this._pickingColor = new Float32Array( n * 2 );\n    this._from = new Float32Array( n * 2 );\n    this._to = new Float32Array( n * 2 );\n    this._radius = new Float32Array( m * 2 );\n\n    this.__center = new Float32Array( n );\n\n    NGL.GeometryBuffer.call(\n        this, this._position, this._color, this._pickingColor, params\n    );\n\n    this.setPositionTransform( this._from, this._to, this._radius );\n\n    this.setAttributes( {\n        \"position1\": from,\n        \"position2\": to,\n        \"color\": color,\n        \"color2\": color2,\n        \"radius\": radius,\n        \"pickingColor\": pickingColor,\n        \"pickingColor2\": pickingColor2\n    } );\n\n};\n\nNGL.CylinderGeometryBuffer.prototype = Object.create( NGL.GeometryBuffer.prototype );\n\nNGL.CylinderImpostorBuffer.prototype.constructor = NGL.CylinderImpostorBuffer;\n\nNGL.CylinderGeometryBuffer.prototype.setPositionTransform = function( from, to, radius ){\n\n    var r;\n    var scale = new THREE.Vector3();\n    var eye = new THREE.Vector3();\n    var target = new THREE.Vector3();\n    var up = new THREE.Vector3( 0, 1, 0 );\n\n    this.applyPositionTransform = function( matrix, i, i3 ){\n\n        eye.fromArray( from, i3 );\n        target.fromArray( to, i3 );\n        matrix.lookAt( eye, target, up );\n\n        r = radius[ i ];\n        scale.set( r, r, eye.distanceTo( target ) );\n        matrix.scale( scale );\n\n    }\n\n};\n\nNGL.CylinderGeometryBuffer.prototype.setAttributes = function( data ){\n\n    var n = this._position.length / 2;\n    var m = this._radius.length / 2;\n    var geoData = {};\n\n    if( data[ \"position1\" ] && data[ \"position2\" ] ){\n\n        NGL.Utils.calculateCenterArray(\n            data[ \"position1\" ], data[ \"position2\" ], this.__center\n        );\n        NGL.Utils.calculateCenterArray(\n            data[ \"position1\" ], this.__center, this._position\n        );\n        NGL.Utils.calculateCenterArray(\n            this.__center, data[ \"position2\" ], this._position, n\n        );\n\n        this._from.set( data[ \"position1\" ] );\n        this._from.set( this.__center, n );\n\n        this._to.set( this.__center );\n        this._to.set( data[ \"position2\" ], n );\n\n        geoData[ \"position\" ] = this._position;\n\n    }\n\n    if( data[ \"color\" ] && data[ \"color2\" ] ){\n\n        this._color.set( data[ \"color\" ] );\n        this._color.set( data[ \"color2\" ], n );\n\n        geoData[ \"color\" ] = this._color;\n\n    }\n\n    if( data[ \"pickingColor\" ] && data[ \"pickingColor2\" ] ){\n\n        this._pickingColor.set( data[ \"pickingColor\" ] );\n        this._pickingColor.set( data[ \"pickingColor2\" ], n );\n\n        geoData[ \"pickingColor\" ] = this._pickingColor;\n\n    }\n\n    if( data[ \"radius\" ] ){\n\n        this._radius.set( data[ \"radius\" ] );\n        this._radius.set( data[ \"radius\" ], m );\n\n    }\n\n    if( ( data[ \"position1\" ] && data[ \"position2\" ] ) || data[ \"radius\" ] ){\n\n        this.setPositionTransform( this._from, this._to, this._radius );\n\n    }\n\n    NGL.GeometryBuffer.prototype.setAttributes.call( this, geoData );\n\n}\n\n\n//////////////////////\n// Pixel Primitives\n\nNGL.makePointTexture = function( params ){\n\n    var p = Object.assign( {}, params );\n\n    var width = NGL.defaults( p.width, 256 );\n    var height = NGL.defaults( p.height, 256 );\n    var center = [ width / 2, height / 2 ];\n    var radius = Math.min( width / 2, height / 2 );\n    var delta = NGL.defaults( p.delta, 1 / ( radius + 1 ) ) * radius;\n\n    //\n\n    function clamp( value, min, max ){\n        return Math.min( Math.max( value, min ), max );\n    }\n\n    function distance( x0, y0, x1, y1 ){\n        var dx = x1 - x0, dy = y1 - y0;\n        return Math.sqrt( dx * dx + dy * dy );\n    }\n\n    function smoothStep( edge0, edge1, x ){\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp( ( x - edge0 ) / ( edge1 - edge0 ), 0, 1 );\n        // Evaluate polynomial\n        return x * x * ( 3 - 2 * x );\n    }\n\n    //\n\n    var x = 0\n    var y = 0;\n    var data = new Uint8Array( width * height * 4 );\n\n    for ( var i = 0, il = data.length; i < il; i += 4 ) {\n\n        var dist = distance( x, y, center[ 0 ], center[ 1 ] );\n        var value = 1 - smoothStep( radius - delta, radius, dist );\n\n        data[ i     ] = value * 255;\n        data[ i + 1 ] = value * 255;\n        data[ i + 2 ] = value * 255;\n        data[ i + 3 ] = value * 255;\n\n        if( ++x === width ){\n            x = 0;\n            y++;\n        }\n\n    }\n\n    var tex = new THREE.DataTexture( data, width, height );\n    tex.needsUpdate = true;\n\n    return tex;\n\n};\n\n\nNGL.PointBuffer = function( position, color, params ){\n\n    var p = params || {};\n\n    this.point = true;\n    this.pointSize = p.pointSize !== undefined ? p.pointSize : 1;\n    this.sizeAttenuation = p.sizeAttenuation !== undefined ? p.sizeAttenuation : true;\n    this.sortParticles = p.sortParticles !== undefined ? p.sortParticles : false;\n    this.alphaTest = p.alphaTest !== undefined ? p.alphaTest : 0.5;\n    this.useTexture = p.useTexture !== undefined ? p.useTexture : false;\n    this.forceTransparent = p.forceTransparent !== undefined ? p.forceTransparent : false;\n    this.edgeBleach = p.edgeBleach !== undefined ? p.edgeBleach : 0.0;\n\n    this.size = position.length / 3;\n    this.attributeSize = this.size;\n    this.vertexShader = 'Point.vert';\n    this.fragmentShader = 'Point.frag';\n\n    NGL.Buffer.call( this, position, color, undefined, undefined, p );\n\n    this.addUniforms( {\n        \"size\": { value: this.pointSize },\n        \"canvasHeight\": { value: 1.0 },\n        \"pixelRatio\": { value: 1.0 },\n        \"map\": { value: null },\n    } );\n\n};\n\nNGL.PointBuffer.prototype = Object.create( NGL.Buffer.prototype );\n\nNGL.PointBuffer.prototype.constructor = NGL.PointBuffer;\n\nNGL.PointBuffer.prototype.parameters = Object.assign( {\n\n    pointSize: { uniform: \"size\" },\n    sizeAttenuation: { updateShader: true },\n    sortParticles: {},\n    alphaTest: { updateShader: true },\n    useTexture: { updateShader: true },\n    forceTransparent: {},\n    edgeBleach: { uniform: true },\n\n}, NGL.Buffer.prototype.parameters );\n\nNGL.PointBuffer.prototype.makeMaterial = function(){\n\n    NGL.Buffer.prototype.makeMaterial.call( this );\n\n    this.makeTexture();\n\n    this.material.uniforms.map.value = this.tex;\n    this.material.blending = THREE.NormalBlending;\n    this.material.needsUpdate = true;\n\n};\n\nNGL.PointBuffer.prototype.makeTexture = function(){\n\n    if( this.tex ) this.tex.dispose();\n    this.tex = NGL.makePointTexture( { delta: this.edgeBleach } );\n\n};\n\nNGL.PointBuffer.prototype.getDefines = function( type ){\n\n    var defines = NGL.Buffer.prototype.getDefines.call( this, type );\n\n    if( this.sizeAttenuation ){\n        defines[ \"USE_SIZEATTENUATION\" ] = 1;\n    }\n\n    if( this.useTexture ){\n        defines[ \"USE_MAP\" ] = 1;\n    }\n\n    if( this.alphaTest > 0 && this.alphaTest <= 1 ){\n        defines[ \"ALPHATEST\" ] = this.alphaTest.toPrecision( 2 );\n    }\n\n    return defines;\n\n};\n\nNGL.PointBuffer.prototype.setUniforms = function( data ){\n\n    if( data && data[ \"edgeBleach\" ] !== undefined ){\n\n        this.makeTexture();\n        data[ \"map\" ] = this.tex;\n\n    }\n\n    NGL.Buffer.prototype.setUniforms.call( this, data );\n\n};\n\nNGL.PointBuffer.prototype.dispose = function(){\n\n    NGL.Buffer.prototype.dispose.call( this );\n\n    if( this.tex ) this.tex.dispose();\n\n};\n\n\nNGL.LineBuffer = function( from, to, color, color2, params ){\n\n    var p = params || {};\n\n    this.size = from.length / 3;\n    this.vertexShader = 'Line.vert';\n    this.fragmentShader = 'Line.frag';\n    this.line = true;\n\n    var n = this.size;\n    var n6 = n * 6;\n    var nX = n * 2 * 2;\n\n    this.attributeSize = nX;\n\n    this.linePosition = new Float32Array( nX * 3 );\n    this.lineColor = new Float32Array( nX * 3 );\n\n    NGL.Buffer.call(\n        this, this.linePosition, this.lineColor, undefined, undefined, p\n    );\n\n    this.setAttributes( {\n        from: from,\n        to: to,\n        color: color,\n        color2: color2\n    } );\n\n};\n\nNGL.LineBuffer.prototype = Object.create( NGL.Buffer.prototype );\n\nNGL.LineBuffer.prototype.constructor = NGL.LineBuffer;\n\nNGL.LineBuffer.prototype.setAttributes = function( data ){\n\n    var from, to, color, color2;\n    var aPosition, aColor;\n\n    var attributes = this.geometry.attributes;\n\n    if( data[ \"from\" ] && data[ \"to\" ] ){\n        from = data[ \"from\" ];\n        to = data[ \"to\" ];\n        aPosition = attributes[ \"position\" ].array;\n        attributes[ \"position\" ].needsUpdate = true;\n    }\n\n    if( data[ \"color\" ] && data[ \"color2\" ] ){\n        color = data[ \"color\" ];\n        color2 = data[ \"color2\" ];\n        aColor = attributes[ \"color\" ].array;\n        attributes[ \"color\" ].needsUpdate = true;\n    }\n\n    var n = this.size;\n    var n6 = n * 6;\n\n    var i, j, i2;\n    var x, y, z, x1, y1, z1, x2, y2, z2;\n\n    for( var v = 0; v < n; v++ ){\n\n        j = v * 3;\n        i = v * 2 * 3;\n        i2 = i + n6;\n\n        if( from && to ){\n\n            x1 = from[ j     ];\n            y1 = from[ j + 1 ];\n            z1 = from[ j + 2 ];\n\n            x2 = to[ j     ];\n            y2 = to[ j + 1 ];\n            z2 = to[ j + 2 ];\n\n            x = ( x1 + x2 ) / 2.0;\n            y = ( y1 + y2 ) / 2.0;\n            z = ( z1 + z2 ) / 2.0;\n\n            aPosition[ i     ] = x1;\n            aPosition[ i + 1 ] = y1;\n            aPosition[ i + 2 ] = z1;\n            aPosition[ i + 3 ] = x;\n            aPosition[ i + 4 ] = y;\n            aPosition[ i + 5 ] = z;\n\n            aPosition[ i2     ] = x;\n            aPosition[ i2 + 1 ] = y;\n            aPosition[ i2 + 2 ] = z;\n            aPosition[ i2 + 3 ] = x2;\n            aPosition[ i2 + 4 ] = y2;\n            aPosition[ i2 + 5 ] = z2;\n\n        }\n\n        if( color && color2 ){\n\n            aColor[ i     ] = aColor[ i + 3 ] = color[ j     ];\n            aColor[ i + 1 ] = aColor[ i + 4 ] = color[ j + 1 ];\n            aColor[ i + 2 ] = aColor[ i + 5 ] = color[ j + 2 ];\n\n            aColor[ i2     ] = aColor[ i2 + 3 ] = color2[ j     ];\n            aColor[ i2 + 1 ] = aColor[ i2 + 4 ] = color2[ j + 1 ];\n            aColor[ i2 + 2 ] = aColor[ i2 + 5 ] = color2[ j + 2 ];\n\n        }\n\n    }\n\n};\n\n\nNGL.TraceBuffer = function( position, color, params ){\n\n    var p = params || {};\n\n    this.size = position.length / 3;\n    this.vertexShader = 'Line.vert';\n    this.fragmentShader = 'Line.frag';\n    this.line = true;\n\n    var n = this.size;\n    var n1 = n - 1;\n\n    this.attributeSize = n1 * 2;\n\n    this.linePosition = new Float32Array( n1 * 3 * 2 );\n    this.lineColor = new Float32Array( n1 * 3 * 2 );\n\n    NGL.Buffer.call(\n        this, this.linePosition, this.lineColor, undefined, undefined, p\n    );\n\n    this.setAttributes( {\n        position: position,\n        color: color\n    } );\n\n};\n\nNGL.TraceBuffer.prototype = Object.create( NGL.Buffer.prototype );\n\nNGL.TraceBuffer.prototype.constructor = NGL.TraceBuffer;\n\nNGL.TraceBuffer.prototype.setAttributes = function( data ){\n\n    var position, color;\n    var linePosition, lineColor;\n\n    var attributes = this.geometry.attributes;\n\n    if( data[ \"position\" ] ){\n        position = data[ \"position\" ];\n        linePosition = attributes[ \"position\" ].array;\n        attributes[ \"position\" ].needsUpdate = true;\n    }\n\n    if( data[ \"color\" ] ){\n        color = data[ \"color\" ];\n        lineColor = attributes[ \"color\" ].array;\n        attributes[ \"color\" ].needsUpdate = true;\n    }\n\n    if( !position && !color ){\n        NGL.warn( \"NGL.TraceBuffer.prototype.setAttributes no data\" );\n        return;\n    }\n\n    var v, v2;\n    var n = this.size;\n    var n1 = n - 1;\n\n    for( var i = 0; i < n1; ++i ){\n\n        v = 3 * i;\n        v2 = 3 * i * 2;\n\n        if( position ){\n\n            linePosition[ v2     ] = position[ v     ];\n            linePosition[ v2 + 1 ] = position[ v + 1 ];\n            linePosition[ v2 + 2 ] = position[ v + 2 ];\n\n            linePosition[ v2 + 3 ] = position[ v + 3 ];\n            linePosition[ v2 + 4 ] = position[ v + 4 ];\n            linePosition[ v2 + 5 ] = position[ v + 5 ];\n\n        }\n\n        if( color ){\n\n            lineColor[ v2     ] = color[ v     ];\n            lineColor[ v2 + 1 ] = color[ v + 1 ];\n            lineColor[ v2 + 2 ] = color[ v + 2 ];\n\n            lineColor[ v2 + 3 ] = color[ v + 3 ];\n            lineColor[ v2 + 4 ] = color[ v + 4 ];\n            lineColor[ v2 + 5 ] = color[ v + 5 ];\n\n        }\n\n    }\n\n};\n\n\n//////////////////////\n// Sprite Primitives\n\n// NGL.ParticleSpriteBuffer = function( position, color, radius ){\n\n//     this.count = position.length / 3;\n//     this.vertexShader = 'ParticleSprite.vert';\n//     this.fragmentShader = 'ParticleSprite.frag';\n\n//     NGL.QuadBuffer.call( this );\n\n//     this.addUniforms({\n//         'projectionMatrixInverse': { value: new THREE.Matrix4() },\n//     });\n\n//     this.addAttributes( {\n//         \"radius\": { type: \"f\", value: null },\n//     } );\n\n//     this.setAttributes( {\n//         \"position\": position,\n//         \"color\": color,\n//         \"radius\": radius,\n//     } );\n\n//     this.material.lights = false;\n\n// };\n\n// NGL.ParticleSpriteBuffer.prototype = Object.create( NGL.QuadBuffer.prototype );\n\n// NGL.ParticleSpriteBuffer.prototype.constructor = NGL.ParticleSpriteBuffer;\n\n\nNGL.RibbonBuffer = function( position, normal, dir, color, size, pickingColor, params ){\n\n    var p = params || {};\n\n    var n = ( position.length / 3 ) - 1;\n    var n4 = n * 4;\n    var x = n4 * 3;\n\n    this.meshPosition = new Float32Array( x );\n    this.meshColor = new Float32Array( x );\n    this.meshNormal = new Float32Array( x );\n    this.meshPickingColor = pickingColor ? new Float32Array( x ) : undefined;\n\n    var TypedArray = this.meshPosition.length / 3 > 65535 ? Uint32Array : Uint16Array;\n    this.meshIndex = new TypedArray( x );\n    this.makeIndex();\n\n    NGL.MeshBuffer.call(\n        this, this.meshPosition, this.meshColor, this.meshIndex,\n        this.meshNormal, this.meshPickingColor, p\n    );\n\n    this.vertexShader = 'Ribbon.vert';\n    this.fragmentShader = 'Mesh.frag';\n\n    this.geometry.addAttribute(\n        'dir', new THREE.BufferAttribute( new Float32Array( x ), 3 )\n    );\n    this.geometry.addAttribute(\n        'size', new THREE.BufferAttribute( new Float32Array( n4 ), 1 )\n    );\n\n    this.setAttributes( {\n        position: position,\n        normal: normal,\n        dir: dir,\n        color: color,\n        size: size,\n        pickingColor: pickingColor\n    } );\n\n};\n\nNGL.RibbonBuffer.prototype = Object.create( NGL.MeshBuffer.prototype );\n\nNGL.RibbonBuffer.prototype.constructor = NGL.RibbonBuffer;\n\nNGL.RibbonBuffer.prototype.setAttributes = function( data ){\n\n    var n4 = this.size;\n    var n = n4 / 4;\n\n    var attributes = this.geometry.attributes;\n\n    var position, normal, size, dir, color, pickingColor;\n    var aPosition, aNormal, aSize, aDir, aColor, aPickingColor;\n\n    if( data[ \"position\" ] ){\n        position = data[ \"position\" ];\n        aPosition = attributes[ \"position\" ].array;\n        attributes[ \"position\" ].needsUpdate = true;\n    }\n\n    if( data[ \"normal\" ] ){\n        normal = data[ \"normal\" ];\n        aNormal = attributes[ \"normal\" ].array;\n        attributes[ \"normal\" ].needsUpdate = true;\n    }\n\n    if( data[ \"size\" ] ){\n        size = data[ \"size\" ];\n        aSize = attributes[ \"size\" ].array;\n        attributes[ \"size\" ].needsUpdate = true;\n    }\n\n    if( data[ \"dir\" ] ){\n        dir = data[ \"dir\" ];\n        aDir = attributes[ \"dir\" ].array;\n        attributes[ \"dir\" ].needsUpdate = true;\n    }\n\n    if( data[ \"color\" ] ){\n        color = data[ \"color\" ];\n        aColor = attributes[ \"color\" ].array;\n        attributes[ \"color\" ].needsUpdate = true;\n    }\n\n    if( data[ \"pickingColor\" ] ){\n        pickingColor = data[ \"pickingColor\" ];\n        aPickingColor = attributes[ \"pickingColor\" ].array;\n        attributes[ \"pickingColor\" ].needsUpdate = true;\n    }\n\n    var v, i, k, p, l, v3;\n    var currSize;\n    var prevSize = size ? size[ 0 ] : null;\n\n    for( v = 0; v < n; ++v ){\n\n        v3 = v * 3;\n        k = v * 3 * 4;\n        l = v * 4;\n\n        if( position ){\n\n            aPosition[ k     ] = aPosition[ k + 3 ] = position[ v3     ];\n            aPosition[ k + 1 ] = aPosition[ k + 4 ] = position[ v3 + 1 ];\n            aPosition[ k + 2 ] = aPosition[ k + 5 ] = position[ v3 + 2 ];\n\n            aPosition[ k + 6 ] = aPosition[ k +  9 ] = position[ v3 + 3 ];\n            aPosition[ k + 7 ] = aPosition[ k + 10 ] = position[ v3 + 4 ];\n            aPosition[ k + 8 ] = aPosition[ k + 11 ] = position[ v3 + 5 ];\n\n        }\n\n        if( normal ){\n\n            aNormal[ k     ] = aNormal[ k + 3 ] = -normal[ v3     ];\n            aNormal[ k + 1 ] = aNormal[ k + 4 ] = -normal[ v3 + 1 ];\n            aNormal[ k + 2 ] = aNormal[ k + 5 ] = -normal[ v3 + 2 ];\n\n            aNormal[ k + 6 ] = aNormal[ k +  9 ] = -normal[ v3 + 3 ];\n            aNormal[ k + 7 ] = aNormal[ k + 10 ] = -normal[ v3 + 4 ];\n            aNormal[ k + 8 ] = aNormal[ k + 11 ] = -normal[ v3 + 5 ];\n\n        }\n\n\n        for( i = 0; i<4; ++i ){\n\n            p = k + 3 * i;\n\n            if( color ){\n\n                aColor[ p     ] = color[ v3     ];\n                aColor[ p + 1 ] = color[ v3 + 1 ];\n                aColor[ p + 2 ] = color[ v3 + 2 ];\n\n            }\n\n            if( pickingColor ){\n\n                aPickingColor[ p     ] = pickingColor[ v3     ];\n                aPickingColor[ p + 1 ] = pickingColor[ v3 + 1 ];\n                aPickingColor[ p + 2 ] = pickingColor[ v3 + 2 ];\n\n            }\n\n        }\n\n        if( size ){\n\n            currSize = size[ v ];\n\n            if( prevSize !== size[ v ] ){\n\n                aSize[ l     ] = prevSize;\n                aSize[ l + 1 ] = prevSize;\n                aSize[ l + 2 ] = currSize;\n                aSize[ l + 3 ] = currSize;\n\n            }else{\n\n                aSize[ l     ] = currSize;\n                aSize[ l + 1 ] = currSize;\n                aSize[ l + 2 ] = currSize;\n                aSize[ l + 3 ] = currSize;\n\n            }\n\n            prevSize = currSize;\n\n        }\n\n        if( dir ){\n\n            aDir[ k     ] = dir[ v3     ];\n            aDir[ k + 1 ] = dir[ v3 + 1 ];\n            aDir[ k + 2 ] = dir[ v3 + 2 ];\n\n            aDir[ k + 3 ] = -dir[ v3     ];\n            aDir[ k + 4 ] = -dir[ v3 + 1 ];\n            aDir[ k + 5 ] = -dir[ v3 + 2 ];\n\n            aDir[ k + 6 ] = dir[ v3 + 3 ];\n            aDir[ k + 7 ] = dir[ v3 + 4 ];\n            aDir[ k + 8 ] = dir[ v3 + 5 ];\n\n            aDir[ k +  9 ] = -dir[ v3 + 3 ];\n            aDir[ k + 10 ] = -dir[ v3 + 4 ];\n            aDir[ k + 11 ] = -dir[ v3 + 5 ];\n\n        }\n\n    }\n\n};\n\nNGL.RibbonBuffer.prototype.makeIndex = function(){\n\n    var meshIndex = this.meshIndex;\n    var n = meshIndex.length / 4 / 3;\n\n    var quadIndices = new Uint16Array([\n        0, 1, 2,\n        1, 3, 2\n    ]);\n\n    var s, v, ix, it;\n\n    for( v = 0; v < n; ++v ){\n\n        ix = v * 6;\n        it = v * 4;\n\n        meshIndex.set( quadIndices, ix );\n        for( s = 0; s < 6; ++s ){\n            meshIndex[ ix + s ] += it;\n        }\n\n    }\n\n};\n\n\n////////////////////\n// Mesh Primitives\n\nNGL.TubeMeshBuffer = function( position, normal, binormal, tangent, color, size, pickingColor, params ){\n\n    var p = params || {};\n\n    this.aspectRatio = p.aspectRatio !== undefined ? p.aspectRatio : 1.0;\n    this.radialSegments = p.radialSegments !== undefined ? p.radialSegments : 4;\n    this.capped = p.capped !== undefined ? p.capped : false;\n\n    this.capVertices = this.capped ? this.radialSegments : 0;\n    this.capTriangles = this.capped ? this.radialSegments - 2 : 0;\n\n    var n = position.length / 3;\n    var n1 = n - 1;\n    var radialSegments1 = this.radialSegments + 1;\n\n    var x = n * this.radialSegments * 3 + 2 * this.capVertices * 3;\n\n    this.size2 = n;\n\n    this.meshPosition = new Float32Array( x );\n    this.meshColor = new Float32Array( x );\n    this.meshNormal = new Float32Array( x );\n    this.meshPickingColor = pickingColor ? new Float32Array( x ) : undefined;\n\n    var xi = n1 * 2 * this.radialSegments * 3 + 2 * this.capTriangles * 3\n    var TypedArray = this.meshPosition.length / 3 > 65535 ? Uint32Array : Uint16Array;\n    this.meshIndex = new TypedArray( xi );\n    this.makeIndex();\n\n    NGL.MeshBuffer.call(\n        this, this.meshPosition, this.meshColor, this.meshIndex,\n        this.meshNormal, this.meshPickingColor, p\n    );\n\n    this.setAttributes( {\n        position: position,\n        normal: normal,\n        binormal: binormal,\n        tangent: tangent,\n        color: color,\n        size: size,\n        pickingColor: pickingColor\n    } );\n\n}\n\nNGL.TubeMeshBuffer.prototype = Object.create( NGL.MeshBuffer.prototype );\n\nNGL.TubeMeshBuffer.prototype.constructor = NGL.TubeMeshBuffer;\n\nNGL.TubeMeshBuffer.prototype.setAttributes = function(){\n\n    var vTangent = new THREE.Vector3();\n    var vMeshNormal = new THREE.Vector3();\n\n    return function( data ){\n\n        var aspectRatio = this.aspectRatio;\n\n        var n = this.size2;\n        var n1 = n - 1;\n        var capVertices = this.capVertices;\n        var radialSegments = this.radialSegments;\n\n        var attributes = this.geometry.attributes;\n\n        var position, normal, binormal, tangent, color, size, pickingColor;\n        var meshPosition, meshColor, meshNormal, meshPickingColor\n\n        if( data[ \"position\" ] ){\n\n            position = data[ \"position\" ];\n            normal = data[ \"normal\" ];\n            binormal = data[ \"binormal\" ];\n            tangent = data[ \"tangent\" ];\n            size = data[ \"size\" ];\n\n            meshPosition = attributes[ \"position\" ].array;\n            meshNormal = attributes[ \"normal\" ].array;\n\n            attributes[ \"position\" ].needsUpdate = true;\n            attributes[ \"normal\" ].needsUpdate = true;\n\n        }\n\n        if( data[ \"color\" ] ){\n\n            color = data[ \"color\" ];\n            meshColor = attributes[ \"color\" ].array;\n            attributes[ \"color\" ].needsUpdate = true;\n\n        }\n\n        if( data[ \"pickingColor\" ] ){\n\n            pickingColor = data[ \"pickingColor\" ];\n            meshPickingColor = attributes[ \"pickingColor\" ].array;\n            attributes[ \"pickingColor\" ].needsUpdate = true;\n\n        }\n\n        var i, j, k, l, s, t;\n        var v, cx, cy;\n        var cx1, cy1, cx2, cy2;\n        var radius;\n        var irs, irs1;\n\n        var normX, normY, normZ;\n        var biX, biY, biZ;\n        var posX, posY, posZ;\n\n        var cxArr = [];\n        var cyArr = [];\n        var cx1Arr = [];\n        var cy1Arr = [];\n        var cx2Arr = [];\n        var cy2Arr = [];\n\n        if( position ){\n\n            for( j = 0; j < radialSegments; ++j ){\n\n                v = ( j / radialSegments ) * 2 * Math.PI;\n\n                cxArr[ j ] = aspectRatio * Math.cos( v );\n                cyArr[ j ] = Math.sin( v );\n\n                cx1Arr[ j ] = aspectRatio * Math.cos( v - 0.01 );\n                cy1Arr[ j ] = Math.sin( v - 0.01 );\n                cx2Arr[ j ] = aspectRatio * Math.cos( v + 0.01 );\n                cy2Arr[ j ] = Math.sin( v + 0.01 );\n\n            }\n\n        }\n\n        for( i = 0; i < n; ++i ){\n\n            k = i * 3;\n            l = k * radialSegments;\n\n            if( position ){\n\n                vTangent.set(\n                    tangent[ k ], tangent[ k + 1 ], tangent[ k + 2 ]\n                );\n\n                normX = normal[ k     ];\n                normY = normal[ k + 1 ];\n                normZ = normal[ k + 2 ];\n\n                biX = binormal[ k     ];\n                biY = binormal[ k + 1 ];\n                biZ = binormal[ k + 2 ];\n\n                posX = position[ k     ];\n                posY = position[ k + 1 ];\n                posZ = position[ k + 2 ];\n\n                radius = size[ i ];\n\n            }\n\n            for( j = 0; j < radialSegments; ++j ){\n\n                s = l + j * 3\n\n                if( position ){\n\n                    cx = -radius * cxArr[ j ]; // TODO: Hack: Negating it so it faces outside.\n                    cy = radius * cyArr[ j ];\n\n                    cx1 = -radius * cx1Arr[ j ];\n                    cy1 = radius * cy1Arr[ j ];\n                    cx2 = -radius * cx2Arr[ j ];\n                    cy2 = radius * cy2Arr[ j ];\n\n                    meshPosition[ s     ] = posX + cx * normX + cy * biX;\n                    meshPosition[ s + 1 ] = posY + cx * normY + cy * biY;\n                    meshPosition[ s + 2 ] = posZ + cx * normZ + cy * biZ;\n\n                    // TODO half of these are symmetric\n                    vMeshNormal.set(\n                        // ellipse tangent approximated as vector from/to adjacent points\n                        ( cx2 * normX + cy2 * biX ) -\n                            ( cx1 * normX + cy1 * biX ),\n                        ( cx2 * normY + cy2 * biY ) -\n                            ( cx1 * normY + cy1 * biY ),\n                        ( cx2 * normZ + cy2 * biZ ) -\n                            ( cx1 * normZ + cy1 * biZ )\n                    ).cross( vTangent );\n\n                    meshNormal[ s     ] = vMeshNormal.x;\n                    meshNormal[ s + 1 ] = vMeshNormal.y;\n                    meshNormal[ s + 2 ] = vMeshNormal.z;\n\n                }\n\n                if( color ){\n\n                    meshColor[ s     ] = color[ k     ];\n                    meshColor[ s + 1 ] = color[ k + 1 ];\n                    meshColor[ s + 2 ] = color[ k + 2 ];\n\n                }\n\n                if( pickingColor ){\n\n                    meshPickingColor[ s     ] = pickingColor[ k     ];\n                    meshPickingColor[ s + 1 ] = pickingColor[ k + 1 ];\n                    meshPickingColor[ s + 2 ] = pickingColor[ k + 2 ];\n\n                }\n\n            }\n\n        }\n\n        // front cap\n\n        k = 0;\n        l = n * 3 * radialSegments;\n\n        for( j = 0; j < radialSegments; ++j ){\n\n            s = k + j * 3;\n            t = l + j * 3;\n\n            if( position ){\n\n                meshPosition[ t     ] = meshPosition[ s     ];\n                meshPosition[ t + 1 ] = meshPosition[ s + 1 ];\n                meshPosition[ t + 2 ] = meshPosition[ s + 2 ];\n\n                meshNormal[ t     ] = tangent[ k     ];\n                meshNormal[ t + 1 ] = tangent[ k + 1 ];\n                meshNormal[ t + 2 ] = tangent[ k + 2 ];\n\n            }\n\n            if( color ){\n\n                meshColor[ t     ] = meshColor[ s     ];\n                meshColor[ t + 1 ] = meshColor[ s + 1 ];\n                meshColor[ t + 2 ] = meshColor[ s + 2 ];\n\n            }\n\n            if( pickingColor ){\n\n                meshPickingColor[ t     ] = meshPickingColor[ s     ];\n                meshPickingColor[ t + 1 ] = meshPickingColor[ s + 1 ];\n                meshPickingColor[ t + 2 ] = meshPickingColor[ s + 2 ];\n\n            }\n\n        }\n\n        // back cap\n\n        k = ( n - 1 ) * 3 * radialSegments;\n        l = ( n + 1 ) * 3 * radialSegments;\n\n        for( j = 0; j < radialSegments; ++j ){\n\n            s = k + j * 3;\n            t = l + j * 3;\n\n            if( position ){\n\n                meshPosition[ t     ] = meshPosition[ s     ];\n                meshPosition[ t + 1 ] = meshPosition[ s + 1 ];\n                meshPosition[ t + 2 ] = meshPosition[ s + 2 ];\n\n                meshNormal[ t     ] = tangent[ n1 * 3     ];\n                meshNormal[ t + 1 ] = tangent[ n1 * 3 + 1 ];\n                meshNormal[ t + 2 ] = tangent[ n1 * 3 + 2 ];\n\n            }\n\n            if( color ){\n\n                meshColor[ t     ] = meshColor[ s     ];\n                meshColor[ t + 1 ] = meshColor[ s + 1 ];\n                meshColor[ t + 2 ] = meshColor[ s + 2 ];\n\n            }\n\n            if( pickingColor ){\n\n                meshPickingColor[ t     ] = meshPickingColor[ s     ];\n                meshPickingColor[ t + 1 ] = meshPickingColor[ s + 1 ];\n                meshPickingColor[ t + 2 ] = meshPickingColor[ s + 2 ];\n\n            }\n\n        }\n\n    }\n\n}();\n\nNGL.TubeMeshBuffer.prototype.makeIndex = function(){\n\n    var meshIndex = this.meshIndex;\n\n    var n = this.size2;\n    var n1 = n - 1;\n    var capTriangles = this.capTriangles;\n    var radialSegments = this.radialSegments;\n    var radialSegments1 = this.radialSegments + 1;\n\n    var i, k, irs, irs1, l, j;\n\n    for( i = 0; i < n1; ++i ){\n\n        k = i * radialSegments * 3 * 2\n\n        irs = i * radialSegments;\n        irs1 = ( i + 1 ) * radialSegments;\n\n        for( j = 0; j < radialSegments; ++j ){\n\n            l = k + j * 3 * 2;\n\n            // meshIndex[ l + 0 ] = irs + ( ( j + 0 ) % radialSegments );\n            meshIndex[ l ] = irs + j;\n            meshIndex[ l + 1 ] = irs + ( ( j + 1 ) % radialSegments );\n            // meshIndex[ l + 2 ] = irs1 + ( ( j + 0 ) % radialSegments );\n            meshIndex[ l + 2 ] = irs1 + j;\n\n            // meshIndex[ l + 3 ] = irs1 + ( ( j + 0 ) % radialSegments );\n            meshIndex[ l + 3 ] = irs1 + j;\n            meshIndex[ l + 4 ] = irs + ( ( j + 1 ) % radialSegments );\n            meshIndex[ l + 5 ] = irs1 + ( ( j + 1 ) % radialSegments );\n\n        }\n\n    }\n\n    // capping\n\n    var strip = [ 0 ];\n\n    for( j = 1; j < radialSegments1 / 2; ++j ){\n\n        strip.push( j );\n        if( radialSegments - j !== j ){\n            strip.push( radialSegments - j );\n        }\n\n    }\n\n    // front cap\n\n    l = n1 * radialSegments * 3 * 2;\n    k = n * radialSegments;\n\n    for( j = 0; j < strip.length - 2; ++j ){\n\n        if( j % 2 === 0 ){\n            meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 0 ];\n            meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ];\n            meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 2 ];\n        }else{\n            meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 2 ];\n            meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ];\n            meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 0 ];\n        }\n\n    }\n\n    // back cap\n\n    l = n1 * radialSegments * 3 * 2 + 3 * capTriangles;\n    k = n * radialSegments + radialSegments;\n\n    for( j = 0; j < strip.length - 2; ++j ){\n\n        if( j % 2 === 0 ){\n            meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 0 ];\n            meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ];\n            meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 2 ];\n        }else{\n            meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 2 ];\n            meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ];\n            meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 0 ];\n        }\n\n    }\n\n};\n\n\nNGL.SurfaceBuffer = function(){\n\n    NGL.MeshBuffer.apply( this, arguments );\n\n}\n\nNGL.SurfaceBuffer.prototype = Object.create( NGL.MeshBuffer.prototype );\n\nNGL.SurfaceBuffer.prototype.constructor = NGL.SurfaceBuffer;\n\n\n///////////////////\n// API Primitives\n\nNGL.SphereBuffer = function( position, color, radius, pickingColor, params ){\n\n    var p = params || {};\n\n    if( !NGL.extensionFragDepth || p.disableImpostor ){\n\n        return new NGL.SphereGeometryBuffer(\n            position, color, radius, pickingColor, params\n        );\n\n    }else{\n\n        return new NGL.SphereImpostorBuffer(\n            position, color, radius, pickingColor, params\n        );\n\n    }\n\n};\n\n\nNGL.CylinderBuffer = function( from, to, color, color2, radius, pickingColor, pickingColor2, params ){\n\n    var p = params || {};\n\n    if( !NGL.extensionFragDepth || p.disableImpostor ){\n\n        // FIXME cap support missing\n\n        return new NGL.CylinderGeometryBuffer(\n            from, to, color, color2, radius,\n            pickingColor, pickingColor2, params\n        );\n\n    }else{\n\n        return new NGL.CylinderImpostorBuffer(\n            from, to, color, color2, radius,\n            pickingColor, pickingColor2, params\n        );\n\n    }\n\n};\n\n\nNGL.HyperballStickBuffer = function( from, to, color, color2, radius1, radius2, pickingColor, pickingColor2, params ){\n\n    var p = params || {};\n\n    if( !NGL.extensionFragDepth || p.disableImpostor ){\n\n        return new NGL.CylinderGeometryBuffer(\n            from, to, color, color2,\n            NGL.Utils.calculateMinArray( radius1, radius2 ),\n            pickingColor, pickingColor2, params\n        );\n\n    }else{\n\n        return new NGL.HyperballStickImpostorBuffer(\n            from, to, color, color2,\n            radius1, radius2,\n            pickingColor, pickingColor2, params\n        );\n\n    }\n\n};\n\n\n////////////////\n// Text & Font\n\nNGL.TextAtlas = function( params ){\n\n    // adapted from https://github.com/unconed/mathbox\n    // MIT License Copyright (C) 2013+ Steven Wittens and contributors\n\n    var p = Object.assign( {}, params );\n\n    this.font = p.font !== undefined ? p.font : [ 'sans-serif' ];\n    this.size = p.size || 36;\n    this.style = p.style !== undefined ? p.style : 'normal';\n    this.variant = p.variant !== undefined ? p.variant : 'normal';\n    this.weight = p.weight !== undefined ? p.weight : 'normal';\n    this.outline = p.outline !== undefined ? p.outline : 0;\n    this.width = p.width || 1024;\n    this.height = p.height || 1024;\n\n    this.gamma = 1;\n    if( typeof navigator !== 'undefined' ){\n        var ua = navigator.userAgent;\n        if( ua.match( /Chrome/ ) && ua.match( /OS X/ ) ){\n            this.gamma = 0.5;\n        }\n    }\n\n    this.mapped = {};\n    this.scratchW = 0;\n    this.scratchH = 0;\n    this.currentX = 0;\n    this.currentY = 0;\n\n    this.build( p );\n\n}\n\nNGL.TextAtlas.prototype = {\n\n    build: function( params ){\n\n        // Prepare line-height with room for outline and descenders/ascenders\n        var lineHeight = this.size + 2 * this.outline + Math.round( this.size / 4 );\n        var maxWidth = this.width / 4;\n\n        // Prepare scratch canvas\n        var canvas = document.createElement( \"canvas\" );\n        canvas.width = maxWidth;\n        canvas.height = lineHeight;\n\n        // Font string\n        var quote = function(str) {\n            return \"\\\"\" + ( str.replace( /(['\"\\\\])/g, \"\\\\$1\" ) ) + \"\\\"\";\n        };\n        var font = this.font.map( quote ).join( \", \" );\n\n        var ctx = canvas.getContext( \"2d\" );\n        ctx.font = this.style + \" \" + this.variant + \" \" + this.weight + \" \" + this.size + \"px \" + this.font;\n        ctx.fillStyle = \"#FF0000\";\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"bottom\";\n        ctx.lineJoin = \"round\";\n\n        // document.body.appendChild( canvas );\n        // canvas.setAttribute( \"style\", \"position: absolute; top: 0; left: 0; z-index: 100; border: 1px solid red; background: rgba(255,0,255,.25);\" );\n\n        var colors = [];\n        var dilate = this.outline * 3;\n        for( var i = 0; i < dilate; ++i ){\n            // 8 rgb levels = 1 step = .5 pixel increase\n            var val = Math.max( 0, -i * 8 + 128 - ( !i ) * 8 );\n            var hex = ( \"00\" + val.toString( 16 ) ).slice( -2 );\n            colors.push( \"#\" + hex + hex + hex );\n        }\n        var scratch = new Uint8Array( maxWidth * lineHeight * 2 );\n\n        this.canvas = canvas;\n        this.context = ctx;\n        this.lineHeight = lineHeight;\n        this.maxWidth = maxWidth;\n        this.colors = colors;\n        this.scratch = scratch;\n\n        this.data = new Uint8Array( this.width * this.height * 4 );\n\n        this.canvas2 = document.createElement( 'canvas' );\n        this.canvas2.width = this.width;\n        this.canvas2.height = this.height;\n        this.context2 = this.canvas2.getContext( '2d' );\n        // document.body.appendChild( this.canvas2 );\n        // this.canvas2.setAttribute( \"style\", \"position: absolute; bottom: 0; right: 0; z-index: 100; border: 1px solid green; background: rgba(255,0,255,.25);\" );\n\n    },\n\n    map: function( text ){\n\n        if( this.mapped[ text ] === undefined ){\n\n            this.draw( text );\n\n            // ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n\n            if( this.currentX + this.scratchW > this.width ){\n                this.currentX = 0;\n                this.currentY += this.scratchH;\n            }\n            if( this.currentY + this.scratchH > this.height ){\n                console.warn( \"canvas to small\" );\n            }\n\n            this.mapped[ text ] = {\n                x: this.currentX,\n                y: this.currentY,\n                w: this.scratchW,\n                h: this.scratchH\n            };\n\n            this.context2.drawImage(\n                this.canvas,\n                0, 0,\n                this.scratchW, this.scratchH,\n                this.currentX, this.currentY,\n                this.scratchW, this.scratchH\n            );\n\n            this.currentX += this.scratchW;\n\n        }\n\n        return this.mapped[ text ];\n\n    },\n\n    draw: function( text ){\n\n        var h = this.lineHeight;\n        var o = this.outline;\n        var ctx = this.context;\n        var dst = this.scratch;\n        var max = this.maxWidth;\n        var colors = this.colors;\n\n        // Bottom aligned, take outline into account\n        var x = o;\n        var y = h - this.outline;\n\n        // Measure text\n        var m = ctx.measureText( text );\n        var w = Math.min( max, Math.ceil( m.width + 2 * x + 1 ) );\n\n        // Clear scratch area\n        ctx.clearRect(0, 0, w, h);\n\n        if( this.outline === 0 ){\n\n            ctx.fillText( text, x, y );\n            var imageData = ctx.getImageData( 0, 0, w, h );\n            var data = imageData.data;\n\n            var j = 3;  // Skip to alpha channel\n            for( var i = 0, il = data.length / 4; i < il; ++i ){\n                dst[ i ] = data[ j ];\n                j += 4;\n            }\n\n        }else{\n\n            ctx.globalCompositeOperation = \"source-over\";\n            // Draw strokes of decreasing width to create\n            // nested outlines (absolute distance)\n            for( var i = o + 1; i > 0; --i ){\n                // Eliminate odd strokes once past > 1px,\n                // don't need the detail\n                var j = i > 1 ? i * 2 - 2 : i;\n                ctx.strokeStyle = colors[ j - 1 ];\n                ctx.lineWidth = j;\n                ctx.strokeText( text, x, y );\n            }\n            ctx.globalCompositeOperation = \"multiply\";\n            ctx.fillStyle = \"#FF00FF\";\n            ctx.fillText( text, x, y );\n            var imageData = ctx.getImageData( 0, 0, w, h );\n            var data = imageData.data;\n\n            var j = 0;\n            var gamma = this.gamma;\n            for( var i = 0, il = data.length / 4; i < il; ++i ){\n                // Get value + mask\n                var a = data[ j ];\n                var mask = a ? data[ j + 1 ] / a : 1;\n                if( gamma === 0.5 ){\n                    mask = Math.sqrt( mask );\n                }\n                mask = Math.min( 1, Math.max( 0, mask ) );\n\n                // Blend between positive/outside and negative/inside\n                var b = 256 - a;\n                var c = b + ( a - b ) * mask;\n\n                // Clamp (slight expansion to hide errors around the transition)\n                dst[ i ] = Math.max( 0, Math.min( 255, c + 2 ) );\n                data[ j + 3 ] = dst[ i ];\n                j += 4;\n            }\n\n        }\n\n        ctx.putImageData( imageData, 0, 0 );\n        this.scratchW = w;\n        this.scratchH = h;\n\n    },\n\n    dispose: function(){\n\n        // document.body.removeChild( this.canvas );\n        // document.body.removeChild( this.canvas2 );\n\n    }\n\n};\n\n\nNGL.TextBuffer = function( position, size, color, text, params ){\n\n    var p = params || {};\n    p.forceTransparent = true;\n\n    this.fontFamily = p.fontFamily !== undefined ? p.fontFamily : \"sans-serif\";\n    this.fontStyle = p.fontStyle !== undefined ? p.fontStyle : \"normal\";\n    this.fontWeight = p.fontWeight !== undefined ? p.fontWeight : \"bold\";\n    this.fontSize = p.fontSize !== undefined ? p.fontSize : 48;\n    this.sdf = p.sdf !== undefined ? p.sdf : true;\n    this.xOffset = p.xOffset !== undefined ? p.xOffset : 0.0;\n    this.yOffset = p.yOffset !== undefined ? p.yOffset : 0.0;\n    this.zOffset = p.zOffset !== undefined ? p.zOffset : 0.5;\n\n    var n = position.length / 3;\n\n    var charCount = 0;\n    for( var i = 0; i < n; ++i ){\n        charCount += text[ i ].length;\n    }\n\n    this.text = text;\n    this.count = charCount;\n    this.positionCount = n;\n\n    this.vertexShader = \"SDFFont.vert\";\n    this.fragmentShader = \"SDFFont.frag\";\n\n    NGL.QuadBuffer.call( this, p );\n\n    this.addUniforms( {\n        \"fontTexture\"  : { value: null },\n        \"xOffset\": { value: this.xOffset },\n        \"yOffset\": { value: this.yOffset },\n        \"zOffset\": { value: this.zOffset }\n    } );\n\n    this.addAttributes( {\n        \"inputTexCoord\": { type: \"v2\", value: null },\n        \"inputSize\": { type: \"f\", value: null },\n    } );\n\n    this.setAttributes( {\n        \"position\": position,\n        \"size\": size,\n        \"color\": color\n    } );\n\n    this.makeTexture();\n    this.makeMapping();\n\n};\n\nNGL.TextBuffer.prototype = Object.create( NGL.QuadBuffer.prototype );\n\nNGL.TextBuffer.prototype.constructor = NGL.TextBuffer;\n\nNGL.TextBuffer.prototype.parameters = Object.assign( {\n\n    fontFamily: { uniform: true },\n    fontStyle: { uniform: true },\n    fontWeight: { uniform: true },\n    fontSize: { uniform: true },\n    sdf: { updateShader: true, uniform: true },\n    xOffset: { uniform: true },\n    yOffset: { uniform: true },\n    zOffset: { uniform: true }\n\n}, NGL.Buffer.prototype.parameters );\n\nNGL.TextBuffer.prototype.makeMaterial = function(){\n\n    NGL.Buffer.prototype.makeMaterial.call( this );\n\n    this.material.extensions.derivatives = true;\n    this.material.lights = false;\n    this.material.uniforms.fontTexture.value = this.tex;\n    this.material.needsUpdate = true;\n\n};\n\nNGL.TextBuffer.prototype.setAttributes = function( data ){\n\n    var position, size, color;\n    var aPosition, inputSize, aColor;\n\n    var text = this.text;\n    var attributes = this.geometry.attributes;\n\n    if( data[ \"position\" ] ){\n        position = data[ \"position\" ];\n        aPosition = attributes[ \"position\" ].array;\n        attributes[ \"position\" ].needsUpdate = true;\n    }\n\n    if( data[ \"size\" ] ){\n        size = data[ \"size\" ];\n        inputSize = attributes[ \"inputSize\" ].array;\n        attributes[ \"inputSize\" ].needsUpdate = true;\n    }\n\n    if( data[ \"color\" ] ){\n        color = data[ \"color\" ];\n        aColor = attributes[ \"color\" ].array;\n        attributes[ \"color\" ].needsUpdate = true;\n    }\n\n    var n = this.positionCount;\n\n    var i, j, o;\n    var iCharAll = 0;\n    var txt, iChar, nChar;\n\n    for( var v = 0; v < n; v++ ) {\n\n        o = 3 * v;\n        txt = text[ v ];\n        nChar = txt.length;\n\n        for( iChar = 0; iChar < nChar; iChar++, iCharAll++ ) {\n\n            i = iCharAll * 2 * 4;\n\n            for( var m = 0; m < 4; m++ ) {\n\n                j = iCharAll * 4 * 3 + ( 3 * m );\n\n                if( position ){\n\n                    aPosition[ j     ] = position[ o     ];\n                    aPosition[ j + 1 ] = position[ o + 1 ];\n                    aPosition[ j + 2 ] = position[ o + 2 ];\n\n                }\n\n                if( size ){\n\n                    inputSize[ ( iCharAll * 4 ) + m ] = size[ v ];\n\n                }\n\n                if( color ){\n\n                    aColor[ j     ] = color[ o     ];\n                    aColor[ j + 1 ] = color[ o + 1 ];\n                    aColor[ j + 2 ] = color[ o + 2 ];\n\n                }\n\n            }\n\n        }\n\n    }\n\n};\n\nNGL.TextBuffer.prototype.makeTexture = function(){\n\n    if( this.tex ) this.tex.dispose();\n    if( this.ta ) this.ta.dispose();\n\n    var ta = new NGL.TextAtlas( {\n        font: [ this.fontFamily ],\n        style: this.fontStyle,\n        weight: this.fontWeight,\n        size: this.fontSize,\n        outline: this.sdf ? 5 : 0\n    } );\n\n    for( var i = 0; i < 256; ++i ){\n        ta.map( String.fromCharCode( i ) );\n    }\n\n    this.ta = ta;\n\n    this.tex = new THREE.CanvasTexture( ta.canvas2 );\n    this.tex.flipY = false;\n    this.tex.needsUpdate = true;\n\n};\n\nNGL.TextBuffer.prototype.makeMapping = function(){\n\n    var ta = this.ta;\n    var text = this.text;\n\n    var inputTexCoord = this.geometry.attributes[ \"inputTexCoord\" ].array;\n    var inputMapping = this.geometry.attributes[ \"mapping\" ].array;\n\n    var n = this.positionCount;\n\n    var c;\n    var i, j, o;\n    var iCharAll = 0;\n    var txt, xadvance, iChar, nChar;\n\n    for( var v = 0; v < n; v++ ) {\n\n        o = 3 * v;\n        txt = text[ v ];\n        xadvance = 0;\n        nChar = txt.length;\n\n        for( iChar = 0; iChar < nChar; iChar++, iCharAll++ ) {\n\n            c = ta.mapped[ txt[ iChar ] ];\n            i = iCharAll * 2 * 4;\n\n            // top left\n            inputMapping[ i + 0 ] = xadvance - ta.outline;\n            inputMapping[ i + 1 ] = c.h - ta.outline;\n            // bottom left\n            inputMapping[ i + 2 ] = xadvance - ta.outline;\n            inputMapping[ i + 3 ] = 0 - ta.outline;\n            // top right\n            inputMapping[ i + 4 ] = xadvance + c.w - ta.outline;\n            inputMapping[ i + 5 ] = c.h - ta.outline;\n            // bottom right\n            inputMapping[ i + 6 ] = xadvance + c.w - ta.outline;\n            inputMapping[ i + 7 ] = 0 - ta.outline;\n\n            var texWidth = ta.width;\n            var texHeight = ta.height;\n\n            var texCoords = [\n                c.x/texWidth, c.y/texHeight,             // top left\n                c.x/texWidth, (c.y+c.h)/texHeight,       // bottom left\n                (c.x+c.w)/texWidth, c.y/texHeight,       // top right\n                (c.x+c.w)/texWidth, (c.y+c.h)/texHeight  // bottom right\n            ];\n            inputTexCoord.set( texCoords, i );\n\n            xadvance += c.w - 2 * ta.outline;\n\n        }\n\n    }\n\n    this.geometry.attributes[ \"inputTexCoord\" ].needsUpdate = true;\n    this.geometry.attributes[ \"mapping\" ].needsUpdate = true;\n\n};\n\nNGL.TextBuffer.prototype.getDefines = function( type ){\n\n    var defines = NGL.Buffer.prototype.getDefines.call( this, type );\n\n    if( this.sdf ){\n        defines[ \"SDF\" ] = 1;\n    }\n\n    return defines;\n\n};\n\nNGL.TextBuffer.prototype.setUniforms = function( data ){\n\n    if( data && (\n            data[ \"fontFamily\" ] !== undefined ||\n            data[ \"fontStyle\" ] !== undefined ||\n            data[ \"fontWeight\" ] !== undefined ||\n            data[ \"fontSize\" ] !== undefined ||\n            data[ \"sdf\" ] !== undefined\n        )\n    ){\n\n        this.makeTexture();\n        this.makeMapping();\n        data[ \"fontTexture\" ] = this.tex;\n\n    }\n\n    NGL.Buffer.prototype.setUniforms.call( this, data );\n\n};\n\nNGL.TextBuffer.prototype.dispose = function(){\n\n    NGL.Buffer.prototype.dispose.call( this );\n\n    if( this.tex ) this.tex.dispose();\n    if( this.ta ) this.ta.dispose();\n\n};\n\n\n///////////\n// Helper\n\nNGL.VectorBuffer = function( position, vector, params ){\n\n    var p = params || {};\n\n    this.size = position.length / 3;\n    this.vertexShader = 'Line.vert';\n    this.fragmentShader = 'Line.frag';\n    this.line = true;\n\n    var n = this.size;\n    var n2 = n * 2;\n\n    this.attributeSize = n2;\n\n    this.scale = p.scale || 1;\n    var color = new THREE.Color( p.color || \"grey\" );\n\n    this.linePosition = new Float32Array( n2 * 3 );\n    this.lineColor = NGL.Utils.uniformArray3( n2, color.r, color.g, color.b );\n\n    NGL.Buffer.call(\n        this, this.linePosition, this.lineColor, undefined, undefined, p\n    );\n\n    this.setAttributes( {\n        position: position,\n        vector: vector\n    } );\n\n};\n\nNGL.VectorBuffer.prototype = Object.create( NGL.Buffer.prototype );\n\nNGL.VectorBuffer.prototype.constructor = NGL.VectorBuffer;\n\nNGL.VectorBuffer.prototype.setAttributes = function( data ){\n\n    var attributes = this.geometry.attributes;\n\n    var position, vector;\n    var aPosition;\n\n    if( data[ \"position\" ] && data[ \"vector\" ] ){\n        position = data[ \"position\" ];\n        vector = data[ \"vector\" ];\n        aPosition = attributes[ \"position\" ].array;\n        attributes[ \"position\" ].needsUpdate = true;\n    }\n\n    var n = this.size;\n    var scale = this.scale;\n\n    var i, j;\n\n    if( data[ \"position\" ] && data[ \"vector\" ] ){\n\n        for( var v = 0; v < n; v++ ){\n\n            i = v * 2 * 3;\n            j = v * 3;\n\n            aPosition[ i + 0 ] = position[ j + 0 ];\n            aPosition[ i + 1 ] = position[ j + 1 ];\n            aPosition[ i + 2 ] = position[ j + 2 ];\n            aPosition[ i + 3 ] = position[ j + 0 ] + vector[ j + 0 ] * scale;\n            aPosition[ i + 4 ] = position[ j + 1 ] + vector[ j + 1 ] * scale;\n            aPosition[ i + 5 ] = position[ j + 2 ] + vector[ j + 2 ] * scale;\n\n        }\n\n    }\n\n};\n\n// File:js/ngl/representation.js\n\n/**\n * @file Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\nNGL.SideTypes = {};\nNGL.SideTypes[ THREE.FrontSide ] = \"front\";\nNGL.SideTypes[ THREE.BackSide ] = \"back\";\nNGL.SideTypes[ THREE.DoubleSide ] = \"double\";\n\n\nNGL.makeRepresentation = function( type, object, viewer, params ){\n\n    if( NGL.debug ) NGL.time( \"NGL.makeRepresentation \" + type );\n\n    var ReprClass;\n\n    if( type === \"buffer\" ){\n\n        ReprClass = NGL.BufferRepresentation;\n\n    }else if( object instanceof NGL.Structure ){\n\n        ReprClass = NGL.representationTypes[ type ];\n\n        if( !ReprClass ){\n\n            NGL.error(\n                \"NGL.makeRepresentation: representation type \" + type + \" unknown\"\n            );\n            return;\n\n        }\n\n    }else if( object instanceof NGL.Surface || object instanceof NGL.Volume ){\n\n        if( type === \"surface\" ){\n\n            ReprClass = NGL.SurfaceRepresentation;\n\n        }else if( type === \"dot\" ){\n\n            ReprClass = NGL.DotRepresentation;\n\n        }else{\n\n            NGL.error(\n                \"NGL.makeRepresentation: representation type \" + type + \" unknown\"\n            );\n            return;\n\n        }\n\n    }else if( object instanceof NGL.Trajectory ){\n\n        ReprClass = NGL.TrajectoryRepresentation;\n\n    }else{\n\n        NGL.error(\n            \"NGL.makeRepresentation: object \" + object + \" unknown\"\n        );\n        return;\n\n    }\n\n    var repr = new ReprClass( object, viewer, params );\n\n    if( NGL.debug ) NGL.timeEnd( \"NGL.makeRepresentation \" + type );\n\n    return repr;\n\n};\n\n\n///////////////////\n// Representation\n\nNGL.Representation = function( object, viewer, params ){\n\n    this.viewer = viewer;\n\n    this.queue = new NGL.Queue( this.make.bind( this ) );\n    this.tasks = new NGL.Counter();\n    this.bufferList = [];\n\n    this.init( params );\n\n};\n\nNGL.Representation.prototype = {\n\n    constructor: NGL.Representation,\n\n    type: \"\",\n\n    parameters: {\n\n        clipNear: {\n            type: \"range\", step: 1, max: 100, min: 0, buffer: true\n        },\n        flatShaded: {\n            type: \"boolean\", buffer: true\n        },\n        opacity: {\n            type: \"range\", step: 0.01, max: 1, min: 0, buffer: true\n        },\n        side: {\n            type: \"select\", options: NGL.SideTypes, buffer: true,\n            int: true\n        },\n        wireframe: {\n            type: \"boolean\", buffer: true\n        },\n        linewidth: {\n            type: \"integer\", max: 50, min: 1, buffer: true\n        },\n\n        colorScheme: {\n            type: \"select\", update: \"color\",\n            options: NGL.ColorMakerRegistry.getTypes()\n        },\n        colorScale: {\n            type: \"select\", update: \"color\",\n            options: NGL.ColorMakerRegistry.getScales()\n        },\n        colorValue: {\n            type: \"color\", update: \"color\"\n        },\n        colorDomain: {\n            type: \"hidden\", update: \"color\"\n        },\n        colorMode: {\n            type: \"select\", update: \"color\",\n            options: NGL.ColorMakerRegistry.getModes()\n        },\n\n        roughness: {\n            type: \"range\", step: 0.01, max: 1, min: 0, buffer: true\n        },\n        metalness: {\n            type: \"range\", step: 0.01, max: 1, min: 0, buffer: true\n        },\n        diffuse: {\n            type: \"color\", buffer: true\n        },\n\n    },\n\n    init: function( params ){\n\n        var p = params || {};\n\n        this.clipNear = p.clipNear !== undefined ? p.clipNear : 0;\n        this.flatShaded = p.flatShaded || false;\n        this.side = p.side !== undefined ? p.side : THREE.DoubleSide;\n        this.opacity = p.opacity !== undefined ? p.opacity : 1.0;\n        this.wireframe = p.wireframe || false;\n        this.linewidth = p.linewidth || 2;\n\n        this.setColor( p.color, p );\n\n        this.colorScheme = p.colorScheme || \"uniform\";\n        this.colorScale = p.colorScale || \"\";\n        this.colorValue = p.colorValue || 0x909090;\n        this.colorDomain = p.colorDomain || \"\";\n        this.colorMode = p.colorMode || \"hcl\";\n\n        this.visible = p.visible !== undefined ? p.visible : true;\n        this.quality = p.quality;\n\n        this.roughness = p.roughness !== undefined ? p.roughness : 0.4;\n        this.metalness = p.metalness !== undefined ? p.metalness : 0.0;\n        this.diffuse = p.diffuse !== undefined ? p.diffuse : 0xffffff;\n\n    },\n\n    getColorParams: function(){\n\n        return {\n\n            scheme: this.colorScheme,\n            scale: this.colorScale,\n            value: this.colorValue,\n            domain: this.colorDomain,\n            mode: this.colorMode,\n\n        };\n\n    },\n\n    getBufferParams: function( p ){\n\n        return Object.assign( {\n\n            clipNear: this.clipNear,\n            flatShaded: this.flatShaded,\n            opacity: this.opacity,\n            side: this.side,\n            wireframe: this.wireframe,\n            linewidth: this.linewidth,\n\n            roughness: this.roughness,\n            metalness: this.metalness,\n            diffuse: this.diffuse,\n\n        }, p );\n\n    },\n\n    setColor: function( value, p ){\n\n        var types = Object.keys( NGL.ColorMakerRegistry.getTypes() );\n\n        if( types.indexOf( value ) !== -1 ){\n\n            if( p ){\n                p.colorScheme = value;\n            }else{\n                this.setParameters( { colorScheme: value } );\n            }\n\n        }else if( value !== undefined ){\n\n            value = new THREE.Color( value ).getHex();\n            if( p ){\n                p.colorScheme = \"uniform\";\n                p.colorValue = value;\n            }else{\n                this.setParameters( {\n                    colorScheme: \"uniform\", colorValue: value\n                } );\n            }\n\n        }\n\n        return this;\n\n    },\n\n    prepare: false,\n\n    create: function(){\n\n        // this.bufferList.length = 0;\n\n    },\n\n    update: function(){\n\n        this.build();\n\n    },\n\n    build: function( params ){\n\n        if( !this.prepare ){\n            if( !params ){\n                params = this.getParameters();\n                delete params.quality;\n            }\n            this.tasks.increment();\n            this.make( params, function(){} );\n            return;\n        }\n\n        // don't let tasks accumulate\n        if( this.queue.length() > 0 ){\n\n            this.tasks.change( 1 - this.queue.length() );\n            this.queue.kill();\n\n        }else{\n\n            this.tasks.increment();\n\n        }\n\n        if( !params ){\n            params = this.getParameters();\n            delete params.quality;\n        }\n\n        this.queue.push( params );\n\n    },\n\n    make: function( params, callback ){\n\n        if( NGL.debug ) NGL.time( \"NGL.Representation.make \" + this.type );\n\n        if( params && !params.__update ){\n            this.init( params );\n        }\n\n        var _make = function(){\n\n            if( params.__update ){\n                this.update( params.__update );\n                this.viewer.requestRender();\n                this.tasks.decrement();\n                callback();\n            }else{\n                this.clear();\n                this.create();\n                if( !this.manualAttach && !this.disposed ){\n                    if( NGL.debug ) NGL.time( \"NGL.Representation.attach \" + this.type );\n                    this.attach( function(){\n                        if( NGL.debug ) NGL.timeEnd( \"NGL.Representation.attach \" + this.type );\n                        this.tasks.decrement();\n                        callback();\n                    }.bind( this ) );\n                }\n            }\n\n            if( NGL.debug ) NGL.timeEnd( \"NGL.Representation.make \" + this.type );\n\n        }.bind( this );\n\n        if( this.prepare ){\n            this.prepare( _make );\n        }else{\n            _make();\n        }\n\n    },\n\n    attach: function( callback ){\n\n        this.setVisibility( this.visible );\n\n        callback();\n\n    },\n\n    setVisibility: function( value, noRenderRequest ){\n\n        this.visible = value;\n\n        this.bufferList.forEach( function( buffer ){\n\n            buffer.setVisibility( value );\n\n        } );\n\n        if( !noRenderRequest ) this.viewer.requestRender();\n\n        return this;\n\n    },\n\n    setParameters: function( params, what, rebuild ){\n\n        var p = params || {};\n        var tp = this.parameters;\n\n        what = what || {};\n        rebuild = rebuild || false;\n\n        var bufferParams = {};\n\n        for( var name in p ){\n\n            if( p[ name ] === undefined ) continue;\n            if( tp[ name ] === undefined ) continue;\n\n            if( tp[ name ].int ) p[ name ] = parseInt( p[ name ] );\n            if( tp[ name ].float ) p[ name ] = parseFloat( p[ name ] );\n\n            // no value change\n            if( p[ name ] === this[ name ] ) continue;\n\n            this[ name ] = p[ name ];\n\n            // buffer param\n            if( tp[ name ].buffer ){\n                if( tp[ name ].buffer === true ){\n                    bufferParams[ name ] = p[ name ];\n                }else{\n                    bufferParams[ tp[ name ].buffer ] = p[ name ];\n                }\n            }\n\n            // mark for update\n            if( tp[ name ].update ){\n                what[ tp[ name ].update ] = true;\n            }\n\n            // mark for rebuild\n            if( tp[ name ].rebuild &&\n                !( tp[ name ].rebuild === \"impostor\" &&\n                    NGL.extensionFragDepth && !this.disableImpostor )\n            ){\n                rebuild = true;\n            }\n\n        }\n\n        //\n\n        if( rebuild ){\n\n            this.build();\n\n        }else{\n\n            this.bufferList.forEach( function( buffer ){\n                buffer.setParameters( bufferParams );\n            } );\n\n            if( Object.keys( what ).length ){\n                this.update( what );  // update buffer attribute\n            }\n\n            this.viewer.requestRender();\n\n        }\n\n        return this;\n\n    },\n\n    getParameters: function(){\n\n        var params = {\n            visible: this.visible,\n            quality: this.quality\n        };\n\n        Object.keys( this.parameters ).forEach( function( name ){\n            params[ name ] = this[ name ];\n        }, this );\n\n        return params;\n\n    },\n\n    clear: function(){\n\n        this.bufferList.forEach( function( buffer ){\n\n            this.viewer.remove( buffer );\n            buffer.dispose();\n\n        }, this );\n\n        this.bufferList.length = 0;\n\n        this.viewer.requestRender();\n\n    },\n\n    dispose: function(){\n\n        this.disposed = true;\n        this.queue.kill();\n        this.tasks.dispose();\n        this.clear();\n\n    }\n\n};\n\n\nNGL.BufferRepresentation = function( buffer, viewer, params ){\n\n    NGL.Representation.call( this, buffer, viewer, params );\n\n    this.buffer = buffer;\n\n    this.build();\n\n};\n\nNGL.BufferRepresentation.prototype = NGL.createObject(\n\n    NGL.Representation.prototype, {\n\n    constructor: NGL.BufferRepresentation,\n\n    type: \"buffer\",\n\n    parameters: Object.assign( {\n\n    }, NGL.Representation.prototype.parameters, {\n\n        colorScheme: null,\n        colorScale: null,\n        colorValue: null,\n        colorDomain: null,\n        colorMode: null\n\n    } ),\n\n    create: function(){\n\n        this.bufferList.push( this.buffer );\n\n    },\n\n    attach: function( callback ){\n\n        this.bufferList.forEach( function( buffer ){\n\n            this.viewer.add( buffer );\n\n        }, this );\n\n        this.setVisibility( this.visible );\n\n        callback();\n\n    }\n\n} );\n\n\n/////////////////////////////\n// Structure representation\n\nNGL.StructureRepresentation = function( structure, viewer, params ){\n\n    var p = params || {};\n\n    this.dataList = [];\n\n    this.structure = structure;\n    this.selection = new NGL.Selection( p.sele );\n    this.structureView = this.structure.getView( this.selection );\n\n    NGL.Representation.call( this, structure, viewer, p );\n\n    if( structure.biomolDict ){\n        var biomolOptions = {\n            \"default\": \"default\",\n            \"\": ( structure.unitcell ? \"AU\" : \"FULL\" )\n        };\n        Object.keys( structure.biomolDict ).forEach( function( k ){\n            biomolOptions[ k ] = k;\n        } );\n        this.parameters.assembly = {\n            type: \"select\",\n            options: biomolOptions,\n            rebuild: true\n        };\n    }else{\n        this.parameters.assembly = null;\n    }\n\n    // must come after structureView to ensure selection change signals\n    // have already updated the structureView\n    this.selection.signals.stringChanged.add( function(){\n        this.build();\n    }.bind( this ) );\n\n    this.build();\n\n};\n\nNGL.StructureRepresentation.prototype = NGL.createObject(\n\n    NGL.Representation.prototype, {\n\n    constructor: NGL.StructureRepresentation,\n\n    type: \"structure\",\n\n    parameters: Object.assign( {\n\n        radiusType: {\n            type: \"select\", options: NGL.RadiusFactory.types\n        },\n        radius: {\n            type: \"number\", precision: 3, max: 10.0, min: 0.001\n        },\n        scale: {\n            type: \"number\", precision: 3, max: 10.0, min: 0.001\n        },\n        assembly: null\n\n    }, NGL.Representation.prototype.parameters ),\n\n    defaultScale: {\n        \"vdw\": 1.0,\n        \"covalent\": 1.0,\n        \"bfactor\": 0.01,\n        \"sstruc\": 1.0\n    },\n\n    defaultSize: 1.0,\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"element\";\n\n        this.radius = p.radius || \"vdw\";\n        this.scale = p.scale || 1.0;\n        this.assembly = p.assembly === undefined ? \"default\" : p.assembly;\n        this.defaultAssembly = p.defaultAssembly || \"\";\n\n        NGL.Representation.prototype.init.call( this, p );\n\n    },\n\n    create: function(){\n\n        if( this.structureView.atomCount === 0 ) return;\n\n        var name = this.assembly === \"default\" ? this.defaultAssembly : this.assembly;\n        var assembly = this.structure.biomolDict[ name ];\n\n        if( assembly ){\n            assembly.partList.forEach( function( part, i ){\n                var sview = part.getView( this.structureView );\n                if( sview.atomCount === 0 ) return;\n                var data = this.createData( sview, i );\n                if( data ){\n                    data.sview = sview;\n                    data.instanceList = part.getInstanceList();\n                    this.dataList.push( data );\n                }\n            }, this );\n        }else{\n            var data = this.createData( this.structureView, 0 );\n            if( data ){\n                data.sview = this.structureView;\n                this.dataList.push( data );\n            }\n        }\n\n    },\n\n    createData: function( sview ){\n\n        console.error( \"createData not implemented\" );\n\n    },\n\n    update: function( what ){\n\n        this.dataList.forEach( function( data ){\n            if( data.bufferList.length > 0 ){\n                this.updateData( what, data );\n            }\n        }, this );\n\n    },\n\n    updateData: function( what, data ){\n\n        console.error( \"updateData not implemented\" );\n\n    },\n\n    getColorParams: function(){\n\n        var p = NGL.Representation.prototype.getColorParams.call( this );\n        p.structure = this.structure;\n\n        return p;\n\n    },\n\n    getAtomParams: function( what, params ){\n\n        return Object.assign( {\n            what: what,\n            colorParams: this.getColorParams(),\n            radiusParams: { \"radius\": this.radius, \"scale\": this.scale }\n        }, params );\n\n    },\n\n    getBondParams: function( what, params ){\n\n        return Object.assign( {\n            what: what,\n            colorParams: this.getColorParams(),\n            radiusParams: { \"radius\": this.radius, \"scale\": this.scale }\n        }, params );\n\n    },\n\n    setSelection: function( string, silent ){\n\n        this.selection.setString( string, silent );\n\n        return this;\n\n    },\n\n    setParameters: function( params, what, rebuild ){\n\n        what = what || {};\n\n        if( params && params[ \"radiusType\" ] !== undefined ){\n            if( params[ \"radiusType\" ] === \"size\" ){\n                this.radius = this.defaultSize;\n            }else{\n                this.radius = params[ \"radiusType\" ];\n            }\n            what[ \"radius\" ] = true;\n            if( !NGL.extensionFragDepth || this.disableImpostor ){\n                rebuild = true;\n            }\n        }\n\n        if( params && params[ \"radius\" ] !== undefined ){\n            what[ \"radius\" ] = true;\n            if( !NGL.extensionFragDepth || this.disableImpostor ){\n                rebuild = true;\n            }\n        }\n\n        if( params && params[ \"scale\" ] !== undefined ){\n            what[ \"radius\" ] = true;\n            if( !NGL.extensionFragDepth || this.disableImpostor ){\n                rebuild = true;\n            }\n        }\n\n        NGL.Representation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        return this;\n\n    },\n\n    getParameters: function(){\n\n        var params = Object.assign(\n            NGL.Representation.prototype.getParameters.call( this ),\n            {\n                sele: this.selection ? this.selection.string : undefined,\n                defaultAssembly: this.defaultAssembly\n            }\n        );\n\n        return params;\n\n    },\n\n    attach: function( callback ){\n\n        var viewer = this.viewer;\n        var bufferList = this.bufferList;\n\n        this.dataList.forEach( function( data ){\n            data.bufferList.forEach( function( buffer ){\n                bufferList.push( buffer );\n                viewer.add( buffer, data.instanceList );\n            } )\n        } );\n\n        this.setVisibility( this.visible );\n        callback();\n\n    },\n\n    clear: function(){\n\n        this.dataList.length = 0;\n\n        NGL.Representation.prototype.clear.call( this );\n\n    },\n\n    dispose: function(){\n\n        this.structureView.dispose();\n\n        delete this.structure;\n        delete this.structureView;\n\n        NGL.Representation.prototype.dispose.call( this );\n\n    }\n\n} );\n\n\nNGL.SpacefillRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.SpacefillRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.SpacefillRepresentation,\n\n    type: \"spacefill\",\n\n    parameters: Object.assign( {\n\n        sphereDetail: {\n            type: \"integer\", max: 3, min: 0, rebuild: \"impostor\"\n        },\n        disableImpostor: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n\n        if( p.quality === \"low\" ){\n            this.sphereDetail = 0;\n        }else if( p.quality === \"medium\" ){\n            this.sphereDetail = 1;\n        }else if( p.quality === \"high\" ){\n            this.sphereDetail = 2;\n        }else{\n            this.sphereDetail = p.sphereDetail !== undefined ? p.sphereDetail : 1;\n        }\n        this.disableImpostor = p.disableImpostor || false;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    createData: function( sview ){\n\n        var atomData = sview.getAtomData( this.getAtomParams() );\n\n        var sphereBuffer = new NGL.SphereBuffer(\n            atomData.position,\n            atomData.color,\n            atomData.radius,\n            atomData.pickingColor,\n            this.getBufferParams( {\n                sphereDetail: this.sphereDetail,\n                dullInterior: true,\n                disableImpostor: this.disableImpostor\n            } )\n        );\n\n        return {\n            bufferList: [ sphereBuffer ]\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        var atomData = data.sview.getAtomData( this.getAtomParams( what ) );\n        var sphereData = {};\n\n        if( !what || what[ \"position\" ] ){\n            sphereData[ \"position\" ] = atomData.position;\n        }\n\n        if( !what || what[ \"color\" ] ){\n            sphereData[ \"color\" ] = atomData.color;\n        }\n\n        if( !what || what[ \"radius\" ] ){\n            sphereData[ \"radius\" ] = atomData.radius;\n        }\n\n        data.bufferList[ 0 ].setAttributes( sphereData );\n\n    }\n\n} );\n\n\nNGL.PointRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.PointRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.PointRepresentation,\n\n    type: \"point\",\n\n    parameters: Object.assign( {\n\n        pointSize: {\n            type: \"number\", precision: 1, max: 100, min: 0, buffer: true\n        },\n        sizeAttenuation: {\n            type: \"boolean\", buffer: true\n        },\n        sortParticles: {\n            type: \"boolean\", rebuild: true\n        },\n        useTexture: {\n            type: \"boolean\", buffer: true\n        },\n        alphaTest: {\n            type: \"range\", step: 0.001, max: 1, min: 0, buffer: true\n        },\n        forceTransparent: {\n            type: \"boolean\", buffer: true\n        },\n        edgeBleach: {\n            type: \"range\", step: 0.001, max: 1, min: 0, buffer: true\n        },\n\n    }, NGL.Representation.prototype.parameters, {\n\n        flatShaded: null,\n        wireframe: null,\n        linewidth: null,\n\n        roughness: null,\n        metalness: null\n\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n\n        this.pointSize = p.pointSize || 1;\n        this.sizeAttenuation = p.sizeAttenuation !== undefined ? p.sizeAttenuation : true;\n        this.sortParticles = p.sortParticles !== undefined ? p.sortParticles : false;\n        this.useTexture = p.useTexture !== undefined ? p.useTexture : false;\n        this.alphaTest = p.alphaTest !== undefined ? p.alphaTest : 0.5;\n        this.forceTransparent = p.forceTransparent !== undefined ? p.forceTransparent : false;\n        this.edgeBleach = p.edgeBleach !== undefined ? p.edgeBleach : 0.0;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    createData: function( sview ){\n\n        var what = { position: true, color: true };\n        var atomData = sview.getAtomData( this.getAtomParams( what ) );\n\n        var pointBuffer = new NGL.PointBuffer(\n            atomData.position,\n            atomData.color,\n            this.getBufferParams( {\n                pointSize: this.pointSize,\n                sizeAttenuation: this.sizeAttenuation,\n                sortParticles: this.sortParticles,\n                useTexture: this.useTexture,\n                alphaTest: this.alphaTest,\n                forceTransparent: this.forceTransparent,\n                edgeBleach: this.edgeBleach\n            } )\n        );\n\n        return {\n            bufferList: [ pointBuffer ]\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        var atomData = data.sview.getAtomData( this.getAtomParams( what ) );\n        var pointData = {};\n\n        if( !what || what[ \"position\" ] ){\n            pointData[ \"position\" ] = atomData.position;\n        }\n\n        if( !what || what[ \"color\" ] ){\n            pointData[ \"color\" ] = atomData.color;\n        }\n\n        data.bufferList[ 0 ].setAttributes( pointData );\n\n    }\n\n} );\n\n\nNGL.LabelRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.LabelRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.LabelRepresentation,\n\n    type: \"label\",\n\n    parameters: Object.assign( {\n\n        labelType: {\n            type: \"select\", options: NGL.LabelFactory.types, rebuild: true\n        },\n        fontFamily: {\n            type: \"select\", options: {\n                \"sans-serif\": \"sans-serif\",\n                \"monospace\": \"monospace\",\n                \"serif\": \"serif\"\n            },\n            buffer: true\n        },\n        fontStyle: {\n            type: \"select\", options: {\n                \"normal\": \"normal\",\n                \"italic\": \"italic\"\n            },\n            buffer: true\n        },\n        fontWeight: {\n            type: \"select\", options: {\n                \"normal\": \"normal\",\n                \"bold\": \"bold\"\n            },\n            buffer: true\n        },\n        sdf: {\n            type: \"boolean\", buffer: true\n        },\n        xOffset: {\n            type: \"number\", precision: 1, max: 20, min: -20, buffer: true\n        },\n        yOffset: {\n            type: \"number\", precision: 1, max: 20, min: -20, buffer: true\n        },\n        zOffset: {\n            type: \"number\", precision: 1, max: 20, min: -20, buffer: true\n        },\n\n    }, NGL.StructureRepresentation.prototype.parameters, {\n\n        side: null,\n        flatShaded: null,\n        wireframe: null,\n        linewidth: null,\n\n        roughness: null,\n        metalness: null,\n        diffuse: null,\n\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n\n        this.labelType = p.labelType || \"res\";\n        this.labelText = p.labelText || {};\n        this.fontFamily = p.fontFamily || \"sans-serif\";\n        this.fontStyle = p.fontStyle || \"normal\";\n        this.fontWeight = p.fontWeight || \"bold\";\n        this.sdf = p.sdf !== undefined ? p.sdf : NGL.browser !== \"Firefox\";  // FIXME\n        this.xOffset = p.xOffset !== undefined ? p.xOffset : 0.0;\n        this.yOffset = p.yOffset !== undefined ? p.yOffset : 0.0;\n        this.zOffset = p.zOffset !== undefined ? p.zOffset : 0.5;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    createData: function( sview ){\n\n        var what = { position: true, color: true, radius: true };\n        var atomData = sview.getAtomData( this.getAtomParams( what ) );\n\n        var text = [];\n        var labelFactory = new NGL.LabelFactory(\n            this.labelType, this.labelText\n        );\n        sview.eachSelectedAtom( function( ap ){\n            text.push( labelFactory.atomLabel( ap ) );\n        } );\n\n        var textBuffer = new NGL.TextBuffer(\n            atomData.position,\n            atomData.radius,\n            atomData.color,\n            text,\n            this.getBufferParams( {\n                fontFamily: this.fontFamily,\n                fontStyle: this.fontStyle,\n                fontWeight: this.fontWeight,\n                sdf: this.sdf,\n                xOffset: this.xOffset,\n                yOffset: this.yOffset,\n                zOffset: this.zOffset\n            } )\n        );\n\n        return {\n            bufferList: [ textBuffer ]\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        var atomData = data.sview.getAtomData( this.getAtomParams( what ) );\n        var textData = {};\n\n        if( !what || what[ \"position\" ] ){\n            textData[ \"position\" ] = atomData.position;\n        }\n\n        if( !what || what[ \"radius\" ] ){\n            textData[ \"size\" ] = atomData.radius;\n        }\n\n        if( !what || what[ \"color\" ] ){\n            textData[ \"color\" ] = atomData.color;\n        }\n\n        data.bufferList[ 0 ].setAttributes( textData );\n\n    }\n\n} );\n\n\nNGL.BallAndStickRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.BallAndStickRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.BallAndStickRepresentation,\n\n    type: \"ball+stick\",\n\n    defaultSize: 0.15,\n\n    parameters: Object.assign( {\n\n        sphereDetail: {\n            type: \"integer\", max: 3, min: 0, rebuild: \"impostor\"\n        },\n        radiusSegments: {\n            type: \"integer\", max: 25, min: 5, rebuild: \"impostor\"\n        },\n        disableImpostor: {\n            type: \"boolean\", rebuild: true\n        },\n        aspectRatio: {\n            type: \"number\", precision: 1, max: 10.0, min: 1.0\n        },\n        lineOnly: {\n            type: \"boolean\", rebuild: true\n        },\n        cylinderOnly: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.radius = p.radius || this.defaultSize;\n\n        if( p.quality === \"low\" ){\n            this.sphereDetail = 0;\n            this.radiusSegments = 5;\n        }else if( p.quality === \"medium\" ){\n            this.sphereDetail = 1;\n            this.radiusSegments = 10;\n        }else if( p.quality === \"high\" ){\n            this.sphereDetail = 2;\n            this.radiusSegments = 20;\n        }else{\n            this.sphereDetail = p.sphereDetail !== undefined ? p.sphereDetail : 1;\n            this.radiusSegments = p.radiusSegments !== undefined ? p.radiusSegments : 10;\n        }\n        this.disableImpostor = p.disableImpostor || false;\n\n        this.aspectRatio = p.aspectRatio || 2.0;\n        this.lineOnly = p.lineOnly || false;\n        this.cylinderOnly = p.cylinderOnly || false;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getAtomParams: function( what, params ){\n\n        params = Object.assign( {\n            radiusParams: { \"radius\": this.radius, \"scale\": this.scale * this.aspectRatio }\n        }, params );\n\n        return NGL.StructureRepresentation.prototype.getAtomParams.call( this, what, params );\n\n    },\n\n    getAtomData: function( sview, what, params ){\n\n        return sview.getAtomData( this.getAtomParams( what, params ) );\n\n    },\n\n    getBondData: function( sview, what, params ){\n\n        return sview.getBondData( this.getBondParams( what, params ) );\n\n    },\n\n    createData: function( sview ){\n\n        var bufferList = [];\n\n        if( this.lineOnly ){\n\n            var bondData = this.getBondData( sview );\n\n            this.lineBuffer = new NGL.LineBuffer(\n                bondData.position1,\n                bondData.position2,\n                bondData.color1,\n                bondData.color2,\n                this.getBufferParams()\n            );\n\n            bufferList.push( this.lineBuffer );\n\n        }else{\n\n            if( !this.cylinderOnly ){\n\n                var atomData = this.getAtomData( sview );\n\n                var sphereBuffer = new NGL.SphereBuffer(\n                    atomData.position,\n                    atomData.color,\n                    atomData.radius,\n                    atomData.pickingColor,\n                    this.getBufferParams( {\n                        sphereDetail: this.sphereDetail,\n                        disableImpostor: this.disableImpostor,\n                        dullInterior: true\n                    } )\n                );\n\n                bufferList.push( sphereBuffer );\n\n            }\n\n            var bondData = this.getBondData( sview );\n\n            var cylinderBuffer = new NGL.CylinderBuffer(\n                bondData.position1,\n                bondData.position2,\n                bondData.color1,\n                bondData.color2,\n                bondData.radius,\n                bondData.pickingColor1,\n                bondData.pickingColor2,\n                this.getBufferParams( {\n                    shift: 0,\n                    cap: true,\n                    radiusSegments: this.radiusSegments,\n                    disableImpostor: this.disableImpostor,\n                    dullInterior: true\n                } )\n            );\n\n            bufferList.push( cylinderBuffer );\n\n        }\n\n        return {\n            bufferList: bufferList\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        if( this.lineOnly ){\n\n            var bondData = this.getBondData( data.sview, what );\n            var lineData = {};\n\n            if( !what || what[ \"position\" ] ){\n                lineData[ \"from\" ] = bondData.position1;\n                lineData[ \"to\" ] = bondData.position2;\n            }\n\n            if( !what || what[ \"color\" ] ){\n                lineData[ \"color\" ] = bondData.color1;\n                lineData[ \"color2\" ] = bondData.color2;\n            }\n\n            data.bufferList[ 0 ].setAttributes( lineData );\n\n        }else{\n\n            var atomData = this.getAtomData( data.sview, what );\n            var bondData = this.getBondData( data.sview, what );\n            var sphereData = {};\n            var cylinderData = {};\n\n            if( !what || what[ \"position\" ] ){\n                sphereData[ \"position\" ] = atomData.position;\n                cylinderData[ \"position\" ] = NGL.Utils.calculateCenterArray(\n                    bondData.position1, bondData.position2\n                );\n                cylinderData[ \"position1\" ] = bondData.position1;\n                cylinderData[ \"position2\" ] = bondData.position2;\n            }\n\n            if( !what || what[ \"color\" ] ){\n                sphereData[ \"color\" ] = atomData.color;\n                cylinderData[ \"color\" ] = bondData.color1;\n                cylinderData[ \"color2\" ] = bondData.color2;\n            }\n\n            if( !what || what[ \"radius\" ] ){\n                sphereData[ \"radius\" ] = atomData.radius;\n                cylinderData[ \"radius\" ] = bondData.radius;\n            }\n\n            data.bufferList[ 0 ].setAttributes( sphereData );\n            data.bufferList[ 1 ].setAttributes( cylinderData );\n\n        }\n\n    },\n\n    setParameters: function( params ){\n\n        var rebuild = false;\n        var what = {};\n\n        if( params && params[ \"aspectRatio\" ] ){\n\n            what[ \"radius\" ] = true;\n            if( !NGL.extensionFragDepth || this.disableImpostor ){\n                rebuild = true;\n            }\n\n        }\n\n        NGL.StructureRepresentation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        return this;\n\n    }\n\n} );\n\n\nNGL.LicoriceRepresentation = function( structure, viewer, params ){\n\n    NGL.BallAndStickRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.LicoriceRepresentation.prototype = NGL.createObject(\n\n    NGL.BallAndStickRepresentation.prototype, {\n\n    constructor: NGL.LicoriceRepresentation,\n\n    type: \"licorice\",\n\n    parameters: Object.assign(\n        {}, NGL.BallAndStickRepresentation.prototype.parameters, { aspectRatio: null }\n    ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.aspectRatio = 1.0;\n\n        NGL.BallAndStickRepresentation.prototype.init.call( this, p );\n\n    }\n\n} );\n\n\nNGL.LineRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.LineRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.LineRepresentation,\n\n    type: \"line\",\n\n    parameters: Object.assign( {\n\n    }, NGL.Representation.prototype.parameters, {\n\n        flatShaded: null,\n        side: null,\n        wireframe: null,\n\n        roughness: null,\n        metalness: null,\n        diffuse: null,\n\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    createData: function( sview ){\n\n        var what = { position: true, color: true };\n        var bondData = sview.getBondData( this.getBondParams( what ) );\n\n        var lineBuffer = new NGL.LineBuffer(\n            bondData.position1,\n            bondData.position2,\n            bondData.color1,\n            bondData.color2,\n            this.getBufferParams()\n        );\n\n        return {\n            bufferList: [ lineBuffer ]\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        var bondData = data.sview.getBondData( this.getBondParams( what ) );\n        var lineData = {};\n\n        if( !what || what[ \"position\" ] ){\n            lineData[ \"from\" ] = bondData.position1;\n            lineData[ \"to\" ] = bondData.position2;\n        }\n\n        if( !what || what[ \"color\" ] ){\n            lineData[ \"color\" ] = bondData.color1;\n            lineData[ \"color2\" ] = bondData.color2;\n        }\n\n        data.bufferList[ 0 ].setAttributes( lineData );\n\n    }\n\n} );\n\n\nNGL.HyperballRepresentation = function( structure, viewer, params ){\n\n    NGL.LicoriceRepresentation.call( this, structure, viewer, params );\n\n    this.defaultScale[ \"vdw\" ] = 0.2;\n\n};\n\nNGL.HyperballRepresentation.prototype = NGL.createObject(\n\n    NGL.LicoriceRepresentation.prototype, {\n\n    constructor: NGL.HyperballRepresentation,\n\n    type: \"hyperball\",\n\n    defaultSize: 1.0,\n\n    parameters: Object.assign( {\n\n        shrink: {\n            type: \"number\", precision: 3, max: 1.0, min: 0.001, buffer: true\n        }\n\n    }, NGL.LicoriceRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.scale = p.scale || 0.2;\n        p.radius = p.radius || \"vdw\";\n\n        this.shrink = p.shrink || 0.12;\n\n        NGL.LicoriceRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getBondParams: function( what, params ){\n\n        if( !what || what[ \"radius\" ] ){\n            params = Object.assign( { radius2: true }, params );\n        }\n\n        return NGL.LicoriceRepresentation.prototype.getBondParams.call( this, what, params );\n\n    },\n\n    createData: function( sview ){\n\n        var atomData = sview.getAtomData( this.getAtomParams() );\n        var bondData = sview.getBondData( this.getBondParams() );\n\n        var sphereBuffer = new NGL.SphereBuffer(\n            atomData.position,\n            atomData.color,\n            atomData.radius,\n            atomData.pickingColor,\n            this.getBufferParams( {\n                sphereDetail: this.sphereDetail,\n                disableImpostor: this.disableImpostor,\n                dullInterior: true\n            } )\n        );\n\n        this.__center = new Float32Array( sview.bondCount * 3 );\n\n        var stickBuffer = new NGL.HyperballStickBuffer(\n            bondData.position1,\n            bondData.position2,\n            bondData.color1,\n            bondData.color2,\n            bondData.radius1,\n            bondData.radius2,\n            bondData.pickingColor1,\n            bondData.pickingColor2,\n            this.getBufferParams( {\n                shrink: this.shrink,\n                radiusSegments: this.radiusSegments,\n                dullInterior: true\n            } ),\n            this.disableImpostor\n        );\n\n        return {\n            bufferList: [ sphereBuffer, stickBuffer ]\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        var atomData = data.sview.getAtomData( this.getAtomParams() );\n        var bondData = data.sview.getBondData( this.getBondParams() );\n        var sphereData = {};\n        var stickData = {};\n\n        if( !what || what[ \"position\" ] ){\n            sphereData[ \"position\" ] = atomData.position;\n            var from = bondData.position1;\n            var to = bondData.position2;\n            stickData[ \"position\" ] = NGL.Utils.calculateCenterArray(\n                from, to, this.__center\n            );\n            stickData[ \"position1\" ] = from;\n            stickData[ \"position2\" ] = to;\n        }\n\n        if( !what || what[ \"color\" ] ){\n            sphereData[ \"color\" ] = atomData.color;\n            stickData[ \"color\" ] = bondData.color1;\n            stickData[ \"color2\" ] = bondData.color2;\n        }\n\n        if( !what || what[ \"radius\" ] ){\n            sphereData[ \"radius\" ] = atomData.radius;\n            stickData[ \"radius\" ] = bondData.radius1;\n            stickData[ \"radius2\" ] = bondData.radius2;\n        }\n\n        data.bufferList[ 0 ].setAttributes( sphereData );\n        data.bufferList[ 1 ].setAttributes( stickData );\n\n    },\n\n} );\n\n\nNGL.BackboneRepresentation = function( structure, viewer, params ){\n\n    NGL.BallAndStickRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.BackboneRepresentation.prototype = NGL.createObject(\n\n    NGL.BallAndStickRepresentation.prototype, {\n\n    constructor: NGL.BackboneRepresentation,\n\n    type: \"backbone\",\n\n    defaultSize: 0.25,\n\n    parameters: Object.assign( {\n\n    }, NGL.BallAndStickRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.aspectRatio = p.aspectRatio || 1.0;\n\n        NGL.BallAndStickRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getAtomData: function( sview, what, params ){\n\n        return sview.getBackboneAtomData( this.getAtomParams( what, params ) );\n\n    },\n\n    getBondData: function( sview, what, params ){\n\n        var p = this.getBondParams( what, params );\n        p.colorParams.backbone = true;\n\n        return sview.getBackboneBondData( p );\n\n    }\n\n} );\n\n\nNGL.BaseRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.BaseRepresentation.prototype = NGL.createObject(\n\n    NGL.BallAndStickRepresentation.prototype, {\n\n    constructor: NGL.BaseRepresentation,\n\n    type: \"base\",\n\n    defaultSize: 0.3,\n\n    parameters: Object.assign( {\n\n    }, NGL.BallAndStickRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.aspectRatio = p.aspectRatio || 1.0;\n\n        NGL.BallAndStickRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getAtomData: function( sview, what, params ){\n\n        return sview.getRungAtomData( this.getAtomParams( what, params ) );\n\n    },\n\n    getBondData: function( sview, what, params ){\n\n        var p = this.getBondParams( what, params );\n        p.colorParams.rung = true;\n\n        return sview.getRungBondData( p );\n\n    }\n\n} );\n\n\nNGL.CartoonRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.CartoonRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.CartoonRepresentation,\n\n    type: \"cartoon\",\n\n    parameters: Object.assign( {\n\n        aspectRatio: {\n            type: \"number\", precision: 1, max: 10.0, min: 1.0\n        },\n        subdiv: {\n            type: \"integer\", max: 50, min: 1, rebuild: true\n        },\n        radialSegments: {\n            type: \"integer\", max: 50, min: 1, rebuild: true\n        },\n        tension: {\n            type: \"number\", precision: 1, max: 1.0, min: 0.1\n        },\n        capped: {\n            type: \"boolean\", rebuild: true\n        },\n        smoothSheet: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"atomindex\";\n        p.colorScale = p.colorScale || \"RdYlBu\";\n        p.radius = p.radius || \"sstruc\";\n        p.scale = p.scale || 0.7;\n\n        if( p.quality === \"low\" ){\n            this.subdiv = 3;\n            this.radialSegments = 6;\n        }else if( p.quality === \"medium\" ){\n            this.subdiv = 6;\n            this.radialSegments = 10;\n        }else if( p.quality === \"high\" ){\n            this.subdiv = 12;\n            this.radialSegments = 20;\n        }else{\n            this.subdiv = p.subdiv || 6;\n            this.radialSegments = p.radialSegments || 10;\n        }\n\n        this.aspectRatio = p.aspectRatio || 5.0;\n        this.tension = p.tension || NaN;\n        this.capped = p.capped === undefined ? true : p.capped;\n        this.smoothSheet = p.smoothSheet || false;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getSplineParams: function( params ){\n\n        return Object.assign( {\n            subdiv: this.subdiv,\n            tension: this.tension,\n            directional: this.aspectRatio === 1.0 ? false : true,\n            smoothSheet: this.smoothSheet\n        }, params );\n\n    },\n\n    getSpline: function( polymer ){\n\n        return new NGL.Spline( polymer, this.getSplineParams() );\n\n    },\n\n    getScale: function( polymer ){\n\n        return polymer.isCg() ? this.scale * this.aspectRatio : this.scale;\n\n    },\n\n    getAspectRatio: function( polymer ){\n\n        return polymer.isCg() ? 1.0 : this.aspectRatio;\n\n    },\n\n    createData: function( sview ){\n\n        var bufferList = [];\n        var polymerList = [];\n\n        this.structure.eachPolymer( function( polymer ){\n\n            if( polymer.residueCount < 4 ) return;\n            polymerList.push( polymer );\n\n            var spline = this.getSpline( polymer );\n\n            var subPos = spline.getSubdividedPosition();\n            var subOri = spline.getSubdividedOrientation();\n            var subCol = spline.getSubdividedColor( this.getColorParams() );\n            var subSize = spline.getSubdividedSize( this.radius, this.getScale( polymer ) );\n\n            bufferList.push(\n                new NGL.TubeMeshBuffer(\n                    subPos.position,\n                    subOri.normal,\n                    subOri.binormal,\n                    subOri.tangent,\n                    subCol.color,\n                    subSize.size,\n                    subCol.pickingColor,\n                    this.getBufferParams( {\n                        radialSegments: this.radialSegments,\n                        aspectRatio: this.getAspectRatio( polymer ),\n                        capped: this.capped,\n                        dullInterior: true\n                    } )\n                )\n            );\n\n        }.bind( this ), sview.getSelection() );\n\n        return {\n            bufferList: bufferList,\n            polymerList: polymerList\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        if( NGL.debug ) NGL.time( this.type + \" repr update\" );\n\n        what = what || {};\n\n        for( var i = 0, il = data.polymerList.length; i < il; ++i ){\n\n            var bufferData = {};\n            var polymer = data.polymerList[ i ];\n            var spline = this.getSpline( polymer );\n\n            data.bufferList[ i ].aspectRatio = this.getAspectRatio( polymer );\n\n            if( what[ \"position\" ] || what[ \"radius\" ] ){\n\n                var subPos = spline.getSubdividedPosition();\n                var subOri = spline.getSubdividedOrientation();\n                var subSize = spline.getSubdividedSize( this.radius, this.getScale( polymer ) );\n\n                bufferData[ \"position\" ] = subPos.position;\n                bufferData[ \"normal\" ] = subOri.normal;\n                bufferData[ \"binormal\" ] = subOri.binormal;\n                bufferData[ \"tangent\" ] = subOri.tangent;\n                bufferData[ \"size\" ] = subSize.size;\n\n            }\n\n            if( what[ \"color\" ] ){\n\n                var subCol = spline.getSubdividedColor( this.getColorParams() );\n\n                bufferData[ \"color\" ] = subCol.color;\n                bufferData[ \"pickingColor\" ] = subCol.pickingColor;\n\n            }\n\n            data.bufferList[ i ].setAttributes( bufferData );\n\n        }\n\n        if( NGL.debug ) NGL.timeEnd( this.type + \" repr update\" );\n\n    },\n\n    setParameters: function( params ){\n\n        var rebuild = false;\n        var what = {};\n\n        if( params && params[ \"aspectRatio\" ] ){\n            what[ \"radius\" ] = true;\n        }\n\n        if( params && params[ \"tension\" ] ){\n            what[ \"position\" ] = true;\n        }\n\n        NGL.StructureRepresentation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        return this;\n\n    }\n\n} );\n\n\nNGL.TubeRepresentation = function( structure, viewer, params ){\n\n    NGL.CartoonRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.TubeRepresentation.prototype = NGL.createObject(\n\n    NGL.CartoonRepresentation.prototype, {\n\n    constructor: NGL.TubeRepresentation,\n\n    type: \"tube\",\n\n    parameters: Object.assign(\n        {}, NGL.CartoonRepresentation.prototype.parameters, { aspectRatio: null }\n    ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.aspectRatio = 1.0;\n        p.scale = p.scale || 2.0;\n\n        NGL.CartoonRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getSplineParams: function( params ){\n\n        return NGL.CartoonRepresentation.prototype.getSplineParams.call( this, {\n            directional: false\n        } );\n\n    }\n\n} );\n\n\nNGL.RibbonRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n    this.defaultScale[ \"sstruc\" ] *= 3.0;\n\n};\n\nNGL.RibbonRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.RibbonRepresentation,\n\n    type: \"ribbon\",\n\n    parameters: Object.assign( {\n\n        subdiv: {\n            type: \"integer\", max: 50, min: 1, rebuild: true\n        },\n        tension: {\n            type: \"number\", precision: 1, max: 1.0, min: 0.1\n        },\n        smoothSheet: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters, {\n\n        side: null,\n        wireframe: null,\n        linewidth: null\n\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"atomindex\";\n        p.colorScale = p.colorScale || \"RdYlBu\";\n        p.radius = p.radius || \"sstruc\";\n        p.scale = p.scale || 4.0;\n\n        if( p.quality === \"low\" ){\n            this.subdiv = 3;\n        }else if( p.quality === \"medium\" ){\n            this.subdiv = 6;\n        }else if( p.quality === \"high\" ){\n            this.subdiv = 12;\n        }else{\n            this.subdiv = p.subdiv || 6;\n        }\n\n        this.tension = p.tension || NaN;\n        this.smoothSheet = p.smoothSheet || false;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getSplineParams: function( params ){\n\n        return Object.assign( {\n            subdiv: this.subdiv,\n            tension: this.tension,\n            directional: true,\n            smoothSheet: this.smoothSheet\n        }, params );\n\n    },\n\n    createData: function( sview ){\n\n        var bufferList = [];\n        var polymerList = [];\n\n        this.structure.eachPolymer( function( polymer ){\n\n            if( polymer.residueCount < 4 ) return;\n            polymerList.push( polymer );\n\n            var spline = new NGL.Spline( polymer, this.getSplineParams() );\n            var subPos = spline.getSubdividedPosition();\n            var subOri = spline.getSubdividedOrientation();\n            var subCol = spline.getSubdividedColor( this.getColorParams() );\n            var subSize = spline.getSubdividedSize( this.radius, this.scale );\n\n            bufferList.push(\n                new NGL.RibbonBuffer(\n                    subPos.position,\n                    subOri.binormal,\n                    subOri.normal,\n                    subCol.color,\n                    subSize.size,\n                    subCol.pickingColor,\n                    this.getBufferParams()\n                )\n            );\n\n        }.bind( this ), sview.getSelection() );\n\n        return {\n            bufferList: bufferList,\n            polymerList: polymerList\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        what = what || {};\n\n        var i = 0;\n        var n = data.polymerList.length;\n\n        for( i = 0; i < n; ++i ){\n\n            var bufferData = {};\n            var spline = new NGL.Spline( data.polymerList[ i ], this.getSplineParams() );\n\n            if( what[ \"position\" ] ){\n                var subPos = spline.getSubdividedPosition();\n                var subOri = spline.getSubdividedOrientation();\n                bufferData[ \"position\" ] = subPos.position;\n                bufferData[ \"normal\" ] = subOri.binormal;\n                bufferData[ \"dir\" ] = subOri.normal;\n            }\n\n            if( what[ \"radius\" ] || what[ \"scale\" ] ){\n                var subSize = spline.getSubdividedSize( this.radius, this.scale );\n                bufferData[ \"size\" ] = subSize.size;\n            }\n\n            if( what[ \"color\" ] ){\n                var subCol = spline.getSubdividedColor( this.getColorParams() );\n                bufferData[ \"color\" ] = subCol.color;\n            }\n\n            data.bufferList[ i ].setAttributes( bufferData );\n\n        };\n\n    },\n\n    setParameters: function( params ){\n\n        var rebuild = false;\n        var what = {};\n\n        if( params && params[ \"tension\" ] ){\n            what[ \"position\" ] = true;\n        }\n\n        NGL.StructureRepresentation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        return this;\n\n    }\n\n} );\n\n\nNGL.TraceRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.TraceRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.TraceRepresentation,\n\n    type: \"trace\",\n\n    parameters: Object.assign( {\n\n        subdiv: {\n            type: \"integer\", max: 50, min: 1, rebuild: true\n        },\n        tension: {\n            type: \"number\", precision: 1, max: 1.0, min: 0.1\n        },\n        smoothSheet: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.Representation.prototype.parameters, {\n\n        flatShaded: null,\n        side: null,\n        wireframe: null\n\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"atomindex\";\n        p.colorScale = p.colorScale || \"RdYlBu\";\n\n        if( p.quality === \"low\" ){\n            this.subdiv = 3;\n        }else if( p.quality === \"medium\" ){\n            this.subdiv = 6;\n        }else if( p.quality === \"high\" ){\n            this.subdiv = 12;\n        }else{\n            this.subdiv = p.subdiv || 6;\n        }\n\n        this.tension = p.tension || NaN;\n        this.smoothSheet = p.smoothSheet || false;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getSplineParams: function( params ){\n\n        return Object.assign( {\n            subdiv: this.subdiv,\n            tension: this.tension,\n            directional: false,\n            smoothSheet: this.smoothSheet\n        }, params );\n\n    },\n\n    createData: function( sview ){\n\n        var bufferList = [];\n        var polymerList = [];\n\n        this.structure.eachPolymer( function( polymer ){\n\n            if( polymer.residueCount < 4 ) return;\n            polymerList.push( polymer );\n\n            var spline = new NGL.Spline( polymer, this.getSplineParams() );\n            var subPos = spline.getSubdividedPosition();\n            var subCol = spline.getSubdividedColor( this.getColorParams() );\n\n            bufferList.push(\n                new NGL.TraceBuffer(\n                    subPos.position,\n                    subCol.color,\n                    this.getBufferParams()\n                )\n            );\n\n        }.bind( this ), sview.getSelection() );\n\n        return {\n            bufferList: bufferList,\n            polymerList: polymerList\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        what = what || {};\n\n        var i = 0;\n        var n = data.polymerList.length;\n\n        for( i = 0; i < n; ++i ){\n\n            var bufferData = {};\n            var spline = new NGL.Spline( data.polymerList[ i ], this.getSplineParams() );\n\n            if( what[ \"position\" ] ){\n                var subPos = spline.getSubdividedPosition();\n                bufferData[ \"position\" ] = subPos.position;\n            }\n\n            if( what[ \"color\" ] ){\n                var subCol = spline.getSubdividedColor( this.getColorParams() );\n                bufferData[ \"color\" ] = subCol.color;\n            }\n\n            data.bufferList[ i ].setAttributes( bufferData );\n\n        };\n\n    },\n\n    setParameters: function( params ){\n\n        var rebuild = false;\n        var what = {};\n\n        if( params && params[ \"tension\" ] ){\n            what[ \"position\" ] = true;\n        }\n\n        NGL.StructureRepresentation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        return this;\n\n    }\n\n} );\n\n\nNGL.HelixorientRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.HelixorientRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.HelixorientRepresentation,\n\n    type: \"helixorient\",\n\n    parameters: Object.assign( {\n\n        sphereDetail: {\n            type: \"integer\", max: 3, min: 0, rebuild: \"impostor\"\n        },\n        disableImpostor: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"sstruc\";\n        p.radius = p.radius || 0.15;\n        p.scale = p.scale || 1.0;\n\n        if( p.quality === \"low\" ){\n            this.sphereDetail = 0;\n        }else if( p.quality === \"medium\" ){\n            this.sphereDetail = 1;\n        }else if( p.quality === \"high\" ){\n            this.sphereDetail = 2;\n        }else{\n            this.sphereDetail = p.sphereDetail !== undefined ? p.sphereDetail : 1;\n        }\n        this.disableImpostor = p.disableImpostor || false;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    createData: function( sview ){\n\n        var bufferList = [];\n        var polymerList = [];\n\n        this.structure.eachPolymer( function( polymer ){\n\n            if( polymer.residueCount < 4 ) return;\n            polymerList.push( polymer );\n\n            var helixorient = new NGL.Helixorient( polymer );\n            var position = helixorient.getPosition();\n            var color = helixorient.getColor( this.getColorParams() );\n            var size = helixorient.getSize( this.radius, this.scale );\n\n            bufferList.push(\n\n                new NGL.SphereBuffer(\n                    position.center,\n                    color.color,\n                    size.size,\n                    color.pickingColor,\n                    this.getBufferParams( {\n                        sphereDetail: this.sphereDetail,\n                        disableImpostor: this.disableImpostor,\n                        dullInterior: true\n                    } )\n                ),\n\n                new NGL.VectorBuffer(\n                    position.center,\n                    position.axis,\n                    this.getBufferParams({\n                        color: \"skyblue\",\n                        scale: 1\n                    })\n                ),\n\n                new NGL.VectorBuffer(\n                    position.center,\n                    position.resdir,\n                    this.getBufferParams({\n                        color: \"lightgreen\",\n                        scale: 1\n                    })\n                )\n\n            );\n\n\n        }.bind( this ), sview.getSelection() );\n\n        return {\n            bufferList: bufferList,\n            polymerList: polymerList\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        if( NGL.debug ) NGL.time( this.type + \" repr update\" );\n\n        what = what || {};\n\n        for( var i = 0, il = data.polymerList.length; i < il; ++i ){\n\n            var j = i * 3;\n\n            var bufferData = {};\n            var polymer = data.polymerList[ i ]\n            var helixorient = new NGL.Helixorient( polymer );\n\n            if( what[ \"position\" ] ){\n\n                var position = helixorient.getPosition();\n\n                bufferData[ \"position\" ] = position.center;\n\n                data.bufferList[ j + 1 ].setAttributes( {\n                    \"position\": position.center,\n                    \"vector\": position.axis,\n                } );\n                data.bufferList[ j + 2 ].setAttributes( {\n                    \"position\": position.center,\n                    \"vector\": position.resdir,\n                } );\n\n            }\n\n            data.bufferList[ j ].setAttributes( bufferData );\n\n        }\n\n        if( NGL.debug ) NGL.timeEnd( this.type + \" repr update\" );\n\n    }\n\n} );\n\n\nNGL.RocketRepresentation = function( structure, viewer, params ){\n\n    this.helixbundleList = [];\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.RocketRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.RocketRepresentation,\n\n    type: \"rocket\",\n\n    parameters: Object.assign( {\n\n        localAngle: {\n            type: \"integer\", max: 180, min: 0, rebuild: true\n        },\n        centerDist: {\n            type: \"number\", precision: 1, max: 10, min: 0, rebuild: true\n        },\n        ssBorder: {\n            type: \"boolean\", rebuild: true\n        },\n        radiusSegments: {\n            type: \"integer\", max: 25, min: 5, rebuild: \"impostor\"\n        },\n        disableImpostor: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"sstruc\";\n        p.radius = p.radius || 1.5;\n        p.scale = p.scale || 1.0;\n\n        if( p.quality === \"low\" ){\n            this.radiusSegments = 5;\n        }else if( p.quality === \"medium\" ){\n            this.radiusSegments = 10;\n        }else if( p.quality === \"high\" ){\n            this.radiusSegments = 20;\n        }else{\n            this.radiusSegments = p.radiusSegments !== undefined ? p.radiusSegments : 10;\n        }\n        this.disableImpostor = p.disableImpostor || false;\n\n        this.localAngle = p.localAngle || 30;\n        this.centerDist = p.centerDist || 2.5;\n        this.ssBorder = p.ssBorder === undefined ? false : p.ssBorder;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    createData: function( sview ){\n\n        var length = 0;\n        var axisList = [];\n        var helixbundleList = [];\n\n        this.structure.eachPolymer( function( polymer ){\n\n            if( polymer.residueCount < 4 || polymer.isNucleic() ) return;\n\n            var helixbundle = new NGL.Helixbundle( polymer );\n            var axis = helixbundle.getAxis(\n                this.localAngle, this.centerDist, this.ssBorder,\n                this.getColorParams(), this.radius, this.scale\n            );\n\n            length += axis.size.length;\n            axisList.push( axis );\n            helixbundleList.push( helixbundle );\n\n        }.bind( this ), sview.getSelection() );\n\n        var axisData = {\n            begin: new Float32Array( length * 3 ),\n            end: new Float32Array( length * 3 ),\n            size: new Float32Array( length ),\n            color: new Float32Array( length * 3 ),\n            pickingColor: new Float32Array( length * 3 ),\n        };\n\n        var offset = 0;\n\n        axisList.forEach( function( axis ){\n            axisData.begin.set( axis.begin, offset * 3 );\n            axisData.end.set( axis.end, offset * 3 );\n            axisData.size.set( axis.size, offset );\n            axisData.color.set( axis.color, offset * 3 );\n            axisData.pickingColor.set( axis.pickingColor, offset * 3 );\n            offset += axis.size.length;\n        } );\n\n        var cylinderBuffer = new NGL.CylinderBuffer(\n            axisData.begin,\n            axisData.end,\n            axisData.color,\n            axisData.color,\n            axisData.size,\n            axisData.pickingColor,\n            axisData.pickingColor,\n            this.getBufferParams( {\n                shift: 0,\n                cap: true,\n                radiusSegments: this.radiusSegments,\n                disableImpostor: this.disableImpostor,\n                dullInterior: true\n            } )\n        );\n\n        return {\n            bufferList: [ cylinderBuffer ],\n            axisList: axisList,\n            helixbundleList: helixbundleList,\n            axisData: axisData\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        what = what || {};\n\n        if( what[ \"position\" ] ){\n            this.build();\n            return;\n        }\n\n        var cylinderData = {};\n\n        if( what[ \"color\" ] || what[ \"radius\" ] ){\n\n            var offset = 0;\n\n            data.helixbundleList.forEach( function( helixbundle ){\n\n                var axis = helixbundle.getAxis(\n                    this.localAngle, this.centerDist, this.ssBorder,\n                    this.getColorParams(), this.radius, this.scale\n                );\n                if( what[ \"color\" ] ){\n                    data.axisData.color.set( axis.color, offset * 3 );\n                }\n                if( what[ \"radius\" ] || what[ \"scale\" ] ){\n                    data.axisData.size.set( axis.size, offset );\n                }\n                offset += axis.size.length;\n\n            }.bind( this ) );\n\n            if( what[ \"color\" ] ){\n                cylinderData[ \"color\" ] = data.axisData.color;\n                cylinderData[ \"color2\" ] = data.axisData.color;\n            }\n\n            if( what[ \"radius\" ] || what[ \"scale\" ] ){\n                cylinderData[ \"radius\" ] = data.axisData.size;\n            }\n\n        }\n\n        data.bufferList[ 0 ].setAttributes( cylinderData );\n\n    }\n\n} );\n\n\nNGL.RopeRepresentation = function( structure, viewer, params ){\n\n    NGL.CartoonRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.RopeRepresentation.prototype = NGL.createObject(\n\n    NGL.CartoonRepresentation.prototype, {\n\n    constructor: NGL.RopeRepresentation,\n\n    type: \"rope\",\n\n    parameters: Object.assign( {\n\n        smooth: {\n            type: \"integer\", max: 15, min: 0, rebuild: true\n        }\n\n    }, NGL.CartoonRepresentation.prototype.parameters, {\n        aspectRatio: null,\n        smoothSheet: null\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.aspectRatio = 1.0;\n        p.tension = p.tension || 0.5;\n        p.scale = p.scale || 5.0;\n        p.smoothSheet = false;\n\n        this.smooth = p.smooth === undefined ? 2 : p.smooth;\n\n        NGL.CartoonRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getSpline: function( polymer ){\n\n        var helixorient = new NGL.Helixorient( polymer );\n\n        return new NGL.Spline( polymer, this.getSplineParams( {\n            directional: false,\n            positionIterator: helixorient.getCenterIterator( this.smooth )\n        } ) );\n\n    }\n\n} );\n\n\nNGL.ContactRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.ContactRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.ContactRepresentation,\n\n    type: \"contact\",\n\n    defaultSize: 0.25,\n\n    parameters: Object.assign( {\n\n        contactType: {\n            type: \"select\", rebuild: true,\n            options: {\n                \"polar\": \"polar\",\n                \"polarBackbone\": \"polar backbone\"\n            }\n        },\n        maxDistance: {\n            type: \"number\", precision: 1, max: 10, min: 0.1, rebuild: true\n        },\n        maxAngle: {\n            type: \"integer\", max: 180, min: 0, rebuild: true\n        },\n        radiusSegments: {\n            type: \"integer\", max: 25, min: 5, rebuild: \"impostor\"\n        },\n        disableImpostor: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.radius = p.radius || this.defaultSize;\n\n        if( p.quality === \"low\" ){\n            this.radiusSegments = 5;\n        }else if( p.quality === \"medium\" ){\n            this.radiusSegments = 10;\n        }else if( p.quality === \"high\" ){\n            this.radiusSegments = 20;\n        }else{\n            this.radiusSegments = p.radiusSegments !== undefined ? p.radiusSegments : 10;\n        }\n        this.disableImpostor = p.disableImpostor || false;\n\n        this.contactType = p.contactType || \"polarBackbone\";\n        this.maxDistance = p.maxDistance || 3.5;\n        this.maxAngle = p.maxAngle || 40;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getContactData: function( sview ){\n\n        var contactsFnDict = {\n            \"polar\": NGL.polarContacts,\n            \"polarBackbone\": NGL.polarBackboneContacts\n        };\n\n        var contactData = contactsFnDict[ this.contactType ](\n            sview, this.maxDistance, this.maxAngle\n        );\n\n        return contactData;\n\n    },\n\n    getBondData: function( sview, what, params ){\n\n        return sview.getBondData( this.getBondParams( what, params ) );\n\n    },\n\n    createData: function( sview ){\n\n        var contactData = this.getContactData( sview );\n\n        var bondParams = {\n            bondSet: contactData.bondSet,\n            bondStore: contactData.bondStore\n        };\n\n        var bondData = this.getBondData( sview, undefined, bondParams );\n\n        var cylinderBuffer = new NGL.CylinderBuffer(\n            bondData.position1,\n            bondData.position2,\n            bondData.color1,\n            bondData.color2,\n            bondData.radius,\n            bondData.pickingColor1,\n            bondData.pickingColor2,\n            this.getBufferParams( {\n                shift: 0,\n                cap: true,\n                radiusSegments: this.radiusSegments,\n                disableImpostor: this.disableImpostor,\n                dullInterior: true\n            } )\n        );\n\n        return {\n            bufferList: [ cylinderBuffer ],\n            bondSet: contactData.bondSet,\n            bondStore: contactData.bondStore\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        if( !what || what[ \"position\" ] ){\n            var contactData = this.getContactData( data.sview );\n            data.bondSet = contactData.bondSet;\n            data.bondStore = contactData.bondStore;\n        }\n\n        var bondParams = {\n            bondSet: data.bondSet,\n            bondStore: data.bondStore\n        };\n\n        var bondData = this.getBondData( data.sview, what, bondParams );\n        var cylinderData = {};\n\n        if( !what || what[ \"position\" ] ){\n\n            cylinderData[ \"position\" ] = NGL.Utils.calculateCenterArray(\n                bondData.position1, bondData.position2\n            );\n            cylinderData[ \"position1\" ] = bondData.position1;\n            cylinderData[ \"position2\" ] = bondData.position2;\n        }\n\n        if( !what || what[ \"color\" ] ){\n            cylinderData[ \"color\" ] = bondData.color1;\n            cylinderData[ \"color2\" ] = bondData.color2;\n        }\n\n        if( !what || what[ \"radius\" ] ){\n            cylinderData[ \"radius\" ] = bondData.radius;\n        }\n\n        data.bufferList[ 0 ].setAttributes( cylinderData );\n\n    }\n\n} );\n\n\nNGL.MolecularSurfaceRepresentation = function( structure, viewer, params ){\n\n    this.__infoList = [];\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n    // TODO find a more direct way\n    this.structure.signals.refreshed.add( function(){\n        this.__forceNewMolsurf = true;\n    }, this );\n\n};\n\nNGL.MolecularSurfaceRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.MolecularSurfaceRepresentation,\n\n    type: \"surface\",\n\n    parameters: Object.assign( {\n\n        surfaceType: {\n            type: \"select\", rebuild: true,\n            options: {\n                \"vws\": \"vws\",\n                \"sas\": \"sas\",\n                \"ms\": \"ms\",\n                \"ses\": \"ses\"\n            }\n        },\n        probeRadius: {\n            type: \"number\", precision: 1, max: 20, min: 0,\n            rebuild: true\n        },\n        smooth: {\n            type: \"integer\", precision: 1, max: 10, min: 0,\n            rebuild: true\n        },\n        scaleFactor: {\n            type: \"number\", precision: 1, max: 5, min: 0,\n            rebuild: true\n        },\n        cutoff: {\n            type: \"number\", precision: 2, max: 50, min: 0,\n            rebuild: true\n        },\n        background: {\n            type: \"boolean\", rebuild: true  // FIXME\n        },\n        opaqueBack: {\n            type: \"boolean\", buffer: true\n        },\n        lowResolution: {\n            type: \"boolean\", rebuild: true\n        },\n        filterSele: {\n            type: \"text\"\n        },\n        volume: {\n            type: \"hidden\"\n        },\n        useWorker: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters, {\n\n        radiusType: null,\n        radius: null,\n        scale: null\n\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"uniform\";\n        p.colorValue = p.colorValue !== undefined ? p.colorValue : 0xDDDDDD;\n\n        this.surfaceType = p.surfaceType !== undefined ? p.surfaceType : \"ms\";\n        this.probeRadius = p.probeRadius !== undefined ? p.probeRadius : 1.4;\n        this.smooth = p.smooth !== undefined ? p.smooth : 2;\n        this.scaleFactor = p.scaleFactor !== undefined ? p.scaleFactor : 2.0;\n        this.cutoff = p.cutoff || 0.0;\n        this.background = p.background || false;\n        this.opaqueBack = p.opaqueBack !== undefined ? p.opaqueBack : true;\n        this.lowResolution = p.lowResolution !== undefined ? p.lowResolution : false;\n        this.filterSele = p.filterSele !== undefined ? p.filterSele : \"\";\n        this.volume = p.volume || undefined;\n        this.useWorker = p.useWorker !== undefined ? p.useWorker : true;\n\n        NGL.StructureRepresentation.prototype.init.call( this, params );\n\n    },\n\n    prepareData: function( sview, i, callback ){\n\n        var info = this.__infoList[ i ];\n        if( !info ){\n            info = {};\n            this.__infoList[ i ] = info;\n        }\n\n        if( !info.molsurf || info.sele !== sview.selection.string ){\n\n            info.sele = sview.selection.string;\n            info.molsurf = new NGL.MolecularSurface( sview );\n\n            var p = this.getSurfaceParams();\n            var onSurfaceFinish = function( surface ){\n                info.surface = surface;\n                callback( i );\n            };\n\n            if( this.useWorker ){\n                info.molsurf.getSurfaceWorker( p, onSurfaceFinish );\n            }else{\n                onSurfaceFinish( info.molsurf.getSurface( p ) );\n            }\n\n        }else{\n\n            callback( i );\n\n        }\n\n    },\n\n    prepare: function( callback ){\n\n        if( this.__forceNewMolsurf || this.__sele !== this.selection.string ||\n                this.__surfaceParams !== JSON.stringify( this.getSurfaceParams() ) ){\n            this.__infoList.forEach( function( info, i ){\n                info.molsurf.dispose();\n            }.bind( this ) );\n            this.__infoList.length = 0;\n        }\n\n        if( this.structureView.atomCount === 0 ){\n            callback();\n            return\n        }\n\n        var after = function(){\n            this.__sele = this.selection.string;\n            this.__surfaceParams = JSON.stringify( this.getSurfaceParams() );\n            this.__forceNewMolsurf = false;\n            callback()\n        }.bind( this );\n\n        var name = this.assembly === \"default\" ? this.defaultAssembly : this.assembly;\n        var assembly = this.structure.biomolDict[ name ];\n\n        if( assembly ){\n            assembly.partList.forEach( function( part, i ){\n                var sview = part.getView( this.structureView );\n                this.prepareData( sview, i, function( _i ){\n                    if( _i === assembly.partList.length - 1 ) after();\n                }.bind( this ) );\n            }, this );\n        }else{\n            this.prepareData( this.structureView, 0, after );\n        }\n\n    },\n\n    createData: function( sview, i ){\n\n        var info = this.__infoList[ i ];\n\n        var surfaceBuffer = new NGL.SurfaceBuffer(\n            info.surface.getPosition(),\n            info.surface.getColor( this.getColorParams() ),\n            info.surface.getFilteredIndex( this.filterSele, sview ),\n            info.surface.getNormal(),\n            info.surface.getPickingColor( this.getColorParams() ),\n            this.getBufferParams( {\n                background: this.background,\n                opaqueBack: this.opaqueBack,\n                dullInterior: false\n            } )\n        );\n        var doubleSidedBuffer = new NGL.DoubleSidedBuffer( surfaceBuffer );\n\n        return {\n            bufferList: [ doubleSidedBuffer ],\n            info: info\n        };\n\n    },\n\n    updateData: function( what, data ){\n\n        var surfaceData = {};\n\n        if( what[ \"position\" ] ){\n            this.__forceNewMolsurf = true;\n            this.build();\n            return;\n        }\n\n        if( what[ \"color\" ] ){\n            surfaceData[ \"color\" ] = data.info.surface.getColor( this.getColorParams() );\n        }\n\n        if( what[ \"index\" ] ){\n            surfaceData[ \"index\" ] = data.info.surface.getFilteredIndex( this.filterSele, data.sview );\n        }\n\n        data.bufferList[ 0 ].setAttributes( surfaceData );\n\n    },\n\n    setParameters: function( params, what, rebuild ){\n\n        what = what || {};\n\n        if( params && params[ \"filterSele\" ] ){\n            what[ \"index\" ] = true;\n        }\n\n        if( params && params[ \"volume\" ] !== undefined ){\n            what[ \"color\" ] = true;\n        }\n\n        NGL.StructureRepresentation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        return this;\n\n    },\n\n    getSurfaceParams: function( params ){\n\n        var p = Object.assign( {\n            type: this.surfaceType,\n            probeRadius: this.probeRadius,\n            scaleFactor: this.scaleFactor,\n            smooth: this.smooth,\n            lowRes: this.lowResolution,\n            cutoff: this.cutoff,\n            useWorker: this.useWorker\n        }, params );\n\n        return p;\n\n    },\n\n    getColorParams: function(){\n\n        var p = NGL.StructureRepresentation.prototype.getColorParams.call( this );\n\n        p.volume = this.volume;\n\n        return p;\n\n    },\n\n    clear: function(){\n\n        NGL.StructureRepresentation.prototype.clear.call( this );\n\n    },\n\n    dispose: function(){\n\n        this.__infoList.forEach( function( info, i ){\n            info.molsurf.dispose();\n        }.bind( this ) );\n        this.__infoList.length = 0;\n\n        NGL.StructureRepresentation.prototype.dispose.call( this );\n\n    }\n\n} );\n\n\nNGL.DistanceRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.DistanceRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.DistanceRepresentation,\n\n    type: \"distance\",\n\n    defaultSize: 0.15,\n\n    parameters: Object.assign( {\n\n        labelSize: {\n            type: \"number\", precision: 3, max: 10.0, min: 0.001\n        },\n        labelColor: {\n            type: \"color\"\n        },\n        labelVisible: {\n            type: \"boolean\"\n        },\n        atomPair: {\n            type: \"hidden\", rebuild: true\n        },\n        radiusSegments: {\n            type: \"integer\", max: 25, min: 5, rebuild: \"impostor\"\n        },\n        disableImpostor: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.StructureRepresentation.prototype.parameters, {\n        flatShaded: null,\n        assembly: null\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.radius = p.radius || this.defaultSize;\n\n        if( p.quality === \"low\" ){\n            this.radiusSegments = 5;\n        }else if( p.quality === \"medium\" ){\n            this.radiusSegments = 10;\n        }else if( p.quality === \"high\" ){\n            this.radiusSegments = 20;\n        }else{\n            this.radiusSegments = p.radiusSegments !== undefined ? p.radiusSegments : 10;\n        }\n        this.disableImpostor = p.disableImpostor || false;\n\n        this.fontFamily = p.fontFamily || \"sans-serif\";\n        this.fontStyle = p.fontStyle || \"normal\";\n        this.fontWeight = p.fontWeight || \"bold\";\n        this.sdf = p.sdf !== undefined ? p.sdf : NGL.browser !== \"Firefox\";  // FIXME\n        this.labelSize = p.labelSize || 2.0;\n        this.labelColor = p.labelColor || 0xFFFFFF;\n        this.labelVisible = p.labelVisible !== undefined ? p.labelVisible : true;\n        this.atomPair = p.atomPair || [];\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getDistanceData: function( sview, atomPair ){\n\n        var n = atomPair.length;\n        var text = new Array( n );\n        var position = new Float32Array( n * 3 );\n        var sele1 = new NGL.Selection();\n        var sele2 = new NGL.Selection();\n\n        var bondStore = new NGL.BondStore();\n\n        var ap1 = sview.getAtomProxy();\n        var ap2 = sview.getAtomProxy();\n\n        var j = 0;\n\n        atomPair.forEach( function( pair, i ){\n\n            i -= j;\n            var i3 = i * 3;\n\n            sele1.setString( pair[ 0 ] );\n            sele2.setString( pair[ 1 ] );\n\n            var atomIndices1 = sview.getAtomIndices( sele1 );\n            var atomIndices2 = sview.getAtomIndices( sele2 );\n\n            if( atomIndices1.length && atomIndices2.length ){\n\n                ap1.index = atomIndices1[ 0 ];\n                ap2.index = atomIndices2[ 0 ];\n\n                bondStore.addBond( ap1, ap2, 1 );\n\n                text[ i ] = ap1.distanceTo( ap2 ).toFixed( 2 );\n\n                position[ i3 + 0 ] = ( ap1.x + ap2.x ) / 2;\n                position[ i3 + 1 ] = ( ap1.y + ap2.y ) / 2;\n                position[ i3 + 2 ] = ( ap1.z + ap2.z ) / 2;\n\n            }else{\n\n                j += 1;\n\n            }\n\n        }, this );\n\n        if( j > 0 ){\n            n -= j;\n            position = position.subarray( 0, n * 3 );\n        }\n\n        var bondSet = new TypedFastBitSet( bondStore.count );\n        bondSet.set_all( true );\n\n        return {\n            text: text,\n            position: position,\n            bondSet: bondSet,\n            bondStore: bondStore\n        };\n\n    },\n\n    getBondData: function( sview, what, params ){\n\n        return sview.getBondData( this.getBondParams( what, params ) );\n\n    },\n\n    create: function(){\n\n        if( this.structureView.atomCount === 0 ) return;\n\n        var n = this.atomPair.length;\n        if( n === 0 ) return;\n\n        var distanceData = this.getDistanceData( this.structureView, this.atomPair );\n\n        var c = new THREE.Color( this.labelColor );\n\n        this.textBuffer = new NGL.TextBuffer(\n            distanceData.position,\n            NGL.Utils.uniformArray( n, this.labelSize ),\n            NGL.Utils.uniformArray3( n, c.r, c.g, c.b ),\n            distanceData.text,\n            this.getBufferParams( {\n                fontFamily: this.fontFamily,\n                fontStyle: this.fontStyle,\n                fontWeight: this.fontWeight,\n                sdf: this.sdf,\n                opacity: 1.0,\n                visible: this.labelVisible\n            } )\n        );\n\n        var bondParams = {\n            bondSet: distanceData.bondSet,\n            bondStore: distanceData.bondStore\n        };\n\n        var bondData = this.getBondData( this.structureView, undefined, bondParams );\n\n        this.cylinderBuffer = new NGL.CylinderBuffer(\n            bondData.position1,\n            bondData.position2,\n            bondData.color1,\n            bondData.color2,\n            bondData.radius,\n            bondData.pickingColor1,\n            bondData.pickingColor2,\n            this.getBufferParams( {\n                shift: 0,\n                cap: true,\n                radiusSegments: this.radiusSegments,\n                disableImpostor: this.disableImpostor,\n                dullInterior: true\n            } )\n        );\n\n        this.dataList.push( {\n            sview: this.structureView,\n            bondSet: distanceData.bondSet,\n            bondStore: distanceData.bondStore,\n            position: distanceData.position,\n            bufferList: [ this.textBuffer, this.cylinderBuffer ]\n        } );\n\n    },\n\n    updateData: function( what, data ){\n\n        if( !what || what[ \"position\" ] ){\n            var distanceData = this.getDistanceData( data.sview, this.atomPair );\n            data.bondSet = distanceData.bondSet;\n            data.bondStore = distanceData.bondStore;\n            data.position = distanceData.position;\n        }\n\n        var bondParams = {\n            bondSet: data.bondSet,\n            bondStore: data.bondStore\n        };\n\n        var bondData = this.getBondData( data.sview, what, bondParams );\n        var cylinderData = {};\n        var textData = {};\n        var n = this.atomPair.length;\n\n        if( what[ \"position\" ] ){\n            textData[ \"position\" ] = data.position;\n            cylinderData[ \"position\" ] = NGL.Utils.calculateCenterArray(\n                bondData.position1, bondData.position2\n            );\n            cylinderData[ \"position1\" ] = bondData.position1;\n            cylinderData[ \"position2\" ] = bondData.position2;\n        }\n\n        if( what[ \"labelSize\" ] ){\n            textData[ \"size\" ] = NGL.Utils.uniformArray( n, this.labelSize );\n        }\n\n        if( what[ \"labelColor\" ] ){\n            var c = new THREE.Color( this.labelColor );\n            textData[ \"color\" ] = NGL.Utils.uniformArray3( n, c.r, c.g, c.b );\n        }\n\n        if( what[ \"color\" ] ){\n            cylinderData[ \"color\" ] = bondData.color1;\n            cylinderData[ \"color2\" ] = bondData.color2;\n        }\n\n        if( what[ \"radius\" ] || what[ \"scale\" ] ){\n            cylinderData[ \"radius\" ] = bondData.radius;\n        }\n\n        this.textBuffer.setAttributes( textData );\n        this.cylinderBuffer.setAttributes( cylinderData );\n\n    },\n\n    setVisibility: function( value, noRenderRequest ){\n\n        NGL.StructureRepresentation.prototype.setVisibility.call(\n            this, value, true\n        );\n\n        if( this.textBuffer ){\n\n            this.textBuffer.setVisibility(\n                this.labelVisible && this.visible\n            );\n\n        }\n\n        if( !noRenderRequest ) this.viewer.requestRender();\n\n        return this;\n\n    },\n\n    setParameters: function( params ){\n\n        var rebuild = false;\n        var what = {};\n\n        if( params && params[ \"labelSize\" ] ){\n\n            what[ \"labelSize\" ] = true;\n\n        }\n\n        if( params && params[ \"labelColor\" ] ){\n\n            what[ \"labelColor\" ] = true;\n\n        }\n\n        NGL.StructureRepresentation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        if( params && params[ \"labelVisible\" ] !== undefined ){\n\n            this.setVisibility( this.visible );\n\n        }\n\n        return this;\n\n    }\n\n} );\n\n\nNGL.UnitcellRepresentation = function( structure, viewer, params ){\n\n    NGL.StructureRepresentation.call( this, structure, viewer, params );\n\n};\n\nNGL.UnitcellRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.UnitcellRepresentation,\n\n    type: \"unitcell\",\n\n    parameters: Object.assign( {\n\n        radius: {\n            type: \"number\", precision: 3, max: 10.0, min: 0.001\n        },\n        sphereDetail: {\n            type: \"integer\", max: 3, min: 0, rebuild: \"impostor\"\n        },\n        radiusSegments: {\n            type: \"integer\", max: 25, min: 5, rebuild: \"impostor\"\n        },\n        disableImpostor: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.Representation.prototype.parameters, {\n        assembly: null\n    } ),\n\n    init: function( params ){\n\n        var p = params || {};\n\n        p.radius = p.radius === undefined ? 0.5 : p.radius;\n        p.colorValue = p.colorValue === undefined ? \"orange\" : p.colorValue;\n\n        if( p.quality === \"low\" ){\n            this.sphereDetail = 0;\n            this.radiusSegments = 5;\n        }else if( p.quality === \"medium\" ){\n            this.sphereDetail = 1;\n            this.radiusSegments = 10;\n        }else if( p.quality === \"high\" ){\n            this.sphereDetail = 2;\n            this.radiusSegments = 20;\n        }else{\n            this.sphereDetail = p.sphereDetail !== undefined ? p.sphereDetail : 1;\n            this.radiusSegments = p.radiusSegments !== undefined ? p.radiusSegments : 10;\n        }\n        this.disableImpostor = p.disableImpostor || false;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    getUnitcellData: function( structure ){\n\n        var c = new THREE.Color( this.colorValue );\n\n        var vertexPosition = new Float32Array( 3 * 8 );\n        var vertexColor = NGL.Utils.uniformArray3( 8, c.r, c.g, c.b );\n        var vertexRadius = NGL.Utils.uniformArray( 8, this.radius );\n\n        var edgePosition1 = new Float32Array( 3 * 12 );\n        var edgePosition2 = new Float32Array( 3 * 12 );\n        var edgeColor = NGL.Utils.uniformArray3( 12, c.r, c.g, c.b );\n        var edgeRadius = NGL.Utils.uniformArray( 12, this.radius );\n\n        var uc = structure.unitcell;\n        var centerFrac = structure.center.clone()\n            .applyMatrix4( uc.cartToFrac )\n            .floor().multiplyScalar( 2 ).addScalar( 1 );\n        var v = new THREE.Vector3();\n\n        var cornerOffset = 0;\n        function addCorner( x, y, z ){\n            v.set( x, y, z )\n                .multiply( centerFrac )\n                .applyMatrix4( uc.fracToCart )\n                .toArray( vertexPosition, cornerOffset );\n            cornerOffset += 3;\n        }\n        addCorner( 0, 0, 0 );\n        addCorner( 1, 0, 0 );\n        addCorner( 0, 1, 0 );\n        addCorner( 0, 0, 1 );\n        addCorner( 1, 1, 0 );\n        addCorner( 1, 0, 1 );\n        addCorner( 0, 1, 1 );\n        addCorner( 1, 1, 1 );\n\n        var edgeOffset = 0;\n        function addEdge( a, b ){\n            v.fromArray( vertexPosition, a * 3 )\n                .toArray( edgePosition1, edgeOffset );\n            v.fromArray( vertexPosition, b * 3 )\n                .toArray( edgePosition2, edgeOffset );\n            edgeOffset += 3;\n        }\n        addEdge( 0, 1 );\n        addEdge( 0, 2 );\n        addEdge( 0, 3 );\n        addEdge( 1, 4 );\n        addEdge( 1, 5 );\n        addEdge( 2, 6 );\n        addEdge( 3, 5 );\n        addEdge( 4, 7 );\n        addEdge( 5, 7 );\n        addEdge( 2, 4 );\n        addEdge( 7, 6 );\n        addEdge( 3, 6 );\n\n        return {\n            vertexPosition: vertexPosition,\n            vertexColor: vertexColor,\n            vertexRadius: vertexRadius,\n            edgePosition1: edgePosition1,\n            edgePosition2: edgePosition2,\n            edgeColor: edgeColor,\n            edgeRadius: edgeRadius\n        };\n\n    },\n\n    create: function(){\n\n        var structure = this.structureView.getStructure();\n        if( !structure.unitcell ) return;\n        var unitcellData = this.getUnitcellData( structure );\n\n        this.sphereBuffer = new NGL.SphereBuffer(\n            unitcellData.vertexPosition,\n            unitcellData.vertexColor,\n            unitcellData.vertexRadius,\n            undefined,\n            this.getBufferParams( {\n                sphereDetail: this.sphereDetail,\n                disableImpostor: this.disableImpostor,\n                dullInterior: true\n            } )\n        );\n\n        this.cylinderBuffer = new NGL.CylinderBuffer(\n            unitcellData.edgePosition1,\n            unitcellData.edgePosition2,\n            unitcellData.edgeColor,\n            unitcellData.edgeColor,\n            unitcellData.edgeRadius,\n            undefined,\n            undefined,\n            this.getBufferParams( {\n                shift: 0,\n                cap: true,\n                radiusSegments: this.radiusSegments,\n                disableImpostor: this.disableImpostor,\n                dullInterior: true\n            } )\n        );\n\n        this.dataList.push( {\n            sview: this.structureView,\n            bufferList: [ this.sphereBuffer, this.cylinderBuffer ]\n        } );\n\n    },\n\n    updateData: function( what, data ){\n\n        var structure = data.sview.getStructure();\n        var unitcellData = this.getUnitcellData( structure );\n        var sphereData = {};\n        var cylinderData = {};\n\n        if( !what || what[ \"position\" ] ){\n            sphereData[ \"position\" ] = unitcellData.vertexPosition;\n            cylinderData[ \"position\" ] = NGL.Utils.calculateCenterArray(\n                unitcellData.position1, unitcellData.position2\n            );\n            cylinderData[ \"position1\" ] = unitcellData.edgePosition1;\n            cylinderData[ \"position2\" ] = unitcellData.edgePosition2;\n        }\n\n        if( !what || what[ \"color\" ] ){\n            sphereData[ \"color\" ] = unitcellData.vertexColor;\n            cylinderData[ \"color\" ] = unitcellData.edgeColor;\n            cylinderData[ \"color2\" ] = unitcellData.edgeColor;\n        }\n\n        if( !what || what[ \"radius\" ] ){\n            sphereData[ \"radius\" ] = unitcellData.vertexRadius;\n            cylinderData[ \"radius\" ] = unitcellData.edgeRadius;\n        }\n\n        this.sphereBuffer.setAttributes( sphereData );\n        this.cylinderBuffer.setAttributes( cylinderData );\n\n    }\n\n} );\n\n\n//////////////////////////////\n// Trajectory representation\n\nNGL.TrajectoryRepresentation = function( trajectory, viewer, params ){\n\n    this.manualAttach = true;\n\n    this.trajectory = trajectory;\n\n    NGL.StructureRepresentation.call(\n        this, trajectory.structure, viewer, params\n    );\n\n};\n\nNGL.TrajectoryRepresentation.prototype = NGL.createObject(\n\n    NGL.StructureRepresentation.prototype, {\n\n    constructor: NGL.TrajectoryRepresentation,\n\n    type: \"\",\n\n    parameters: Object.assign( {\n\n        drawLine: {\n            type: \"boolean\", rebuild: true\n        },\n        drawCylinder: {\n            type: \"boolean\", rebuild: true\n        },\n        drawPoint: {\n            type: \"boolean\", rebuild: true\n        },\n        drawSphere: {\n            type: \"boolean\", rebuild: true\n        },\n\n        linewidth: {\n            type: \"integer\", max: 20, min: 1, rebuild: true\n        },\n        pointSize: {\n            type: \"integer\", max: 20, min: 1, rebuild: true\n        },\n        sizeAttenuation: {\n            type: \"boolean\", rebuild: true\n        },\n        sort: {\n            type: \"boolean\", rebuild: true\n        },\n\n    }, NGL.Representation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"uniform\";\n        p.colorValue = p.colorValue || 0xDDDDDD;\n\n        this.drawLine = p.drawLine || true;\n        this.drawCylinder = p.drawCylinder || false;\n        this.drawPoint = p.drawPoint || false;\n        this.drawSphere = p.drawSphere || false;\n\n        this.pointSize = p.pointSize || 1;\n        this.sizeAttenuation = p.sizeAttenuation !== undefined ? p.sizeAttenuation : false;\n        this.sort = p.sort !== undefined ? p.sort : true;\n\n        NGL.StructureRepresentation.prototype.init.call( this, p );\n\n    },\n\n    attach: function( callback ){\n\n        this.bufferList.forEach( function( buffer ){\n\n            this.viewer.add( buffer );\n\n        }, this );\n\n        this.setVisibility( this.visible );\n\n        callback();\n\n    },\n\n    prepare: function( callback ){\n\n        // TODO\n\n        callback();\n\n    },\n\n    create: function(){\n\n        // NGL.log( this.selection )\n        // NGL.log( this.atomSet )\n\n        if( this.atomSet.atomCount === 0 ) return;\n\n        var scope = this;\n\n        var index = this.atomSet.atoms[ 0 ].index;\n\n        this.trajectory.getPath( index, function( path ){\n\n            var n = path.length / 3;\n            var tc = new THREE.Color( scope.colorValue );\n\n            if( scope.drawSphere ){\n\n                var sphereBuffer = new NGL.SphereBuffer(\n                    path,\n                    NGL.Utils.uniformArray3( n, tc.r, tc.g, tc.b ),\n                    NGL.Utils.uniformArray( n, 0.2 ),\n                    NGL.Utils.uniformArray3( n, tc.r, tc.g, tc.b ),\n                    scope.getBufferParams( {\n                        sphereDetail: scope.sphereDetail,\n                        dullInterior: true,\n                        disableImpostor: scope.disableImpostor\n                    } )\n                );\n\n                scope.bufferList.push( sphereBuffer );\n\n            }\n\n            if( scope.drawCylinder ){\n\n                var cylinderBuffer = new NGL.CylinderBuffer(\n                    path.subarray( 0, -3 ),\n                    path.subarray( 3 ),\n                    NGL.Utils.uniformArray3( n - 1, tc.r, tc.g, tc.b ),\n                    NGL.Utils.uniformArray3( n - 1, tc.r, tc.g, tc.b ),\n                    NGL.Utils.uniformArray( n, 0.05 ),\n                    NGL.Utils.uniformArray3( n - 1, tc.r, tc.g, tc.b ),\n                    NGL.Utils.uniformArray3( n - 1, tc.r, tc.g, tc.b ),\n                    scope.getBufferParams( {\n                        shift: 0,\n                        cap: true,\n                        radiusSegments: scope.radiusSegments,\n                        disableImpostor: scope.disableImpostor,\n                        dullInterior: true\n                    } )\n\n                );\n\n                scope.bufferList.push( cylinderBuffer );\n\n            }\n\n            if( scope.drawPoint ){\n\n                var pointBuffer = new NGL.PointBuffer(\n                    path,\n                    NGL.Utils.uniformArray3( n, tc.r, tc.g, tc.b ),\n                    scope.getBufferParams( {\n                        pointSize: scope.pointSize,\n                        sizeAttenuation: scope.sizeAttenuation,\n                        sort: scope.sort,\n                    } )\n                );\n\n                scope.bufferList.push( pointBuffer );\n\n            }\n\n            if( scope.drawLine ){\n\n                var lineBuffer = new NGL.LineBuffer(\n                    path.subarray( 0, -3 ),\n                    path.subarray( 3 ),\n                    NGL.Utils.uniformArray3( n - 1, tc.r, tc.g, tc.b ),\n                    NGL.Utils.uniformArray3( n - 1, tc.r, tc.g, tc.b ),\n                    scope.getBufferParams()\n                );\n\n                scope.bufferList.push( lineBuffer );\n\n            }\n\n            scope.attach();\n\n        } );\n\n    }\n\n} );\n\n\n///////////////////////////\n// Surface representation\n\nNGL.SurfaceRepresentation = function( surface, viewer, params ){\n\n    NGL.Representation.call( this, surface, viewer, params );\n\n    if( surface instanceof NGL.Volume ){\n        this.surface = undefined;\n        this.volume = surface;\n    }else{\n        this.surface = surface;\n        this.volume = undefined;\n    }\n\n    this.boxCenter = new THREE.Vector3();\n    this.__boxCenter = new THREE.Vector3();\n    this.box = new THREE.Box3();\n    this.__box = new THREE.Box3();\n\n    this.setBox = ( function(){\n        var position = new THREE.Vector3();\n        return function(){\n            var target = viewer.controls.target;\n            var group = viewer.rotationGroup.position;\n            position.copy( group ).negate().add( target );\n            this.setParameters( { \"boxCenter\": position } );\n        }.bind( this );\n    }.bind( this ) )();\n\n    this.viewer.signals.orientationChanged.add(\n        this.setBox\n    );\n\n    this.build();\n\n};\n\nNGL.SurfaceRepresentation.prototype = NGL.createObject(\n\n    NGL.Representation.prototype, {\n\n    constructor: NGL.SurfaceRepresentation,\n\n    type: \"surface\",\n\n    parameters: Object.assign( {\n\n        isolevelType: {\n            type: \"select\", options: {\n                \"value\": \"value\", \"sigma\": \"sigma\"\n            }\n        },\n        isolevel: {\n            type: \"number\", precision: 2, max: 1000, min: -1000\n        },\n        smooth: {\n            type: \"integer\", precision: 1, max: 10, min: 0\n        },\n        background: {\n            type: \"boolean\", rebuild: true  // FIXME\n        },\n        opaqueBack: {\n            type: \"boolean\", buffer: true\n        },\n        boxSize: {\n            type: \"integer\", precision: 1, max: 100, min: 0\n        },\n        useWorker: {\n            type: \"boolean\", rebuild: true\n        }\n\n    }, NGL.Representation.prototype.parameters ),\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"uniform\";\n        p.colorValue = p.colorValue !== undefined ? p.colorValue : 0xDDDDDD;\n\n        this.isolevelType  = p.isolevelType !== undefined ? p.isolevelType : \"sigma\";\n        this.isolevel = p.isolevel !== undefined ? p.isolevel : 2.0;\n        this.smooth = p.smooth !== undefined ? p.smooth : 0;\n        this.background = p.background || false;\n        this.opaqueBack = p.opaqueBack !== undefined ? p.opaqueBack : true;\n        this.boxSize = p.boxSize !== undefined ? p.boxSize : 0;\n        this.useWorker = p.useWorker !== undefined ? p.useWorker : true;\n\n        NGL.Representation.prototype.init.call( this, p );\n\n    },\n\n    attach: function( callback ){\n\n        this.bufferList.forEach( function( buffer ){\n\n            this.viewer.add( buffer );\n\n        }, this );\n\n        this.setVisibility( this.visible );\n\n        callback();\n\n    },\n\n    prepare: function( callback ){\n\n        if( this.volume ){\n\n            var isolevel;\n\n            if( this.isolevelType === \"sigma\" ){\n                isolevel = this.volume.getValueForSigma( this.isolevel );\n            }else{\n                isolevel = this.isolevel;\n            }\n\n            if( !this.surface ||\n                this.__isolevel !== isolevel ||\n                this.__smooth !== this.smooth ||\n                this.__boxSize !== this.boxSize ||\n                ( this.boxSize > 0 &&\n                    !this.__boxCenter.equals( this.boxCenter ) )\n            ){\n                this.__isolevel = isolevel;\n                this.__smooth = this.smooth;\n                this.__boxSize = this.boxSize;\n                this.__boxCenter.copy( this.boxCenter );\n                this.__box.copy( this.box );\n\n                var onSurfaceFinish = function( surface ){\n                    this.surface = surface;\n                    callback();\n                }.bind( this );\n\n                if( this.useWorker ){\n                    this.volume.getSurfaceWorker(\n                        isolevel, this.smooth, this.boxCenter, this.boxSize,\n                        onSurfaceFinish\n                    );\n                }else{\n                    onSurfaceFinish(\n                        this.volume.getSurface(\n                            isolevel, this.smooth, this.boxCenter, this.boxSize\n                        )\n                    );\n                }\n            }else{\n                callback();\n            }\n\n        }else{\n            callback();\n        }\n\n    },\n\n    create: function(){\n\n        var surfaceBuffer = new NGL.SurfaceBuffer(\n            this.surface.getPosition(),\n            this.surface.getColor( this.getColorParams() ),\n            this.surface.getIndex(),\n            this.surface.getNormal(),\n            undefined,  // this.surface.getPickingColor( this.getColorParams() ),\n            this.getBufferParams( {\n                background: this.background,\n                opaqueBack: this.opaqueBack,\n                dullInterior: false,\n            } )\n        );\n        var doubleSidedBuffer = new NGL.DoubleSidedBuffer( surfaceBuffer );\n\n        this.bufferList.push( doubleSidedBuffer );\n\n    },\n\n    update: function( what ){\n\n        if( this.bufferList.length === 0 ) return;\n\n        what = what || {};\n\n        var surfaceData = {};\n\n        if( what[ \"position\" ] ){\n            surfaceData[ \"position\" ] = this.surface.getPosition();\n        }\n\n        if( what[ \"color\" ] ){\n            surfaceData[ \"color\" ] = this.surface.getColor(\n                this.getColorParams()\n            );\n        }\n\n        if( what[ \"index\" ] ){\n            surfaceData[ \"index\" ] = this.surface.getIndex();\n        }\n\n        if( what[ \"normal\" ] ){\n            surfaceData[ \"normal\" ] = this.surface.getNormal();\n        }\n\n        this.bufferList.forEach( function( buffer ){\n            buffer.setAttributes( surfaceData );\n        } );\n\n    },\n\n    setParameters: function( params, what, rebuild ){\n\n        if( params && params[ \"isolevelType\" ] !== undefined &&\n            this.volume\n        ){\n\n            if( this.isolevelType === \"value\" &&\n                params[ \"isolevelType\" ] === \"sigma\"\n            ){\n\n                this.isolevel = this.volume.getSigmaForValue(\n                    this.isolevel\n                );\n\n            }else if( this.isolevelType === \"sigma\" &&\n                params[ \"isolevelType\" ] === \"value\"\n            ){\n\n                this.isolevel = this.volume.getValueForSigma(\n                    this.isolevel\n                );\n\n            }\n\n            this.isolevelType = params[ \"isolevelType\" ];\n\n        }\n\n        if( params && params[ \"boxCenter\" ] ){\n            this.boxCenter.copy( params[ \"boxCenter\" ] );\n            delete params[ \"boxCenter\" ];\n        }\n\n        NGL.Representation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        if( this.volume ){\n            this.volume.getBox( this.boxCenter, this.boxSize, this.box );\n        }\n\n        if( this.surface && (\n                params[ \"isolevel\" ] !== undefined ||\n                params[ \"smooth\" ] !== undefined ||\n                params[ \"boxSize\" ] !== undefined ||\n                ( this.boxSize > 0 &&\n                    !this.__box.equals( this.box ) )\n            )\n        ){\n            this.build( {\n                \"__update\": {\n                    \"position\": true,\n                    \"color\": true,\n                    \"index\": true,\n                    \"normal\": true\n                }\n            } );\n        }\n\n        return this;\n\n    },\n\n    dispose: function(){\n\n        this.viewer.signals.orientationChanged.remove(\n            this.setBox\n        );\n\n        NGL.Representation.prototype.dispose.call( this );\n\n    }\n\n} );\n\n\nNGL.DotRepresentation = function( surface, viewer, params ){\n\n    NGL.Representation.call( this, surface, viewer, params );\n\n    if( surface instanceof NGL.Volume ){\n        this.surface = undefined;\n        this.volume = surface;\n    }else{\n        this.surface = surface;\n        this.volume = undefined;\n    }\n\n    this.build();\n\n};\n\nNGL.DotRepresentation.prototype = NGL.createObject(\n\n    NGL.Representation.prototype, {\n\n    constructor: NGL.DotRepresentation,\n\n    type: \"dot\",\n\n    parameters: Object.assign( {\n\n        thresholdType: {\n            type: \"select\", rebuild: true, options: {\n                \"value\": \"value\", \"sigma\": \"sigma\"\n            }\n        },\n        thresholdMin: {\n            type: \"number\", precision: 3, max: Infinity, min: -Infinity, rebuild: true\n        },\n        thresholdMax: {\n            type: \"number\", precision: 3, max: Infinity, min: -Infinity, rebuild: true\n        },\n        thresholdOut: {\n            type: \"boolean\", rebuild: true\n        },\n        dotType: {\n            type: \"select\", rebuild: true, options: {\n                \"\": \"\",\n                \"sphere\": \"sphere\",\n                \"point\": \"point\"\n            }\n        },\n        radiusType: {\n            type: \"select\", options: {\n                \"\": \"\",\n                \"value\": \"value\",\n                \"abs-value\": \"abs-value\",\n                \"value-min\": \"value-min\",\n                \"deviation\": \"deviation\",\n                \"size\": \"size\"\n            }\n        },\n        radius: {\n            type: \"number\", precision: 3, max: 10.0, min: 0.001, property: \"size\"\n        },\n        scale: {\n            type: \"number\", precision: 3, max: 10.0, min: 0.001\n        },\n        sphereDetail: {\n            type: \"integer\", max: 3, min: 0, rebuild: \"impostor\"\n        },\n        disableImpostor: {\n            type: \"boolean\", rebuild: true\n        },\n\n        pointSize: {\n            type: \"number\", precision: 1, max: 100, min: 0, buffer: true\n        },\n        sizeAttenuation: {\n            type: \"boolean\", buffer: true\n        },\n        sortParticles: {\n            type: \"boolean\", rebuild: true\n        },\n        useTexture: {\n            type: \"boolean\", buffer: true\n        },\n        alphaTest: {\n            type: \"range\", step: 0.001, max: 1, min: 0, buffer: true\n        },\n        forceTransparent: {\n            type: \"boolean\", buffer: true\n        },\n        edgeBleach: {\n            type: \"range\", step: 0.001, max: 1, min: 0, buffer: true\n        },\n\n    }, NGL.Representation.prototype.parameters, {\n\n        colorScheme: {\n            type: \"select\", update: \"color\", options: {\n                \"\": \"\",\n                \"value\": \"value\",\n                \"uniform\": \"uniform\",\n                // \"value-min\": \"value-min\",\n                // \"deviation\": \"deviation\",\n                // \"size\": \"size\"\n            }\n        },\n\n    } ),\n\n    defaultSize: 0.1,\n\n    init: function( params ){\n\n        var p = params || {};\n        p.colorScheme = p.colorScheme || \"uniform\";\n        p.colorValue = p.colorValue || 0xDDDDDD;\n\n        if( p.quality === \"low\" ){\n            this.sphereDetail = 0;\n        }else if( p.quality === \"medium\" ){\n            this.sphereDetail = 1;\n        }else if( p.quality === \"high\" ){\n            this.sphereDetail = 2;\n        }else{\n            this.sphereDetail = p.sphereDetail || 1;\n        }\n        this.disableImpostor = p.disableImpostor || false;\n\n        this.thresholdType  = p.thresholdType !== undefined ? p.thresholdType : \"sigma\";\n        this.thresholdMin = p.thresholdMin !== undefined ? p.thresholdMin : 2.0;\n        this.thresholdMax = p.thresholdMax !== undefined ? p.thresholdMax : Infinity;\n        this.thresholdOut = p.thresholdOut !== undefined ? p.thresholdOut : false;\n        this.dotType = p.dotType !== undefined ? p.dotType : \"point\";\n        this.radius = p.radius !== undefined ? p.radius : 0.1;\n        this.scale = p.scale !== undefined ? p.scale : 1.0;\n\n        this.pointSize = p.pointSize || 1;\n        this.sizeAttenuation = p.sizeAttenuation !== undefined ? p.sizeAttenuation : true;\n        this.sortParticles = p.sortParticles !== undefined ? p.sortParticles : false;\n        this.useTexture = p.useTexture !== undefined ? p.useTexture : false;\n        this.alphaTest = p.alphaTest !== undefined ? p.alphaTest : 0.5;\n        this.forceTransparent = p.forceTransparent !== undefined ? p.forceTransparent : false;\n        this.edgeBleach = p.edgeBleach !== undefined ? p.edgeBleach : 0.0;\n\n        NGL.Representation.prototype.init.call( this, p );\n\n    },\n\n    attach: function( callback ){\n\n        this.bufferList.forEach( function( buffer ){\n\n            this.viewer.add( buffer );\n\n        }, this );\n\n        this.setVisibility( this.visible );\n\n        callback();\n\n    },\n\n    create: function(){\n\n        var position, color, size, pickingColor;\n\n        if( this.volume ){\n\n            var thresholdMin, thresholdMax;\n\n            if( this.thresholdType === \"sigma\" ){\n                thresholdMin = this.volume.getValueForSigma( this.thresholdMin );\n                thresholdMax = this.volume.getValueForSigma( this.thresholdMax );\n            }else{\n                thresholdMin = this.thresholdMin;\n                thresholdMax = this.thresholdMax;\n            }\n            this.volume.filterData( thresholdMin, thresholdMax, this.thresholdOut );\n\n            position = this.volume.getDataPosition();\n            color = this.volume.getDataColor( this.getColorParams() );\n            size = this.volume.getDataSize( this.radius, this.scale );\n            pickingColor = this.volume.getPickingDataColor( this.getColorParams() );\n\n        }else{\n\n            position = this.surface.getPosition();\n            color = this.surface.getColor( this.getColorParams() );\n            size = this.surface.getSize( this.radius, this.scale );\n            pickingColor = this.surface.getPickingColor( this.getColorParams() );\n\n        }\n\n        if( this.dotType === \"sphere\" ){\n\n            this.dotBuffer = new NGL.SphereBuffer(\n                position,\n                color,\n                size,\n                pickingColor,\n                this.getBufferParams( {\n                    sphereDetail: this.sphereDetail,\n                    disableImpostor: this.disableImpostor,\n                    dullInterior: false\n                } )\n            );\n\n        }else{\n\n            this.dotBuffer = new NGL.PointBuffer(\n                position,\n                color,\n                this.getBufferParams( {\n                    pointSize: this.pointSize,\n                    sizeAttenuation: this.sizeAttenuation,\n                    sortParticles: this.sortParticles,\n                    useTexture: this.useTexture,\n                    alphaTest: this.alphaTest,\n                    forceTransparent: this.forceTransparent,\n                    edgeBleach: this.edgeBleach\n                } )\n            );\n\n        }\n\n        this.bufferList.push( this.dotBuffer );\n\n    },\n\n    update: function( what ){\n\n        if( this.bufferList.length === 0 ) return;\n\n        what = what || {};\n\n        var dotData = {};\n\n        if( what[ \"color\" ] ){\n\n            if( this.volume ){\n\n                dotData[ \"color\" ] = this.volume.getDataColor(\n                    this.getColorParams()\n                );\n\n            }else{\n\n                dotData[ \"color\" ] = this.surface.getColor(\n                    this.getColorParams()\n                );\n\n            }\n\n        }\n\n        if( this.dotType === \"sphere\" && ( what[ \"radius\" ] || what[ \"scale\" ] ) ){\n\n            if( this.volume ){\n\n                dotData[ \"radius\" ] = this.volume.getDataSize(\n                    this.radius, this.scale\n                );\n\n            }else{\n\n                dotData[ \"radius\" ] = this.surface.getSize(\n                    this.radius, this.scale\n                );\n\n            }\n\n        }\n\n        this.dotBuffer.setAttributes( dotData );\n\n    },\n\n    setParameters: function( params, what, rebuild ){\n\n        what = what || {};\n\n        if( params && params[ \"thresholdType\" ] !== undefined &&\n            this.volume instanceof NGL.Volume\n        ){\n\n            if( this.thresholdType === \"value\" &&\n                params[ \"thresholdType\" ] === \"sigma\"\n            ){\n\n                this.thresholdMin = this.volume.getSigmaForValue(\n                    this.thresholdMin\n                );\n                this.thresholdMax = this.volume.getSigmaForValue(\n                    this.thresholdMax\n                );\n\n            }else if( this.thresholdType === \"sigma\" &&\n                params[ \"thresholdType\" ] === \"value\"\n            ){\n\n                this.thresholdMin = this.volume.getValueForSigma(\n                    this.thresholdMin\n                );\n                this.thresholdMax = this.volume.getValueForSigma(\n                    this.thresholdMax\n                );\n\n            }\n\n            this.thresholdType = params[ \"thresholdType\" ];\n\n        }\n\n        if( params && params[ \"radiusType\" ] !== undefined ){\n\n            if( params[ \"radiusType\" ] === \"radius\" ){\n                this.radius = this.defaultSize;\n            }else{\n                this.radius = params[ \"radiusType\" ];\n            }\n            what[ \"radius\" ] = true;\n            if( this.dotType === \"sphere\" &&\n                ( !NGL.extensionFragDepth || this.disableImpostor )\n            ){\n                rebuild = true;\n            }\n\n        }\n\n        if( params && params[ \"radius\" ] !== undefined ){\n\n            what[ \"radius\" ] = true;\n            if( this.dotType === \"sphere\" &&\n                ( !NGL.extensionFragDepth || this.disableImpostor )\n            ){\n                rebuild = true;\n            }\n\n        }\n\n        if( params && params[ \"scale\" ] !== undefined ){\n\n            what[ \"scale\" ] = true;\n            if( this.dotType === \"sphere\" &&\n                ( !NGL.extensionFragDepth || this.disableImpostor )\n            ){\n                rebuild = true;\n            }\n\n        }\n\n        NGL.Representation.prototype.setParameters.call(\n            this, params, what, rebuild\n        );\n\n        return this;\n\n    }\n\n} );\n\n\n/////////////////////////\n// Representation types\n\n( function(){\n\n    NGL.representationTypes = {};\n    var reprList = [];\n\n    // find structure representations\n\n    for( var key in NGL ){\n\n        var val = NGL[ key ];\n\n        if( val.prototype instanceof NGL.StructureRepresentation &&\n            val.prototype.type\n        ){\n\n            reprList.push( val );\n\n        }\n\n    }\n\n    // sort by representation type (i.e. name)\n\n    reprList.sort( function( a, b ){\n\n            return a.prototype.type.localeCompare( b.prototype.type );\n\n    } ).forEach( function( repr ){\n\n        NGL.representationTypes[ repr.prototype.type ] = repr;\n\n    } );\n\n} )();\n\n// File:js/ngl/stage.js\n\n/**\n * @file Stage\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\n//////////\n// Stage\n\nNGL.Stage = function( eid, params ){\n\n    var SIGNALS = signals;\n\n    this.signals = {\n\n        parametersChanged: new SIGNALS.Signal(),\n        fullscreenChanged: new SIGNALS.Signal(),\n\n        componentAdded: new SIGNALS.Signal(),\n        componentRemoved: new SIGNALS.Signal(),\n\n        atomPicked: new SIGNALS.Signal(),\n        bondPicked: new SIGNALS.Signal(),\n        volumePicked: new SIGNALS.Signal(),\n        nothingPicked: new SIGNALS.Signal(),\n        onPicking: new SIGNALS.Signal()\n\n    };\n\n    //\n\n    this.tasks = new NGL.Counter();\n    this.compList = [];\n    this.defaultFileParams = {};\n\n    //\n\n    this.viewer = new NGL.Viewer( eid );\n    if( !this.viewer.renderer ) return;\n\n    var p = Object.assign( {\n        impostor: true,\n        quality: \"medium\",\n        sampleLevel: 0,\n        backgroundColor: \"black\",\n        rotateSpeed: 2.0,\n        zoomSpeed: 1.2,\n        panSpeed: 0.8,\n        clipNear: 0,\n        clipFar: 100,\n        clipDist: 10,\n        fogNear: 50,\n        fogFar: 100,\n        cameraFov: 40,\n        cameraType: \"perspective\",\n        lightColor: 0xdddddd,\n        lightIntensity: 1.0,\n        ambientColor: 0xdddddd,\n        ambientIntensity: 0.2\n    }, params );\n    this.parameters = NGL.deepCopy( NGL.Stage.prototype.parameters );\n    this.setParameters( p );  // must come after the viewer has been instantiated\n\n    this.pickingControls = new NGL.PickingControls( this.viewer, this );\n    this.viewer.animate();\n\n};\n\nNGL.Stage.prototype = {\n\n    constructor: NGL.Stage,\n\n    parameters: {\n\n        backgroundColor: {\n            type: \"color\"\n        },\n        quality: {\n            type: \"select\", options: { \"low\": \"low\", \"medium\": \"medium\", \"high\": \"high\" }\n        },\n        sampleLevel: {\n            type: \"range\", step: 1, max: 5, min: -1\n        },\n        impostor: {\n            type: \"boolean\"\n        },\n        rotateSpeed: {\n            type: \"number\", precision: 1, max: 10, min: 0\n        },\n        zoomSpeed: {\n            type: \"number\", precision: 1, max: 10, min: 0\n        },\n        panSpeed: {\n            type: \"number\", precision: 1, max: 10, min: 0\n        },\n        clipNear: {\n            type: \"range\", step: 1, max: 100, min: 0\n        },\n        clipFar: {\n            type: \"range\", step: 1, max: 100, min: 0\n        },\n        clipDist: {\n            type: \"number\", precision: 0, max: 200, min: 0\n        },\n        fogNear: {\n            type: \"range\", step: 1, max: 100, min: 0\n        },\n        fogFar: {\n            type: \"range\", step: 1, max: 100, min: 0\n        },\n        cameraType: {\n            type: \"select\", options: { \"perspective\": \"perspective\", \"orthographic\": \"orthographic\" }\n        },\n        cameraFov: {\n            type: \"range\", step: 1, max: 120, min: 15\n        },\n        lightColor: {\n            type: \"color\"\n        },\n        lightIntensity: {\n            type: \"number\", precision: 2, max: 10, min: 0\n        },\n        ambientColor: {\n            type: \"color\"\n        },\n        ambientIntensity: {\n            type: \"number\", precision: 2, max: 10, min: 0\n        },\n\n    },\n\n    setParameters: function( params ){\n\n        var p = Object.assign( {}, params );\n        var tp = this.parameters;\n        var viewer = this.viewer;\n        var controls = viewer.controls;\n\n        for( var name in p ){\n\n            if( p[ name ] === undefined ) continue;\n            if( !tp[ name ] ) continue;\n\n            if( tp[ name ].int ) p[ name ] = parseInt( p[ name ] );\n            if( tp[ name ].float ) p[ name ] = parseFloat( p[ name ] );\n\n            tp[ name ].value = p[ name ];\n\n        }\n\n        // apply parameters\n        if( p.quality !== undefined ) this.setQuality( p.quality );\n        if( p.impostor !== undefined ) this.setImpostor( p.impostor );\n        if( p.rotateSpeed !== undefined ) controls.rotateSpeed = p.rotateSpeed;\n        if( p.zoomSpeed !== undefined ) controls.zoomSpeed = p.zoomSpeed;\n        if( p.panSpeed !== undefined ) controls.panSpeed = p.panSpeed;\n        viewer.setClip( p.clipNear, p.clipFar, p.clipDist );\n        viewer.setFog( undefined, p.fogNear, p.fogFar );\n        viewer.setCamera( p.cameraType, p.cameraFov );\n        viewer.setSampling( p.sampleLevel );\n        viewer.setBackground( p.backgroundColor );\n        viewer.setLight(\n            p.lightColor, p.lightIntensity, p.ambientColor, p.ambientIntensity\n        );\n\n        this.signals.parametersChanged.dispatch(\n            this.getParameters()\n        );\n\n        return this;\n\n    },\n\n    getParameters: function(){\n\n        var params = {};\n        for( var name in this.parameters ){\n            params[ name ] = this.parameters[ name ].value;\n        }\n        return params;\n\n    },\n\n    defaultFileRepresentation: function( object ){\n\n        if( object instanceof NGL.StructureComponent ){\n\n            object.setSelection( \"/0\" );\n\n            var atomCount, instanceCount;\n            var structure = object.structure;\n\n            if( structure.biomolDict[ \"BU1\" ] ){\n                var assembly = structure.biomolDict[ \"BU1\" ];\n                atomCount = assembly.getAtomCount( structure );\n                instanceCount = assembly.getInstanceCount();\n                object.setDefaultAssembly( \"BU1\" );\n            }else{\n                atomCount = structure.getModelProxy( 0 ).atomCount;\n                instanceCount = 1;\n            }\n\n            if( typeof window.orientation !== 'undefined' ){\n                atomCount *= 4;\n            }\n\n            if( NGL.debug ) console.log( atomCount, instanceCount );\n\n            if( instanceCount > 5 && atomCount > 15000 ){\n\n                var scaleFactor = (\n                    Math.min(\n                        1.5,\n                        Math.max(\n                            0.1,\n                            2000 / ( atomCount / instanceCount )\n                        )\n                    )\n                );\n\n                object.addRepresentation( \"surface\", {\n                    sele: \"polymer\",\n                    surfaceType: \"sas\",\n                    probeRadius: 0.1,\n                    scaleFactor: scaleFactor,\n                    colorScheme: \"atomindex\",\n                    colorScale: \"RdYlBu\",\n                    useWorker: false\n                } );\n\n            }else if( atomCount > 250000 ){\n\n                object.addRepresentation( \"backbone\", {\n                    lineOnly: true,\n                    colorScheme: \"atomindex\",\n                    colorScale: \"RdYlBu\"\n                } );\n\n            }else if( atomCount > 100000 ){\n\n                object.addRepresentation( \"backbone\", {\n                    quality: \"low\",\n                    disableImpostor: true,\n                    colorScheme: \"atomindex\",\n                    colorScale: \"RdYlBu\",\n                    scale: 2.0\n                } );\n\n            }else if( atomCount > 80000 ){\n\n                object.addRepresentation( \"backbone\", {\n                    colorScheme: \"atomindex\",\n                    colorScale: \"RdYlBu\",\n                    scale: 2.0\n                } );\n\n            }else{\n\n                var quality = atomCount < 15000 ? \"high\" : \"medium\";\n\n                object.addRepresentation( \"cartoon\", {\n                    color: \"atomindex\",\n                    colorScale: \"RdYlBu\",\n                    scale: 0.7,\n                    aspectRatio: 5,\n                    quality: quality\n                } );\n                if( atomCount < 50000 ){\n                    object.addRepresentation( \"base\", {\n                        color: \"atomindex\",\n                        colorScale: \"RdYlBu\",\n                        quality: quality\n                    } );\n                }\n                object.addRepresentation( \"ball+stick\", {\n                    sele: \"hetero and not ( water or ion )\",\n                    colorScheme: \"element\",\n                    scale: 2.0,\n                    aspectRatio: 1.5,\n                    quality: quality\n                } );\n\n            }\n\n            this.centerView();\n\n            // add frames as trajectory\n            if( object.structure.frames.length ) object.addTrajectory();\n\n        }else if( object instanceof NGL.SurfaceComponent ){\n\n            object.addRepresentation( \"surface\" );\n            this.centerView();\n\n        }\n\n    },\n\n    loadFile: function( path, params ){\n\n        var p = Object.assign( {}, this.defaultFileParams, params );\n\n        // placeholder component\n        var component = new NGL.Component( this, p );\n        component.name = NGL.getFileInfo( path ).name;\n        this.addComponent( component );\n\n        var onLoadFn = function( object ){\n\n            // remove placeholder component\n            this.removeComponent( component );\n\n            component = this.addComponentFromObject( object, p );\n\n            if( component instanceof NGL.ScriptComponent ){\n                component.run();\n            }\n\n            if( p.defaultRepresentation ){\n                this.defaultFileRepresentation( component );\n            }\n\n            return component;\n\n        }.bind( this );\n\n        var onErrorFn = function( e ){\n\n            component.setStatus( e );\n            throw e;\n\n        }\n\n        return NGL.autoLoad( path, p ).then( onLoadFn, onErrorFn );\n\n    },\n\n    addComponent: function( component ){\n\n        if( !component ){\n\n            NGL.warn( \"NGL.Stage.addComponent: no component given\" );\n            return;\n\n        }\n\n        this.compList.push( component );\n\n        this.signals.componentAdded.dispatch( component );\n\n    },\n\n    addComponentFromObject: function( object, params ){\n\n        var component = NGL.makeComponent( this, object, params );\n\n        this.addComponent( component );\n\n        return component;\n\n    },\n\n    removeComponent: function( component ){\n\n        var idx = this.compList.indexOf( component );\n\n        if( idx !== -1 ){\n\n            this.compList.splice( idx, 1 );\n\n        }\n\n        component.dispose();\n\n        this.signals.componentRemoved.dispatch( component );\n\n    },\n\n    removeAllComponents: function( type ){\n\n        this.compList.slice().forEach( function( o, i ){\n\n            if( !type || o instanceof type ){\n\n                this.removeComponent( o );\n\n            }\n\n        }, this );\n\n    },\n\n    handleResize: function(){\n\n        this.viewer.handleResize();\n\n    },\n\n    toggleFullscreen: function( element ){\n\n        if( !document.fullscreenEnabled && !document.mozFullScreenEnabled &&\n            !document.webkitFullscreenEnabled && !document.msFullscreenEnabled\n        ){\n            console.log( \"fullscreen mode (currently) not possible\" );\n            return;\n        }\n\n        var self = this;\n        element = element || this.viewer.container;\n        this.lastFullscreenElement = element;\n\n        //\n\n        function getFullscreenElement(){\n            return document.fullscreenElement || document.mozFullScreenElement ||\n                document.webkitFullscreenElement || document.msFullscreenElement;\n        }\n\n        function resizeElement(){\n\n            if( !getFullscreenElement() && self.lastFullscreenElement ){\n\n                var element = self.lastFullscreenElement;\n                element.style.width = element.dataset.normalWidth;\n                element.style.height = element.dataset.normalHeight;\n\n                document.removeEventListener( \"fullscreenchange\", resizeElement );\n                document.removeEventListener( \"mozfullscreenchange\", resizeElement );\n                document.removeEventListener( \"webkitfullscreenchange\", resizeElement );\n                document.removeEventListener( \"msfullscreenchange\", resizeElement );\n\n                self.handleResize();\n                self.signals.fullscreenChanged.dispatch( false );\n\n            }\n\n        }\n\n        //\n\n        if( !getFullscreenElement() ){\n\n            element.dataset.normalWidth = element.style.width;\n            element.dataset.normalHeight = element.style.height;\n            element.style.width = screen.width + \"px\";\n            element.style.height = screen.height + \"px\";\n\n            if( element.requestFullscreen ){\n                element.requestFullscreen();\n            }else if( element.msRequestFullscreen ){\n                element.msRequestFullscreen();\n            }else if( element.mozRequestFullScreen ){\n                element.mozRequestFullScreen();\n            }else if( element.webkitRequestFullscreen ){\n                element.webkitRequestFullscreen();\n            }\n\n            document.addEventListener( \"fullscreenchange\", resizeElement );\n            document.addEventListener( \"mozfullscreenchange\", resizeElement );\n            document.addEventListener( \"webkitfullscreenchange\", resizeElement );\n            document.addEventListener( \"msfullscreenchange\", resizeElement );\n\n            this.handleResize();\n            this.signals.fullscreenChanged.dispatch( true );\n\n            // workaround for Safari\n            setTimeout( function(){ self.handleResize() }, 100 );\n\n        }else{\n\n            if( document.exitFullscreen ){\n                document.exitFullscreen();\n            }else if( document.msExitFullscreen ){\n                document.msExitFullscreen();\n            }else if( document.mozCancelFullScreen ){\n                document.mozCancelFullScreen();\n            }else if( document.webkitExitFullscreen ){\n                document.webkitExitFullscreen();\n            }\n\n        }\n\n    },\n\n    centerView: function(){\n\n        if( this.tasks.count > 0 ){\n\n            var centerFn = function( delta, count ){\n\n                if( count === 0 ){\n\n                    this.tasks.signals.countChanged.remove( centerFn, this );\n\n                }\n\n                this.viewer.centerView( true );\n\n            }\n\n            this.tasks.signals.countChanged.add( centerFn, this );\n\n        }\n\n        this.viewer.centerView( true );\n\n    },\n\n    setSpin: function( axis, angle ){\n\n        if( Array.isArray( axis ) ){\n            axis = new THREE.Vector3().fromArray( axis );\n        }\n\n        this.viewer.setSpin( axis, angle );\n\n    },\n\n    setOrientation: function( orientation ){\n\n        this.tasks.onZeroOnce( function(){\n\n            this.viewer.setOrientation( orientation );\n\n        }, this );\n\n    },\n\n    getOrientation: function(){\n\n        return this.viewer.getOrientation();\n\n    },\n\n    makeImage: function( params ){\n\n        var viewer = this.viewer;\n        var tasks = this.tasks;\n\n        return new Promise( function( resolve, reject ){\n\n            function makeImage(){\n                tasks.increment();\n                viewer.makeImage( params ).then( function( blob ){\n                    tasks.decrement();\n                    resolve( blob );\n                } ).catch( function( e ){\n                    tasks.decrement();\n                    reject( e );\n                } );\n            }\n\n            tasks.onZeroOnce( makeImage );\n\n        } );\n\n    },\n\n    setImpostor: function( value ) {\n\n        this.parameters.impostor.value = value;\n\n        var types = [\n            \"spacefill\", \"ball+stick\", \"licorice\", \"hyperball\",\n            \"backbone\", \"rocket\", \"helixorient\", \"contact\", \"distance\",\n            \"dot\"\n        ];\n\n        this.eachRepresentation( function( repr ){\n\n            if( repr instanceof NGL.ScriptComponent ) return;\n\n            if( types.indexOf( repr.getType() ) === -1 ){\n                return;\n            }\n\n            var p = repr.getParameters();\n            p.disableImpostor = !value;\n            repr.build( p );\n\n        } );\n\n    },\n\n    setQuality: function( value ) {\n\n        this.parameters.quality.value = value;\n\n        var types = [\n            \"tube\", \"cartoon\", \"ribbon\", \"trace\", \"rope\"\n        ];\n\n        var impostorTypes = [\n            \"spacefill\", \"ball+stick\", \"licorice\", \"hyperball\",\n            \"backbone\", \"rocket\", \"helixorient\", \"contact\", \"distance\",\n            \"dot\"\n        ];\n\n        this.eachRepresentation( function( repr ){\n\n            if( repr instanceof NGL.ScriptComponent ) return;\n\n            var p = repr.getParameters();\n\n            if( types.indexOf( repr.getType() ) === -1 ){\n\n                if( impostorTypes.indexOf( repr.getType() ) === -1 ){\n                    return;\n                }\n\n                if( NGL.extensionFragDepth && !p.disableImpostor ){\n                    repr.repr.quality = value;\n                    return;\n                }\n\n            }\n\n            p.quality = value;\n            repr.build( p );\n\n        } );\n\n    },\n\n    eachComponent: function( callback, type ){\n\n        this.compList.forEach( function( o, i ){\n\n            if( !type || o instanceof type ){\n\n                callback( o, i );\n\n            }\n\n        } );\n\n    },\n\n    eachRepresentation: function( callback, componentType ){\n\n        this.eachComponent( function( comp ){\n\n            comp.reprList.forEach( function( repr ){\n\n                callback( repr, comp );\n\n            } );\n\n        }, componentType );\n\n    },\n\n    getComponentsByName: function( name, componentType ){\n\n        var compList = [];\n\n        this.eachComponent( function( comp ){\n\n            if( name === undefined || comp.name.match( name ) !== null ){\n                compList.push( comp );\n            }\n\n        }, componentType );\n\n        return new NGL.ComponentCollection( compList );\n\n    },\n\n    getRepresentationsByName: function( name, componentType ){\n\n        var compName, reprName;\n\n        if( typeof name !== \"object\" ){\n            compName = undefined;\n            reprName = name;\n        }else{\n            compName = name.comp;\n            reprName = name.repr;\n        }\n\n        var reprList = [];\n\n        this.eachRepresentation( function( repr, comp ){\n\n            if( compName !== undefined && comp.name.match( compName ) === null ){\n                return;\n            }\n\n            if( reprName === undefined || repr.name.match( reprName ) !== null ){\n                reprList.push( repr );\n            }\n\n        }, componentType );\n\n        return new NGL.RepresentationCollection( reprList );\n\n    },\n\n    getAnythingByName: function( name ){\n\n        var compList = this.getComponentsByName( name ).list;\n        var reprList = this.getRepresentationsByName( name ).list;\n\n        return new NGL.Collection( compList.concat( reprList ) );\n\n    },\n\n    dispose: function(){\n\n        this.tasks.dispose();\n\n    }\n\n};\n\n\n////////////\n// Picking\n\nNGL.PickingControls = function( viewer, stage ){\n\n    var position = new THREE.Vector3();\n\n    var mouse = {\n\n        position: new THREE.Vector2(),\n        down: new THREE.Vector2(),\n        moving: false,\n        distance: function(){\n            return mouse.position.distanceTo( mouse.down );\n        }\n\n    };\n\n    viewer.renderer.domElement.addEventListener( 'mousemove', function( e ){\n\n        e.preventDefault();\n        // e.stopPropagation();\n\n        mouse.moving = true;\n        mouse.position.x = e.layerX;\n        mouse.position.y = e.layerY;\n\n    } );\n\n    viewer.renderer.domElement.addEventListener( 'mousedown', function( e ){\n\n        e.preventDefault();\n        // e.stopPropagation();\n\n        mouse.moving = false;\n        mouse.down.x = e.layerX;\n        mouse.down.y = e.layerY;\n\n    } );\n\n    viewer.renderer.domElement.addEventListener( 'mouseup', function( e ){\n\n        e.preventDefault();\n        // e.stopPropagation();\n\n        if( mouse.distance() > 3 || e.which === NGL.RightMouseButton ) return;\n\n        var box = viewer.renderer.domElement.getBoundingClientRect();\n\n        var offsetX = e.clientX - box.left;\n        var offsetY = e.clientY - box.top;\n\n        var pickingData = viewer.pick(\n            offsetX,\n            box.height - offsetY\n        );\n        var gid = pickingData.gid;\n        var instance = pickingData.instance;\n\n        var pickedAtom = undefined;\n        var pickedBond = undefined;\n        var pickedVolume = undefined;\n\n        var picked = NGL.GidPool.getByGid( gid );\n\n        if( picked && picked.type === \"AtomProxy\" ){\n\n            pickedAtom = picked;\n\n        }else if( picked && picked.type === \"BondProxy\" ){\n\n            pickedBond = picked;\n\n        }else if( picked && picked && picked.volume.type === \"Volume\" ){\n\n            pickedVolume = picked;\n\n        }\n\n        //\n\n        if( ( pickedAtom || pickedBond || pickedVolume ) &&\n                e.which === NGL.MiddleMouseButton\n        ){\n\n            if( pickedAtom ){\n\n                position.copy( pickedAtom );\n\n            }else if( pickedBond ){\n\n                position.set( 0, 0, 0 )\n                    .addVectors( pickedBond.atom1, pickedBond.atom2 )\n                    .multiplyScalar( 0.5 );\n\n            }else if( pickedVolume ){\n\n                position.copy( pickedVolume );\n\n            }\n\n            if( instance ){\n\n                position.applyProjection( instance.matrix );\n\n            }\n\n            viewer.centerView( false, position );\n\n        }\n\n        //\n\n        if( pickedAtom ){\n\n            stage.signals.atomPicked.dispatch( pickedAtom );\n\n        }else if( pickedBond ){\n\n            stage.signals.bondPicked.dispatch( pickedBond );\n\n        }else if( pickedVolume ){\n\n            stage.signals.volumePicked.dispatch( pickedVolume );\n\n        }else{\n\n            stage.signals.nothingPicked.dispatch();\n\n        }\n\n        stage.signals.onPicking.dispatch( {\n\n            \"atom\": pickedAtom,\n            \"bond\": pickedBond,\n            \"volume\": pickedVolume,\n            \"instance\": instance\n\n        } );\n\n        //\n\n        if( NGL.debug ){\n\n            NGL.log( \"picked atom\", pickedAtom );\n            NGL.log( \"picked bond\", pickedBond );\n            NGL.log( \"picked volume\", pickedVolume );\n\n        }\n\n    } );\n\n};\n\n\n//////////////\n// Component\n\nNGL.makeComponent = function( stage, object, params ){\n\n    var component;\n\n    if( object instanceof NGL.Structure ){\n\n        component = new NGL.StructureComponent( stage, object, params );\n\n    }else if( object instanceof NGL.Surface || object instanceof NGL.Volume ){\n\n        component = new NGL.SurfaceComponent( stage, object, params );\n\n    }else if( object instanceof NGL.Script ){\n\n        component = new NGL.ScriptComponent( stage, object, params );\n\n    }else{\n\n        NGL.warn( \"NGL.makeComponent: object type unknown\", object );\n\n    }\n\n    return component;\n\n};\n\n\nNGL.nextComponentId = 0;\n\n\nNGL.Component = function( stage, params ){\n\n    Object.defineProperty( this, 'id', { value: NGL.nextComponentId++ } );\n\n    var p = params || {};\n\n    this.name = p.name;\n    this.uuid = THREE.Math.generateUUID();\n    this.visible = p.visible !== undefined ? p.visible : true;\n\n    // construct instance signals\n    var signalNames = Object.keys( this.signals );\n    this.signals = {};\n    signalNames.forEach( function( name ){\n        this.signals[ name ] = new signals.Signal();\n    }, this );\n\n    this.stage = stage;\n    this.viewer = stage.viewer;\n\n    this.reprList = [];\n\n}\n\nNGL.Component.prototype = {\n\n    constructor: NGL.Component,\n\n    type: \"component\",\n\n    signals: {\n\n        representationAdded: null,\n        representationRemoved: null,\n        visibilityChanged: null,\n\n        statusChanged: null,\n        nameChanged: null,\n        disposed: null,\n\n    },\n\n    addRepresentation: function( type, object, params ){\n\n        var p = params || {};\n        var sp = this.stage.getParameters();\n        p.quality = p.quality || sp.quality;\n        p.disableImpostor = NGL.defaults( p.disableImpostor, !sp.impostor );\n        p.visible = NGL.defaults( p.visible, true );\n\n        var p2 = Object.assign( {}, p, { visible: this.visible && p.visible } );\n\n        var repr = NGL.makeRepresentation(\n            type, object, this.viewer, p2\n        );\n\n        var reprComp = new NGL.RepresentationComponent(\n            this.stage, repr, p, this\n        );\n\n        this.reprList.push( reprComp );\n\n        this.signals.representationAdded.dispatch( reprComp );\n\n        return reprComp;\n\n    },\n\n    addBufferRepresentation: function( buffer, params ){\n\n        return NGL.Component.prototype.addRepresentation.call(\n            this, \"buffer\", buffer, params\n        );\n\n    },\n\n    removeRepresentation: function( repr ){\n\n        var idx = this.reprList.indexOf( repr );\n\n        if( idx !== -1 ){\n\n            this.reprList.splice( idx, 1 );\n\n        }\n\n        this.signals.representationRemoved.dispatch( repr );\n\n    },\n\n    updateRepresentations: function( what ){\n\n        this.reprList.forEach( function( repr ){\n\n            repr.update( what );\n\n        } );\n\n        this.stage.viewer.requestRender();\n\n    },\n\n    clearRepresentations: function(){\n\n        // copy via .slice because side effects may change reprList\n        this.reprList.slice().forEach( function( repr ){\n\n            repr.dispose();\n\n        } );\n\n    },\n\n    dispose: function(){\n\n        this.clearRepresentations();\n\n        delete this.reprList;\n\n        this.signals.disposed.dispatch();\n\n    },\n\n    setVisibility: function( value ){\n\n        this.visible = value;\n\n        this.eachRepresentation( function( repr ){\n\n            repr.updateVisibility();\n\n        } );\n\n        this.signals.visibilityChanged.dispatch( value );\n\n        return this;\n\n    },\n\n    setStatus: function( value ){\n\n        this.status = value;\n        this.signals.statusChanged.dispatch( value );\n\n        return this;\n\n    },\n\n    setName: function( value ){\n\n        this.name = value;\n        this.signals.nameChanged.dispatch( value );\n\n        return this;\n\n    },\n\n    getCenter: function(){\n\n        // NGL.warn( \"not implemented\" )\n\n    },\n\n    eachRepresentation: function( callback ){\n\n        this.reprList.forEach( callback );\n\n    }\n\n};\n\n\nNGL.StructureComponent = function( stage, structure, params ){\n\n    var p = params || {};\n    p.name = p.name !== undefined ? p.name : structure.name;\n\n    NGL.Component.call( this, stage, p );\n\n    this.structure = structure;\n    this.trajList = [];\n    this.initSelection( p.sele );\n    this.setDefaultAssembly( p.assembly || \"\" );\n\n};\n\nNGL.StructureComponent.prototype = NGL.createObject(\n\n    NGL.Component.prototype, {\n\n    constructor: NGL.StructureComponent,\n\n    type: \"structure\",\n\n    signals: Object.assign( {\n\n        trajectoryAdded: null,\n        trajectoryRemoved: null,\n        defaultAssemblyChanged: null\n\n    }, NGL.Component.prototype.signals ),\n\n    initSelection: function( string ){\n\n        this.selection = new NGL.Selection( string );\n\n        this.selection.signals.stringChanged.add( function( string ){\n\n            this.applySelection();\n\n            this.rebuildRepresentations();\n            this.rebuildTrajectories();\n\n        }, this );\n\n        this.applySelection();\n\n    },\n\n    applySelection: function(){\n\n        this.structure.setSelection( this.selection );\n\n    },\n\n    setSelection: function( string ){\n\n        this.selection.setString( string );\n\n        return this;\n\n    },\n\n    setDefaultAssembly: function( value ){\n\n        this.defaultAssembly = value;\n        this.rebuildRepresentations();\n        this.signals.defaultAssemblyChanged.dispatch( value );\n\n    },\n\n    rebuildRepresentations: function(){\n\n        this.reprList.forEach( function( repr ){\n\n            var p = repr.getParameters();\n            p.defaultAssembly = this.defaultAssembly;\n\n            repr.build( p );\n\n        }, this );\n\n    },\n\n    rebuildTrajectories: function(){\n\n        this.trajList.slice( 0 ).forEach( function( trajComp ){\n\n            trajComp.trajectory.setStructure( this.structure );\n\n        }, this );\n\n    },\n\n    addRepresentation: function( type, params ){\n\n        var p = params || {};\n        p.defaultAssembly = this.defaultAssembly;\n\n        return NGL.Component.prototype.addRepresentation.call(\n            this, type, this.structure, p\n        );\n\n    },\n\n    addTrajectory: function( trajPath, sele, i ){\n\n        var params = { \"i\": i };\n\n        var traj = NGL.makeTrajectory(\n            trajPath, this.structure, sele\n        );\n\n        traj.signals.frameChanged.add( function( value ){\n\n            this.updateRepresentations( { \"position\": true } );\n\n        }, this );\n\n        var trajComp = new NGL.TrajectoryComponent(\n            this.stage, traj, params, this\n        );\n\n        this.trajList.push( trajComp );\n\n        this.signals.trajectoryAdded.dispatch( trajComp );\n\n        return trajComp;\n\n    },\n\n    removeTrajectory: function( traj ){\n\n        var idx = this.trajList.indexOf( traj );\n\n        if( idx !== -1 ){\n\n            this.trajList.splice( idx, 1 );\n\n        }\n\n        traj.dispose();\n\n        this.signals.trajectoryRemoved.dispatch( traj );\n\n    },\n\n    dispose: function(){\n\n        // copy via .slice because side effects may change trajList\n        this.trajList.slice().forEach( function( traj ){\n\n            traj.dispose();\n\n        } );\n\n        this.trajList = [];\n        this.structure.dispose();\n\n        NGL.Component.prototype.dispose.call( this );\n\n    },\n\n    centerView: function( zoom, sele ){\n\n        zoom = zoom !== undefined ? zoom : true;\n\n        var center;\n\n        if( sele ){\n\n            var selection = new NGL.Selection( sele );\n\n            center = this.structure.atomCenter( selection );\n\n            if( zoom ){\n                var bb = this.structure.getBoundingBox( selection );\n                zoom = bb.size().length();\n            }\n\n        }else{\n\n            center = this.structure.center;\n\n            if( zoom ){\n                zoom = this.structure.boundingBox.size().length();\n            }\n\n        }\n\n        this.viewer.centerView( zoom, center );\n\n        return this;\n\n    },\n\n    getCenter: function(){\n\n        return this.structure.center;\n\n    },\n\n    superpose: function( component, align, sele1, sele2, xsele1, xsele2 ){\n\n        // FIXME does not account for structure.atomBitSet\n\n        NGL.superpose(\n            this.structure, component.structure,\n            align, sele1, sele2, xsele1, xsele2\n        );\n\n        this.updateRepresentations( { \"position\": true } );\n\n        return this;\n\n    },\n\n    setVisibility: function( value ){\n\n        NGL.Component.prototype.setVisibility.call( this, value );\n\n        this.trajList.forEach( function( traj ){\n\n            // FIXME ???\n            traj.setVisibility( value );\n\n        } );\n\n        return this;\n\n    },\n\n} );\n\n\nNGL.SurfaceComponent = function( stage, surface, params ){\n\n    var p = params || {};\n    p.name = p.name !== undefined ? p.name : surface.name;\n\n    NGL.Component.call( this, stage, p );\n\n    this.surface = surface;\n\n};\n\nNGL.SurfaceComponent.prototype = NGL.createObject(\n\n    NGL.Component.prototype, {\n\n    constructor: NGL.SurfaceComponent,\n\n    type: \"surface\",\n\n    addRepresentation: function( type, params ){\n\n        return NGL.Component.prototype.addRepresentation.call(\n            this, type, this.surface, params\n        );\n\n    },\n\n    dispose: function(){\n\n        this.surface.dispose();\n\n        NGL.Component.prototype.dispose.call( this );\n\n    },\n\n    centerView: function( zoom ){\n\n        var center = this.surface.center;\n\n        if( zoom ){\n            zoom = this.surface.boundingBox.size().length();\n        }\n\n        this.viewer.centerView( zoom, center );\n\n    },\n\n} );\n\n\nNGL.TrajectoryComponent = function( stage, trajectory, params, parent ){\n\n    var p = params || {};\n    p.name = p.name !== undefined ? p.name : trajectory.name;\n\n    NGL.Component.call( this, stage, p );\n\n    this.trajectory = trajectory;\n    this.parent = parent;\n    this.status = \"loaded\";\n\n    // signals\n\n    trajectory.signals.frameChanged.add( function( i ){\n\n        this.signals.frameChanged.dispatch( i );\n\n    }, this );\n\n    trajectory.signals.playerChanged.add( function( player ){\n\n        this.signals.playerChanged.dispatch( player );\n\n    }, this );\n\n    trajectory.signals.gotNumframes.add( function( n ){\n\n        this.signals.gotNumframes.dispatch( n );\n\n    }, this );\n\n    //\n\n    if( p.i !== undefined ){\n\n        this.setFrame( p.i );\n\n    }\n\n};\n\nNGL.TrajectoryComponent.prototype = NGL.createObject(\n\n    NGL.Component.prototype, {\n\n    constructor: NGL.TrajectoryComponent,\n\n    type: \"trajectory\",\n\n    signals: Object.assign( {\n\n        frameChanged: null,\n        playerChanged: null,\n        gotNumframes: null,\n        parametersChanged: null\n\n    }, NGL.Component.prototype.signals ),\n\n    addRepresentation: function( type, params ){\n\n        return NGL.Component.prototype.addRepresentation.call(\n            this, type, this.trajectory, params\n        );\n\n    },\n\n    setFrame: function( i ){\n\n        this.trajectory.setFrame( i );\n\n    },\n\n    setParameters: function( params ){\n\n        this.trajectory.setParameters( params );\n        this.signals.parametersChanged.dispatch( params );\n\n        return this;\n\n    },\n\n    dispose: function(){\n\n        this.trajectory.dispose();\n\n        NGL.Component.prototype.dispose.call( this );\n\n    },\n\n    getCenter: function(){}\n\n} );\n\n\nNGL.ScriptComponent = function( stage, script, params ){\n\n    var p = params || {};\n    p.name = p.name !== undefined ? p.name : script.name;\n\n    NGL.Component.call( this, stage, p );\n\n    this.script = script;\n    this.status = \"loaded\";\n\n    this.script.signals.nameChanged.add( function( value ){\n\n        this.setName( value );\n\n    }, this );\n\n};\n\nNGL.ScriptComponent.prototype = NGL.createObject(\n\n    NGL.Component.prototype, {\n\n    constructor: NGL.ScriptComponent,\n\n    type: \"script\",\n\n    addRepresentation: function( type ){},\n\n    removeRepresentation: function( repr ){},\n\n    run: function(){\n\n        var scope = this;\n\n        this.setStatus( \"running\" );\n\n        this.script.call( this.stage, function(){\n\n            scope.setStatus( \"finished\" );\n\n        } );\n\n        this.setStatus( \"called\" );\n\n    },\n\n    dispose: function(){\n\n        this.signals.disposed.dispatch();\n\n    },\n\n    setVisibility: function( value ){},\n\n    getCenter: function(){}\n\n} );\n\n\nNGL.RepresentationComponent = function( stage, repr, params, parent ){\n\n    var p = params || {};\n    p.name = p.name !== undefined ? p.name : repr.type;\n\n    NGL.Component.call( this, stage, p );\n\n    this.parent = parent;\n\n    this.setRepresentation( repr );\n\n};\n\nNGL.RepresentationComponent.prototype = NGL.createObject(\n\n    NGL.Component.prototype, {\n\n    constructor: NGL.RepresentationComponent,\n\n    type: \"representation\",\n\n    signals: Object.assign( {\n\n        parametersChanged: null,\n\n    }, NGL.Component.prototype.signals ),\n\n    getType: function(){\n\n        return this.repr.type;\n\n    },\n\n    setRepresentation: function( repr ){\n\n        if( this.repr ){\n            this.repr.dispose();\n        }\n\n        this.repr = repr;\n        // this.name = repr.type;\n\n        this.stage.tasks.listen( this.repr.tasks )\n\n        this.updateVisibility();\n\n    },\n\n    addRepresentation: function( type ){},\n\n    removeRepresentation: function( repr ){},\n\n    dispose: function(){\n\n        if( this.parent ){\n\n            this.parent.removeRepresentation( this );\n\n        }\n\n        this.repr.dispose();\n\n        this.signals.disposed.dispatch();\n\n    },\n\n    setVisibility: function( value ){\n\n        this.visible = value;\n        this.updateVisibility();\n        this.signals.visibilityChanged.dispatch( this.visible );\n\n        return this;\n\n    },\n\n    updateVisibility: function(){\n\n        if( this.parent ){\n\n            this.repr.setVisibility( this.parent.visible && this.visible );\n\n        }else{\n\n            this.repr.setVisibility( this.visible );\n\n        }\n\n    },\n\n    update: function( what ){\n\n        this.repr.update( what );\n\n        return this;\n\n    },\n\n    build: function( params ){\n\n        this.repr.build( params );\n\n        return this;\n\n    },\n\n    setSelection: function( string ){\n\n        this.repr.setSelection( string );\n\n        return this;\n\n    },\n\n    setParameters: function( params ){\n\n        this.repr.setParameters( params );\n        this.signals.parametersChanged.dispatch(\n            this.repr.getParameters()\n        );\n\n        return this;\n\n    },\n\n    getParameters: function(){\n\n        return this.repr.getParameters();\n\n    },\n\n    setColor: function( value ){\n\n        this.repr.setColor( value );\n\n        return this;\n\n    },\n\n    getCenter: function(){}\n\n} );\n\n\n///////////////\n// Collection\n\nNGL.Collection = function( list ){\n\n    this.list = list || [];\n\n    // remove elements from list when they get disposed\n\n    var n = this.list.length;\n\n    for( var i = 0; i < n; ++i ){\n\n        var elm = this.list[ i ];\n\n        elm.signals.disposed.add( function(){\n\n            this._remove( elm );\n\n        }, this );\n\n    }\n\n};\n\nNGL.Collection.prototype = {\n\n    constructor: NGL.Collection,\n\n    _remove: function( elm ){\n\n        var idx = this.list.indexOf( elm );\n\n        if( idx !== -1 ){\n\n            this.list.splice( idx, 1 );\n\n        }\n\n    },\n\n    _invoke: function( methodName, methodArgs ){\n\n        var n = this.list.length;\n\n        for( var i = 0; i < n; ++i ){\n\n            var elm = this.list[ i ];\n            var method = elm[ methodName ];\n\n            if( typeof method === \"function\" ){\n\n                method.apply( elm, methodArgs );\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    setVisibility: function( value ){\n\n        return this._invoke( \"setVisibility\", [ value ] );\n\n    },\n\n    setSelection: function( string ){\n\n        return this._invoke( \"setSelection\", [ string ] );\n\n    },\n\n    dispose: function(){\n\n        return this._invoke( \"dispose\" );\n\n    }\n\n};\n\n\nNGL.ComponentCollection = function( compList ){\n\n    NGL.Collection.call( this, compList );\n\n};\n\nNGL.ComponentCollection.prototype = NGL.createObject(\n\n    NGL.Collection.prototype, {\n\n    constructor: NGL.ComponentCollection,\n\n    addRepresentation: function( name, params ){\n\n        return this._invoke( \"addRepresentation\", [ name, params ] );\n\n    },\n\n    centerView: function( zoom, sele ){\n\n        return this._invoke( \"centerView\", [ zoom, sele ] );\n\n    }\n\n} );\n\n\nNGL.RepresentationCollection = function( reprList ){\n\n    NGL.Collection.call( this, reprList );\n\n};\n\nNGL.RepresentationCollection.prototype = NGL.createObject(\n\n    NGL.Collection.prototype, {\n\n    constructor: NGL.RepresentationCollection,\n\n    setParameters: function( params ){\n\n        return this._invoke( \"setParameters\", [ params ] );\n\n    },\n\n    setColor: function( color ){\n\n        return this._invoke( \"setColor\", [ color ] );\n\n    }\n\n} );\n\n// File:shader/CylinderImpostor.vert\n\nNGL.Resources[ 'shader/CylinderImpostor.vert' ] = \"// Open-Source PyMOL is Copyright (C) Schrodinger, LLC.\\n//\\n//  All Rights Reserved\\n//\\n//  Permission to use, copy, modify, distribute, and distribute modified\\n//  versions of this software and its built-in documentation for any\\n//  purpose and without fee is hereby granted, provided that the above\\n//  copyright notice appears in all copies and that both the copyright\\n//  notice and this permission notice appear in supporting documentation,\\n//  and that the name of Schrodinger, LLC not be used in advertising or\\n//  publicity pertaining to distribution of the software without specific,\\n//  written prior permission.\\n//\\n//  SCHRODINGER, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\\n//  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN\\n//  NO EVENT SHALL SCHRODINGER, LLC BE LIABLE FOR ANY SPECIAL, INDIRECT OR\\n//  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\\n//  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\\n//  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\\n//  USE OR PERFORMANCE OF THIS SOFTWARE.\\n\\n// Contributions by Alexander Rose\\n// - ported to WebGL\\n// - dual color\\n// - picking color\\n// - shift\\n\\nattribute vec3 mapping;\\nattribute vec3 position1;\\nattribute vec3 position2;\\nattribute float radius;\\n\\nvarying vec3 axis;\\nvarying vec4 base_radius;\\nvarying vec4 end_b;\\nvarying vec3 U;\\nvarying vec3 V;\\nvarying vec4 w;\\n\\n#ifdef PICKING\\n    attribute vec3 pickingColor;\\n    attribute vec3 pickingColor2;\\n    varying vec3 vPickingColor;\\n    varying vec3 vPickingColor2;\\n#else\\n    // attribute vec3 color;\\n    attribute vec3 color2;\\n    varying vec3 vColor1;\\n    varying vec3 vColor2;\\n#endif\\n\\nuniform mat4 modelViewMatrixInverse;\\nuniform float shift;\\nuniform float ortho;\\n\\nvoid main(){\\n\\n    #ifdef PICKING\\n        vPickingColor = pickingColor;\\n        vPickingColor2 = pickingColor2;\\n    #else\\n        vColor1 = color;\\n        vColor2 = color2;\\n    #endif\\n\\n    // vRadius = radius;\\n    base_radius.w = radius;\\n\\n    vec3 center = position;\\n    vec3 dir = normalize( position2 - position1 );\\n    float ext = length( position2 - position1 ) / 2.0;\\n\\n    // using cameraPosition fails on some machines, not sure why\\n    // vec3 cam_dir = normalize( cameraPosition - mix( center, vec3( 0.0 ), ortho ) );\\n    vec3 cam_dir;\\n    if( ortho == 0.0 ){\\n        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 0, 1 ) ).xyz - center;\\n    }else{\\n        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 1, 0 ) ).xyz;\\n    }\\n    cam_dir = normalize( cam_dir );\\n\\n    vec3 ldir;\\n\\n    float b = dot( cam_dir, dir );\\n    end_b.w = b;\\n    if( b < 0.0 ) // direction vector looks away, so flip\\n        ldir = -ext * dir;\\n    else // direction vector already looks in my direction\\n        ldir = ext * dir;\\n\\n    vec3 left = normalize( cross( cam_dir, ldir ) );\\n    vec3 leftShift = shift * left * radius;\\n    if( b < 0.0 )\\n        leftShift *= -1.0;\\n    left = radius * left;\\n    vec3 up = radius * normalize( cross( left, ldir ) );\\n\\n    // transform to modelview coordinates\\n    axis = normalize( normalMatrix * ldir );\\n    U = normalize( normalMatrix * up );\\n    V = normalize( normalMatrix * left );\\n\\n    vec4 base4 = modelViewMatrix * vec4( center - ldir + leftShift, 1.0 );\\n    base_radius.xyz = base4.xyz / base4.w;\\n\\n    vec4 top_position = modelViewMatrix * vec4( center + ldir + leftShift, 1.0 );\\n    vec4 end4 = top_position;\\n    end_b.xyz = end4.xyz / end4.w;\\n\\n    w = modelViewMatrix * vec4(\\n        center + leftShift + mapping.x*ldir + mapping.y*left + mapping.z*up, 1.0\\n    );\\n\\n    gl_Position = projectionMatrix * w;\\n\\n    // avoid clipping (1.0 seems to induce flickering with some drivers)\\n    gl_Position.z = 0.99;\\n\\n}\";\n\n// File:shader/CylinderImpostor.frag\n\nNGL.Resources[ 'shader/CylinderImpostor.frag' ] = \"#define STANDARD\\n#define IMPOSTOR\\n\\n// Open-Source PyMOL is Copyright (C) Schrodinger, LLC.\\n//\\n//  All Rights Reserved\\n//\\n//  Permission to use, copy, modify, distribute, and distribute modified\\n//  versions of this software and its built-in documentation for any\\n//  purpose and without fee is hereby granted, provided that the above\\n//  copyright notice appears in all copies and that both the copyright\\n//  notice and this permission notice appear in supporting documentation,\\n//  and that the name of Schrodinger, LLC not be used in advertising or\\n//  publicity pertaining to distribution of the software without specific,\\n//  written prior permission.\\n//\\n//  SCHRODINGER, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\\n//  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN\\n//  NO EVENT SHALL SCHRODINGER, LLC BE LIABLE FOR ANY SPECIAL, INDIRECT OR\\n//  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\\n//  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\\n//  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\\n//  USE OR PERFORMANCE OF THIS SOFTWARE.\\n\\n// Contributions by Alexander Rose\\n// - ported to WebGL\\n// - dual color\\n// - picking color\\n// - custom clipping\\n// - three.js lighting\\n\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float nearClip;\\nuniform mat4 projectionMatrix;\\nuniform float ortho;\\n\\nvarying vec3 axis;\\nvarying vec4 base_radius;\\nvarying vec4 end_b;\\nvarying vec3 U;\\nvarying vec3 V;\\nvarying vec4 w;\\n\\n#ifdef PICKING\\n    uniform float objectId;\\n    varying vec3 vPickingColor;\\n    varying vec3 vPickingColor2;\\n#else\\n    varying vec3 vColor1;\\n    varying vec3 vColor2;\\n    #include common\\n    #include fog_pars_fragment\\n    #include bsdfs\\n    #include ambient_pars\\n    #include lights_pars\\n    #include lights_physical_pars_fragment\\n#endif\\n\\nbool interior = false;\\n\\nfloat distSq3( vec3 v3a, vec3 v3b ){\\n\\n    return (\\n        ( v3a.x - v3b.x ) * ( v3a.x - v3b.x ) +\\n        ( v3a.y - v3b.y ) * ( v3a.y - v3b.y ) +\\n        ( v3a.z - v3b.z ) * ( v3a.z - v3b.z )\\n    );\\n\\n}\\n\\n// round caps\\n// http://sourceforge.net/p/pymol/code/HEAD/tree/trunk/pymol/data/shaders/cylinder.fs\\n\\n// void main2(void)\\n// {\\n//     #ifdef PICKING\\n//         gl_FragColor = vec4( vPickingColor, 1.0 );\\n//     #else\\n//         gl_FragColor = vec4( vColor, 1.0 );\\n//     #endif\\n// }\\n\\n// Calculate depth based on the given camera position.\\nfloat calcDepth( in vec3 cameraPos ){\\n    vec2 clipZW = cameraPos.z * projectionMatrix[2].zw + projectionMatrix[3].zw;\\n    return 0.5 + 0.5 * clipZW.x / clipZW.y;\\n}\\n\\nfloat calcClip( vec3 cameraPos ){\\n    return dot( vec4( cameraPos, 1.0 ), vec4( 0.0, 0.0, 1.0, nearClip - 0.5 ) );\\n}\\n\\nvoid main(){\\n\\n    vec3 point = w.xyz / w.w;\\n\\n    // unpacking\\n    vec3 base = base_radius.xyz;\\n    float vRadius = base_radius.w;\\n    vec3 end = end_b.xyz;\\n    float b = end_b.w;\\n\\n    vec3 end_cyl = end;\\n    vec3 surface_point = point;\\n\\n    vec3 ray_target = surface_point;\\n    vec3 ray_origin = vec3(0.0);\\n    vec3 ray_direction = mix(normalize(ray_origin - ray_target), vec3(0.0, 0.0, 1.0), ortho);\\n    mat3 basis = mat3( U, V, axis );\\n\\n    vec3 diff = ray_target - 0.5 * (base + end_cyl);\\n    vec3 P = diff * basis;\\n\\n    // angle (cos) between cylinder cylinder_axis and ray direction\\n    float dz = dot( axis, ray_direction );\\n\\n    float radius2 = vRadius*vRadius;\\n\\n    // calculate distance to the cylinder from ray origin\\n    vec3 D = vec3(dot(U, ray_direction),\\n                dot(V, ray_direction),\\n                dz);\\n    float a0 = P.x*P.x + P.y*P.y - radius2;\\n    float a1 = P.x*D.x + P.y*D.y;\\n    float a2 = D.x*D.x + D.y*D.y;\\n\\n    // calculate a dicriminant of the above quadratic equation\\n    float d = a1*a1 - a0*a2;\\n    if (d < 0.0)\\n        // outside of the cylinder\\n        discard;\\n\\n    float dist = (-a1 + sqrt(d)) / a2;\\n\\n    // point of intersection on cylinder surface\\n    vec3 new_point = ray_target + dist * ray_direction;\\n\\n    vec3 tmp_point = new_point - base;\\n    vec3 _normal = normalize( tmp_point - axis * dot(tmp_point, axis) );\\n\\n    ray_origin = mix( ray_origin, surface_point, ortho );\\n\\n    // test front cap\\n    float cap_test = dot( new_point - base, axis );\\n\\n    // to calculate caps, simply check the angle between\\n    // the point of intersection - cylinder end vector\\n    // and a cap plane normal (which is the cylinder cylinder_axis)\\n    // if the angle < 0, the point is outside of cylinder\\n    // test front cap\\n\\n    #ifndef CAP\\n        vec3 new_point2 = ray_target + ( (-a1 - sqrt(d)) / a2 ) * ray_direction;\\n        vec3 tmp_point2 = new_point2 - base;\\n    #endif\\n\\n    // flat\\n    if (cap_test < 0.0)\\n    {\\n        // ray-plane intersection\\n        float dNV = dot(-axis, ray_direction);\\n        if (dNV < 0.0)\\n            discard;\\n        float near = dot(-axis, (base)) / dNV;\\n        new_point = ray_direction * near + ray_origin;\\n        // within the cap radius?\\n        if (dot(new_point - base, new_point-base) > radius2)\\n            discard;\\n\\n        #ifdef CAP\\n            _normal = axis;\\n        #else\\n            _normal = -normalize( tmp_point2 - axis * dot(tmp_point2, axis) );\\n        #endif\\n    }\\n\\n    // test end cap\\n    cap_test = dot((new_point - end_cyl), axis);\\n\\n    // flat\\n    if( cap_test > 0.0 )\\n    {\\n        // ray-plane intersection\\n        float dNV = dot(axis, ray_direction);\\n        if (dNV < 0.0)\\n            discard;\\n        float near = dot(axis, end_cyl) / dNV;\\n        new_point = ray_direction * near + ray_origin;\\n        // within the cap radius?\\n        if( dot(new_point - end_cyl, new_point-base) > radius2 )\\n            discard;\\n\\n        #ifdef CAP\\n            _normal = axis;\\n        #else\\n            _normal = -normalize( tmp_point2 - axis * dot(tmp_point2, axis) );\\n        #endif\\n    }\\n\\n    gl_FragDepthEXT = calcDepth( new_point );\\n\\n    #ifdef NEAR_CLIP\\n        if( calcClip( new_point ) > 0.0 ){\\n            dist = (-a1 - sqrt(d)) / a2;\\n            new_point = ray_target + dist * ray_direction;\\n            if( calcClip( new_point ) > 0.0 )\\n                discard;\\n            interior = true;\\n            gl_FragDepthEXT = calcDepth( new_point );\\n            if( gl_FragDepthEXT >= 0.0 ){\\n                gl_FragDepthEXT = max( 0.0, calcDepth( vec3( - ( nearClip - 0.5 ) ) ) + ( 0.0000001 / vRadius ) );\\n            }\\n        }else if( gl_FragDepthEXT <= 0.0 ){\\n            dist = (-a1 - sqrt(d)) / a2;\\n            new_point = ray_target + dist * ray_direction;\\n            interior = true;\\n            gl_FragDepthEXT = calcDepth( new_point );\\n            if( gl_FragDepthEXT >= 0.0 ){\\n                gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );\\n            }\\n        }\\n    #else\\n        if( gl_FragDepthEXT <= 0.0 ){\\n            dist = (-a1 - sqrt(d)) / a2;\\n            new_point = ray_target + dist * ray_direction;\\n            interior = true;\\n            gl_FragDepthEXT = calcDepth( new_point );\\n            if( gl_FragDepthEXT >= 0.0 ){\\n                gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );\\n            }\\n        }\\n    #endif\\n\\n    // this is a workaround necessary for Mac\\n    // otherwise the modified fragment won't clip properly\\n    if (gl_FragDepthEXT < 0.0)\\n        discard;\\n    if (gl_FragDepthEXT > 1.0)\\n        discard;\\n\\n    #ifdef PICKING\\n\\n        if( distSq3( new_point, end_cyl ) < distSq3( new_point, base ) ){\\n            if( b < 0.0 ){\\n                gl_FragColor = vec4( vPickingColor, objectId );\\n            }else{\\n                gl_FragColor = vec4( vPickingColor2, objectId );\\n            }\\n        }else{\\n            if( b > 0.0 ){\\n                gl_FragColor = vec4( vPickingColor, objectId );\\n            }else{\\n                gl_FragColor = vec4( vPickingColor2, objectId );\\n            }\\n        }\\n\\n    #else\\n\\n        vec3 vViewPosition = -new_point;\\n        vec3 vNormal = _normal;\\n        vec3 vColor;\\n\\n        if( distSq3( new_point, end_cyl ) < distSq3( new_point, base ) ){\\n            if( b < 0.0 ){\\n                vColor = vColor1;\\n            }else{\\n                vColor = vColor2;\\n            }\\n        }else{\\n            if( b > 0.0 ){\\n                vColor = vColor1;\\n            }else{\\n                vColor = vColor2;\\n            }\\n        }\\n\\n        vec4 diffuseColor = vec4( diffuse, opacity );\\n        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n        vec3 totalEmissiveLight = emissive;\\n\\n        #include color_fragment\\n        #include roughnessmap_fragment\\n        #include metalnessmap_fragment\\n\\n        vec3 normal = normalize( vNormal );  // don't use #include normal_fragment\\n        if( interior ){\\n            normal = vec3( 0.0, 0.0, 0.4 );\\n        }\\n\\n        #include lights_physical_fragment\\n        #include lights_template\\n\\n        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;\\n\\n        gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n        #include premultiplied_alpha_fragment\\n        #include tonemapping_fragment\\n        #include encodings_fragment\\n        #include fog_fragment\\n\\n    #endif\\n\\n}\";\n\n// File:shader/HyperballStickImpostor.vert\n\nNGL.Resources[ 'shader/HyperballStickImpostor.vert' ] = \"// Copyright (C) 2010-2011 by\\n// Laboratoire de Biochimie Theorique (CNRS),\\n// Laboratoire d'Informatique Fondamentale d'Orleans (Universite d'Orleans), (INRIA) and\\n// Departement des Sciences de la Simulation et de l'Information (CEA).\\n//\\n// License: CeCILL-C license (http://www.cecill.info/)\\n//\\n// Contact: Marc Baaden\\n// E-mail: baaden@smplinux.de\\n// Webpage: http://hyperballs.sourceforge.net\\n\\n// Contributions by Alexander Rose\\n// - ported to WebGL\\n// - dual color\\n// - picking color\\n\\nattribute vec3 mapping;\\nattribute float radius;\\nattribute float radius2;\\nattribute vec3 position1;\\nattribute vec3 position2;\\n\\nvarying mat4 matrix_near;\\nvarying vec4 prime1;\\nvarying vec4 prime2;\\nvarying float vRadius;\\nvarying float vRadius2;\\n\\n#ifdef PICKING\\n    attribute vec3 pickingColor;\\n    attribute vec3 pickingColor2;\\n    varying vec3 vPickingColor;\\n    varying vec3 vPickingColor2;\\n#else\\n    // attribute vec3 color;\\n    attribute vec3 color2;\\n    varying vec3 vColor1;\\n    varying vec3 vColor2;\\n#endif\\n\\nuniform float shrink;\\nuniform mat4 modelViewProjectionMatrix;\\nuniform mat4 modelViewProjectionMatrixInverse;\\n\\nvoid main(){\\n\\n    vRadius = radius;\\n    vRadius2 = radius2;\\n\\n    vec4 spaceposition;\\n    vec3 position_atom1;\\n    vec3 position_atom2;\\n    vec4 vertex_position;\\n\\n    #ifdef PICKING\\n        vPickingColor = pickingColor;\\n        vPickingColor2 = pickingColor2;\\n    #else\\n        vColor1 = color;\\n        vColor2 = color2;\\n    #endif\\n\\n    float radius1 = radius;\\n\\n    position_atom1 = position1;\\n    position_atom2 = position2;\\n\\n    float distance = distance( position_atom1, position_atom2 );\\n\\n    spaceposition.z = mapping.z * distance;\\n\\n    if (radius1 > radius2) {\\n        spaceposition.y = mapping.y * 1.5 * radius1;\\n        spaceposition.x = mapping.x * 1.5 * radius1;\\n    } else {\\n        spaceposition.y = mapping.y * 1.5 * radius2;\\n        spaceposition.x = mapping.x * 1.5 * radius2;\\n    }\\n    spaceposition.w = 1.0;\\n\\n    vec4 e3 = vec4( 1.0 );\\n    vec3 e1, e1_temp, e2, e2_temp;\\n\\n    // Calculation of bond direction: e3\\n    e3.xyz = normalize(position_atom1-position_atom2);\\n\\n    // little hack to avoid some problems of precision due to graphic card limitation using float: To improve soon\\n    if (e3.z == 0.0) { e3.z = 0.0000000000001;}\\n    if ( (position_atom1.x - position_atom2.x) == 0.0) { position_atom1.x += 0.001;}\\n    if ( (position_atom1.y - position_atom2.y) == 0.0) { position_atom1.y += 0.001;}\\n    if ( (position_atom1.z - position_atom2.z) == 0.0) { position_atom1.z += 0.001;}\\n\\n    // Focus calculation\\n    vec4 focus = vec4( 1.0 );\\n    focus.x = ( position_atom1.x*position_atom1.x - position_atom2.x*position_atom2.x +\\n        ( radius2*radius2 - radius1*radius1 )*e3.x*e3.x/shrink )/(2.0*(position_atom1.x - position_atom2.x));\\n    focus.y = ( position_atom1.y*position_atom1.y - position_atom2.y*position_atom2.y +\\n        ( radius2*radius2 - radius1*radius1 )*e3.y*e3.y/shrink )/(2.0*(position_atom1.y - position_atom2.y));\\n    focus.z = ( position_atom1.z*position_atom1.z - position_atom2.z*position_atom2.z +\\n        ( radius2*radius2 - radius1*radius1 )*e3.z*e3.z/shrink )/(2.0*(position_atom1.z - position_atom2.z));\\n\\n    // e1 calculation\\n    e1.x = 1.0;\\n    e1.y = 1.0;\\n    e1.z = ( (e3.x*focus.x + e3.y*focus.y + e3.z*focus.z) - e1.x*e3.x - e1.y*e3.y)/e3.z;\\n    e1_temp = e1 - focus.xyz;\\n    e1 = normalize(e1_temp);\\n\\n    // e2 calculation\\n    e2_temp = e1.yzx * e3.zxy - e1.zxy * e3.yzx;\\n    e2 = normalize(e2_temp);\\n\\n    //ROTATION:\\n    // final form of change of basis matrix:\\n    mat3 R= mat3( e1.xyz, e2.xyz, e3.xyz );\\n    // Apply rotation and translation to the bond primitive\\n    vertex_position.xyz = R * spaceposition.xyz;\\n    vertex_position.w = 1.0;\\n\\n    // TRANSLATION:\\n    vertex_position.x += (position_atom1.x+position_atom2.x) / 2.0;\\n    vertex_position.y += (position_atom1.y+position_atom2.y) / 2.0;\\n    vertex_position.z += (position_atom1.z+position_atom2.z) / 2.0;\\n\\n    // New position\\n    gl_Position = modelViewProjectionMatrix * vertex_position;\\n\\n    vec4 i_near, i_far;\\n\\n    // Calculate near from position\\n    vec4 near = gl_Position;\\n    near.z = 0.0 ;\\n    near = modelViewProjectionMatrixInverse * near;\\n    i_near = near;\\n\\n    // Calculate far from position\\n    vec4 far = gl_Position;\\n    far.z = far.w ;\\n    i_far = modelViewProjectionMatrixInverse * far;\\n\\n    prime1 = vec4( position_atom1 - (position_atom1 - focus.xyz)*shrink, 1.0 );\\n    prime2 = vec4( position_atom2 - (position_atom2 - focus.xyz)*shrink, 1.0 );\\n\\n    float Rsquare = (radius1*radius1/shrink) - (\\n                        (position_atom1.x - focus.x)*(position_atom1.x - focus.x) +\\n                        (position_atom1.y - focus.y)*(position_atom1.y - focus.y) +\\n                        (position_atom1.z - focus.z)*(position_atom1.z - focus.z)\\n                    );\\n\\n    focus.w = Rsquare;\\n\\n    matrix_near = mat4( i_near, i_far, focus, e3 );\\n\\n    // avoid clipping\\n    gl_Position.z = 1.0;\\n\\n}\";\n\n// File:shader/HyperballStickImpostor.frag\n\nNGL.Resources[ 'shader/HyperballStickImpostor.frag' ] = \"#define STANDARD\\n#define IMPOSTOR\\n\\n// Copyright (C) 2010-2011 by\\n// Laboratoire de Biochimie Theorique (CNRS),\\n// Laboratoire d'Informatique Fondamentale d'Orleans (Universite d'Orleans), (INRIA) and\\n// Departement des Sciences de la Simulation et de l'Information (CEA).\\n//\\n// License: CeCILL-C license (http://www.cecill.info/)\\n//\\n// Contact: Marc Baaden\\n// E-mail: baaden@smplinux.de\\n// Webpage: http://hyperballs.sourceforge.net\\n\\n// Contributions by Alexander Rose\\n// - ported to WebGL\\n// - dual color\\n// - picking color\\n// - custom clipping\\n// - three.js lighting\\n\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float nearClip;\\nuniform float shrink;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 modelViewProjectionMatrix;\\nuniform mat4 modelViewMatrixInverseTranspose;\\nuniform mat4 projectionMatrix;\\n\\nvarying mat4 matrix_near;\\nvarying vec4 prime1;\\nvarying vec4 prime2;\\nvarying float vRadius;\\nvarying float vRadius2;\\n\\n#ifdef PICKING\\n    uniform float objectId;\\n    varying vec3 vPickingColor;\\n    varying vec3 vPickingColor2;\\n#else\\n    varying vec3 vColor1;\\n    varying vec3 vColor2;\\n    #include common\\n    #include fog_pars_fragment\\n    #include bsdfs\\n    #include ambient_pars\\n    #include lights_pars\\n    #include lights_physical_pars_fragment\\n#endif\\n\\nbool interior = false;\\n\\nfloat calcClip( vec4 cameraPos ){\\n    return dot( cameraPos, vec4( 0.0, 0.0, 1.0, nearClip - 0.5 ) );\\n}\\n\\nfloat calcClip( vec3 cameraPos ){\\n    return calcClip( vec4( cameraPos, 1.0 ) );\\n}\\n\\nfloat calcDepth( in vec3 cameraPos ){\\n    vec2 clipZW = cameraPos.z * projectionMatrix[2].zw + projectionMatrix[3].zw;\\n    return 0.5 + 0.5 * clipZW.x / clipZW.y;\\n}\\n\\nstruct Ray {\\n    vec3 origin ;\\n    vec3 direction ;\\n};\\n\\nbool cutoff_plane (vec3 M, vec3 cutoff, vec3 x3){\\n    float a = x3.x;\\n    float b = x3.y;\\n    float c = x3.z;\\n    float d = -x3.x*cutoff.x-x3.y*cutoff.y-x3.z*cutoff.z;\\n    float l = a*M.x+b*M.y+c*M.z+d;\\n    if (l<0.0) {return true;}\\n    else{return false;}\\n}\\n\\nvec3 isect_surf(Ray r, mat4 matrix_coef){\\n    vec4 direction = vec4(r.direction, 0.0);\\n    vec4 origin = vec4(r.origin, 1.0);\\n    float a = dot(direction,(matrix_coef*direction));\\n    float b = dot(origin,(matrix_coef*direction));\\n    float c = dot(origin,(matrix_coef*origin));\\n    float delta =b*b-a*c;\\n    gl_FragColor.a = 1.0;\\n    if (delta<0.0){\\n        discard;\\n        // gl_FragColor.a = 0.5;\\n    }\\n    float t1 =(-b-sqrt(delta))/a;\\n\\n    // Second solution not necessary if you don't want\\n    // to see inside spheres and cylinders, save some fps\\n    //float t2 = (-b+sqrt(delta)) / a  ;\\n    //float t =(t1<t2) ? t1 : t2;\\n\\n    return r.origin+t1*r.direction;\\n}\\n\\nvec3 isect_surf2(Ray r, mat4 matrix_coef){\\n    vec4 direction = vec4(r.direction, 0.0);\\n    vec4 origin = vec4(r.origin, 1.0);\\n    float a = dot(direction,(matrix_coef*direction));\\n    float b = dot(origin,(matrix_coef*direction));\\n    float c = dot(origin,(matrix_coef*origin));\\n    float delta =b*b-a*c;\\n    gl_FragColor.a = 1.0;\\n    if (delta<0.0){\\n        discard;\\n        // gl_FragColor.a = 0.5;\\n    }\\n    float t2 =(-b+sqrt(delta))/a;\\n\\n    return r.origin+t2*r.direction;\\n}\\n\\nRay primary_ray(vec4 near1, vec4 far1){\\n    vec3 near=near1.xyz/near1.w;\\n    vec3 far=far1.xyz/far1.w;\\n    return Ray(near,far-near);\\n}\\n\\nfloat update_z_buffer(vec3 M, mat4 ModelViewP){\\n    float  depth1;\\n    vec4 Ms=(ModelViewP*vec4(M,1.0));\\n    return depth1=(1.0+Ms.z/Ms.w)/2.0;\\n}\\n\\nvoid main(){\\n\\n    float radius = max( vRadius, vRadius2 );\\n\\n    vec4 i_near, i_far, focus;\\n    vec3 e3, e1, e1_temp, e2;\\n\\n    i_near = vec4(matrix_near[0][0],matrix_near[0][1],matrix_near[0][2],matrix_near[0][3]);\\n    i_far  = vec4(matrix_near[1][0],matrix_near[1][1],matrix_near[1][2],matrix_near[1][3]);\\n    focus = vec4(matrix_near[2][0],matrix_near[2][1],matrix_near[2][2],matrix_near[2][3]);\\n    e3 = vec3(matrix_near[3][0],matrix_near[3][1],matrix_near[3][2]);\\n\\n    e1.x = 1.0;\\n    e1.y = 1.0;\\n    e1.z = ( (e3.x*focus.x + e3.y*focus.y + e3.z*focus.z) - e1.x*e3.x - e1.y*e3.y)/e3.z;\\n    e1_temp = e1 - focus.xyz;\\n    e1 = normalize(e1_temp);\\n\\n    e2 = normalize(cross(e1,e3));\\n\\n    vec4 equation = focus;\\n\\n    float shrinkfactor = shrink;\\n    float t1 = -1.0/(1.0-shrinkfactor);\\n    float t2 = 1.0/(shrinkfactor);\\n    // float t3 = 2.0/(shrinkfactor);\\n\\n    vec4 colonne1, colonne2, colonne3, colonne4;\\n    mat4 mat;\\n\\n    vec3 equation1 = vec3(t2,t2,t1);\\n\\n    float A1 = - e1.x*equation.x - e1.y*equation.y - e1.z*equation.z;\\n    float A2 = - e2.x*equation.x - e2.y*equation.y - e2.z*equation.z;\\n    float A3 = - e3.x*equation.x - e3.y*equation.y - e3.z*equation.z;\\n\\n    float A11 = equation1.x*e1.x*e1.x +  equation1.y*e2.x*e2.x + equation1.z*e3.x*e3.x;\\n    float A21 = equation1.x*e1.x*e1.y +  equation1.y*e2.x*e2.y + equation1.z*e3.x*e3.y;\\n    float A31 = equation1.x*e1.x*e1.z +  equation1.y*e2.x*e2.z + equation1.z*e3.x*e3.z;\\n    float A41 = equation1.x*e1.x*A1   +  equation1.y*e2.x*A2   + equation1.z*e3.x*A3;\\n\\n    float A22 = equation1.x*e1.y*e1.y +  equation1.y*e2.y*e2.y + equation1.z*e3.y*e3.y;\\n    float A32 = equation1.x*e1.y*e1.z +  equation1.y*e2.y*e2.z + equation1.z*e3.y*e3.z;\\n    float A42 = equation1.x*e1.y*A1   +  equation1.y*e2.y*A2   + equation1.z*e3.y*A3;\\n\\n    float A33 = equation1.x*e1.z*e1.z +  equation1.y*e2.z*e2.z + equation1.z*e3.z*e3.z;\\n    float A43 = equation1.x*e1.z*A1   +  equation1.y*e2.z*A2   + equation1.z*e3.z*A3;\\n\\n    float A44 = equation1.x*A1*A1 +  equation1.y*A2*A2 + equation1.z*A3*A3 - equation.w;\\n\\n    colonne1 = vec4(A11,A21,A31,A41);\\n    colonne2 = vec4(A21,A22,A32,A42);\\n    colonne3 = vec4(A31,A32,A33,A43);\\n    colonne4 = vec4(A41,A42,A43,A44);\\n\\n    mat = mat4(colonne1,colonne2,colonne3,colonne4);\\n\\n    // Ray calculation using near and far\\n    Ray ray = primary_ray(i_near,i_far) ;\\n\\n    // Intersection between ray and surface for each pixel\\n    vec3 M;\\n    M = isect_surf(ray, mat);\\n\\n    // cut the extremities of bonds to superimpose bond and spheres surfaces\\n    if (cutoff_plane(M, prime1.xyz, -e3) || cutoff_plane(M, prime2.xyz, e3)){ discard; }\\n\\n    // Transform normal to model space to view-space\\n    vec4 M1 = vec4(M,1.0);\\n    vec4 M2 =  mat*M1;\\n    // vec3 _normal = normalize( ( modelViewMatrixInverseTranspose * M2 ).xyz );\\n    vec3 _normal = ( modelViewMatrixInverseTranspose * M2 ).xyz;\\n\\n    // Recalculate the depth in function of the new pixel position\\n    gl_FragDepthEXT = update_z_buffer(M, modelViewProjectionMatrix) ;\\n\\n    #ifdef NEAR_CLIP\\n        if( calcClip( modelViewMatrix * vec4( M, 1.0 ) ) > 0.0 ){\\n            M = isect_surf2(ray, mat);\\n            if( calcClip( modelViewMatrix * vec4( M, 1.0 ) ) > 0.0 )\\n                discard;\\n            interior = true;\\n            gl_FragDepthEXT = update_z_buffer(M, modelViewProjectionMatrix) ;\\n            if( gl_FragDepthEXT >= 0.0 ){\\n                gl_FragDepthEXT = max( 0.0, calcDepth( vec3( - ( nearClip - 0.5 ) ) ) + ( 0.0000001 / radius ) );\\n            }\\n        }else if( gl_FragDepthEXT <= 0.0 ){\\n            M = isect_surf2(ray, mat);\\n            interior = true;\\n            gl_FragDepthEXT = update_z_buffer(M, modelViewProjectionMatrix);\\n            if( gl_FragDepthEXT >= 0.0 ){\\n                gl_FragDepthEXT = 0.0 + ( 0.0000001 / radius );\\n            }\\n        }\\n    #else\\n        if( gl_FragDepthEXT <= 0.0 ){\\n            M = isect_surf2(ray, mat);\\n            interior = true;\\n            gl_FragDepthEXT = update_z_buffer(M, modelViewProjectionMatrix) ;\\n            if( gl_FragDepthEXT >= 0.0 ){\\n                gl_FragDepthEXT = 0.0 + ( 0.0000001 / radius );\\n            }\\n        }\\n    #endif\\n\\n    // cut the extremities of bonds to superimpose bond and spheres surfaces\\n    if (cutoff_plane(M, prime1.xyz, -e3) || cutoff_plane(M, prime2.xyz, e3)){ discard; }\\n\\n    if (gl_FragDepthEXT < 0.0)\\n        discard;\\n    if (gl_FragDepthEXT > 1.0)\\n        discard;\\n\\n    // Mix the color bond in function of the two atom colors\\n    float distance_ratio = ((M.x-prime2.x)*e3.x + (M.y-prime2.y)*e3.y +(M.z-prime2.z)*e3.z) /\\n                                distance(prime2.xyz,prime1.xyz);\\n\\n    #ifdef PICKING\\n\\n        if( distance_ratio > 0.5 ){\\n            gl_FragColor = vec4( vPickingColor, objectId );\\n        }else{\\n            gl_FragColor = vec4( vPickingColor2, objectId );\\n        }\\n\\n    #else\\n\\n        vec3 vViewPosition = -( modelViewMatrix * vec4( M, 1.0 ) ).xyz;\\n        vec3 vNormal = _normal;\\n        vec3 vColor;\\n\\n        if( distance_ratio>0.5 ){\\n            vColor = vColor1;\\n        }else{\\n            vColor = vColor2;\\n        }\\n\\n        vec4 diffuseColor = vec4( diffuse, opacity );\\n        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n        vec3 totalEmissiveLight = emissive;\\n\\n        #include color_fragment\\n        #include roughnessmap_fragment\\n        #include metalnessmap_fragment\\n\\n        vec3 normal = normalize( vNormal );  // don't use #include normal_fragment\\n        if( interior ){\\n            normal = vec3( 0.0, 0.0, 0.4 );\\n        }\\n\\n        #include lights_physical_fragment\\n        #include lights_template\\n\\n        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;\\n\\n        gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n        #include premultiplied_alpha_fragment\\n        #include tonemapping_fragment\\n        #include encodings_fragment\\n        #include fog_fragment\\n\\n    #endif\\n\\n}\";\n\n// File:shader/Line.vert\n\nNGL.Resources[ 'shader/Line.vert' ] = \"uniform float nearClip;\\n\\nvarying vec3 vViewPosition;\\n\\n#include color_pars_vertex\\n\\nvoid main(){\\n\\n    #include color_vertex\\n    #include begin_vertex\\n    #include project_vertex\\n\\n    vViewPosition = -mvPosition.xyz;\\n\\n    #include nearclip_vertex\\n\\n}\";\n\n// File:shader/Line.frag\n\nNGL.Resources[ 'shader/Line.frag' ] = \"uniform float opacity;\\nuniform float nearClip;\\n\\nvarying vec3 vViewPosition;\\n\\n#include common\\n#include color_pars_fragment\\n#include fog_pars_fragment\\n\\nvoid main(){\\n\\n    #include nearclip_fragment\\n\\n    gl_FragColor = vec4( vColor, opacity );\\n\\n    #include premultiplied_alpha_fragment\\n    #include tonemapping_fragment\\n    #include encodings_fragment\\n    #include fog_fragment\\n\\n}\";\n\n// File:shader/Mesh.vert\n\nNGL.Resources[ 'shader/Mesh.vert' ] = \"#define STANDARD\\n\\nuniform float nearClip;\\n\\n#if defined( NEAR_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )\\n    varying vec3 vViewPosition;\\n#endif\\n\\n#if defined( PICKING )\\n    attribute vec3 pickingColor;\\n    varying vec3 vPickingColor;\\n#elif defined( NOLIGHT )\\n    varying vec3 vColor;\\n#else\\n    #include color_pars_vertex\\n    #ifndef FLAT_SHADED\\n        varying vec3 vNormal;\\n    #endif\\n#endif\\n\\n#include common\\n\\nvoid main(){\\n\\n    #if defined( PICKING )\\n        vPickingColor = pickingColor;\\n    #elif defined( NOLIGHT )\\n        vColor = color;\\n    #else\\n        #include color_vertex\\n        #include beginnormal_vertex\\n        #include defaultnormal_vertex\\n        #ifndef FLAT_SHADED  // Normal computed with derivatives when FLAT_SHADED\\n            vNormal = normalize( transformedNormal );\\n        #endif\\n    #endif\\n\\n    #include begin_vertex\\n    #include project_vertex\\n\\n    #if defined( NEAR_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )\\n        vViewPosition = -mvPosition.xyz;\\n    #endif\\n\\n    #include nearclip_vertex\\n\\n}\";\n\n// File:shader/Mesh.frag\n\nNGL.Resources[ 'shader/Mesh.frag' ] = \"#define STANDARD\\n\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float nearClip;\\n\\n#if defined( NEAR_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )\\n    varying vec3 vViewPosition;\\n#endif\\n\\n#if defined( PICKING )\\n    uniform float objectId;\\n    varying vec3 vPickingColor;\\n#elif defined( NOLIGHT )\\n    varying vec3 vColor;\\n#else\\n    #ifndef FLAT_SHADED\\n        varying vec3 vNormal;\\n    #endif\\n    #include common\\n    #include color_pars_fragment\\n    #include fog_pars_fragment\\n    #include bsdfs\\n    #include ambient_pars\\n    #include lights_pars\\n    #include lights_physical_pars_fragment\\n#endif\\n\\nvoid main(){\\n\\n    #include nearclip_fragment\\n\\n    #if defined( PICKING )\\n\\n        gl_FragColor = vec4( vPickingColor, objectId );\\n\\n    #elif defined( NOLIGHT )\\n\\n        gl_FragColor = vec4( vColor, opacity );\\n\\n    #else\\n\\n        vec4 diffuseColor = vec4( diffuse, opacity );\\n        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n        vec3 totalEmissiveLight = emissive;\\n\\n        #include color_fragment\\n        #include roughnessmap_fragment\\n        #include metalnessmap_fragment\\n        #include normal_fragment\\n\\n        #include dull_interior_fragment\\n\\n        #include lights_physical_fragment\\n        #include lights_template\\n\\n        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;\\n\\n        gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n        #include premultiplied_alpha_fragment\\n        #include tonemapping_fragment\\n        #include encodings_fragment\\n        #include fog_fragment\\n\\n        #include opaque_back_fragment\\n\\n    #endif\\n\\n}\";\n\n// File:shader/Point.vert\n\nNGL.Resources[ 'shader/Point.vert' ] = \"uniform float nearClip;\\nuniform float size;\\nuniform float canvasHeight;\\nuniform float pixelRatio;\\n\\nvarying vec3 vViewPosition;\\n\\n#include color_pars_vertex\\n#include common\\n\\nvoid main(){\\n\\n    #include color_vertex\\n    #include begin_vertex\\n    #include project_vertex\\n\\n    #ifdef USE_SIZEATTENUATION\\n        gl_PointSize = size * pixelRatio * ( ( canvasHeight / 2.0 ) / -mvPosition.z );\\n    #else\\n        gl_PointSize = size * pixelRatio;\\n    #endif\\n\\n    vViewPosition = -mvPosition.xyz;\\n\\n    #include nearclip_vertex\\n\\n}\";\n\n// File:shader/Point.frag\n\nNGL.Resources[ 'shader/Point.frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n\\nvarying vec3 vViewPosition;\\n\\n#ifdef USE_MAP\\n    uniform sampler2D map;\\n#endif\\n\\n#include common\\n#include color_pars_fragment\\n#include fog_pars_fragment\\n\\nvoid main(){\\n\\n    vec3 outgoingLight = vec3( 0.0 );\\n    vec4 diffuseColor = vec4( diffuse, 1.0 );\\n\\n    #ifdef USE_MAP\\n        diffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\\n    #endif\\n\\n    #include color_fragment\\n    #include alphatest_fragment\\n\\n    outgoingLight = diffuseColor.rgb;\\n\\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a * opacity );\\n\\n    #include premultiplied_alpha_fragment\\n    #include tonemapping_fragment\\n    #include encodings_fragment\\n    #include fog_fragment\\n\\n}\";\n\n// File:shader/Quad.vert\n\nNGL.Resources[ 'shader/Quad.vert' ] = \"varying vec2 vUv;\\n\\nvoid main() {\\n\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n}\";\n\n// File:shader/Quad.frag\n\nNGL.Resources[ 'shader/Quad.frag' ] = \"varying vec2 vUv;\\n\\nuniform sampler2D tForeground;\\nuniform float scale;\\n\\nvoid main() {\\n\\n    vec4 foreground = texture2D( tForeground, vUv );\\n    gl_FragColor = foreground * scale;\\n\\n}\";\n\n// File:shader/Ribbon.vert\n\nNGL.Resources[ 'shader/Ribbon.vert' ] = \"#define STANDARD\\n\\nuniform float nearClip;\\n\\n#if defined( NEAR_CLIP ) || !defined( PICKING )\\n    varying vec3 vViewPosition;\\n#endif\\n\\nattribute vec3 dir;\\nattribute float size;\\n\\n#ifdef PICKING\\n    attribute vec3 pickingColor;\\n    varying vec3 vPickingColor;\\n#else\\n    #include color_pars_vertex\\n    #ifndef FLAT_SHADED\\n        varying vec3 vNormal;\\n    #endif\\n#endif\\n\\n#include common\\n\\nvoid main(void){\\n\\n    #ifdef PICKING\\n        vPickingColor = pickingColor;\\n    #else\\n        #include color_vertex\\n        #include beginnormal_vertex\\n        #include defaultnormal_vertex\\n        #ifndef FLAT_SHADED  // Normal computed with derivatives when FLAT_SHADED\\n            vNormal = normalize( transformedNormal );\\n        #endif\\n    #endif\\n\\n    #include begin_vertex\\n\\n    transformed += normalize( dir ) * size;\\n\\n    #include project_vertex\\n\\n    #if defined( NEAR_CLIP ) || !defined( PICKING )\\n        vViewPosition = -mvPosition.xyz;\\n    #endif\\n\\n    #include nearclip_vertex\\n\\n}\";\n\n// File:shader/SDFFont.vert\n\nNGL.Resources[ 'shader/SDFFont.vert' ] = \"uniform float nearClip;\\nuniform float xOffset;\\nuniform float yOffset;\\nuniform float zOffset;\\n\\nvarying vec3 vViewPosition;\\nvarying vec2 texCoord;\\n\\nattribute vec2 mapping;\\nattribute vec2 inputTexCoord;\\nattribute float inputSize;\\n\\n#include color_pars_vertex\\n#include common\\n\\nvoid main(void){\\n\\n    #include color_vertex\\n    texCoord = inputTexCoord;\\n\\n    vec4 cameraPos = ( modelViewMatrix * vec4( position, 1.0 ) );\\n    vec4 cameraCornerPos = vec4( cameraPos.xyz, 1.0 );\\n    cameraCornerPos.xy += mapping * inputSize * 0.01;\\n    cameraCornerPos.x += xOffset;\\n    cameraCornerPos.y += yOffset;\\n    cameraCornerPos.xyz += normalize( -cameraCornerPos.xyz ) * zOffset;\\n\\n    gl_Position = projectionMatrix * cameraCornerPos;\\n\\n    vViewPosition = -cameraCornerPos.xyz;\\n\\n    #include nearclip_vertex\\n\\n}\";\n\n// File:shader/SDFFont.frag\n\nNGL.Resources[ 'shader/SDFFont.frag' ] = \"uniform sampler2D fontTexture;\\nuniform float opacity;\\n\\nvarying vec3 vViewPosition;\\nvarying vec2 texCoord;\\n\\n#include common\\n#include color_pars_fragment\\n#include fog_pars_fragment\\n\\n#ifdef SDF\\n    const float smoothness = 16.0;\\n#else\\n    const float smoothness = 256.0;\\n#endif\\nconst float gamma = 2.2;\\n\\nvoid main(){\\n\\n    // retrieve signed distance\\n    float sdf = texture2D( fontTexture, texCoord ).a;\\n\\n    // perform adaptive anti-aliasing of the edges\\n    float w = clamp(\\n        smoothness * ( abs( dFdx( texCoord.x ) ) + abs( dFdy( texCoord.y ) ) ),\\n        0.0,\\n        0.5\\n    );\\n    float a = smoothstep( 0.5 - w, 0.5 + w, sdf );\\n\\n    // gamma correction for linear attenuation\\n    a = pow( a, 1.0 / gamma );\\n    if( a < 0.2 ) discard;\\n    a *= opacity;\\n\\n    vec3 outgoingLight = vColor;\\n\\n    gl_FragColor = vec4( outgoingLight, a );\\n\\n    #include premultiplied_alpha_fragment\\n    #include tonemapping_fragment\\n    #include encodings_fragment\\n    #include fog_fragment\\n\\n}\";\n\n// File:shader/SphereImpostor.vert\n\nNGL.Resources[ 'shader/SphereImpostor.vert' ] = \"uniform mat4 projectionMatrixInverse;\\nuniform float nearClip;\\n\\nvarying float vRadius;\\nvarying float vRadiusSq;\\nvarying vec3 vPoint;\\nvarying vec3 vPointViewPosition;\\n\\nattribute vec2 mapping;\\nattribute float radius;\\n\\n#ifdef PICKING\\n    attribute vec3 pickingColor;\\n    varying vec3 vPickingColor;\\n#else\\n    #include color_pars_vertex\\n#endif\\n\\nconst mat4 D = mat4(\\n    1.0, 0.0, 0.0, 0.0,\\n    0.0, 1.0, 0.0, 0.0,\\n    0.0, 0.0, 1.0, 0.0,\\n    0.0, 0.0, 0.0, -1.0\\n);\\n\\nmat4 transpose( in mat4 inMatrix ) {\\n    vec4 i0 = inMatrix[0];\\n    vec4 i1 = inMatrix[1];\\n    vec4 i2 = inMatrix[2];\\n    vec4 i3 = inMatrix[3];\\n\\n    mat4 outMatrix = mat4(\\n        vec4(i0.x, i1.x, i2.x, i3.x),\\n        vec4(i0.y, i1.y, i2.y, i3.y),\\n        vec4(i0.z, i1.z, i2.z, i3.z),\\n        vec4(i0.w, i1.w, i2.w, i3.w)\\n    );\\n    return outMatrix;\\n}\\n\\n//------------------------------------------------------------------------------\\n// Compute point size and center using the technique described in:\\n// \\\"GPU-Based Ray-Casting of Quadratic Surfaces\\\"\\n// by Christian Sigg, Tim Weyrich, Mario Botsch, Markus Gross.\\n//\\n// Code based on\\n/*=========================================================================\\n\\n Program:   Visualization Toolkit\\n Module:    Quadrics_fs.glsl and Quadrics_vs.glsl\\n\\n Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n All rights reserved.\\n See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n This software is distributed WITHOUT ANY WARRANTY; without even\\n the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n PURPOSE.  See the above copyright notice for more information.\\n\\n =========================================================================*/\\n\\n// .NAME Quadrics_fs.glsl and Quadrics_vs.glsl\\n// .SECTION Thanks\\n// <verbatim>\\n//\\n//  This file is part of the PointSprites plugin developed and contributed by\\n//\\n//  Copyright (c) CSCS - Swiss National Supercomputing Centre\\n//                EDF - Electricite de France\\n//\\n//  John Biddiscombe, Ugo Varetto (CSCS)\\n//  Stephane Ploix (EDF)\\n//\\n// </verbatim>\\n//\\n// Contributions by Alexander Rose\\n// - ported to WebGL\\n// - adapted to work with quads\\nvoid ComputePointSizeAndPositionInClipCoordSphere(){\\n\\n    vec2 xbc;\\n    vec2 ybc;\\n\\n    mat4 T = mat4(\\n        radius, 0.0, 0.0, 0.0,\\n        0.0, radius, 0.0, 0.0,\\n        0.0, 0.0, radius, 0.0,\\n        position.x, position.y, position.z, 1.0\\n    );\\n\\n    mat4 R = transpose( projectionMatrix * modelViewMatrix * T );\\n    float A = dot( R[ 3 ], D * R[ 3 ] );\\n    float B = -2.0 * dot( R[ 0 ], D * R[ 3 ] );\\n    float C = dot( R[ 0 ], D * R[ 0 ] );\\n    xbc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );\\n    xbc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );\\n    float sx = abs( xbc[ 0 ] - xbc[ 1 ] ) * 0.5;\\n\\n    A = dot( R[ 3 ], D * R[ 3 ] );\\n    B = -2.0 * dot( R[ 1 ], D * R[ 3 ] );\\n    C = dot( R[ 1 ], D * R[ 1 ] );\\n    ybc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );\\n    ybc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );\\n    float sy = abs( ybc[ 0 ] - ybc[ 1 ]  ) * 0.5;\\n\\n    gl_Position.xy = vec2( 0.5 * ( xbc.x + xbc.y ), 0.5 * ( ybc.x + ybc.y ) );\\n    gl_Position.xy -= mapping * vec2( sx, sy );\\n    gl_Position.xy *= gl_Position.w;\\n\\n}\\n\\nvoid main(void){\\n\\n    #ifdef PICKING\\n        vPickingColor = pickingColor;\\n    #else\\n        #include color_vertex\\n    #endif\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    mvPosition.z -= radius;  // avoid clipping, added again in fragment shader\\n\\n    gl_Position = projectionMatrix * vec4( mvPosition.xyz, 1.0 );\\n    ComputePointSizeAndPositionInClipCoordSphere();\\n\\n    vRadius = radius;\\n    vRadiusSq = radius * radius;\\n    vec4 vPoint4 = projectionMatrixInverse * gl_Position;\\n    vPoint = vPoint4.xyz / vPoint4.w;\\n    vPointViewPosition = -mvPosition.xyz / mvPosition.w;\\n\\n}\";\n\n// File:shader/SphereImpostor.frag\n\nNGL.Resources[ 'shader/SphereImpostor.frag' ] = \"#define STANDARD\\n#define IMPOSTOR\\n\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float nearClip;\\nuniform mat4 projectionMatrix;\\nuniform float ortho;\\n\\n// uniform vec3 specular;\\n// uniform float shininess;\\n\\nvarying float vRadius;\\nvarying float vRadiusSq;\\nvarying vec3 vPoint;\\nvarying vec3 vPointViewPosition;\\n\\n#ifdef PICKING\\n    uniform float objectId;\\n    varying vec3 vPickingColor;\\n#else\\n    #include common\\n    #include color_pars_fragment\\n    #include fog_pars_fragment\\n    #include bsdfs\\n    #include ambient_pars\\n    #include lights_pars\\n    // #include lights_phong_pars_fragment\\n    #include lights_physical_pars_fragment\\n#endif\\n\\nbool flag2 = false;\\nbool interior = false;\\nvec3 cameraPos;\\nvec3 cameraNormal;\\n\\n// vec4 poly_color = gl_Color;\\n//   if(uf_use_border_hinting == 1.0)\\n//   {\\n//     vec3 wc_eye_dir = normalize(wc_sp_pt);\\n//     float n_dot_e   = abs(dot(wc_sp_nrml,wc_eye_dir));\\n//     float alpha     = max(uf_border_color_start_cosine - n_dot_e,0.0)/uf_border_color_start_cosine;\\n//     poly_color      = mix(gl_Color,uf_border_color,0.75*alpha);\\n//   }\\n//   color += (diff + amb)*poly_color + spec*gl_FrontMaterial.specular;\\n\\n// Calculate depth based on the given camera position.\\nfloat calcDepth( in vec3 cameraPos ){\\n    vec2 clipZW = cameraPos.z * projectionMatrix[2].zw + projectionMatrix[3].zw;\\n    return 0.5 + 0.5 * clipZW.x / clipZW.y;\\n}\\n\\nfloat calcClip( vec3 cameraPos ){\\n    return dot( vec4( cameraPos, 1.0 ), vec4( 0.0, 0.0, 1.0, nearClip - 0.5 ) );\\n}\\n\\nbool Impostor( out vec3 cameraPos, out vec3 cameraNormal ){\\n\\n    vec3 cameraSpherePos = -vPointViewPosition;\\n    cameraSpherePos.z += vRadius;\\n\\n    vec3 rayOrigin = mix( vec3( 0.0, 0.0, 0.0 ), vPoint, ortho );\\n    vec3 rayDirection = mix( normalize( vPoint ), vec3( 0.0, 0.0, 1.0 ), ortho );\\n    vec3 cameraSphereDir = mix( cameraSpherePos, rayOrigin - cameraSpherePos, ortho );\\n\\n    float B = dot( rayDirection, cameraSphereDir );\\n    float det = B * B + vRadiusSq - dot( cameraSphereDir, cameraSphereDir );\\n\\n    if( det < 0.0 ){\\n        discard;\\n        return false;\\n    }else{\\n        float sqrtDet = sqrt( det );\\n        float posT = mix( B + sqrtDet, B + sqrtDet, ortho );\\n        float negT = mix( B - sqrtDet, sqrtDet - B, ortho );\\n\\n        cameraPos = rayDirection * negT + rayOrigin;\\n\\n        #ifdef NEAR_CLIP\\n            if( calcDepth( cameraPos ) <= 0.0 ){\\n                cameraPos = rayDirection * posT + rayOrigin;\\n                interior = true;\\n                return false;\\n            }else if( calcClip( cameraPos ) > 0.0 ){\\n                cameraPos = rayDirection * posT + rayOrigin;\\n                interior = true;\\n                flag2 = true;\\n                return false;\\n            }else{\\n                cameraNormal = normalize( -cameraPos - cameraSpherePos );\\n            }\\n        #else\\n            if( calcDepth( cameraPos ) <= 0.0 ){\\n                cameraPos = rayDirection * posT + rayOrigin;\\n                interior = true;\\n                return false;\\n            }else{\\n                cameraNormal = normalize( cameraPos - cameraSpherePos );\\n            }\\n        #endif\\n\\n        return true;\\n    }\\n\\n    return false; // ensure that each control flow has a return\\n\\n}\\n\\nvoid main(void){\\n\\n    // vec3 specular = vec3( 1.0, 1.0, 1.0 );\\n    // float specularStrength = 1.0;\\n    // float shininess = 1.0;\\n\\n    bool flag = Impostor( cameraPos, cameraNormal );\\n\\n    #ifdef NEAR_CLIP\\n        if( calcClip( cameraPos ) > 0.0 )\\n            discard;\\n    #endif\\n\\n    // FIXME not compatible with custom clipping plane\\n    //Set the depth based on the new cameraPos.\\n    gl_FragDepthEXT = calcDepth( cameraPos );\\n    if( !flag ){\\n\\n        // clamp to near clipping plane and add a tiny value to\\n        // make spheres with a greater radius occlude smaller ones\\n        #ifdef NEAR_CLIP\\n            if( flag2 ){\\n                gl_FragDepthEXT = max( 0.0, calcDepth( vec3( - ( nearClip - 0.5 ) ) ) + ( 0.0000001 / vRadius ) );\\n            }else if( gl_FragDepthEXT >= 0.0 ){\\n                gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );\\n            }\\n        #else\\n            if( gl_FragDepthEXT >= 0.0 ){\\n                gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );\\n            }\\n        #endif\\n\\n    }\\n\\n    // bugfix (mac only?)\\n    if (gl_FragDepthEXT < 0.0)\\n        discard;\\n    if (gl_FragDepthEXT > 1.0)\\n        discard;\\n\\n    #ifdef PICKING\\n\\n        gl_FragColor = vec4( vPickingColor, objectId );\\n\\n    #else\\n\\n        // vec3 specColor = vColor;  // vec3( 1.0, 1.0, 1.0 );\\n        // vec3 lightDir = vec3( 0.0, 0.0, 1.0 );\\n        // vec3 vNormal = cameraNormal;\\n\\n        // float lambertian = max(dot(lightDir,vNormal), 0.0);\\n        // float specular = 0.0;\\n\\n        // if(lambertian > 0.0) {\\n\\n        //     vec3 reflectDir = reflect(-lightDir, vNormal);\\n        //     vec3 viewDir = normalize(-cameraPos);\\n\\n        //     float specAngle = max(dot(reflectDir, viewDir), 0.0);\\n        //     specular = pow(specAngle, 4.0);\\n\\n        //     // the exponent controls the shininess (try mode 2)\\n        //     specular = pow(specAngle, 16.0);\\n\\n        //     // according to the rendering equation we would need to multiply\\n        //     // with the the \\\"lambertian\\\", but this has little visual effect\\n        //     specular *= lambertian;\\n\\n\\n        // }\\n\\n        // gl_FragColor = vec4( lambertian*vColor + specular*specColor, opacity );\\n\\n        //\\n\\n        vec3 vNormal = cameraNormal;\\n        vec3 vViewPosition = -cameraPos;\\n\\n        vec4 diffuseColor = vec4( diffuse, opacity );\\n        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n        vec3 totalEmissiveLight = emissive;\\n\\n        #include color_fragment\\n        #include roughnessmap_fragment\\n        #include metalnessmap_fragment\\n        #include normal_fragment\\n        if( interior ){\\n            normal = vec3( 0.0, 0.0, 0.4 );\\n        }\\n\\n        // #include lights_phong_fragment\\n        #include lights_physical_fragment\\n        #include lights_template\\n\\n        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;\\n\\n        gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n        #include premultiplied_alpha_fragment\\n        #include tonemapping_fragment\\n        #include encodings_fragment\\n        #include fog_fragment\\n\\n    #endif\\n\\n}\";\n\n// File:shader/chunk/dull_interior_fragment.glsl\n\nNGL.Resources[ 'shader/chunk/dull_interior_fragment.glsl' ] = \"#ifdef DULL_INTERIOR\\n    if( gl_FrontFacing == false ){\\n        normal = vec3( 0.0, 0.0, 0.4 );\\n    }\\n#endif\";\n\n// File:shader/chunk/fog_fragment.glsl\n\nNGL.Resources[ 'shader/chunk/fog_fragment.glsl' ] = \"#ifdef USE_FOG\\n\\n\t// #if defined( USE_LOGDEPTHBUF_EXT ) || defined( IMPOSTOR )\\n\t//\\n\t// \tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t//\\n\t// #else\\n\t//\\n\t// \tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t//\\n\t// #endif\\n\\n\tfloat depth = length( vViewPosition );\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n\\n#endif\";\n\n// File:shader/chunk/nearclip_fragment.glsl\n\nNGL.Resources[ 'shader/chunk/nearclip_fragment.glsl' ] = \"#ifdef NEAR_CLIP\\n    if( vViewPosition.z < nearClip )\\n        discard;\\n#endif\";\n\n// File:shader/chunk/nearclip_vertex.glsl\n\nNGL.Resources[ 'shader/chunk/nearclip_vertex.glsl' ] = \"#ifdef NEAR_CLIP\\n    if( vViewPosition.z < nearClip )\\n        gl_Position.z = 2.0 * gl_Position.w;  // move out of [ -w, +w ]\\n#endif\";\n\n// File:shader/chunk/opaque_back_fragment.glsl\n\nNGL.Resources[ 'shader/chunk/opaque_back_fragment.glsl' ] = \"#ifdef OPAQUE_BACK\\n    #ifdef FLIP_SIDED\\n        if( gl_FrontFacing == true ){\\n            gl_FragColor.a = 1.0;\\n        }\\n    #else\\n        if( gl_FrontFacing == false ){\\n            gl_FragColor.a = 1.0;\\n        }\\n    #endif\\n#endif\";\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ngl.js\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = {\n\t\"name\": \"nglview\",\n\t\"version\": \"0.5.2\",\n\t\"description\": \"nglview\",\n\t\"author\": \"arose\",\n\t\"main\": \"src/index.js\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/arose/nglview.git\"\n\t},\n\t\"keywords\": [\n\t\t\"jupyter\",\n\t\t\"widgets\",\n\t\t\"ipython\",\n\t\t\"ipywidgets\"\n\t],\n\t\"scripts\": {\n\t\t\"prepublish\": \"webpack\",\n\t\t\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n\t},\n\t\"devDependencies\": {\n\t\t\"json-loader\": \"^0.5.4\",\n\t\t\"webpack\": \"^1.12.14\"\n\t},\n\t\"dependencies\": {\n\t\t\"jupyter-js-widgets\": \"^1.1.1\",\n\t\t\"underscore\": \"^1.8.3\"\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./package.json\n ** module id = 17\n ** module chunks = 0\n **/"],"sourceRoot":""}